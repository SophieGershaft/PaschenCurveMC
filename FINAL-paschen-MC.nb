(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2929875,      56954]
NotebookOptionsPosition[   2888155,      56289]
NotebookOutlinePosition[   2888646,      56308]
CellTagsIndexPosition[   2888603,      56305]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Paschen",
  IgnoreSpellCheck->True],
 " Curve Monte Carlo Simulations"
}], "Title",
 CellChangeTimes->{{3.864518855211419*^9, 
  3.8645188648473597`*^9}},ExpressionUUID->"f0d418b8-f4b7-426a-8d87-\
e963adc33014"],

Cell["\<\
William Bowers
Eastside Preparatory School
Kirkland, WA
In collaboration with Sophia Gershaft, Dr. Charles Whitmer, and Gunnar Mein\
\>", "Subtitle",
 CellChangeTimes->{{3.864518880916726*^9, 3.864518891806715*^9}, {
  3.864563462985013*^9, 3.864563484021823*^9}, {3.864646215865303*^9, 
  3.864646247932445*^9}, {3.876945438821295*^9, 3.87694544000421*^9}, {
  3.876945618202242*^9, 3.876945618479272*^9}, {3.880557466815874*^9, 
  3.880557467215664*^9}},ExpressionUUID->"af4a758a-0346-4e06-8142-\
d8d488e2f9b1"],

Cell[CellGroupData[{

Cell["Parallel plate MCs", "Section",
 CellChangeTimes->{{3.864518095929584*^9, 
  3.8645181010007*^9}},ExpressionUUID->"8b21c426-23c9-4ece-a05a-a071e2f4e032"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectronsBanked", "[", 
   RowBox[{"Nc_", ",", "Ni_", ",", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", ",", "stack"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"stack", " ", "=", " ", 
      RowBox[{"CreateDataStructure", "[", "\"\<Stack\>\"", "]"}]}], ";", "\n", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Table", "[", "\n", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "pos1", ",", "pos2", ",", "numElectrons", ",", " ", "lambdaI"}], 
           "}"}], ",", "\n", 
          RowBox[{
           RowBox[{"numElectrons", " ", "=", " ", "1"}], ";", " ", "\n", 
           RowBox[{"stack", "[", 
            RowBox[{"\"\<Push\>\"", ",", "0"}], "]"}], ";", "\n", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", " ", 
              RowBox[{"stack", "[", "\"\<EmptyQ\>\"", "]"}]}], ",", "\n", 
             RowBox[{
              RowBox[{"pos1", " ", "=", " ", 
               RowBox[{"stack", "[", "\"\<Pop\>\"", "]"}]}], ";", "\n", 
              RowBox[{"While", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"pos2", " ", "=", " ", 
                   RowBox[{"pos1", "+", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"ExponentialDistribution", "[", "1", "]"}], 
                    "]"}]}]}], ")"}], "\[LessEqual]", "Nc"}], ",", " ", "\n", 
                
                RowBox[{
                 RowBox[{"lambdaI", " ", "=", 
                  RowBox[{"Nc", " ", "/", " ", "Ni"}]}], ";", "\n", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"pos2", " ", "-", " ", "pos1"}], ")"}], " ", 
                    "\[GreaterEqual]", " ", "lambdaI"}], ",", 
                   RowBox[{
                    RowBox[{"numElectrons", "++"}], ";", 
                    RowBox[{"stack", "[", 
                    RowBox[{"\"\<Push\>\"", ",", "pos2"}], "]"}]}]}], " ", 
                  "]"}], ";", "\n", 
                 RowBox[{"Sow", "[", "pos2", "]"}], ";", "\n", 
                 RowBox[{"pos1", " ", "=", " ", "pos2"}]}]}], "]"}], ";"}]}], 
            "]"}], ";", " ", "\n", "numElectrons"}]}], "]"}], ",", "\n", 
        RowBox[{"{", "count", "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "result", "]"}], ",", 
       RowBox[{
        RowBox[{"StandardDeviation", "[", "result", "]"}], "/", 
        RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",\

 CellLabel->
  "In[182]:=",ExpressionUUID->"17299727-7b39-4546-9304-f273b2c2d46b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectronsWeighted", "[", 
   RowBox[{"Nc_", ",", "Ni_", ",", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "result", "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Table", "[", "\n", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "pos1", ",", "pos2", ",", "numElectrons", ",", " ", "lambdaI", ",",
             " ", "weight"}], "}"}], ",", "\n", 
          RowBox[{
           RowBox[{"numElectrons", " ", "=", " ", "1"}], ";", " ", "\n", 
           RowBox[{"pos1", " ", "=", " ", "0"}], ";", "\n", 
           RowBox[{"weight", " ", "=", " ", "1"}], ";", "\n", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"pos2", " ", "=", " ", 
                RowBox[{"pos1", "+", 
                 RowBox[{"RandomVariate", "[", 
                  RowBox[{"ExponentialDistribution", "[", "1", "]"}], 
                  "]"}]}]}], ")"}], "\[LessEqual]", "Nc"}], ",", " ", "\n", 
             RowBox[{
              RowBox[{"lambdaI", " ", "=", 
               RowBox[{"Nc", " ", "/", " ", "Ni"}]}], ";", "\n", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"pos2", " ", "-", " ", "pos1"}], ")"}], " ", 
                 "\[GreaterEqual]", " ", "lambdaI"}], ",", 
                RowBox[{
                 RowBox[{"numElectrons", "+=", "weight"}], ";", 
                 RowBox[{"weight", "*=", "2"}]}]}], "]"}], ";", "\n", 
              RowBox[{"pos1", " ", "=", " ", "pos2"}]}]}], "]"}], ";", "\n", 
           "numElectrons"}]}], "]"}], ",", "\n", 
        RowBox[{"{", "count", "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "result", "]"}], ",", 
       RowBox[{
        RowBox[{"StandardDeviation", "[", "result", "]"}], "/", 
        RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.8767419437673264`*^9, 3.8767419626897717`*^9}, {
  3.876742009596827*^9, 3.876742010994136*^9}, {3.8767435099036922`*^9, 
  3.876743559779027*^9}, {3.876743596672172*^9, 3.8767435971861486`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4acf2b0f-8738-4c11-ba4f-da8312c40b3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTime", "[", 
   RowBox[{"s_", ",", "vx_", ",", "vw_", ",", "ax_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"S", ",", "set", ",", "start"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"vw", " ", ">", " ", "0"}], ",", "\n", 
       RowBox[{
        RowBox[{"S", "[", "t_", "]"}], ":=", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", "ax"}], ")"}]}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vx", "+", 
              RowBox[{"ax", " ", "t"}]}], ")"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"vw", "^", "2"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vx", "+", 
                 RowBox[{"ax", " ", "t"}]}], ")"}], "^", "2"}]}], "]"}]}], 
           "-", 
           RowBox[{"vx", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"vw", "^", "2"}], "+", 
              RowBox[{"vx", "^", "2"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"vw", "^", "2"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ArcSinh", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"ax", " ", "t"}], " ", "+", " ", "vx"}], ")"}], "/",
                 "vw"}], "]"}], "-", 
              RowBox[{"ArcSinh", "[", 
               RowBox[{"vx", "/", "vw"}], "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
       "\n", 
       RowBox[{
        RowBox[{"S", "[", "t_", "]"}], " ", ":=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "vx"}], " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"vx", "^", "2"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ax", " ", "t"}], " ", "+", " ", "vx"}], ")"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ax", " ", "t"}], " ", "+", " ", "vx"}], ")"}], "^", 
              "2"}], "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "ax"}], ")"}]}]}]}], "\n", "]"}], ";", "\n", 
     RowBox[{"set", " ", "=", " ", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], "==", "s"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0.05", ",", "10"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"t", "/.", "set"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.871348670600274*^9, 3.871348794507012*^9}, {
  3.871348878143331*^9, 3.871348880742241*^9}, {3.8713490168112907`*^9, 
  3.871349018976984*^9}, {3.872527246588625*^9, 3.872527261139455*^9}, {
  3.872877972800296*^9, 3.8728779746360292`*^9}, {3.874670355687003*^9, 
  3.874670355924774*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"f323f23d-62fc-4b97-87e7-10fa2ce5c652"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetVelocity", "[", 
   RowBox[{"energy_", ",", "cos\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", "m", ",", "e0", ",", "v", ",", "vx1", ",", "vy1", ",", "vz1"}],
      "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"q", " ", "=", " ", "1"}], ";", "\n", 
     RowBox[{"m", " ", "=", " ", "511000"}], ";", "\n", 
     RowBox[{"v", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", 
        RowBox[{"energy", "/", "m"}]}], "]"}]}], ";", "\n", 
     RowBox[{"vx1", " ", "=", " ", 
      RowBox[{"v", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"cos\[Theta]", "^", "2"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"vy1", " ", "=", " ", 
      RowBox[{"v", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"cos\[Theta]", "^", "2"}]}], "]"}]}]}], ";", "\n", 
     RowBox[{"vz1", "=", 
      RowBox[{"v", " ", "cos\[Theta]"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"vx1", ",", "vy1", ",", "vz1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8725224411645927`*^9, 3.8725224560815353`*^9}, {
  3.872524288215632*^9, 3.872524333439743*^9}, {3.872524634110549*^9, 
  3.872524671669022*^9}, {3.872524731912977*^9, 3.8725247392954817`*^9}, {
  3.872525470304144*^9, 3.872525551585066*^9}, {3.87252578929692*^9, 
  3.872525803260397*^9}, {3.872527288400635*^9, 3.872527290388258*^9}, {
  3.875289094033084*^9, 3.875289094191433*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"b6ba0040-1196-4c88-888f-0e39e97ce564"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetNewPositions", "[", 
   RowBox[{
   "E_", ",", "s_", ",", "x0_", ",", "y0_", ",", "z0_", ",", "vx_", ",", 
    "vy_", ",", "vz_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vw", ",", "q", ",", "m", ",", "ax", ",", "set", ",", "x", ",", "y", ",",
       "z", ",", "t", ",", "velocities"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"vw", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"vy", "^", "2"}], "+", 
        RowBox[{"vz", "^", "2"}]}], "]"}]}], ";", "\n", 
     RowBox[{"q", " ", "=", " ", "1"}], ";", "\n", 
     RowBox[{"m", " ", "=", " ", "511000"}], ";", "\n", 
     RowBox[{"ax", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"q", " ", "E"}], ")"}], "/", "m"}]}], ";", "\n", 
     RowBox[{"t", "=", 
      RowBox[{"GetTime", "[", 
       RowBox[{"s", ",", "vx", ",", "vw", ",", "ax"}], "]"}]}], ";", "\n", 
     RowBox[{"x", " ", "=", "  ", 
      RowBox[{
       RowBox[{"vx", " ", "t"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "ax", " ", 
        RowBox[{"t", "^", "2"}]}]}]}], ";", " ", "\n", 
     RowBox[{"y", " ", "=", " ", 
      RowBox[{"vy", " ", "t"}]}], ";", "\n", 
     RowBox[{"z", "=", 
      RowBox[{"vz", " ", "t"}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x0", "+", "x"}], ",", 
       RowBox[{"y0", "+", "y"}], ",", 
       RowBox[{"z0", "+", "z"}], ",", 
       RowBox[{"vx", "+", 
        RowBox[{"ax", " ", "t"}]}], ",", "vy", ",", "vz", ",", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "*", " ", "m", " ", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vx", "+", 
             RowBox[{"ax", " ", "t"}]}], ")"}], "^", "2"}], "+", 
          RowBox[{"vy", "^", "2"}], "+", 
          RowBox[{"vz", "^", "2"}]}], ")"}]}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.871348632763986*^9, 3.871348639861541*^9}, {
  3.873129064764942*^9, 3.873129072272998*^9}, {3.873129110176929*^9, 
  3.873129111537179*^9}, {3.873129165336109*^9, 3.873129172348076*^9}, {
  3.873129248452979*^9, 3.873129351023924*^9}, {3.873129389647965*^9, 
  3.873129390602418*^9}, {3.8731294277130127`*^9, 3.8731294449452972`*^9}, {
  3.873129540158678*^9, 3.873129555192761*^9}, {3.8731298508841057`*^9, 
  3.8731298866598377`*^9}, {3.8731312996823673`*^9, 3.873131318381919*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c41c7158-dab6-46aa-98b7-678378f96829"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpdateVelocity", "[", 
   RowBox[{
   "energy_", ",", " ", "vx_", ",", " ", "vy_", ",", " ", "vz_", ",", " ", 
    "tbound_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "m", ",", "cost", ",", "phi", ",", "a", ",", "pvec1", ",", "pvec2", ",", 
      "pvec3", ",", "b", ",", "c", ",", "v", ",", "res"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"energy", "==", "0"}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", " ", "100", ",", " ", "100"}], 
         "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", "511000"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tbound", ",", "1"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "16"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"phi", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"2", "Pi"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "16"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"{", 
        RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pvec1", " ", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "vy"}], ",", 
         RowBox[{"-", "vx"}], ",", 
         RowBox[{"-", "0"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pvec2", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "vz"}], ",", "vy"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pvec3", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "vz"}], ",", "0", ",", "vx"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"b", " ", "=", " ", "pvec1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Dot", "[", 
          RowBox[{"a", ",", "pvec2"}], "]"}], "]"}], "<", 
        RowBox[{"Abs", "[", 
         RowBox[{"Dot", "[", 
          RowBox[{"a", ",", "b"}], "]"}], "]"}]}], ",", 
       RowBox[{"b", "=", "pvec2"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Dot", "[", 
          RowBox[{"a", ",", "pvec3"}], "]"}], "]"}], "<", 
        RowBox[{"Abs", "[", 
         RowBox[{"Dot", "[", 
          RowBox[{"a", ",", "b"}], "]"}], "]"}]}], ",", 
       RowBox[{"b", "=", "pvec3"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Cross", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", 
        RowBox[{"energy", "/", "m"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"v", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", "cost"}], " ", "+", " ", 
           RowBox[{"b", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"cost", "^", "2"}]}], "]"}], 
            RowBox[{"Cos", "[", "phi", "]"}]}], " ", "+", " ", 
           RowBox[{"c", " ", 
            RowBox[{"Sin", "[", "phi", "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"cost", "^", "2"}]}], "]"}]}]}], ")"}]}], ",", "16"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Append", "[", 
       RowBox[{"res", ",", 
        RowBox[{"{", 
         RowBox[{"cost", ",", "phi"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0E0ow3EAxvGZVsqUw5I0ZTsQec1NyB8HQ5ia95C2Ke8HCY0DkiKtkbdc
5C152VpecuAwW3ZQTLP24m32H8k/JbKawu/5HZ4+h+f2lbR0V6r4PB5PQgZZ
geon7Z5jBvet0enE7m1ZAVzbKKEapvxFcPgwVgaDmZtyeHETWU1/X3OghuiW
mqjF4dkLnUStjqEeJ9jYFC/HRMexz1ArkTQqiKUPuUqYP1R3BpPcUit0GUOd
MOptmap7FT/AkFUzVVjB+uFYbtYLPFRY32HRke0Tdk1YAtD8Lg9CjcO7UkVs
WDpfhc6v+h04XTe/Cx2FPQdQqXylzvVbzLBHc2qBx02DT1Bwb6LK9L2xpU8c
MyByUWfHJ6VwUfERD9UzYckwRhdBNfpG+sqJkal9Y1CcsXgp93HM3pKXesZr
aa0kruv07XBGfDsCDfaOUShU1c7CGraRqrzTWq9YjrnSfFHVJ3Y3zOJ/U0Vl
jznXROeWLR96gqYSKOS3ySGruq6Gv38Oat5losvoJ509Huo/5CMzng==
  "],
 CellLabel->"In[1]:=",ExpressionUUID->"fe15cc79-bd9c-4ee2-89c8-f0b202b11c97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetNewPositionsEuler", "[", 
   RowBox[{
   "\[CapitalDelta]t_", ",", "s_", ",", "V_", ",", "x0_", ",", "y0_", ",", 
    "z0_", ",", "vx0_", ",", "vy0_", ",", "vz0_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "q", ",", "m", ",", "path", ",", "eField", ",", "R", ",", "x", ",", "y", 
      ",", "z", ",", "vx", ",", "vy", ",", "vz", ",", "ex", ",", " ", "ey", 
      ",", " ", "ez", ",", "e0", ",", "e1", ",", "\[CapitalDelta]pos", ",", 
      "\[CapitalDelta]r", ",", "\[CapitalDelta]tsum", ",", "scalefactor"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"q", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", " ", "=", " ", "511000"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{"vx0", ",", "vy0", ",", "vz0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"path", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]tsum", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"path", "<", "s"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "check", " ", "energy", " ", "conservation", " ", "with", " ", 
          "delta", " ", "t"}], " ", "-", " ", 
         RowBox[{"take", " ", "rms", " ", "error"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Sow", "[", 
          RowBox[{"{", 
           RowBox[{
           "\[CapitalDelta]tsum", ",", "x", ",", "y", ",", "z", ",", "vx", 
            ",", "vy", ",", "vz", ",", "ez", ",", "ey", ",", "ez"}], "}"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]tsum", "+=", "\[CapitalDelta]t"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[CapitalDelta]pos", "=", 
         RowBox[{"\[CapitalDelta]t", 
          RowBox[{"{", 
           RowBox[{"vx", ",", "vy", " ", ",", "vz"}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[CapitalDelta]r", "=", 
         RowBox[{"Norm", "[", "\[CapitalDelta]pos", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"path", "+", "\[CapitalDelta]r"}], ">", "s"}], " ", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"scalefactor", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"s", "-", "path"}], ")"}], "/", "\[CapitalDelta]r"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"\[CapitalDelta]pos", "*=", "scalefactor"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}], "+=", 
            "\[CapitalDelta]pos"}], ";", "\[IndentingNewLine]", 
           RowBox[{"path", "+=", 
            RowBox[{"Norm", "[", "\[CapitalDelta]pos", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"InBounds", "[", 
               RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "x", ",", "y", ",", "z", ",", "vx", ",", "vy", ",", "vz", ",", 
                "0", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ex", ",", "ey", ",", "ez"}], "}"}], "=", 
            RowBox[{"GetEField", "[", 
             RowBox[{"V", ",", "x", ",", "y", ",", "z"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "+=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[CapitalDelta]t", "*", "scalefactor"}], ")"}]}], 
                ")"}], "/", "m"}], ")"}], 
             RowBox[{"{", 
              RowBox[{"ex", ",", "ey", ",", "ez"}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "+=", 
         "\[CapitalDelta]pos"}], ";", "\[IndentingNewLine]", 
        RowBox[{"path", "+=", 
         RowBox[{"Norm", "[", "\[CapitalDelta]pos", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"InBounds", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
            "x", ",", "y", ",", "z", ",", "vx", ",", "vy", ",", "vz", ",", 
             "0", ",", "0", ",", "0", ",", "0"}], "}"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ex", ",", "ey", ",", "ez"}], "}"}], "=", 
         RowBox[{"GetEField", "[", 
          RowBox[{"V", ",", "x", ",", "y", ",", "z"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], "+=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "\[CapitalDelta]t"}], ")"}], "/", "m"}], ")"}], 
          RowBox[{"{", 
           RowBox[{"ex", ",", "ey", ",", "ez"}], "}"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Sow", "[", 
        RowBox[{"{", 
         RowBox[{
         "\[CapitalDelta]tsum", ",", "x", ",", "y", ",", "z", ",", "vx", ",", 
          "vy", ",", "vz"}], "}"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"e0", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", "m", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"vx0", "^", "2"}], "+", 
          RowBox[{"vy0", "^", "2"}], "+", 
          RowBox[{"vz0", "^", "2"}]}], ")"}]}], "+", 
       RowBox[{"GetPotential", "[", 
        RowBox[{"V", ",", "x0", ",", "y0", ",", "z0"}], "]"}], "-", 
       RowBox[{"GetPotential", "[", 
        RowBox[{"V", ",", "x", ",", "y", ",", "z"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"e1", "=", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "*", "m", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vx", "^", "2"}], "+", 
         RowBox[{"vy", "^", "2"}], "+", 
         RowBox[{"vz", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "z", ",", "vx", ",", "vy", ",", "vz", ",", " ", 
       "e1", ",", 
       RowBox[{"e1", "-", "e0"}], ",", "path", ",", "s"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.873131130832781*^9, 3.8731312061469107`*^9}, {
   3.873131248145998*^9, 3.87313129086602*^9}, {3.873131339791521*^9, 
   3.873131353195579*^9}, {3.873131498858067*^9, 3.873131505968121*^9}, {
   3.873131553338972*^9, 3.873131554712689*^9}, {3.8731316172861767`*^9, 
   3.873131619312661*^9}, {3.873135534362075*^9, 3.873135671997065*^9}, {
   3.873138186654697*^9, 3.873138218958418*^9}, {3.873138388449765*^9, 
   3.873138430693431*^9}, {3.873138498521002*^9, 3.873138499496276*^9}, {
   3.873138633817688*^9, 3.8731386781027317`*^9}, {3.873138710903637*^9, 
   3.873138718481089*^9}, {3.873138801708419*^9, 3.873138811574621*^9}, 
   3.8731388668588133`*^9, {3.873138902543071*^9, 3.873138938030397*^9}, {
   3.873138968914255*^9, 3.873139055668976*^9}, {3.8731391638044453`*^9, 
   3.873139181312872*^9}, {3.8731392204792833`*^9, 3.87313926921518*^9}, {
   3.873139316419387*^9, 3.8731393615859327`*^9}, {3.873139450569878*^9, 
   3.8731394509968033`*^9}, {3.873678606558879*^9, 3.8736786071345577`*^9}, {
   3.8736788263858633`*^9, 3.873678836284174*^9}, {3.8752919673365383`*^9, 
   3.875291998036944*^9}, {3.875292046823965*^9, 3.875292057329289*^9}, {
   3.875292167123921*^9, 3.875292179336611*^9}, {3.875292321699263*^9, 
   3.875292326152553*^9}, {3.8752924241055603`*^9, 3.875292454099278*^9}, {
   3.8752925783496313`*^9, 3.8752925799650793`*^9}, {3.875294181772792*^9, 
   3.8752942280652246`*^9}, {3.875294279310998*^9, 3.8752942817682447`*^9}, {
   3.875294875133255*^9, 3.875294896202711*^9}, {3.875403611383933*^9, 
   3.8754036137629623`*^9}, {3.8754036580896*^9, 3.875403658217452*^9}, {
   3.875548801511133*^9, 3.875548803836424*^9}, {3.875549065730794*^9, 
   3.875549066351325*^9}, {3.875879394395282*^9, 3.875879395889166*^9}, {
   3.876151960702897*^9, 3.8761519698719873`*^9}, {3.876152609699198*^9, 
   3.876152641459673*^9}, {3.876152685172975*^9, 3.876152685531423*^9}, {
   3.876152735922426*^9, 3.876152737570848*^9}, {3.876236552351779*^9, 
   3.876236553980258*^9}, {3.876240425570407*^9, 3.876240442459367*^9}, {
   3.876702180580855*^9, 3.8767021940520267`*^9}, {3.8767423928638268`*^9, 
   3.876742392970798*^9}, {3.876744389254211*^9, 3.876744393869293*^9}, {
   3.876744494789731*^9, 3.876744535306719*^9}, {3.876744597277525*^9, 
   3.8767445974361362`*^9}, {3.8767446471808357`*^9, 
   3.8767446681869097`*^9}, {3.876744759197226*^9, 3.876744779606841*^9}, {
   3.876744908876255*^9, 3.876744955582325*^9}, {3.876745056430422*^9, 
   3.8767450837802277`*^9}, {3.876748367331787*^9, 3.8767483709563026`*^9}, {
   3.876757531730528*^9, 3.876757652514127*^9}, {3.876757727731207*^9, 
   3.876757729198024*^9}, {3.876757821964508*^9, 3.876757824936997*^9}, {
   3.876757940155621*^9, 3.876757941520762*^9}, {3.8767580455003567`*^9, 
   3.876758051714959*^9}, {3.876758087702446*^9, 3.876758089400292*^9}, {
   3.876758124338737*^9, 3.8767582260578747`*^9}, {3.876758263721946*^9, 
   3.876758285216399*^9}, {3.8767584200722113`*^9, 3.876758422876856*^9}, {
   3.876758486598329*^9, 3.8767585081563787`*^9}, {3.876758706324451*^9, 
   3.876758707447186*^9}, {3.8767587986213408`*^9, 3.876758798805975*^9}, {
   3.8772770607522087`*^9, 3.877277063687509*^9}, {3.877357890303722*^9, 
   3.8773579006750174`*^9}, {3.877375928772974*^9, 3.877375955043274*^9}, {
   3.877375990384426*^9, 3.877376029196312*^9}, {3.878062023284437*^9, 
   3.878062026553032*^9}, {3.878062092679557*^9, 3.8780621150275793`*^9}, {
   3.878062196277574*^9, 3.878062198641953*^9}, {3.87806224814165*^9, 
   3.878062248387401*^9}, {3.878062565316167*^9, 3.878062567913904*^9}, {
   3.878063121742833*^9, 3.878063144568421*^9}, {3.878063210014716*^9, 
   3.878063321626183*^9}, {3.878063376770788*^9, 3.87806338138855*^9}, {
   3.878063459912661*^9, 3.878063460068235*^9}, {3.878063496948985*^9, 
   3.8780635243565397`*^9}, {3.8780663180351963`*^9, 3.878066363439117*^9}, 
   3.878066395320777*^9, {3.8780664543264093`*^9, 3.8780665567942257`*^9}, {
   3.8780666371988583`*^9, 3.878066642094646*^9}, {3.878066682816341*^9, 
   3.878066717120697*^9}, 3.878066837487328*^9, {3.878066887128365*^9, 
   3.8780669236953382`*^9}, {3.8780669643407373`*^9, 
   3.8780669803437757`*^9}, {3.8780670461591063`*^9, 3.878067071362302*^9}, {
   3.8780673429631844`*^9, 3.878067351085882*^9}, {3.878067394900735*^9, 
   3.878067407471271*^9}, {3.878076127759033*^9, 3.878076132696352*^9}, {
   3.878214568336364*^9, 3.878214576949044*^9}, {3.878269538180094*^9, 
   3.8782696613270893`*^9}, {3.878269708845482*^9, 3.878269712331555*^9}, {
   3.878345333731146*^9, 3.878345362647777*^9}, {3.8783463396659603`*^9, 
   3.87834636215518*^9}, {3.878346476961734*^9, 3.878346536765356*^9}, {
   3.8783477931238728`*^9, 3.878347855201343*^9}, {3.878349694012364*^9, 
   3.8783497213526077`*^9}, {3.878389681686698*^9, 3.878389683548026*^9}, {
   3.878390159186494*^9, 3.878390159383698*^9}, {3.878390314231121*^9, 
   3.878390317692905*^9}, {3.8783906895856247`*^9, 3.878390696811923*^9}, {
   3.878397650984622*^9, 3.878397735829818*^9}, {3.878397800716847*^9, 
   3.8783978301129627`*^9}, {3.8783978608763657`*^9, 3.878397911930657*^9}, {
   3.8783979935015583`*^9, 3.8783979985930157`*^9}, {3.8783980542910433`*^9, 
   3.8783980652434387`*^9}, {3.878398139172326*^9, 3.878398250832102*^9}, {
   3.878398921464542*^9, 3.87839899453303*^9}, {3.878399032093937*^9, 
   3.878399035059469*^9}, {3.878399067148253*^9, 3.878399067260358*^9}, {
   3.8783991176154613`*^9, 3.8783991354557877`*^9}, {3.8783992399763203`*^9, 
   3.878399281839048*^9}, {3.878399320674161*^9, 3.878399332045497*^9}, {
   3.878399375929138*^9, 3.8783993807103987`*^9}, {3.878399493171782*^9, 
   3.878399493461644*^9}, 3.87839962155513*^9, {3.878562260185155*^9, 
   3.878562261962495*^9}, {3.878563016902927*^9, 3.878563017013275*^9}, {
   3.878563990367875*^9, 3.878563998704756*^9}, {3.8785641317405043`*^9, 
   3.8785641553184633`*^9}, {3.878564209559659*^9, 3.878564295458935*^9}, {
   3.8785643675020933`*^9, 3.878564376079715*^9}, {3.878564469493661*^9, 
   3.878564487281032*^9}, {3.878564665698318*^9, 3.878564680110194*^9}, {
   3.878564745186575*^9, 3.878564777651813*^9}, {3.8785649030157967`*^9, 
   3.878564931883274*^9}, {3.8785649731138163`*^9, 3.878564980377864*^9}, {
   3.8785650363925343`*^9, 3.878565206947917*^9}, {3.8785653385348587`*^9, 
   3.8785653460699043`*^9}, {3.880374287102787*^9, 3.88037429105581*^9}, 
   3.880389515599257*^9, {3.880557472286586*^9, 3.880557472440154*^9}, {
   3.88056245183502*^9, 3.880562474803544*^9}, {3.88056344491149*^9, 
   3.880563447021311*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"84834693-e218-4d41-a766-57c8114210f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Parallel", " ", "plate"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ID", " ", "=", " ", "\"\<PP\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetStartingPos", "[", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InBounds", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
     RowBox[{"0", "<=", "x", "<=", "d"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetEField", "[", 
      RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", " ", 
     
     RowBox[{
      RowBox[{"-", "V"}], "/", "d"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetPotential", "[", 
      RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", 
     RowBox[{"V", " ", 
      RowBox[{"x", "/", "d"}]}]}], ";"}], " "}]}]], "Input",
 CellChangeTimes->{{3.878560166744033*^9, 3.878560170540016*^9}, {
   3.878560429367506*^9, 3.878560440958112*^9}, 3.880558505366848*^9},
 CellLabel->
  "In[246]:=",ExpressionUUID->"da46c2e1-abaa-499e-b582-b3658ee7b198"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Concentric", " ", "spheres"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ID", " ", "=", " ", "\"\<SS\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetStartingPos", "[", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"Sphere", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a"}], "]"}], ",",
           "1", ",", 
          RowBox[{"WorkingPrecision", "->", "16"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InBounds", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"a", "<=", 
     RowBox[{"Norm", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], "<=", "b"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "/", 
       RowBox[{"r", "^", "2"}]}], " ", "->", " ", "k"}], " ", "=", " ", 
     RowBox[{"Vab", "/", 
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetEField", "[", 
      RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], " ", "}"}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"V", " ", "a", " ", "b"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y", ",", "z"}], "}"}], "//", "N"}], ",", 
             "16"}], "]"}], "]"}], "^", "3"}], " ", 
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"GetEField", "[", 
       RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], " ", "}"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"V", " ", "a", " ", "b"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], "^", "3"}], " ", 
          RowBox[{"(", 
           RowBox[{"b", "-", "a"}], ")"}]}], ")"}]}]}]}], ";"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetPotential", "[", 
      RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"V", " ", "a", " ", "b"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}]}], ")"}]}]}], ";"}], " "}]}]], "Input",\

 CellChangeTimes->{{3.875289459329867*^9, 3.875289469089353*^9}, {
   3.875289623698387*^9, 3.87528963632937*^9}, {3.875289784622774*^9, 
   3.875289861378524*^9}, 3.875290041742717*^9, {3.875290087982821*^9, 
   3.8752900887006063`*^9}, {3.8752901792127047`*^9, 3.875290189230192*^9}, {
   3.875290699603483*^9, 3.8752907084111633`*^9}, {3.8752908785431623`*^9, 
   3.875290903549917*^9}, {3.8752912698448057`*^9, 3.8752912705309467`*^9}, 
   3.8752924148114843`*^9, {3.87529412398216*^9, 3.8752941568634872`*^9}, {
   3.8754747175170507`*^9, 3.875474721834299*^9}, {3.876152658032123*^9, 
   3.876152659359457*^9}, {3.876154351628501*^9, 3.876154365318284*^9}, {
   3.876757446613872*^9, 3.876757454257194*^9}, {3.8767580254233932`*^9, 
   3.876758025979342*^9}, {3.87839829813035*^9, 3.878398299784642*^9}, {
   3.878398383423143*^9, 3.878398387443372*^9}, {3.8783984187278557`*^9, 
   3.878398425322651*^9}, {3.878398532777141*^9, 3.878398536926428*^9}, {
   3.87839876389841*^9, 3.878398768318614*^9}, {3.878398858053937*^9, 
   3.878398869067575*^9}, {3.878399171632477*^9, 3.878399185381206*^9}, {
   3.8783992300630207`*^9, 3.878399234925085*^9}, {3.878522947608308*^9, 
   3.878522947807084*^9}, {3.878555391983939*^9, 3.878555392295162*^9}, {
   3.878556440867819*^9, 3.878556440963603*^9}, {3.878558543585593*^9, 
   3.878558544456154*^9}, {3.880373205409543*^9, 3.8803732214280252`*^9}, {
   3.880373270500628*^9, 3.880373277410562*^9}, {3.88037366888743*^9, 
   3.880373669777315*^9}, {3.880373832969317*^9, 3.880373835121945*^9}, {
   3.880373986591731*^9, 3.880373997997973*^9}, {3.880374113278264*^9, 
   3.880374115124674*^9}, {3.8803742987382174`*^9, 3.88037429961311*^9}, {
   3.880374337046667*^9, 3.8803743380819817`*^9}, {3.8803743823903027`*^9, 
   3.880374382518622*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8db37701-405a-4f26-9e46-a72cf7cb7186"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Concentric", " ", "spheres", " ", "discrete"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sspotential", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\</Users/wbowers/Downloads/phi2.txt\>\"", ",", " ", 
       "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sspotential", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"sspotential", ",", "2"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"a", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ID", " ", "=", " ", "\"\<SS Discrete\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetStartingPos", "[", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"Sphere", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a"}], "]"}], ",",
           "1", ",", 
          RowBox[{"WorkingPrecision", "->", "16"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InBounds", "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"a", "<=", 
     RowBox[{"Norm", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], "<=", "b"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gs", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetPotential", "[", 
     RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Rho]", ",", "length", ",", "i", ",", "j", ",", "\[Alpha]", ",", 
        "\[Beta]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"y", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"\[Rho]", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"Abs", "[", "z", "]"}], "/", "gs"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"length", "=", 
        RowBox[{"Length", "[", "sspotential", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"i", "+", "2"}], ">", "length"}], " ", "||", " ", 
          RowBox[{
           RowBox[{"j", "+", "2"}], " ", ">", " ", "length"}]}], ",", " ", 
         RowBox[{"Return", "[", "0.", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Rho]", "/", "gs"}], " ", "-", " ", "i"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "z", "]"}], "/", " ", "gs"}], " ", "-", " ", 
         "j"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "V"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Beta]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Beta]"}], ")"}], "\[Alpha]", " ", 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], "+", 
          RowBox[{"\[Beta]", " ", "\[Alpha]", " ", 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}]}], ")"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetEField", "[", 
     RowBox[{"V_", ",", "x_", ",", "y_", ",", "zraw_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "z", ",", "\[Rho]", ",", "i", ",", "j", ",", "length", ",", "\[Alpha]",
         ",", "\[Beta]", ",", "Er", ",", "Ez", ",", "E\[Rho]", ",", "Ezf", 
        ",", "phi", ",", "flip"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"y", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"\[Rho]", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"zraw", "<", "0"}], ",", 
         RowBox[{
          RowBox[{"z", "=", 
           RowBox[{"Abs", "[", "zraw", "]"}]}], ";", 
          RowBox[{"flip", "=", "True"}]}], ",", 
         RowBox[{"z", "=", "zraw"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"z", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"length", "=", 
        RowBox[{"Length", "[", "sspotential", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"i", "+", "2"}], ">", "length"}], " ", "||", " ", 
          RowBox[{
           RowBox[{"j", " ", "+", "2"}], ">", " ", "length"}]}], ",", " ", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"\[Rho]", "/", "gs"}], " ", "-", " ", "i"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", "=", 
        RowBox[{
         RowBox[{"z", "/", " ", "gs"}], " ", "-", " ", "j"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"E\[Rho]", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", 
                RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "2"}], ",", 
                RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ")"}], "/", 
           "gs"}]}], "+", 
         RowBox[{"\[Beta]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", 
                RowBox[{"j", "+", "2"}]}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "2"}], ",", 
                RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
           "gs"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ezf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", 
                RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", 
                RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
           "gs"}]}], "+", 
         RowBox[{"\[Alpha]", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "2"}], ",", 
                RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"sspotential", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "2"}], ",", 
                RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
           "gs"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"flip", ",", 
         RowBox[{"Ezf", " ", "=", " ", 
          RowBox[{"-", "Ezf"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "V"}], " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"E\[Rho]", "*", 
            RowBox[{"Normalize", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", "Ezf"}], "}"}], 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz2tIE2AUBuDlIJvVYlgUbc5tom1iy60lJEHuYmna0rEIhMK8rVrOS2kg
I2mWoqQbptsgclagEVSmYWNGNBaaIRIxWGo4y1k5BSHIMZnS934/Dg/vj3Ne
jrCsRlcZx2AwjpKBzwb7548vrypnI00/YFOuf0c2kfHTyoZtdt49mLH5xwZV
U3oHrI8EnbDacq4Phr92UnmssTGYdXXWR/NuzhQcLb8/DTXqSBjeFB1ehdcG
hUMnia2/00bguKYykEP0co3UI4qEDCXxouoE1Zn4VgalM41y2NEm4quI9rmt
NKj81FKoJia5UrWQmx8NPSDyJ26F4aKzndVDLHms40DRo/mDcL0wK4nm0iUR
9MQHUuAv/oQEdg/HqIY1cyZMVw/IoF3xVAUPpQjUUM/evAybo9vKoLXGZoRS
YWo1rDU7zHDL5Kf2TLbfgTt1uS0wT6bvgh8KuFb4vru2Fy7kj7vgdq3hBe1h
pr+CRfKqEVgnNVI/tnI99L8bc+/gMV+9F8aum6kr/oczsNRdtAQ1UulfuNqR
8A9uLHA3aL5QEqN3KhqYvUSt+Ak1VFfcCc/EEm1woVzQC+3Bz074nfM6AsV9
6jg7MZqs2g/ZiuIDkMGX82C/20sNNe4VwmGPjxpkFUhgjug5VdM0mQmzMqep
gi8pVfAl55IB7nIrjVDn2GOCPW/2DUCL7yyV3XA6AO+uxX+jfXmLZgfxlCT5
NqwYqrbA7DYXdaqLeYW/Qvb6z1NH16dNME+83Az/AxDUxXA=
  "],
 CellLabel->"In[1]:=",ExpressionUUID->"3b3021c1-d690-4116-a86d-ff4fb48ae735"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GetPotentialContinuous", "[", 
   RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Rho]", ",", "length", ",", "i", ",", "j", ",", "\[Alpha]", ",", 
      "\[Beta]"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"Floor", "[", 
       RowBox[{"\[Rho]", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "z", "]"}], "/", "gs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"length", "=", 
      RowBox[{"Length", "[", "sspotential", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"i", "+", "2"}], ">", "length"}], " ", "||", " ", 
        RowBox[{
         RowBox[{"j", "+", "2"}], " ", ">", " ", "length"}]}], ",", " ", 
       RowBox[{"Return", "[", "0.", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{
       RowBox[{"\[Rho]", "/", "gs"}], " ", "-", " ", "i"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "z", "]"}], "/", " ", "gs"}], " ", "-", " ", 
       "j"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", "V"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Beta]"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
         RowBox[{"sspotential", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Beta]"}], ")"}], "\[Alpha]", " ", 
         RowBox[{"sspotential", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "+", "2"}], ",", 
            RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], "+", 
        RowBox[{"\[Beta]", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
         RowBox[{"sspotential", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "+", "1"}], ",", 
            RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], "+", 
        RowBox[{"\[Beta]", " ", "\[Alpha]", " ", 
         RowBox[{"sspotential", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"i", "+", "2"}], ",", 
            RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetEFieldContinuous", "[", 
   RowBox[{"V_", ",", "x_", ",", "y_", ",", "zraw_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "z", ",", "\[Rho]", ",", "i", ",", "j", ",", "length", ",", "\[Alpha]", 
      ",", "\[Beta]", ",", "Er", ",", "Ez", ",", "E\[Rho]", ",", "Ezf", ",", 
      "phi", ",", "flip"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Rho]", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "=", 
      RowBox[{"Floor", "[", 
       RowBox[{"\[Rho]", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"zraw", "<", "0"}], ",", 
       RowBox[{
        RowBox[{"z", "=", 
         RowBox[{"Abs", "[", "zraw", "]"}]}], ";", 
        RowBox[{"flip", "=", "True"}]}], ",", 
       RowBox[{"z", "=", "zraw"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", "=", 
      RowBox[{"Floor", "[", 
       RowBox[{"z", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"length", "=", 
      RowBox[{"Length", "[", "sspotential", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"i", "+", "2"}], ">", "length"}], " ", "||", " ", 
        RowBox[{
         RowBox[{"j", " ", "+", "2"}], ">", " ", "length"}]}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"0.", ",", "0.", ",", "0."}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{
       RowBox[{"\[Rho]", "/", "gs"}], " ", "-", " ", "i"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", "=", 
      RowBox[{
       RowBox[{"z", "/", " ", "gs"}], " ", "-", " ", "j"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"E\[Rho]", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "-", " ", 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], "]"}]}], ")"}], "/", "gs"}]}],
        "+", 
       RowBox[{"\[Beta]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "2"}]}], "]"}], "]"}], " ", "-", " ", 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
         "gs"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ezf", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "-", " ", 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", 
              RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], ")"}], "/", "gs"}]}],
        "+", 
       RowBox[{"\[Alpha]", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], "]"}], " ", "-", " ", 
           RowBox[{"sspotential", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "2"}], ",", 
              RowBox[{"j", "+", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
         "gs"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"flip", ",", 
       RowBox[{"Ezf", " ", "=", " ", 
        RowBox[{"-", "Ezf"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", "V"}], " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"E\[Rho]", "*", 
          RowBox[{"Normalize", "[", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", "Ezf"}], "}"}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.881600126113796*^9, 
  3.881600130395751*^9}},ExpressionUUID->"5a8c35e4-9286-4d84-882b-\
6613b2cf744c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Sphere", " ", "in", " ", "cylinder"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"scpotential", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\</Users/wbowers/Downloads/new-cwPhi.txt\>\"", ",", " ", 
       "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetScPotential", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", ">", 
         RowBox[{"Length", "[", "scpotential", "]"}]}], "||", 
        RowBox[{"j", ">", 
         RowBox[{"Length", "[", "scpotential", "]"}]}]}], ",", "0", ",", 
       RowBox[{"scpotential", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", "=", "7.3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", "=", "14.6"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ID", "=", "\"\<SC\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lmax", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"binwidth", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gs", "=", 
     RowBox[{"100", "*", 
      RowBox[{"scpotential", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phiFile", "=", 
     RowBox[{"\"\<Phi file: \>\"", " ", "<>", 
      RowBox[{"StringDelete", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"scpotential", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<,\>\"", ",", "\"\<{\>\"", ",", "\"\<}\>\""}], "}"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scpotential", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"scpotential", ",", "3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetAngles", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"z", "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"y", "^", "2"}], "+", 
          RowBox[{"z", "^", "2"}]}], "]"}]}], ",", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindBinNum", "[", 
      RowBox[{"costheta_", ",", "binwidth_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"costheta", "+", "1"}], ")"}], "/", "binwidth"}], "]"}], "+",
       "1"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetStartingPos", "[", "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"Sphere", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "a"}], "]"}], ",",
           "1", ",", 
          RowBox[{"WorkingPrecision", "->", "16"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InBounds", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"a", "<=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}], "+", 
         RowBox[{"z", "^", "2"}]}], "]"}]}], "&&", " ", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "]"}], "<=", "b"}], "&&", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "h"}], "/", "2"}], "<=", "z", "<=", 
       RowBox[{"h", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetPotential", "[", 
     RowBox[{"V_", ",", "x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Rho]", ",", "length", ",", "i", ",", "j", ",", "\[Alpha]", ",", 
        "\[Beta]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"y", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"Abs", "[", "z", "]"}], "/", "gs"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"j", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"\[Rho]", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "z", "]"}], "/", " ", "gs"}], " ", "-", " ", 
         "i"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", "=", 
        RowBox[{
         RowBox[{"\[Rho]", "/", "gs"}], " ", "-", " ", "j"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "V"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Beta]"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
           RowBox[{"GetScPotential", "[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"j", "+", "1"}]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Beta]"}], ")"}], "\[Alpha]", " ", 
           RowBox[{"GetScPotential", "[", 
            RowBox[{
             RowBox[{"i", "+", "2"}], ",", 
             RowBox[{"j", "+", "1"}]}], "]"}]}], "+", 
          RowBox[{"\[Beta]", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
           RowBox[{"GetScPotential", "[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", 
             RowBox[{"j", "+", "2"}]}], "]"}]}], "+", 
          RowBox[{"\[Beta]", " ", "\[Alpha]", " ", 
           RowBox[{"GetScPotential", "[", 
            RowBox[{
             RowBox[{"i", "+", "2"}], ",", 
             RowBox[{"j", "+", "2"}]}], "]"}]}]}], ")"}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetEField", "[", 
     RowBox[{"V_", ",", "x_", ",", "y_", ",", "zraw_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "z", ",", "\[Rho]", ",", "i", ",", "j", ",", "length", ",", "\[Alpha]",
         ",", "\[Beta]", ",", "Er", ",", "Ez", ",", "E\[Rho]", ",", "Ezf", 
        ",", "phi", ",", "flip"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Rho]", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"y", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"zraw", "<", "0"}], ",", 
         RowBox[{
          RowBox[{"z", "=", 
           RowBox[{"Abs", "[", "zraw", "]"}]}], ";", 
          RowBox[{"flip", "=", "True"}]}], ",", 
         RowBox[{"z", "=", "zraw"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"i", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"z", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"\[Rho]", "/", "gs"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{
         RowBox[{"z", "/", "gs"}], " ", "-", " ", "i"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Beta]", "=", 
        RowBox[{
         RowBox[{"\[Rho]", "/", " ", "gs"}], " ", "-", " ", "j"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"E\[Rho]", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"j", "+", "1"}]}], "]"}], " ", "-", " ", 
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"j", "+", "2"}]}], "]"}]}], ")"}], "/", "gs"}]}], "+", 
         
         RowBox[{"\[Alpha]", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "2"}], ",", 
               RowBox[{"j", "+", "1"}]}], "]"}], " ", "-", " ", 
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "2"}], ",", 
               RowBox[{"j", "+", "2"}]}], "]"}]}], ")"}], "/", "gs"}]}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Ezf", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Beta]"}], ")"}], " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"j", "+", "1"}]}], "]"}], " ", "-", " ", 
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "2"}], ",", 
               RowBox[{"j", "+", "1"}]}], "]"}]}], ")"}], "/", "gs"}]}], "+", 
         
         RowBox[{"\[Beta]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"j", "+", "2"}]}], "]"}], " ", "-", " ", 
             RowBox[{"GetScPotential", "[", 
              RowBox[{
               RowBox[{"i", "+", "2"}], ",", 
               RowBox[{"j", "+", "2"}]}], "]"}]}], ")"}], "/", "gs"}]}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"flip", ",", 
         RowBox[{"Ezf", " ", "=", " ", 
          RowBox[{"-", "Ezf"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", "V"}], " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"E\[Rho]", "*", 
            RowBox[{"Normalize", "[", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", "Ezf"}], "}"}], 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.875878613868034*^9, 3.875878618788431*^9}, {
   3.875878650740425*^9, 3.8758789864965982`*^9}, {3.875879059660063*^9, 
   3.875879069912272*^9}, {3.875879101085455*^9, 3.875879154165308*^9}, {
   3.8758791917404118`*^9, 3.875879236454465*^9}, 3.8758793584925213`*^9, {
   3.875879413698326*^9, 3.875879504777618*^9}, {3.8758796926900187`*^9, 
   3.875879719294746*^9}, {3.8758803798833857`*^9, 3.875880400272727*^9}, {
   3.875880487420414*^9, 3.875880489365369*^9}, {3.875880564112577*^9, 
   3.875880564694871*^9}, {3.876002922895825*^9, 3.87600292323025*^9}, {
   3.878065964657213*^9, 3.878066021593645*^9}, {3.881366715598074*^9, 
   3.881366769125792*^9}, {3.8813673718843393`*^9, 3.88136740561091*^9}, {
   3.881367471357635*^9, 3.88136747873699*^9}, {3.8813675114754868`*^9, 
   3.881367542729526*^9}, {3.8813680159461823`*^9, 3.881368046094562*^9}, {
   3.8813682483397493`*^9, 3.881368289079273*^9}, 3.8813692379689217`*^9, {
   3.8813692944974813`*^9, 3.8813692982914248`*^9}, {3.881369957648861*^9, 
   3.881369965366684*^9}, {3.881370090821288*^9, 3.88137010064618*^9}, {
   3.881433529681869*^9, 3.881433530134181*^9}, 3.882145979135345*^9, {
   3.882146682326601*^9, 3.882146687156414*^9}, {3.882204888730053*^9, 
   3.8822048888788958`*^9}, {3.88279450822507*^9, 3.882794509446227*^9}, 
   3.882986449176416*^9, 3.883935995539528*^9, {3.883937085883729*^9, 
   3.8839370859816837`*^9}, {3.8839371847809477`*^9, 3.88393731145977*^9}, {
   3.883937401351172*^9, 3.883937403773815*^9}, {3.883938801532797*^9, 
   3.883938804491544*^9}, {3.883950019541766*^9, 3.883950031588174*^9}, 
   3.8839501210233192`*^9, {3.8839578703015833`*^9, 3.8839578709797897`*^9}, {
   3.883958152803679*^9, 3.883958191076118*^9}, {3.8840220810067253`*^9, 
   3.8840220951147833`*^9}, {3.8840221330356627`*^9, 
   3.8840221345906677`*^9}, {3.8840224901960583`*^9, 3.88402249037746*^9}, {
   3.884022612393591*^9, 3.8840226176906033`*^9}, {3.884022813193218*^9, 
   3.884022813822654*^9}, {3.8845513147674303`*^9, 3.8845513154102783`*^9}, {
   3.884551420325141*^9, 3.884551420572851*^9}, {3.884551565516603*^9, 
   3.884551591031986*^9}, {3.884551628620866*^9, 3.884551631907084*^9}, {
   3.8845516849068613`*^9, 3.884551687189476*^9}, {3.8845517281805162`*^9, 
   3.884551728338036*^9}, {3.884551789607201*^9, 3.88455181590477*^9}, {
   3.884552864476644*^9, 3.884552869389896*^9}, {3.884552905236165*^9, 
   3.8845529092649317`*^9}, {3.8845530100710278`*^9, 3.884553026414613*^9}, {
   3.884553066769347*^9, 3.8845530836007223`*^9}, {3.884553435690826*^9, 
   3.884553440907991*^9}, {3.884553727183772*^9, 3.884553742301857*^9}, {
   3.884553931942848*^9, 3.8845539408446217`*^9}, {3.884554436539164*^9, 
   3.884554450565633*^9}, {3.884554673619439*^9, 3.884554684943407*^9}, {
   3.884617009064207*^9, 3.884617019581924*^9}, {3.884620101208684*^9, 
   3.88462011113864*^9}, {3.884620290962768*^9, 3.884620329904585*^9}, {
   3.8846204206989307`*^9, 3.884620461407352*^9}, {3.884620783422616*^9, 
   3.8846208161580133`*^9}, {3.884620848470826*^9, 3.884620881289196*^9}, {
   3.884621221100111*^9, 3.8846212474084377`*^9}, {3.884621465287841*^9, 
   3.884621471862406*^9}, {3.884621586422567*^9, 3.8846216410239067`*^9}, {
   3.884621751542179*^9, 3.884621782964328*^9}, {3.884622169742302*^9, 
   3.884622175610352*^9}, {3.884622251003847*^9, 3.884622313835606*^9}, {
   3.8846224016529827`*^9, 3.884622426664735*^9}, {3.8846224584840183`*^9, 
   3.884622468205278*^9}, {3.884622503703104*^9, 3.884622573190246*^9}, {
   3.8846226044453917`*^9, 3.884622604558649*^9}, {3.884622893792603*^9, 
   3.884622922449849*^9}, {3.8846231343877707`*^9, 3.8846231385769243`*^9}, {
   3.884626022986981*^9, 3.884626023272633*^9}, 3.885168757564498*^9, {
   3.885226462367839*^9, 3.885226462594296*^9}, {3.8852284144473763`*^9, 
   3.8852284146422*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"f9b165d1-f3d6-48fd-a824-eb63d4cc3d83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ssregion", "=", 
   RowBox[{"RegionDifference", "[", 
    RowBox[{
     RowBox[{"Ball", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "7"}], "]"}], ",", 
     RowBox[{"Ball", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[1068]:=",ExpressionUUID->"93a66f9e-ead1-485a-97f0-3a5b65ef0b67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ssregion", "=", 
   RowBox[{"RegionDifference", "[", 
    RowBox[{
     RowBox[{"Ball", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "7"}], "]"}], ",", 
     RowBox[{"Ball", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], 
    "]"}]}], ";", 
  RowBox[{"Timing", "[", 
   RowBox[{"spherepotential", "=", 
    RowBox[{"NDSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lapl", ",", 
        RowBox[{"DirichletCondition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}], "==", 
           RowBox[{"-", "1"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}], "+", 
            RowBox[{"z", "^", "2"}]}], "<", "9"}]}], "]"}], ",", 
        RowBox[{"DirichletCondition", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "y", ",", "z"}], "]"}], "==", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "+", 
            RowBox[{"y", "^", "2"}], "+", 
            RowBox[{"z", "^", "2"}]}], ">=", "9"}]}], "]"}]}], "}"}], ",", 
      "f", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "\[Element]", 
       "ssregion"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879715164039772*^9, 3.879715198290592*^9}, {
   3.879715319181081*^9, 3.879715352506713*^9}, 3.879774180717738*^9, {
   3.881589359747081*^9, 3.881589360147745*^9}, {3.881589407735643*^9, 
   3.8815894126257763`*^9}, {3.8815894683823566`*^9, 3.881589468560254*^9}, {
   3.881589560005394*^9, 3.881589560111557*^9}, {3.881589612747566*^9, 
   3.881589639489339*^9}, {3.881589740724476*^9, 3.8815897409155493`*^9}, {
   3.8815898095273933`*^9, 3.881589831660595*^9}, {3.881590183956506*^9, 
   3.881590209168988*^9}, {3.884015782115222*^9, 3.884015785702869*^9}},
 CellLabel->
  "In[1069]:=",ExpressionUUID->"1397c754-ab0b-4ebe-9d2a-7521ecfaeec6"],

Cell[BoxData[
 TemplateBox[{
  "NDSolveValue", "dsvar", 
   "\"\\!\\(\\*RowBox[{\\\"False\\\"}]\\) cannot be used as a variable.\"", 2,
    1069, 110, 24649942033105244592, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.884015789556253*^9},
 CellLabel->
  "During evaluation of \
In[1069]:=",ExpressionUUID->"a70e2861-717c-46be-b600-470112e64ea0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.043066`", ",", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "0", ",", "0"}], "]"}], "+", 
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "0", ",", "0"}], "]"}], "+", 
         RowBox[{
          SuperscriptBox["f", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "0", ",", "0"}], "]"}]}], "\[Equal]", 
        "0"}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "0", ",", "0"}], "]"}], "\[Equal]", 
          RowBox[{"-", "1"}]}], ",", "True"}], "]"}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "0", ",", "0"}], "]"}], "\[Equal]", 
          "0"}], ",", "False"}], "]"}]}], "}"}], ",", "f", ",", "False"}], 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.87971537199841*^9, 3.8797742020403023`*^9, 
  3.8803727344868507`*^9, 3.8803727659034367`*^9, 3.880563724637239*^9, 
  3.8813692019395*^9, 3.881589374282152*^9, 3.8815894320198097`*^9, 
  3.881589502213513*^9, 3.881589596098524*^9, 3.881589637249105*^9, 
  3.8815896783629827`*^9, 3.881589791379637*^9, 3.8815898340464478`*^9, 
  3.881589867998063*^9, 3.88159019379591*^9, 3.881590242836958*^9, 
  3.8840157895654907`*^9},
 CellLabel->
  "Out[1069]=",ExpressionUUID->"bc13b983-34b4-47d5-b828-869492957863"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sspotential", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "val", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"val", "=", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{
           RowBox[{"spherepotential", "[", 
            RowBox[{"r", ",", "0", ",", "z"}], "]"}], ",", "4"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"val", "===", "Indeterminate"}], " ", "&&", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"r", "^", "2"}], "+", 
              RowBox[{"z", "^", "2"}]}], "]"}], "<=", "2"}]}], ",", 
          RowBox[{"val", "=", 
           RowBox[{"-", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"val", "===", "Indeterminate"}], " ", "&&", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"r", "^", "2"}], "+", 
              RowBox[{"z", "^", "2"}]}], "]"}], ">=", "6"}]}], ",", 
          RowBox[{"val", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{"val", ",", "16"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "7", ",", "0.008"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "7", ",", "0.008"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8797739933598833`*^9, 3.8797740035234337`*^9}, {
   3.8797744159463873`*^9, 3.879774438486045*^9}, {3.879774490349861*^9, 
   3.879774505234549*^9}, {3.879774748185917*^9, 3.8797747701451063`*^9}, {
   3.879774807225321*^9, 3.879774807327385*^9}, {3.8797749068189163`*^9, 
   3.879774910109429*^9}, {3.879774955908659*^9, 3.8797749935086803`*^9}, {
   3.879775029461164*^9, 3.87977509986847*^9}, {3.879775185662719*^9, 
   3.879775195472333*^9}, {3.879775283322308*^9, 3.879775338309765*^9}, {
   3.879775486120451*^9, 3.87977551039641*^9}, {3.879775550251363*^9, 
   3.879775551732275*^9}, {3.879776965949747*^9, 3.8797770409966383`*^9}, {
   3.8797770834725*^9, 3.879777209897849*^9}, {3.879777245020493*^9, 
   3.879777297528365*^9}, {3.8797773528051767`*^9, 3.87977739509962*^9}, 
   3.879777429635765*^9, {3.8797777454477587`*^9, 3.8797777493457117`*^9}, {
   3.8797777889081707`*^9, 3.879777789753703*^9}, {3.879777849467597*^9, 
   3.879777851052411*^9}, {3.879778070902604*^9, 3.879778078453624*^9}, {
   3.879778155975885*^9, 3.879778183490005*^9}, {3.879778217346736*^9, 
   3.87977821758095*^9}, {3.87977837412216*^9, 3.879778375400508*^9}, {
   3.879779033767296*^9, 3.87977903384999*^9}, {3.880388825390128*^9, 
   3.8803888267423887`*^9}, 3.8805637313288307`*^9, {3.880563923977528*^9, 
   3.880563924254921*^9}, {3.881367870927677*^9, 
   3.8813679065211277`*^9}},ExpressionUUID->"156caa35-b172-409e-99b8-\
32481811a06a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sspotential", "=", 
   RowBox[{"Insert", "[", 
    RowBox[{
    "sspotential", ",", 
     "\"\<12/20/2022, William Bowers, a 1/r sphere-in-sphere potential\>\"", 
     ",", " ", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sspotential", "=", 
   RowBox[{"Insert", "[", 
    RowBox[{"sspotential", ",", "\"\<701, 701, 0.0001\>\"", ",", " ", "2"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.880564173392662*^9, 3.8805642724097557`*^9}, {
  3.88056435049737*^9, 3.8805643545048923`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"9c173080-23da-4f31-8fb3-a01163bbf798"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\</Users/wbowers/Downloads/phi2.txt\>\"", ",", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{"sspotential", ",", "4"}], "]"}], ",", "\"\<Table\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879778380484194*^9, 3.87977838066467*^9}, {
   3.879778423491063*^9, 3.879778427641532*^9}, 3.8803889324439707`*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"cf58c291-0de3-4877-84ff-eaba8ac29e7c"],

Cell[BoxData["\<\"/Users/wbowers/Downloads/phi2.txt\"\>"], "Output",
 CellChangeTimes->{
  3.879775685256165*^9, 3.879778381356906*^9, 3.8797784279391108`*^9, 
   3.8803889378533373`*^9, 3.880563866138886*^9, 3.8805639984613256`*^9, {
   3.8805643403040133`*^9, 3.880564359776112*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"604b846f-5ef1-497b-aa62-e0e53766e4b7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectrons3D", "[", 
   RowBox[{
   "Nc_", ",", "Ni_", ",", "D_", ",", "Ui_", ",", "tbound_", ",", "count_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "V", ",", "E", ",", "\[Lambda]", ",", "\[Lambda]i", ",", "result", ",", 
      "stack"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"D", "/", "Nc"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]i", "=", 
      RowBox[{"D", "/", "Ni"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"Ui", "*", "Ni"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"E", "=", 
      RowBox[{"V", "/", "D"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stack", " ", "=", " ", 
      RowBox[{"CreateDataStructure", "[", "\"\<Stack\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x0", ",", "x1", ",", "y0", ",", "y1", ",", "z0", ",", "z1", ",", 
            "numElectrons", ",", "cos\[Theta]", ",", "\[Phi]", ",", "s", ",", 
            "vx", ",", "vy", ",", "vz", ",", " ", "energy"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numElectrons", " ", "=", " ", "1"}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"stack", "[", 
            RowBox[{"\"\<Push\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
               "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", " ", 
              RowBox[{"stack", "[", "\"\<EmptyQ\>\"", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "x0", ",", "y0", ",", "z0", ",", "vx", ",", "vy", ",", "vz"}],
                 "}"}], "=", 
               RowBox[{"stack", "[", "\"\<Pop\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"cos\[Theta]", "=", "1"}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"While", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "=", 
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{"ExponentialDistribution", "[", 
                    RowBox[{"1", "/", "\[Lambda]"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "x1", ",", "y1", ",", "z1", ",", " ", "vx", ",", " ", "vy",
                     ",", " ", "vz", ",", " ", "energy"}], "}"}], "=", 
                  RowBox[{"GetNewPositions", "[", 
                   RowBox[{
                   "E", ",", "s", ",", "x0", ",", "y0", ",", "z0", ",", "vx", 
                    ",", "vy", ",", "vz"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"0", "\[LessEqual]", "x1", "\[LessEqual]", "D"}]}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"energy", ">=", "Ui"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"numElectrons", "++"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"stack", "[", 
                    RowBox[{"\"\<Push\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "x1", ",", "y1", ",", "z1", ",", "0", ",", "0", ",", 
                    "0"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"energy", "-=", "Ui"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"else", ":"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"energy", "-=", 
                    RowBox[{"Ui", "*", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"UniformDistribution", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", " ", "0.5"}], "}"}], "]"}], "]"}]}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"energy", "<", "0"}], ",", 
                    RowBox[{"energy", "=", "0"}]}], "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"vx", ",", " ", "vy", ",", " ", "vz"}], "}"}], "=", 
                  RowBox[{"UpdateVelocity", "[", 
                   RowBox[{
                   "energy", ",", " ", "vx", ",", " ", "vy", ",", " ", "vz", 
                    ",", " ", "tbound"}], "]"}]}], ";", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", " ", "\[IndentingNewLine]", "numElectrons"}]}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"{", "count", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "result", "]"}], ",", 
       RowBox[{
        RowBox[{"StandardDeviation", "[", "result", "]"}], "/", 
        RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.870114805496361*^9, 3.870114846995454*^9}, 
   3.870114879025029*^9, {3.870114931145792*^9, 3.870114936938723*^9}, {
   3.870114967421623*^9, 3.870114970734902*^9}, {3.870115024068733*^9, 
   3.870115024829797*^9}, {3.870115824555442*^9, 3.8701158342048264`*^9}, {
   3.8701158792443447`*^9, 3.870115934514*^9}, {3.870116836211193*^9, 
   3.8701168531173773`*^9}, {3.870116940540113*^9, 3.8701169480632668`*^9}, {
   3.870117553663166*^9, 3.870117586271496*^9}, {3.870117624123577*^9, 
   3.870117630441042*^9}, {3.870117827053115*^9, 3.870117832757375*^9}, {
   3.87011810217624*^9, 3.8701181488741703`*^9}, {3.870118193603491*^9, 
   3.870118213748157*^9}, {3.8701182737335453`*^9, 3.8701182742766743`*^9}, {
   3.870198648575399*^9, 3.87019871653796*^9}, {3.8701987496129303`*^9, 
   3.870198797559896*^9}, {3.870199357089856*^9, 3.870199359437495*^9}, {
   3.8701998133425817`*^9, 3.870199813539008*^9}, {3.870199862314097*^9, 
   3.8701998631663923`*^9}, {3.87020002415919*^9, 3.870200063684287*^9}, {
   3.870206897040298*^9, 3.870206897159107*^9}, {3.870211013796597*^9, 
   3.87021103372134*^9}, {3.8707907163771067`*^9, 3.8707907425349827`*^9}, {
   3.8707914177284*^9, 3.8707914261036*^9}, {3.870791581420947*^9, 
   3.870791670215705*^9}, {3.87079254500388*^9, 3.870792558253543*^9}, {
   3.871348201986122*^9, 3.871348271338722*^9}, {3.871349779528062*^9, 
   3.8713497877459517`*^9}, {3.8713499887472773`*^9, 3.871349991625176*^9}, {
   3.871823736788772*^9, 3.8718237369451733`*^9}, {3.871826140128434*^9, 
   3.871826143367943*^9}, {3.8724513273835163`*^9, 3.872451332817829*^9}, {
   3.872522470596224*^9, 3.8725225432207003`*^9}, {3.87252272554844*^9, 
   3.8725227294282427`*^9}, {3.8725241939949903`*^9, 
   3.8725242179165373`*^9}, {3.872524264608883*^9, 3.872524270456706*^9}, {
   3.872524427850868*^9, 3.8725244931334476`*^9}, {3.872524542870974*^9, 
   3.8725245454970417`*^9}, {3.872524579808222*^9, 3.872524579932095*^9}, {
   3.872524701914008*^9, 3.87252470776152*^9}, {3.8725248290637493`*^9, 
   3.872524833913365*^9}, {3.872525080548533*^9, 3.872525080763397*^9}, {
   3.872525476103565*^9, 3.872525477632012*^9}, {3.872525600327297*^9, 
   3.8725256175786037`*^9}, {3.872525672812318*^9, 3.8725256949728327`*^9}, {
   3.8725257324837313`*^9, 3.872525732593369*^9}, {3.872525806144867*^9, 
   3.872525806286684*^9}, {3.8725271542112226`*^9, 3.872527158318804*^9}, {
   3.872527343607304*^9, 3.87252735538916*^9}, {3.872528095451543*^9, 
   3.872528100856361*^9}, {3.872528151727263*^9, 3.87252816953331*^9}, {
   3.872528200772292*^9, 3.872528267785911*^9}, {3.872528309742516*^9, 
   3.872528334877953*^9}, {3.87252836574793*^9, 3.87252839897859*^9}, {
   3.8725285500132236`*^9, 3.8725285823171787`*^9}, {3.8728767570877123`*^9, 
   3.872876757967456*^9}, {3.872877044686955*^9, 3.8728770556470947`*^9}, {
   3.872877167828931*^9, 3.8728771685457163`*^9}, {3.873126802863969*^9, 
   3.873126812677258*^9}, {3.873127073737043*^9, 3.8731270987792673`*^9}, {
   3.873127133609523*^9, 3.8731271616232862`*^9}, {3.8731273590022173`*^9, 
   3.873127365948604*^9}, {3.873127492162691*^9, 3.873127558686118*^9}, {
   3.873127624851098*^9, 3.8731276444463787`*^9}, {3.8731276859574213`*^9, 
   3.87312774105693*^9}, {3.873127806881091*^9, 3.873127870305048*^9}, {
   3.8731279205685797`*^9, 3.8731279699091682`*^9}, {3.87312806141492*^9, 
   3.87312807227361*^9}, {3.873129087247933*^9, 3.873129090340259*^9}, {
   3.8731291856797543`*^9, 3.873129192666081*^9}, {3.873129226503721*^9, 
   3.8731292366960783`*^9}, {3.873129335446334*^9, 3.873129361080166*^9}, {
   3.87312946047407*^9, 3.87312955972987*^9}, {3.873129594266774*^9, 
   3.873129618116109*^9}, {3.8731297245308123`*^9, 3.873129739377131*^9}, {
   3.873129783829378*^9, 3.873129803081909*^9}, {3.873129897936037*^9, 
   3.873129912595664*^9}, {3.873130067106332*^9, 3.87313007030231*^9}, {
   3.873130114890765*^9, 3.873130115044243*^9}, {3.873130231875022*^9, 
   3.873130238164343*^9}, {3.873130534141714*^9, 3.873130575362616*^9}, {
   3.873130610328081*^9, 3.8731306407885513`*^9}, {3.873130728382647*^9, 
   3.8731307331752157`*^9}, {3.8731308078152943`*^9, 3.873130840686747*^9}, {
   3.873130922323593*^9, 3.8731309245226517`*^9}, {3.873139391585185*^9, 
   3.8731394122217493`*^9}, {3.874586862908328*^9, 3.874586892494619*^9}, {
   3.87492791638514*^9, 3.874927943065577*^9}, {3.875288974541998*^9, 
   3.875288996023737*^9}, {3.87588058962442*^9, 3.87588058983701*^9}, {
   3.876152646090966*^9, 3.876152664525165*^9}, {3.8762372881915407`*^9, 
   3.876237290851302*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8d7d0f05-0d68-4a2b-9282-c3f48a7a50f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectronsEuler", "[", 
   RowBox[{
   "Nc_", ",", "Ni_", ",", "D_", ",", "Ui_", ",", "dt_", ",", "tbound_", ",", 
    "print_", ",", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eErrorList", ",", "V", ",", "E", ",", "\[Lambda]", ",", "\[Lambda]i", 
      ",", "result", ",", "stack", ",", "collisions", ",", "paths", ",", 
      "svals", ",", "countbin", ",", "electronsbin", ",", "squaredbin", ",", 
      "lbin", ",", "lbinSquared", ",", "data", ",", " ", "seedcount", ",", 
      "totalpaths"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"D", "/", "Nc"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]i", "=", 
      RowBox[{"D", "/", "Ni"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V", "=", 
      RowBox[{"Ui", "*", "Ni"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"totalpaths", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"paths", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"svals", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"E", "=", 
      RowBox[{"V", "/", "D"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"seedcount", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"collisions", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eErrorList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stack", " ", "=", " ", 
      RowBox[{"CreateDataStructure", "[", "\"\<Stack\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x0", ",", "x1", ",", "y0", ",", "y1", ",", "z0", ",", "z1", ",", 
            "numElectrons", ",", "cos\[Theta]", ",", "\[Phi]", ",", "s", ",", 
            "vx", ",", "vy", ",", "vz", ",", " ", "energy", ",", "eError", 
            ",", "numCollisions", ",", "pathval", ",", "sval", ",", "idx", 
            ",", "c\[Theta]0", ",", "\[Phi]0", ",", "SH", ",", "l", ",", "l2",
             ",", "collisionE", ",", "cost", ",", "phi", ",", "start", ",", 
            "path", ",", "input"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numElectrons", " ", "=", " ", "1"}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"numCollisions", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"stack", "[", 
            RowBox[{"\"\<Push\>\"", ",", 
             RowBox[{"GetStartingPos", "[", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c\[Theta]0", ",", "\[Phi]0"}], "}"}], " ", "=", " ", 
            RowBox[{"GetAngles", "[", 
             RowBox[{"x0", ",", "y0", ",", "z0"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", " ", 
              RowBox[{"stack", "[", "\"\<EmptyQ\>\"", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "x0", ",", "y0", ",", "z0", ",", "vx", ",", "vy", ",", "vz"}],
                 "}"}], "=", 
               RowBox[{"stack", "[", "\"\<Pop\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"cos\[Theta]", "=", "1"}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"energy", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"path", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"While", "[", "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"SeedRandom", "[", "seedcount", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"seedcount", "++"}], ";"}], "\[IndentingNewLine]", 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "=", 
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{
                    RowBox[{"ExponentialDistribution", "[", 
                    RowBox[{"1", "/", "\[Lambda]"}], "]"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "16"}]}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Sow", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<beginningPos/Vos\>\"", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"#", ",", "7"}], "]"}], "]"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "x0", ",", "y0", ",", "z0", ",", "vx", ",", "vy", ",", 
                    "vz"}], "}"}]}]}], "}"}], "]"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<s\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"s", ",", "15"}], "]"}], "]"}]}], "}"}], "]"}], 
                   ";"}], "\[IndentingNewLine]", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "x1", ",", "y1", ",", "z1", ",", " ", "vx", ",", " ", "vy",
                     ",", " ", "vz", ",", " ", "energy", ",", "eError", ",", 
                    "pathval", ",", "sval"}], "}"}], "=", 
                  RowBox[{"GetNewPositionsEuler", "[", 
                   RowBox[{
                   "dt", ",", "s", ",", "V", ",", "x0", ",", "y0", ",", "z0", 
                    ",", "vx", ",", "vy", ",", "vz"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"eErrorList", ",", "eError"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Sow", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<endingPos/Vos\>\"", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"#", ",", "7"}], "]"}], "]"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "x1", ",", "y1", ",", "z1", ",", "vx", ",", "vy", ",", 
                    "vz"}], "}"}]}]}], "}"}], "]"}], "]"}], ";"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"InBounds", "[", 
                  RowBox[{"x1", ",", "y1", ",", "z1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"path", "+=", "pathval"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"paths", ",", "pathval"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"svals", "+=", "s"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"numCollisions", "++"}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"energy", ">=", "Ui"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"numElectrons", "++"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"stack", "[", 
                    RowBox[{"\"\<Push\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "x1", ",", "y1", ",", "z1", ",", "0", ",", "0", ",", 
                    "0"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"energy", "-=", "Ui"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"else", ":"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"SeedRandom", "[", "seedcount", "]"}], ";"}], 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"collisionE", "=", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{
                    RowBox[{"Ui", "*", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"UniformDistribution", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "10"}], ",", " ", 
                    RowBox[{"1", "/", "2"}]}], "}"}], "]"}], "]"}]}], ",", 
                    "16"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<collision energy\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"collisionE", ",", "15"}], "]"}], "]"}]}], "}"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"seedcount", "++"}], ";"}], "\[IndentingNewLine]",
                     "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"energy", "-=", "collisionE"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"energy", "<", "0"}], ",", 
                    RowBox[{"energy", "=", "0"}]}], "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "vx", ",", " ", "vy", ",", " ", "vz", ",", " ", "cost", 
                    ",", " ", "phi"}], "}"}], "=", 
                  RowBox[{"UpdateVelocity", "[", 
                   RowBox[{
                   "energy", ",", " ", "vx", ",", " ", "vy", ",", " ", "vz", 
                    ",", " ", "tbound"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"seedcount", "+=", "2"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cost", "==", "100"}], ",", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<cosTheta\>\"", ",", " ", "\"\<N/A\>\""}], 
                    "}"}], "]"}], ",", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<cosTheta\>\"", ",", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"cost", ",", "15"}], "]"}], "]"}]}], "}"}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"phi", "==", "100"}], ",", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<phi\>\"", ",", " ", "\"\<N/A\>\""}], "}"}], 
                    "]"}], ",", 
                    RowBox[{"Sow", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<phi\>\"", ",", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"phi", ",", "15"}], "]"}], "]"}]}], "}"}], 
                    "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"totalpaths", "+=", "path"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"collisions", ",", "numCollisions"}], "]"}], ";", 
           "\[IndentingNewLine]", "numElectrons"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "count", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"print", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<1000 * energy error error: \>\"", ",", 
          RowBox[{"1000", "*", 
           RowBox[{"RootMeanSquare", "[", "eErrorList", "]"}]}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<V/NC: \>\"", ",", 
          RowBox[{"V", "/", "Nc"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
        
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\[Lambda]: \>\"", ",", "\[Lambda]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Geometry: \>\"", ",", "ID"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Collisions: \>\"", ",", " ", 
          RowBox[{"Around", "[", 
           RowBox[{
            RowBox[{"Mean", "[", "collisions", "]"}], ",", 
            RowBox[{
             RowBox[{"StandardDeviation", "[", "collisions", "]"}], "/", 
             RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Mean path: \>\"", ",", "  ", 
          RowBox[{
           RowBox[{"totalpaths", "/", "count"}], "/", "\[Lambda]"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "result", "]"}], ",", 
       RowBox[{
        RowBox[{"StandardDeviation", "[", "result", "]"}], "/", 
        RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.8731394082147427`*^9, 3.873139500444089*^9}, {
   3.873678770946801*^9, 3.873678784088624*^9}, {3.873678818300029*^9, 
   3.873678820258333*^9}, {3.8736788575040894`*^9, 3.873678926870273*^9}, {
   3.873678980535861*^9, 3.8736790246953163`*^9}, {3.875289033726184*^9, 
   3.875289070021593*^9}, 3.875289110799571*^9, {3.875290444656995*^9, 
   3.875290445837748*^9}, {3.8752907601778603`*^9, 3.875290762319757*^9}, {
   3.875402827027252*^9, 3.87540283450773*^9}, {3.875402881210186*^9, 
   3.875402890085487*^9}, {3.875403058121072*^9, 3.875403060005454*^9}, {
   3.875403643180653*^9, 3.875403645282127*^9}, {3.8754747410647907`*^9, 
   3.875474753722747*^9}, {3.875544280722828*^9, 3.875544330070079*^9}, {
   3.8755443658328667`*^9, 3.87554439383281*^9}, {3.8755444267892036`*^9, 
   3.875544496796084*^9}, {3.87554881525111*^9, 3.87554894459127*^9}, {
   3.8755490372827463`*^9, 3.8755490395926857`*^9}, {3.875549157595601*^9, 
   3.87554916597969*^9}, {3.8755492642526693`*^9, 3.8755492885460587`*^9}, {
   3.875880293612503*^9, 3.8758803737307787`*^9}, {3.8758804308445683`*^9, 
   3.8758804619038877`*^9}, {3.875880526351293*^9, 3.875880550787784*^9}, {
   3.875880597995708*^9, 3.8758805982466087`*^9}, {3.8758825938444633`*^9, 
   3.875882595955978*^9}, {3.8761517698765697`*^9, 3.876151786573371*^9}, {
   3.876151952905068*^9, 3.876151953030756*^9}, {3.8761531717489223`*^9, 
   3.876153268319303*^9}, {3.876153310221377*^9, 3.876153319650785*^9}, {
   3.8761533627694817`*^9, 3.876153450059004*^9}, {3.8761535221809683`*^9, 
   3.8761535386754293`*^9}, {3.8761540062380047`*^9, 3.876154006400202*^9}, {
   3.8762357881314373`*^9, 3.876235788802731*^9}, {3.876235866619536*^9, 
   3.876235895182845*^9}, {3.8762359918938*^9, 3.876236006602828*^9}, {
   3.876236186054015*^9, 3.8762363265367613`*^9}, {3.876236457461349*^9, 
   3.876236510874509*^9}, {3.876236621187354*^9, 3.8762366252818747`*^9}, {
   3.876236665624917*^9, 3.876236716763219*^9}, {3.8762370928881607`*^9, 
   3.87623709356007*^9}, {3.876237350708847*^9, 3.876237421358656*^9}, {
   3.876237537854253*^9, 3.876237537999803*^9}, {3.8762375809474163`*^9, 
   3.876237581948337*^9}, {3.876238481727236*^9, 3.876238486014089*^9}, {
   3.8762385496361303`*^9, 3.876238553319785*^9}, {3.876238585312986*^9, 
   3.876238598155992*^9}, {3.8762387202668943`*^9, 3.876238722132348*^9}, {
   3.876238796243464*^9, 3.8762388073643513`*^9}, {3.876238922397039*^9, 
   3.876238948821404*^9}, {3.8762389915499783`*^9, 3.876239014079275*^9}, {
   3.876239137250712*^9, 3.8762391406902122`*^9}, {3.876239177537409*^9, 
   3.876239203629972*^9}, {3.876239358645792*^9, 3.8762393742778463`*^9}, {
   3.876239474710258*^9, 3.876239531129423*^9}, {3.876239642521287*^9, 
   3.876239662668069*^9}, {3.876239796877777*^9, 3.876239900807578*^9}, {
   3.876239947637401*^9, 3.876239950820877*^9}, {3.8762400993118477`*^9, 
   3.8762401392857723`*^9}, {3.876240175685362*^9, 3.876240192387382*^9}, {
   3.876240257368004*^9, 3.8762402622936707`*^9}, {3.8762403907206717`*^9, 
   3.876240400678506*^9}, {3.876240452784938*^9, 3.876240455477365*^9}, {
   3.876240492778605*^9, 3.876240492908985*^9}, {3.876240639537382*^9, 
   3.8762406540818453`*^9}, {3.876240971901102*^9, 3.876241036048703*^9}, {
   3.876241079716482*^9, 3.87624107997768*^9}, {3.876241115725664*^9, 
   3.876241120663123*^9}, {3.8762411899994392`*^9, 3.876241201822928*^9}, {
   3.876241282240306*^9, 3.876241342213092*^9}, {3.876241391261115*^9, 
   3.876241392588825*^9}, {3.876241440475432*^9, 3.876241466440147*^9}, {
   3.876241539682852*^9, 3.876241543474848*^9}, {3.876241584300064*^9, 
   3.876241599679338*^9}, {3.876241710258286*^9, 3.876241727426793*^9}, {
   3.876255141364562*^9, 3.8762551794820633`*^9}, {3.876255224237748*^9, 
   3.8762553155615892`*^9}, {3.8762555218599567`*^9, 
   3.8762555457028303`*^9}, {3.876255587191902*^9, 3.876255695756876*^9}, {
   3.8762557326177263`*^9, 3.876255744011922*^9}, {3.8762557879142723`*^9, 
   3.8762558311506433`*^9}, {3.8767420750593233`*^9, 3.876742075879704*^9}, {
   3.876742404873403*^9, 3.8767424521121197`*^9}, {3.87674249583372*^9, 
   3.876742524860914*^9}, {3.8767484297082357`*^9, 3.8767484344792852`*^9}, {
   3.877277104093535*^9, 3.8772771512706127`*^9}, {3.877277334617646*^9, 
   3.877277336184504*^9}, {3.877278767803294*^9, 3.8772788462140408`*^9}, 
   3.8780613157260017`*^9, {3.8780614492127533`*^9, 3.8780614710410957`*^9}, {
   3.878061622525882*^9, 3.878061626430091*^9}, {3.878061822460924*^9, 
   3.878061825205193*^9}, {3.878062457427878*^9, 3.878062525290492*^9}, {
   3.8780625853781643`*^9, 3.878062607178979*^9}, {3.878062685277741*^9, 
   3.87806271137869*^9}, {3.8780640752546062`*^9, 3.878064108227667*^9}, {
   3.878064168268655*^9, 3.878064175492305*^9}, {3.87806424183501*^9, 
   3.8780642918503647`*^9}, {3.878064333541524*^9, 3.878064421870348*^9}, {
   3.8780644841263103`*^9, 3.878064495478889*^9}, {3.878064551828635*^9, 
   3.878064585469967*^9}, {3.8780648487060003`*^9, 3.878064851220975*^9}, 
   3.87807466057722*^9, {3.878075910638184*^9, 3.878075917395595*^9}, {
   3.87814724964884*^9, 3.878147256252366*^9}, {3.878147538439106*^9, 
   3.878147549344283*^9}, {3.878213829890923*^9, 3.878213864991534*^9}, {
   3.878214185053048*^9, 3.878214214456418*^9}, {3.878214547420813*^9, 
   3.8782145510815763`*^9}, {3.878389659083405*^9, 3.878389668307065*^9}, {
   3.8783897014569893`*^9, 3.8783897037676277`*^9}, {3.878390164159314*^9, 
   3.878390178106654*^9}, {3.878390565174199*^9, 3.878390565297494*^9}, {
   3.878391973456788*^9, 3.878391991317871*^9}, {3.87839566942528*^9, 
   3.878395728329219*^9}, {3.878399737625856*^9, 3.878399749852271*^9}, {
   3.8783998122240553`*^9, 3.878399812498638*^9}, {3.878415339827828*^9, 
   3.878415339976296*^9}, {3.878522367533297*^9, 3.8785224142688637`*^9}, {
   3.878522446381362*^9, 3.878522496462015*^9}, {3.878522541183977*^9, 
   3.8785225991033*^9}, {3.8785227423533363`*^9, 3.878522769201089*^9}, {
   3.878522849523324*^9, 3.8785228520975437`*^9}, {3.878522986614998*^9, 
   3.878522999743657*^9}, {3.878523123060095*^9, 3.878523133007833*^9}, {
   3.878523566458456*^9, 3.878523582854063*^9}, {3.878524091192072*^9, 
   3.878524130198802*^9}, {3.878524179668353*^9, 3.878524210514447*^9}, {
   3.8785242551268187`*^9, 3.878524292727128*^9}, {3.878524339630805*^9, 
   3.878524387292948*^9}, 3.8785244318402452`*^9, {3.8785245033119383`*^9, 
   3.878524588375188*^9}, {3.878524634282691*^9, 3.87852464012177*^9}, {
   3.8785247357248774`*^9, 3.878524736036951*^9}, {3.878524766687459*^9, 
   3.878524786913754*^9}, {3.8785248590022182`*^9, 3.8785248627075453`*^9}, {
   3.878555684028418*^9, 3.878555734077859*^9}, {3.878556163833177*^9, 
   3.878556228396966*^9}, {3.878556312879849*^9, 3.878556339414068*^9}, {
   3.878558394305977*^9, 3.878558394789855*^9}, {3.8785584351413603`*^9, 
   3.878558436512291*^9}, {3.878560840450305*^9, 3.87856099326366*^9}, {
   3.878561066981909*^9, 3.87856108900578*^9}, {3.878562994602028*^9, 
   3.8785630015655317`*^9}, {3.8785637242649527`*^9, 3.878563726035795*^9}, {
   3.878563793424568*^9, 3.8785638280676603`*^9}, {3.8785758590375223`*^9, 
   3.878575923651733*^9}, {3.880391240186496*^9, 3.8803912416662292`*^9}, {
   3.880560158708096*^9, 3.880560168106738*^9}, {3.880560201282085*^9, 
   3.880560215589652*^9}, 3.8805622884284563`*^9, {3.880563205248825*^9, 
   3.880563207209228*^9}, {3.881367202213126*^9, 3.881367215554134*^9}, {
   3.883415448102838*^9, 3.883415483891582*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"ba8afca5-841d-49e3-89c8-42f261e3843d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lpc", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"r", ",", "z"}], "]"}], ",", "z", ",", "z"}], "]"}], " ", "+", 
    " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"r", ",", "z"}], "]"}], ",", "r", ",", "r"}], "]"}], "  ", "+", 
    RowBox[{
     RowBox[{"1", "/", "r"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"r", ",", "z"}], "]"}], ",", "r"}], "]"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TraditionalForm", "[", "lpc", "]"}]}], "Input",
 CellChangeTimes->{{3.883860893511262*^9, 3.883860894541398*^9}, {
  3.883860926992908*^9, 3.883860997800435*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"8db364ef-1f97-4107-b0a3-01c255f81a74"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "(", 
    RowBox[{"r", ",", "z"}], ")"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "(", 
     RowBox[{"r", ",", "z"}], ")"}], "r"], "+", 
   RowBox[{
    SuperscriptBox["\[Phi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "(", 
    RowBox[{"r", ",", "z"}], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8838609841468563`*^9, 3.883860998195681*^9}, 
   3.8838611435587883`*^9, 3.884549814823835*^9, 3.884550305108027*^9, 
   3.884550943315401*^9, 3.884554226226984*^9, 3.884554503942026*^9, 
   3.8851688722663193`*^9},
 CellLabel->
  "Out[57]//TraditionalForm=",ExpressionUUID->"78e670dc-8201-4c55-b66b-\
6c78300ebd60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"region", "=", 
  RowBox[{"RegionDifference", "[", 
   RowBox[{
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", 
        RowBox[{"h", "/", "2"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "a"}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.883861442262583*^9, 3.883861495201161*^9}, {
  3.883861528777154*^9, 3.883861576482314*^9}, {3.883861647963872*^9, 
  3.8838616485753717`*^9}, {3.8838616824527273`*^9, 3.88386168524571*^9}, {
  3.883861727669552*^9, 3.8838617299914093`*^9}, {3.883861796628168*^9, 
  3.883861820744285*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"d4847df5-bc08-422f-9a30-847351399552"],

Cell[BoxData[
 RowBox[{"BooleanRegion", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", "&&", 
     RowBox[{"!", "#2"}]}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.3`", ",", "7.3`"}], "}"}]}], "]"}], ",", 
     RowBox[{"Disk", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.883861495395466*^9, {3.8838615345723343`*^9, 3.883861576709857*^9}, 
   3.883861685560089*^9, 3.88386173030886*^9, {3.883861798526601*^9, 
   3.883861821022523*^9}, 3.8840191714579763`*^9, 3.8845498161481743`*^9, 
   3.884549887291934*^9, 3.884550307033997*^9, 3.884550942133176*^9, 
   3.88455422868858*^9, 3.8845545051796503`*^9, 3.88516887422789*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"cde83633-b384-48c6-8b4a-c7ca4b7a8a48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", "region", "]"}]], "Input",
 CellChangeTimes->{{3.884554230499802*^9, 3.884554232825923*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"5baf1044-f6ce-4d12-99c7-4dab675710d2"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwB8QQO+yFib1JiAgAAAKABAAADAAAAdaQXRrAXeKcae6odg7MlhbYnjL8u
S8Uch7kpVrwnfq0gir0sj8IxoOlCa9c8mM46m9E9ntpAW90sauY7lss4ZOA1
SeMak8g1ndQ/aOw5T7Ugeqkcd6YZpKYXp6kafKsef64hra8gfawfqqwdeagb
dqUYgK8io+9Fs7UlsLIXhLQmhrcoUrgjibsrgrIktrgniLoqgbEjc/FEubsp
cfBCkMMyjcAvjsEwkcQzwsQxxccclco3SMYZksc0v8EuvL4nlMk2bdY+mtA8
Wc0qy804ztA6TtIfYNUxl8w5nNM+0dM9yMo1i74t1NY/5ug72txA19k8Vdsm
St4bTd8eb+JAUOQh3d8sYeEyn9xBX9kw4OI1Ztg3oepDWucrYugzTOsd6etC
7O454+Uaou1EbO49buU/mc877/FF6ulDqagcpqUZpaakqKmnq6oerq0hrq+t
rKsfq6yqqKcbvbwsr64iuru5tLWzsbKwtLMmt7YouLcju7orsrEkt7i2urkq
sbAjtbQgvr0t0M88w8IywL8vwcAw8XRFxMMzxsUZx8Y0xsfFycg2wMG/vb68
ysk3zMs5z9DOzM3Lz8470tEf09I+1tU+zcwq0tPR1dQxycrIpaQY1dbU2dgw
3t0b29om3NtB394e3t/d4eLg5eQ/4eAy4uFA29za2NnX5OMh8fBE6+od6Ocz
5+jm6uvp7exE8O9C5+Yr7u097e7s5OXj2Nc38PHvSal6SKV2R6R1SHYLRncR
pkYXp0obS3kRRqZ3SngQpUgZpEcYSqd4R3UMTXsNSXoKqUkaqk0eTap7Tqt8
S6h5TnwQq04fqEscTH0WrEwdTKx9rVAhUK1+UX8KrlEiUa5/T4AJr08gT6+A
UkYRsFIjUrBGU4EBsVMkU7GBdYIMsnUXdbKCVYMIs1UmVbODfoQTtH4gfrSE
vVwtXL2KVLVPV4UOtlcoV7aFgYYBt4EjgbeGVlIRuFYnVrhSWYcEVE8JWbmH
WogVulorWrqIWIkPu1gpWLuJW1YRvFssW7xWXIoNtVQluVkqhYsOZMqVhb6L
XowFv14vXr+MX40SwF8wX8CNXY4GwV0uXcGOYY8TwmEyYcKPYpAUw2IzYsOQ
YJEVxGAxYMSRd0sRxXcZd8VLY0gLas6YvoUnepIKx3oceseSZZMHyGU2ZciT
ZpQGyWY3ZsmUZJUUymQ1xmM0aJYDy2g5aMuWiJcVzIgqiMyXZ1kEzWc4Z81Z
apgPzmo7Y8ZIUH4Ta5kUa8+ZfZsWaZoS0Gk60X0ffdGbbdJO02w9bU4Q0m0+
adCa4JAybJwV15U31Zw+1I8xj9SdnNVgbm0QlWsUj50T1m4/btZtbNOcnGAV
lddred1bmtlfjthmml8ShJ4T2oQm23BBb58HhNqecFUI2Zo82I4wcNtVjmYG
fEoQeVsR3Xkb3nwefN5Kit9Nb9yfik0N34os3G9AkGQUkOBkz2s84Z5AnuFh
k28H4pM1k+Jvf0kK438hf+NJnVAT5J0/neRQeG4Q5XgaeOVuiWoP5okrieZq
kVoV55EzkedamWIU6Jk7mehinmETcqACcumgcUwWe6EN6nsd63FCcetMc+xo
7Zs9c2gD7HNEe+qhm6IWm+2i6XJD7pc5l+5soKMC76BCw8TCoO+jdHMDl2wV
8KJEovBxonEWdPFzqb92qw==
         "]]]}, {}, {}, {}, {}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
      LineBox[{71, 12, 130, 36, 83, 1, 134, 40, 87, 14, 139, 45, 92, 13, 161, 
       67, 114, 2, 163, 69, 116, 3, 150, 56, 103, 4, 135, 41, 88, 15, 152, 58,
        105, 18, 141, 47, 94, 5, 140, 46, 93, 6, 148, 54, 101, 7, 159, 65, 
       112, 8, 131, 37, 84, 9, 128, 34, 81, 10, 146, 52, 99, 11, 118, 24, 
       71}]}}], {}},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotRange->{{0., 7.3}, {0., 7.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.884554233377383*^9},
 CellLabel->
  "Out[554]=",ExpressionUUID->"af109ffa-7180-4170-a280-90aa0bce75f5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "NDSolve`FEM`"}]], "Input",
 CellChangeTimes->{{3.884549873761443*^9, 3.884549873763074*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"de2876e0-1d26-43bf-85db-c029f30bfe99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mesh", " ", "=", " ", 
  RowBox[{"ToElementMesh", "[", 
   RowBox[{"region", ",", 
    RowBox[{"MaxCellMeasure", "->", "0.001"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8838618991478643`*^9, 3.8838619226308928`*^9}, {
   3.88386197222754*^9, 3.883861988960561*^9}, 3.883862021848323*^9, 
   3.884019123026091*^9, {3.884021663816846*^9, 3.884021685555025*^9}, {
   3.884022743904696*^9, 3.88402274657036*^9}, 3.88454985458799*^9, {
   3.884549894350278*^9, 3.8845499194123087`*^9}, {3.8845503135120277`*^9, 
   3.884550314916397*^9}, {3.884550391328084*^9, 3.8845503914218397`*^9}, {
   3.884554509209036*^9, 3.884554520372137*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"563b1d79-e69c-4a53-9534-1d2a57559b5d"],

Cell[BoxData[
 TagBox[
  RowBox[{"ElementMesh", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"TriangleElement", "[", 
      RowBox[{
       StyleBox["\<\"<\"\>",
        ShowStringCharacters->False], "\[InvisibleSpace]", "79083", 
       "\[InvisibleSpace]", 
       StyleBox["\<\">\"\>",
        ShowStringCharacters->False]}], "]"}], "}"}]}], "]"}],
  False,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.8838619061575937`*^9, 3.883861922901724*^9}, {
   3.883861960116562*^9, 3.883862022217531*^9}, {3.8840191558473263`*^9, 
   3.884019173943132*^9}, {3.884021671039708*^9, 3.8840216879698887`*^9}, 
   3.88402274699934*^9, {3.884549854955332*^9, 3.884549912743456*^9}, 
   3.884549945839843*^9, 3.8845503200782146`*^9, 3.884550398396296*^9, {
   3.884550944992095*^9, 3.884550954663865*^9}, {3.884554511091861*^9, 
   3.884554520858136*^9}, {3.885168875873374*^9, 3.885168880724395*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"f5460ce6-9ced-4344-a8a2-4391d239df10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"z", ",", "r"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"solc", " ", "=", " ", 
  RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lpc", "==", 
       RowBox[{
        RowBox[{"NeumannValue", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"r", "==", "0"}], "&&", 
           RowBox[{"a", "<", "z", "<", "b"}]}]}], "]"}], " ", "+", " ", 
        RowBox[{"NeumannValue", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"z", "==", "0"}], "&&", 
           RowBox[{"a", "<", "r", "<", "b"}]}]}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DirichletCondition", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"r", ",", "z"}], "]"}], "==", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "^", "2"}], "+", 
          RowBox[{"z", "^", "2"}]}], "==", 
         RowBox[{"a", "^", "2"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"r", ",", 
         RowBox[{"h", "/", "2"}]}], "]"}], "==", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Phi]", "[", 
        RowBox[{"b", ",", "z"}], "]"}], "==", "0"}]}], "}"}], ",", "\[Phi]", 
    ",", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "z"}], "}"}], "\[Element]", "mesh"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8838620479108067`*^9, 3.883862048232512*^9}, {
  3.884019224482003*^9, 3.884019235909453*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"5f515579-82b0-4e65-b16e-d7329769c848"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}]}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                   "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}]}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Unstructured\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], 
         ButtonBox[
          DynamicBox[
           ToBoxes[
            If[
             
             Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
              "Local"], 
             Style["This object cannot be used as input.", "SummaryEmbed"], 
             BoxForm`EmbedSummaryLabel[InterpolatingFunction, 7647936, 
              Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
          ButtonFunction :> 
          BoxForm`EmbedSummaryInterpretation[
           "Choose", InterpolatingFunction, 7647936, 
            8390855663675063270351978557272313260728180535503446753856, 
            EvaluationBox[], 
            Dynamic[Typeset`embedState$$], StandardForm, 
            ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
          "SummaryEmbedButton", ImageSize -> Inherited, 
          BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
            
            And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
             "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
          Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
        "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "InterpolatingFunction[{{0., 7.3}, {0., 7.3}}, <>]"& )],
  False,
  BoxID -> 8390855663675063270351978557272313260728180535503446753856,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8840192410369797`*^9, 3.884021817222521*^9, 
  3.884022412924776*^9, 3.884022749115918*^9, 3.8845503827848682`*^9, 
  3.8845504702138643`*^9, 3.884551021721478*^9, 3.884554528253083*^9, 
  3.885168882858974*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"d58c8391-ab8b-4447-994c-a8227b0fd97d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solc", "[", "\"\<ElementMesh\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8845510536800737`*^9, 3.884551093182432*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"92d24c32-f490-4c76-914e-7cd33d7c948e"],

Cell[BoxData[
 TagBox[
  RowBox[{"ElementMesh", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "7.300000000000103`"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"TriangleElement", "[", 
      RowBox[{
       StyleBox["\<\"<\"\>",
        ShowStringCharacters->False], "\[InvisibleSpace]", "1979413", 
       "\[InvisibleSpace]", 
       StyleBox["\<\">\"\>",
        ShowStringCharacters->False]}], "]"}], "}"}]}], "]"}],
  False,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.884551055194627*^9, 3.8845510944012957`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"75b9a660-c607-4aca-b096-2b0d8bf42e7b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GetFromSolc", "[", 
   RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"z", "^", "2"}]}], "]"}], "<=", "a"}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"solc", "[", 
     RowBox[{"x", ",", "z"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EstimateEField", "[", 
   RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"step", ",", " ", "Er", ",", "Ez"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"step", " ", "=", " ", "0.0005"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Er", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"GetFromSolc", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"x", "+", 
              RowBox[{"step", "/", "2"}]}], "]"}], ",", 
            RowBox[{"Abs", "[", "z", "]"}]}], "]"}], "-", 
          RowBox[{"GetFromSolc", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"x", "-", 
              RowBox[{"step", "/", "2"}]}], "]"}], ",", 
            RowBox[{"Abs", "[", "z", "]"}]}], "]"}]}], ")"}]}], "/", 
       "step"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ez", " ", "=", " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"GetFromSolc", "[", 
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"z", "+", 
              RowBox[{"step", "/", "2"}]}], "]"}]}], "]"}], "-", 
          RowBox[{"GetFromSolc", "[", 
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"z", "-", 
              RowBox[{"step", "/", "2"}]}], "]"}]}], "]"}]}], ")"}]}], "/", 
       "step"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Er", ",", "Ez"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.884009337815398*^9, 3.88400944978755*^9}, {
   3.884010408998466*^9, 3.884010416919376*^9}, {3.884010449106139*^9, 
   3.8840104783344517`*^9}, {3.884010986739546*^9, 3.884011042687022*^9}, {
   3.884011075888844*^9, 3.88401111902705*^9}, {3.884011304931314*^9, 
   3.8840113458464413`*^9}, {3.8840118443823*^9, 3.88401187587055*^9}, {
   3.884011910139134*^9, 3.884011932187451*^9}, {3.8840120987934017`*^9, 
   3.8840121663497963`*^9}, {3.884012286803143*^9, 3.884012312124062*^9}, {
   3.884012544601659*^9, 3.8840125616979923`*^9}, {3.8840126955863132`*^9, 
   3.8840127152126207`*^9}, {3.884012788799945*^9, 3.8840128099256477`*^9}, 
   3.8840128855383463`*^9, {3.884012937900714*^9, 3.88401294242208*^9}, {
   3.884013182133585*^9, 3.884013289422592*^9}, {3.884013329545792*^9, 
   3.8840135882906227`*^9}, 3.884013622843515*^9, {3.884013662399337*^9, 
   3.884013675546137*^9}, 3.884013823481488*^9, 3.8840138606553907`*^9, {
   3.884013917724461*^9, 3.8840139364644957`*^9}, {3.8840140009396*^9, 
   3.884014007314004*^9}, {3.88401419818604*^9, 3.88401420590753*^9}, 
   3.884014259105352*^9, {3.884014314240506*^9, 3.884014382832501*^9}, {
   3.884014491022781*^9, 3.884014492205246*^9}, 3.884014532454583*^9, {
   3.884014686455492*^9, 3.8840147164179983`*^9}, {3.884014768058837*^9, 
   3.884014933745159*^9}, {3.884014982766918*^9, 3.884015059943885*^9}, {
   3.884015104864397*^9, 3.884015143479348*^9}, 3.884015209102644*^9, {
   3.884015517300207*^9, 3.884015520819318*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"27816a9e-1c85-4318-8e1d-a8a70ad4432b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"efieldvecs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "+", "gs"}], ")"}], " ", 
          RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "+", "gs"}], ")"}], " ", 
          RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", "gs"}], ")"}], " ", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", "gs"}], ")"}], " ", 
           RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"GetEField", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "+", "gs"}], ")"}], " ", 
               RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "+", "gs"}], ")"}], " ", 
               RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"-", 
           RowBox[{
            RowBox[{"GetEField", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "+", "gs"}], ")"}], " ", 
               RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", "+", "gs"}], ")"}], " ", 
               RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi", ",", " ", 
       RowBox[{"Pi", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.001", "]"}], ",", 
       RowBox[{"Arrowheads", "[", "0.02", "]"}], ",", 
       RowBox[{"Arrow", "[", "efieldvecs", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.1", "]"}], ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "a"}], "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "b"}], ",", 
           RowBox[{
            RowBox[{"-", "h"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", 
           RowBox[{"h", "/", "2"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.884625475752915*^9, 3.884625489146511*^9}},
 CellLabel->
  "In[1162]:=",ExpressionUUID->"143b0e1e-48fb-4712-a5dc-f4f4ae440cbe"],

Cell[BoxData[
 GraphicsBox[{
   {Thickness[0.001], Arrowheads[0.02], ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAQBWImKBZZ5/6wSoThAAMUsCiWLbtQ+XX/7/cf3xvrxezX
Pa25gGnav/2v2buP2j94vP9orHz2qZYv+x+sUPJ8NvHWfk4j3iOzWH7t9+Gv
TjF7/ml/VSQL//eij/vfWv/QvBn7Ei4OU2dav6CmJ/XlfqUept69FR/h5sLs
sYhIqeVZcWt/z9VC2SNTv+yHuQvdnWau7kU/+7/C9Nuj6beH6Yfab49mvz3M
fqi4PZr77WHuh5prj+Z/e5j/oe5yQAs/e7Twg+m3R9Nvj2a/PZr99mjut0dz
vz2a/+3R/G+PFn4OaOFnjxb+9mjhb48Wf/Zo8WePFv/2aPFvj5Z+7NHSjz2h
9AcA0/E54Q==
     "]]}, 
   {Opacity[0.1], DiskBox[{0, 0}, 2], RectangleBox[{-7.3, -7.3}, {7.3, 7.3}]}},
  ImageSize->{441.2734375, Automatic}]], "Output",
 CellChangeTimes->{3.8845546942109013`*^9, 3.884623177421981*^9, 
  3.884625490005761*^9},
 CellLabel->
  "Out[1162]=",ExpressionUUID->"275dcbc8-2441-4435-97ad-a6223e7ce646"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Norm", "[", 
    RowBox[{"EstimateEField", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "+", "d"}], ")"}], " ", 
       RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "+", "d"}], ")"}], " ", 
       RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta", ",", 
     RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0.55", ",", "0.65"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Theta\>\"", ",", "\"\<E Field magnitude\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.88401577202285*^9, 3.884015772192238*^9}, {
  3.884015866330525*^9, 3.884015910926824*^9}, {3.884016011384182*^9, 
  3.8840160309539337`*^9}, {3.884019732699514*^9, 3.8840197445550003`*^9}, {
  3.884019780386137*^9, 3.8840197892170467`*^9}, {3.8840198496600533`*^9, 
  3.884019860826992*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"37c2c07e-d347-4659-b121-dfe7287bfc52"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Zhv7jpeSZ6wqVuQRK8nTm2xaKiGvl3aX8SBOVInNEc8pIRPE/1EYHLAfgNih
61hCujrP/xlD92Nv9OuWq0wJKl89bNj/1mXhXBK/VEy+25ITOopY4T437/ec
YvJ0otVdGjr+/cPs+5OOxaSs8++QA4hZvC/Vcp4oJv3+fmfVQWz7cob/5HIR
+bLf3/4t4o6owIemuUUk4+3xFezTgw9ibd5OReRxsyN/9BHHp9WKpZwoIn3C
/Q6oIWYuuP2sdbmQlPXnrsJ+vrsVzH9XcwvJnTattVcQNze8l+FzLiQtdBOP
2COW6VIKOidbSFpOmi3EIn4z0Dt8d+UbeV71sv5DxIxTHqdf530jRxKm2LDv
7vbKnsh8529k0gxxoB89XwMjOdsj+43M+fS5lNkR1T/7ciLYlkjy8/IJN+wn
PC41d97YkSTVU/36WBDTq0qsJy0VkEy04Fl+7I80skxeciwgr5kfTD6POPz+
R+Mzy/mk0898IVfEZt79rC+d8skg2cOMlxFLRO8r6V7OI8/5/QlQwH7GNMP7
os55pPamlRoZxBUVYfyOK7lk4C7fHHnsU+xqaS1zziUZlB7r6CA2nGJ9tmM1
hwRqYbwTYiEmdRkjlxwyuuiGOBfi2Z0+w4mrX8lizoBrQti3KFYesejylTQP
a6o7h9hXkU5NaS2bXC1fsndArKMH64Gu2aSMouXdKMT7rJySf69lkQN3FDdh
X+WoZ5axyMMs8j/3t5tCEGeHTLM6rGeSWSpPrD9iv2PS4ZLSh5nkycwq2e+I
1Ytu3WelZJKQ/vzADGLu1nf8V90ySNB1EfmJuH+4p/UTJYPUNX91aBD7JCl7
ni24pZP565diJxA7s+vLKFLTSUuX82bYz3lGKGQ4wD2NTJSKScTnY4WmiF/U
NDKeWeH+ZifUH7m4TU3YI5UMmWf8JoH4g7nq+gNaKsmUUftTH7Gty9PkEo8U
MmjX3ZNSiInAEuPtdCkk70CO+B7Em95Rdhh6JpMT91ozOBG35MqWfKRLJs2s
m6p4sX/VweTX1OYvJF/ybK84Yl9HFckXrJ9J88DytYuIV5wkvUW5kkgZu21c
jxDfcuHtruJNJFX5H4oVIe5wZTxmvv8Tuanp4xkWZ/S+u437MAh+JDM27zAw
R5zj3vYn9tAHEpzStmYgFvIslCIk35PrB05JmTjj8b+Pz7uOvyM5z1weYUDM
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
2/2eCY/HTltz/Pj1bg1KU6eV8PZjud/Var+sQZ6Uz89TiO3p3Wvzs9bA4tbZ
0ht4vPL8MbUkcg22mEzQhSFeCR6uiShfg9Vuzu14fP1k95vzvj/WgC94/6QH
fn8EL9U4ta5BYZaRFvbxFtlsOn/r9xrE5zfK4PJCn/etWm9gDa6fHirD49lK
DHaq58bX4JRrkBQez36qJlx9fH4NUsWmU7E/uep1t4rg+hrY6q1J4/8BW/68
+s7FtA47rl9TwdfTEFJR2bB1HW6+eLDXCNc39yjf5znWQVlziAPnd1NexrmB
Xetwq7ZLGNcXHIy3qlr410FAUN8Ij8/qqu85V3ZoHewP6qTj9X3CQporM46t
o3ZNJ5smbn/+8T779uQ6GKjmeuP1Y3YJE5UvldZh+63LSvj9MbKdVX6ktg5j
PpsKsa82Nv9jxb1L60CLv3qjBnEvo5HyNcN1OLslQv4z4oMa7BWaZuvw2uBV
CPYBW4RWnVGwXIeyMyJi+P9F4t+H5eJ26/Ckyn4D5jHho2f2uq6D6pDjXry/
2P2hsm1e63CujNspCY83FkQrUfzWweeFAHsb4nQm7bLxV+h+K/XHt+H/TRrM
Sr8j1yE3X2cj9rdKh5GltW/X4WLP49PYh9t76Ius+ed1MNWtyR7B443FUWnU
rHUotpU0pqL9T+r6CYWT67BV1V8Or284NOISI1mxDo/3nfmMfbnB7ne4auvW
gd4oazMd4lMcBv432teh8/pGGv6fNPFRlZH6dx0s6U/54f9FESDrEja0Dpri
Z1Pw/zjlJuGZI9PrQGfAoYL/Z82a77xVs4zuJz00Bf8fqndlsD5CoxC/W4KU
JBEfPOsi4sZIIZx9ezZq4/+pO2YHqpkpRE7DPIcq4qau23H/baUQGctKx/D6
j0Lvew3NdlCISTvNg1uxD9ZGnzuNk0LsPa40hH2+LbJNzes7KURhoMhDdi3c
H1INUN1DIVKpY33i+P9ZfbFqKB+FSN7vIIj94+3hJzb0C1CI43s2WZug7WJm
acUSohTiYEiDCWCfrpjww4fiFEKAn6Mf/y/rXIqVqT5KIapCl5bwepsSpdxz
XDIUIv6rZwz21T71D0y5fpJC2L0Pasf58/sy851UBQrx1Xg49in+v8fnIbCu
RCG0bTePmSH2HVvsUVGhEDuWy3TOYN9rtnV0iDqF+Bf8Qwr/P5X2/KfXd5FC
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
IUiQzyiT9L4M+XbMSnFDdcpp1270/wGh59qx
       "]]},
     Annotation[#, "Charting`Private`Tag$10649#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Theta\"", TraditionalForm], 
    FormBox["\"E Field magnitude\"", TraditionalForm]},
  AxesOrigin->{0, 0.5500000000000013},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{567.734375, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.1415925253615216`, 3.1415925253615216`}, {0.55, 0.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.884015894395522*^9, 3.8840159112709208`*^9}, {
   3.884016018635799*^9, 3.884016031288999*^9}, 3.8840192625768833`*^9, {
   3.88401973484454*^9, 3.884019754916932*^9}, 3.884019789666018*^9, {
   3.884019854169322*^9, 3.8840198612163677`*^9}, {3.8845513643156776`*^9, 
   3.88455137706343*^9}, {3.884551407429796*^9, 3.8845514094896803`*^9}, 
   3.8845530383763027`*^9, 3.884554552716729*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"6b7a7988-7750-4d49-811a-29289f2e3436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"HIGHER", " ", "DENSITY", " ", "MESH", " ", 
    RowBox[{"(", 
     RowBox[{"540", "K"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{"GetEField", "[", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "d"}], ")"}], " ", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "d"}], ")"}], " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"0.55", ",", ".65"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.88402211419014*^9, 3.884022146799448*^9}, {
  3.8840221844185762`*^9, 3.884022186676876*^9}, {3.884022624589151*^9, 
  3.884022624714245*^9}},ExpressionUUID->"fbea887a-defe-4b16-818d-\
d23527059610"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vOrUKbcTUL/FQxv+8wcJ+PwVbbWToO+7vI2pbnIELP5tqmgv8Dff3aYduI+A
X+j6WRyB/DS5Y7tidhPw5pbCzH2gV6TcSZ+UXQR8o/r93tPgpw5LnnXZ2wlY
iOuDBAn2lw75mfFjCwFX9uFf2sCPZ0aQQctGAs48udIbBfz8+K0+MLAB/G6/
6voQ7C9AJwcsChJwh+brTeru0M+7kSjnGqh/dezGt6D/R1OPnA08BHzUPCF9
Lfhp+faBk5JcBLz0uJryFrDOu4lRJTbo7+nBOm7wZ0zDh2B9GgGn+1QF/wXc
veKw1YJEwMnaW5t9IF9bQwPfv4sr6GFRFaMUzi9C0vdM0tQKGhfcNt0J/fp4
5tDQ5qEV5JRttfsSnHf7tb9sOtK1gpqSu8eWgJ+quN0mtm0rKI7e+fs58E9I
dIpqq1tB7rt2JchB/tJv3tUZla8gz2qJMP7TzM9zB3jKC1dQ7BPGUQTzI/zL
9mOqOStoz0ajqy7QDxifD8v+tILyNzmeqwO/jZYkVex+vYJ23jT8IH0D+rmS
wZ7yfAW11c5STnsylA0aNmqLPlpBp2T4Tgv/f/dt88Do8BWk1VjCdw/mS2rn
k2KuwBUk0H2tJh7ybx9ooQR4r6Awc4nZjcAH94Sg6pLrCqrPSPR1gniH5o1v
uVxaQREbCq1DwX+XiVFowGYFzbx+cCwX5uczet2S5ZkVxJFz+nwF8/PWVTyK
zUYr6OcjllI34IMgYOB+THcFhccdYCPB/tLCoVnfVVdQqkAtLwY/Wmwpn1ZW
WEGzIrtG/bygfgm2fZl7VtCAzPIl5usDvFfzquSOFXT5fPOVjbD/qHzAx6SN
K0i9tdbBEuoRVfk2sl5wBXWYyZr3At8GWiTJh9wraFTtgdl1yNfH4JAjO30F
sSs4tJr4QP3GXq99V5bRtpKLbmsh//azub1z08uoe29erTjwwW07v/XK8DJ6
apvvKA35Hrooa9PbtYw+FUVeVYL+vuzi+sK8bRnZVVc6pEP+zzzS/zbULaPC
RgXfRsi/yndcRK98GbE9CJuS8IP6g6TPFhUuo0NXAgwHIH/piEtxijnL6FdC
5rQ3+NMi5m1z2qdl5HUsQhBB/uFP+9fufL2MNM+on6KAvviluHHC82UUKfy3
tRfqGX1nGyn4aBl5ZNzTd70F9Wck1oaHQz61J4njzO9v5HaspgdCvgl/9tyF
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
185Av0z+Mri+OXEelQ90nGW+3v3cIE00iptHP6onnZvBX9fruIP8Hs6jNwfo
6zbA+SdfM8qTEQL7nQkvNwa+FyurHnf5zaM2L8Ef98F/+RWpYms855Ett9NS
LmCfsvB36tf+YZXSy/vdLs4jbnz/4he4H1BLDFCyzTzSL3r4ehr68fs3ac1f
Z+YRi5/dThk4P4IKuKvpJ+fR3QrB8YcwX3Tx6Ck5vXlUrzEXWQv8c+VXdVxQ
n0fdt1QudYM+VTmpDrFKwL9Q4fiWm9B/X8Inf+yfR1eII59sYD4aZV72XJCc
R6MXdBmz4Oc1GQY0iW3/8K9P0mFmIvPIUYt6txz0jE3lXntPYB5lF+vLcIE+
Zu9Hn+WtmkfsMaE8BqCPyNuq7cMs82i7xDcFZcAdKamfhAnz6Nh/ODE5XEF/
dg4N+wm/lQe9bZMuf/MenUOT3aY7vKD/xV8YHE3tnUP8a8dqvkI/9D+Tbmhv
n0P1qqap52DevY3nNl/d9A9fihvtOVw9h6rJL+sk4Xnp2KrLzqVzyI/hWHMV
9A7UdSXN4TmUavh4PQH6qX153UPvrDl0bV+3XChg2Y9ft9BS/+Ewq/OZIclz
qKSHcTgH/NHNz6nF+3QOjf+Hlb5/an4UNYe0oq9tYgEc5W7iKBo6h4T/w8MS
y0sv/eH5qP/D6n9ehO3ynEPnHoz8vhLKUI6P0NqY7jKH7v2Hp1VHPsk7ziF5
fz73hXsM5aPTD9W+Wv3Dia/kGzROw34dr4y2wfOLpu3nfxrOoZb8A7KfI0A/
zoA5I+05NHB527YjkcAP2hnccngOUfWWnOIAU5yr11vK/cNmYm7ve6Xn0IHx
2vePYZ6kN6w/5CQO8fje3uWA+tnvFlRPicwhWk/HGmmIZ6lgZ3VTYA7ls1kd
RBAve4hzirRqDv3czXdOD/bjeZYWcJf2b397w1NruZdn/4cLKCspUVOzaJSo
F3If4gllJipsGJpFaqffJJAhnvMF7YoXnbP/q7d03ejZHa3/sOjPyNHU2lmU
+B9f130UfA+UzaLr/+GqPX958wtm0dH/sHhXQJJa9iyi/6eHT7TEgbKPs2jv
f/iXVs33YymziK33//SUXnQz/fVsFv3+T9877zcMno2Z/Z8fflsUenaF/cP7
eS+scrzzD4cWcT0f95pFrzfxf9WD+N1u6XtuuM6iZvbSuwXgT6Udpt9WLs7+
z69RrSsnAmz+4eHQpB6OM7NoJ798jTfgI4d1bjwwmkUT2hvXTkE/xE2Msgnp
ziKzufwwe+iXyaSouGeqs8jgv37SNVGU3KYwi8T+//5i60Dv9sD+AsR9b+D5
xdw7x2R2zKJJ3bJbm+D8NXLaxcjeOPu//n67sdblsOA/TK67TvvO/Q+bBgjH
6NGBLwXxL+bQ/59kv22vX5lBS3y/nZrgPmP5ZNXRjuEZdP4sq+c8zKNs/Yzf
dt0zyM1di+84zCse0unLI20zqFDtLXclzDP7dALJtX7mf/OvwPblg8Xyf1hI
UHfL7W//sHPZ2GfW3BkktEODxxBeL/3wjNYMT5tBh588GaiC+8tG6YPNa97M
oNUMqr0GYF3DvijJFzNoXvrhNBnOx+sukcfVH8/8b76/iDrMffbBP/wza6j8
WvAM6nvlYf0F/DbX/OjuvdsziL04J7IH5ofY0hH1JI8ZNEj4SE2G+aIvMk7K
uzqDeBua6DNw3rgfjkd1DjOouUJ/VRbcL5OstG8OWs2gkjch127AfbnKf1qW
YjaD1v93vi0mJ0ytM5pB6v/hbT/0Pu3VnUEqZTyOIbDecHD+ko7aDPo+R33K
D/PZiyt5p5XiDFrW4U97CvM8Rfp4r7vMzP/O3zrDlcT7Ev/wisubc6/FZtCa
RRflw/B6dUe0sXDB+hm028O3hhX+fuILuaWJbwaJuyQ11sD579PyIXqMA/jz
DB7xBL3eLJ02YqXOoCf5p2t5me+Pi9BXb1yaRpkne+yC4H5BUkmvkJ2ahvNW
0ccYzsNd1hZBBkPwd04/3i3M7/sHcGjYdU0jO//r7xugP/xeZZF92qZRTW5D
qQv4+8MPaxxdP42+VzopdsL53TzI7fmhYhrp3hd2ywD/UlflyZUUTSNfysb9
d+B8kd59Yfp33jTaLBxKmAN8+jh/2nTGNPqpykquAH8GXPvqxPV+Gt2NMLUQ
Bvwx+qLE1pcQf6xOdxLuL61fBPsOxk+j6WtZxT/gfrNn+YrlxdBpRCNrlDDv
62dEhUX8A6YRseF0wn7wW6DKj5Y4r2k0lGprNcT8PrC1a0y66zSqqhq/kgT3
zT8Bm06UX5r+332ULeXn6k7baeQv6bNLB+rZX+b+c+HsNDK7LNpLBHxuaGsw
r/E02q5oV90BeoesqtXYqT+N0j6Env4G/Zi525uiqjGNnD4+uHQXcMfxnV9N
ladR6n25vReh3zhdGz2dD0wjwUL62euAZWNuywdJTaMXnqzkI1CPVbbUzPNt
02hPhOZGXrjfhba2pH0RmUa1Uyo1Lk4M5S/Ldy5XC0wj2aHlSU3Qr1NUZlff
qmn0UENJvB/qW6Xa3kegT6POnFO1DaCfvE3Iy7WEafTe4uWYJOhle0fWSnp2
Cr2yiG5LARyR0imiOTqFxPR8Pj+C+nLLwlvNe6fQiUv1pr8B9w4pPnJrn0Jd
vCxXC0EvXu6+E2G/ptC99Xd3vwY/Ku2J5EmumkKpFTqEWNDngtHhyvzvU+hW
0i2rO+DHh65DwQ14Cj2OUEzvgnpQzCPN4awplBatWvQL7kf92UeotI9TSFLA
OZL5ftebiMwfV19NoQ1TyVEh8PrM0W57+N+nU6hcKsHAAu5/EsqPT+hHT6Hh
rhfx3ICH+DnX5YVOoWXuPc7h4Lf3g17tOwKmENkj/yIP+OdS4WhSjOcUsjZ2
LxAAvqViLR1o16bQSrrX8nO4X41erpN2cZxCbJe6T3JCv3zUUJ/+azWF9tf0
nn0C+TkLZ+Xon55CxsHP7zRA/+yZ2n4rz3AKeTp63roMfE+UPVbfqQ35hZp3
NwJf6QmcHI8OT6Ebz86YiME8cbnhXU2Tm0JO95K2T0F++wzGolykp9BM98Uj
FuCf6a1WZh3bplBRY6XBH5i/mUt1Gw1EptCTJ6d1l68y76fqPXlrppAD9cmH
D+Bn2TdZb3dyTaEAzXm42sB8u7XD+REV8JYm22OAs03iDrAsTaKF0MSeFOY8
k+JacpmcRHl/zu+NhfNHgeZT0DEwibz2y98/A/5cbB27Y8CYRBEyJYRwwHlp
VkfzmyfRkxcHWM6Anl5B9TwSNZPoZqnAZwnQU+mcxq9HpZPo9fvKQ/zgx5UD
X56wfJ1EJxRcxJtsmK93dlpdy5pEKeVhR19awjzqihNnfJiE+02XljTwcziX
a9ggeRIdUnqS+AD4ID3wScuPn0TWP5PSboJehRfGr0tETaK3Ykci7WC++R2y
Voq9N4lKLhilP2G+fy/QQKb7T6Lu7YGyIXA/pw5rlF67OYn+xF3M/Qz1F3/7
Esq4OokaN0dMpEM/BzzeaXTMYRJte5nerAR8azg/EUSWk8hFe8dzIsxjutaq
PxKmk2hGiOHJBX4oFbmVGHtsEo2rb7acvAb38+nxC3StSRQ20ua/BP7QrrCW
cj00iY5muVYj4IM9sWGScWASLS/caeoDv5S7a2Yfk5pEBZSpfYLQfyHHsr3R
VqjvQYbTOzgPjopLHNklPIlsCQ4fv/oyX689YXvMP4kE490DkqC/KutXVdE5
J1FbnWzDCNQf/vZWpCtlEk1zy2jYQD4GtydMOxcm0LzNxVYEflxtaiNqODGB
So6H8ItCv9RIN3ah/gnEc/i2xn3g+z6L1ptdHRPo1ZN7n5eB3+O/sy8/bppA
IT4tpmvAb3wZEvtZqyeQ5vnMyXCYn/XB8Quu3ydQ2Xit9Wo4f6Msub92ogkk
wG77ZRNgYznfAMPMCaSzbk/ubdB3LfekDn4/gfZz98wuA79N3TarJV9OIMq8
3PcLEC82r7Hh8ZMJxJ71Yu0vqGedQ845t5AJNLkqWnM95B/7/bs6p98Eqhb4
M/cU5pnQ1oadLzwmkK9cuuo90C/2NoNb7uoE2ifya08B8CX0d3Tqp/0ECv3K
ZvgF/BmrtNxsbTmBzD79uPcZ9BGMY8fzpyaQvIN5gTX4JWZubVL4sQkU6zP9
whX0WWu8NWir1gSSChhY9oT+jUnf65R7aALl1Mv7NIMfBXgOGxnKTiCHju1Z
i/D6KspJT65XagL9ZqMbbof5vKbitLDXtgnE6VslWwj5R+24QOYTmUD07W2t
5sAPf6Brb8qaCVT56Ly0HOj/sOt2hTLXBCoaHFBfcxb4Vo34VE+dQA+vPVbt
gvn58Fl8tMPSODq9QyFAifn50fKbm8SpcZQYe0G3BOq5f/rLuejBcdQ1TX+3
F/Ln+VKsvqtzHFW/flXxEva/v6ZuZ2HLOHJ77WTE/H3Rape/3Kdqx9HinkH3
JaZ/qoenhn+Mo0m9Bspv2J9barHZr2AcnTux5eplmCfhIaxYKHscbWUPr2Fl
nh/9a5JSP44j5+zxGH7o51ANsSD1lHFkZ+45VHAG/Jq026n12Thq1mraagT9
E0pSNnKOGUfCp38ocEA8TgtdOXr4OLrwMtepDPwUkndKOP7OOBqVuOchC/E4
1p0ny3iPo1M6X4KTmf1x3aW31HUcOemXPquB/dkbblWYXwI+/FlH7cCfQXvD
Pk3ZjKNbLIK3J2HesEXERQefGUelch9v0mG/oOGUmxtPjKPAY62NVMifVTfz
XKbuOLqSI5bCZg7nf8o39aNq4+ijf90zQfAjnaVmJ0NhHNnmbBVqAT4Crf9w
39g7jp5p9vgz77csBYNTXDvHkZLdwBZ34DtAZL45cdM46mYcdXgF/UXzZMHy
QuNIcfUzLhnwf0AzX1LV6nEk15kvlQt60mQ3BdmyjiP9htOvtKBfAyKlnBYJ
oN/6PTxnwS/UCUWj+7NjqIHy+IYX1O9noC0nPjqGrqYF+uYwP79+byyc3zOG
7Ll0opPdmN/nsiEb/RlDA66VBcrAL+WCc29fwxha88z7dy6cp37F3hXeP8dQ
fHTu8mHIlyx27xN/8RjqrPfvkrFlfh8lNvpN3hhSjFXMYupD+pN883DGGOJ/
4RL2Ctb7Kmaca3w7htxkaAGJUD8xtkD9YuIYanoutMEY8vWZqdxJjhtDaeLq
m8ZhvhJOtHE/ejCG1GtP+SUxPw/71D8lGTyGfv08K3cP+FxZNdv8zXcMhXMo
P68A/b0uUrGpO6w/sEPrDczr5R88SaNXxlC69FOhRsDHYrZmCNiPobCoU6LH
gY9EG/kiJcsxRKrYx/8S5vHMHr16G9MxlJfR3WkF+WoTLLtCDMeQ+wWPx3Mw
L55UXJtK0x5DxCe/K2NBj9HYu9QWlTGkNX2DMQp8qto94ScpjCH5oOYfeZBf
1L6PW7bvBT4e2/B7gn/6SEX7DHaOIQf+25ukIB/Fql9H3DaPoefFkllVoHfY
k8ET8evGUHBD4dgNqLfDnmBbxDuGjsnkpsSAPvtk+VwH2cfQNxf1E4bAXyBV
PICXAvyeSr74CV4fNdcoRMkvjqLi5QHdr8Dfrmf6L89NjqKwozk7WiE/n4tW
nwMHR9Hl/rmaB1Bvjbxb8YfOUbS2WtMzD/y+hR7c0NA6iuQsXJUmYL5cr4/v
XqobRbwaf2yMIN+yhE/TYhWjKOLjrobXwJ/w5WKabtEoiu/+tZcT9L4CL6eu
5o2i28tuDWthHn5jG94amzGKyE5nnCUgP4FfxANf340irjU/uJj3Sfskfo3e
pFH0N+ZxzimIl+e83XhV/CiqTUE5ZFfm928Ont8fNYp6u7+uZ35/worzmNuZ
0FHU7Szr/RD88rnZ+o5fwChqEsq30WH246vr0W+8RtGF5JNDXFCv2bWQ5BpX
2H8ooFIB9Pig8ixz7hLU60z46A/rSdzpJaLnR9FN6c1v/wL/J9pKGjXMR1EB
Z+opYVj/6nVLzyXjUWQ89q0w9jRDecFtZCZSfxRpCtaH/QS/6R0h0/M0RhGP
CW5pA36e8wis7VQeRV+6lfjnYb/JPzvE2WVH0WR4wK4bwJfGOyXZPdKjiPrS
OyUN5k+su6HmKfFR1FG2JDgD+w1p2Jr4iI4i/YpiMRLwdYjf3S557Sj6vsrp
EJOfBx33rv/kHkUX06IC8pifH314HjhFH0VnZKq/dwM/sp4ZMeuJsB+L0pkz
UN+ayPvH7oyPoBt7xvf+Zf5+VSr7Sn3HCPqxfw97N8xbyx9/IzbXjqA6g6mq
QKiXbsP66UrhCDq7Pb+/DPzwbkW6BqWNoGy79YvxoJdhrMk4Z+IIGjlyY4L5
/cFZGR8es4cjiNV85UkJ8/fqlcl7XvuNoGqhbecdYb2afaXhrMsIquEj7NMH
fvopM87qNiPoyhb7GGUb5uelwg8enhhBw1dVnjB/b7xfXj2t48gIihM01NcC
vlvrLtZK74f4XO+HcmC9r1PkhNfWEdTrxH6uGdaLs+XxVqwZQaQ7alE0iP8z
sXPvOpYRdM+lIuaQGUP5qjKH0YWZYVQmfOnVOPCrpor8rbqHUcNKccIm6Mc1
Gs6ZZ+qHUe5fo41noL4e7S19xt+GUWDdau8/sH+W3i8hw7RhlEWhfGR+nnHX
MFhXN2EY7erd0PcV5p/pSSUv9Yhh1KMSqSgA+u40HftwyGcY5Xj6pO4CfRfP
JP6VdxpGf0+5bXsA+lScM+bdd3YYhZgRG12hP+Nt2I5IHR1G2h0R3Mz/P8Pp
Qp7rdsVhFL5yS9r/FPPz68uvNu8cRr95g/M0mPevK5ubNwgNoxSVsjkEena4
NLCvZR1GHWKed/lhXqRdv3uQZ3YInXD5JlRmCvP6pqITR88Qeuo/WBUL9Zzw
GXlGaxhCT7LDtZnvT2/1S6ghFA0hS27hY8HA/8ydE5SFtCFUGROj4gP5fw+m
759KGELBruyLHJDvo7Cc8yMRQ+iT8y46s177B5ce9fkMIbaVZrE9EF8xemMZ
w2kI2bJ5nDkL+nE+rltsOzuEUpeGs+OhH37H35H8dXQI6XoFS3VDvNQEeYsa
xSHEe325QQni3Xo5FFG+cwjV9HHlvmJ+P/r1s8JioSF0W0127x3QZ/P741OY
dQipvv4w/R74mvxI25YzO4gqsorHbGF9UcYXk4yeQfR6Xrh9A/O+9MUx6EPD
IGp6/IeQBfmezxPJTSkaRL9POO+6CvFlv9YMvUgfRL56XE0B4BfWIn+R+BeD
KPKe0HI38Nv8XfZYzP1BdF3to1glrH9TPuB7/9Yg0p0d4yAwvx9dFZ8ecnkQ
nbueu14P6j1ad6w7wHwQHbs/FPMc+BL+RVl7S28QRVfdko2B50daMrU8Dg4i
PecdnOUQD/+x97gmMYjyJSg16RAvgrHhndO6QZRhUH2GAnxZ9lT9vsA2iOwn
DSNsoN69A7e5recG0CflKy6/4H5HGdmvcrZ3AG0TptYnQn4N431XTRoHkBab
4bgkPJ88HZdkWDyADilUVjC/n3t9Xr9RN2MAXaRJsX6G+aG9TGLVSBxA3B9i
oq4AH+tIn+UPPxhAbzNrx5Xg+UHqBUcF3wFULeldWXgS5jPr+vh9VwZQsjO3
dCXzvsZZWSllMYAo1b7rVSG++Wpf4g79ATTkPZWdasxQlubft1dMaQAFRyVy
bIP6iIK91sK7BhDZwD2jAp6vWf84au36ARRQkPHnIsR7Iar3nYd9AH2LOhn5
EfhxESPOc8z3owD2tDcbgI8j4uk7Wfr60Qi3N1oN/l4jcf4M8Vc/So5t6fE1
gf6VEgpbKO5Hp3YlxD5l9u/eCjyV0Y9mDp61roJ40gL3NHle9qNLvQGbmb8f
eDWvWyUZ1Y+mlO1KPoHfRH9zmOgE9KM7HgfnlYCPmK/lf8679qOhoKIFIuTD
nRRy3s+2H3VkcXZLg96Bgbojz072o29rfI6Lwv4ERw63PPV+5FVzw6YE1rvp
ly837e9Hda2cfY2g//CekIDprYDT5qRmoV7bNbpcvAL96O7euFZmfb/n2KOk
WPqRahHpYRb4+WRb2QbdmT7k875Ujvn/L/zEwUl2PX1Iq/Xia2PIRz1RZ5d/
Yx/6lcuxNov5ffU77BnPS/qQ2y8tz0XIb79DmWJ+Zh86sNrqtjHg93rB35qT
+9Cp+yL8oZDf1j06ujPRfWhyE3onCjien72ON7APPd5ynb8Q8l0z9+O09PU+
JFmpfvSaOfP9oSCGrl0fSrzlpsb8vSUNaztcMOlD5ofebBYC7PWCbcJfsw8V
232qm4D6pgJ+uCfI9qGIX+4qzN8zOdoHkZB4H6p7j+OY3wfuPKod1LK2D22o
DCltBGy2m41nlt6HJLhav/cCruP78YhvrheNbf7xdhvoozt7d+Puvl50uCbI
TBfwtxatlKNNvYhr90C7D/P3coh1t31pL2oIVAt9eYr5/khpVsCXXtR/RSlv
nPn/MQTcPfQiBZ7/uBkxfx+XeEHrO3rUi/YMLtzPBrz+KKtB691e1PK1MGgZ
8EPp0sbZG73o8TwHxRf44+C7a85v34u0k0V0+YFvvxnNnt2mvWjYKDHNCfBi
M91JT7sXbea6/1gI9Lqa/33aXr4XzSzz69UD7n8e6HVnRy/yc8oyVGT2t78m
LVGoF/XlaSyKQH7NdvRQzNaL/NXD9iwz55/ud/62+R5kVbBZahDy+SEV+GSu
vwfxBh2P7GH+PpJXc8ualh609qi42hj0Z/Y0y7s9ZT2otD4znQ36YU9ziYx+
Tg+imGpvVYV4r/Pu5Dq86UEVu94pM3/ftem5hlrg4x70a1Zs5SHsH+vHUp4Y
3IOo70Zd26De1XYlx7969KDH556+2Af5B+rcaWlz6EGpEQkEf9ifIKVhNX+6
B9X33a2Yhf2u87AMrNHtQc0GJwqZvycanSp23qvYg/wULU4oQX52TQHz+hI9
iM8n24P5+9X2XHVfx/U9/4+o647n8vviJVESkSRKEsoelRVOCSlCKJKstKWU
kTKKlpkkFBEZFSI75LFXsvfee+9V/c7ze+nbn+f1+Tz3nvM+73vOuZ/Pfc4l
Nh03Ux8g+y29p6Jxoe0n9qXPn6Ul+7s4F7wMX+kjsiePlYdodIPylac7ckb6
iA5PHaEqfD7rpFJIW0sfQZto3hSF80sKUfEul/YRl4dL2F6j/rEMBXHbv/cR
vypD6+JwfE0DhpMdUX1Eo4dZawvya+6zfvfHt30EDY8aBxvGyzfzkXYWLn3E
lEDbvXHUV0Zhepv0vT6iNzb49Ekcv91LLpbiSh/R13BGLwXHd2p1Uf5xBuUj
2vfI+o6br7bzlUIfUT5s2RmqjfnTmuOB/oE+4urr/IvtqO+N3BtM3Jx9xBWW
e+aJOD/dlpSY0S19REJohEIpfv+rPsXx5D+9RK1k4thL/L72p1MdDmO9RNCl
qDQWxH9+1t/2eGsvYeX36noG4vtWvodxS2kv0cx875v4qW6QfSEc3ZDWS+Rl
MKwZ0UJ8m+8rhnzqJaJamWnzcDzn/QVt1/x7ieHXqQlJqD+PFcM9sWe9BDeX
Ievc6W4oztZnWLbqJdQ4mEYOIL/M6D5+zjXtJdrPsbx2Rn/Tn58+5q7VS2Rv
Kf5C2hcfKdeqLd9LhJdeij6I45+ZcbHeJdpLrGwu2lKFeC0cqaXv291LJHzo
pX+O8wV4cHz6QtdLLKecG92H/pRruiFv86uHqKEQNahGfTt5UpphpIf4bJ/5
zY1cX3cprDY09xAWUR++nkF792Wdoqss7iFo1wbc5Mb5SmjfRL5J7SEeHWMK
vob+Mj/Xc8QksofQ99fhu4jzM0QIN/H59hBBmwbcx9GexKn7d6cf9xAz21Tz
KJDvulBAm3G3h5BuLjbah/5YdmOIeGzSQ1jfoT57AfNjUIM+nDrdQ9QbF1sc
U+2Go9wfG7Yd6SH4Hj/Y5Yn691hMW7QJ9RBS9oWGjKj/s0y5TZG7eoh5QXaf
94gX3ybXsFu0PcRDk7P0OSpY/+nUykoudxPlVFcNglG/22Ec9WuGugmH5+9u
GyDft07euF3c0E1s015qPoT5K1k2ZaN3YTfh55BCsVW9G865UnzQS+4m7Hml
G8n371fqTsnsDe8mooM/f/yE8wXvfVM7/KqbCLwyZeKJfJG/3WOe6NRNPPDa
eN1QrRt6M4Q32Ft0E5itVPk0cT1vfBCiaNRNiB47bOiIz/OfLZCmU+8mwl3L
zowgHmWhDDV1st2E1KTKB0t83mJc/2awQDdhB2/MPuP8TDIfqa6ydRMmZXda
JvD5lOfTwSI0aI8u3WYW9J9erZzU4kIXkbi+dTIX+flrj2tVdn8XsSAqTQgi
fu/Na2+41nUR4YI9Nl/RP8fSOdZr5XcRe8Jb3igiX/qozYLYEruIG5IMv64j
/i7aKRI9oV3Euf4wK2bUXyCEojL6ZRdhVMQhRcaDitFT160edhH12ed8z+Pz
d6XfrJO71UVod9+6feUkxnMftpazBl0Efchc4AGcP3HsXeKtU12EnW66ngPy
oVaZw+O5TBdR3NPbb4p8mwsNvRTC30XwHWMVO4z6M//ikktj7SI4FtVPy6D9
EjqRzNUbuwj1i6EFZD7S/co7PrzQSSjuW3pkRr5Ptym6kHKgk3BS4r8bgP58
c0no/a76TuLoB4Odm3D+NCLunnhBJ3EqegsXBdrTtOPAafWkTmLRXOM2gXxe
vpvEezWsk/D5ts/6Kdqzs0yC4tGrTiInYOhaOdlvYH9a0xunTuJa/I070eif
C04yCfEWnUTRzeAnYvi8Q0um2w+jTiJbjdOjEP0RJH7UtEe9k+jp1mI2wO8T
Xrkyv+Q6iS8vfg9Tk/2ahhS3MQt1EuNXr7hvx3iwRrFoVGhXJyG9cjJSBMfb
E3yy4DhtJ+GQvda3BseTXywNMlruIHKfHarefxzzmZa6je1QB3GpbsjDF/nu
HFOp7t3YQWTRzLL7oH1h1Nr7o4o6CPNcqe3vyfxtXLcmL6WDeP8mJjwcx+tN
121siegg5JYOXyffB6dibv46+7qDOE/JvhiH/OC5fcGV7kkHEWhNJE3h94+X
tJvss+wgHnOIeJLvb1zlMjl85GIH4bxJK3LgGPLboWfrOc0OglWy+bYq6vOx
4fKIxdEOgrP2jmQm6lMsNpjnKtJBvNolnGeA/Blyv/Huw+4OYpK/oWYDrh+a
/lGrDLoOwiPcVakV/X3WqSPw83I7IbjMoS6Dz/uJ955qaWwnlu5xcFAi/xuG
Bn9vTm0nNg+8uTKC/mINHosF33aCJzjH9jvmB32taSMLy3aioGBuqlK5G95R
LzB80Gwngnzq26mRD23pKzk1Iu2EQ25EzgxZj95ea0lF30706q9Ltcb8ZMxF
xS052kZs29BH6YT7i9AGmrprP9qIufe//bwRrx53+mcBn9qI5w5ZgVswXnAf
ZZL8+ayNSI04rXII8bs8yzL4+1IbMfo8xMbkPPm+5K63IgptRLREs6Mf2e/k
AqeKCWcbUWE3456BePEx7lt5taaNUH/7+KYp6mdWwB+T39ZKUL75xVqF9sbc
FzGYz2glrDppXFRRvzGhQ/S8Aa1ElxNL8T7yvHS3VJaebSuh6X4+9RuuHws/
OQt3nVaC1TmPh0D94lWOcWYeaiVu1F1/RL6PPPPnePX41lbi9POl5Vz076FE
1cd7ploIc4FeOX6yX+PV04e0KloI/cENBZ7I/9SdZ/sef2khFF3PvfmG4y1W
6Pklu7cQ7+fSdpHvm0s/MVQeuN5C3Mi660Xmz+IF+3ADlRZC9jTDchuuT12z
QIpa/hYilP7PIRHcn/S1pxmq0LYQiTaf39ujvlZajRnZI83ElRi11OOIL2Xh
/A7Jn82E5jLHhxjMf97SzDZfYpqJbfK9imR/qT1fDtZweTYTC1zuP8n3xeP2
aIkGmDcTDyLEGa4jH+G1hSeDejMh8iB6xxMljK8bvIafCTcT4jsfxdLjfBfs
vij/pm8mPtzRrXuPfBsZLw23nGgiSqXKtzOiPQ8uDlMMVzQRJi93aZPxmaZ+
o5Hx1yYiXCn3SgXywf/k/u/1L5sItkmdqBlcj/sylVjV7jQRcupqaf3ov2TR
SzZ5mk2EpiL/sQHkg0K4c430gSaifGXouxnqW80SKvp1axPhV3yoYgbHN3HP
8tw300gcy2Y6fg7xn/zTNvyuppHYTPGeovwY+f7YL2WmpEbibIqyYNxJsh8T
W4Tr60biyXYl7cuIV5Ce9Lq11o2E4sORN2dxPsEyXSObs43ETk6K4+T72RlH
bb6PijcSL0eK7+9F/p1Mes1qur2R2Jtpdr4X10fj/kSbpvkGwnxd0XcPxOtq
YFWNRkMDMez1ICwU8ZqjnxQtTG0gJHaL3P+O/njiTP9C9k0DYfo4TLwN/cE0
LziSYNtAvDgaWElJnt+4rnqCT6+B2COwx4kZ+SrWdj3ivXQD4c2xeeA04pV9
2mXddrYG4v2SzKe9GA818iONPJbriQ1nynhTcL52yYLv61rqiTMpHFRkvzTz
6B7W+xn1RGfl9hdqZP2/e929icB6ouyQ6cY05Jvbqz21l+3rCaoVyyFn1J+V
+ohY64V6QoenykcH7ft43+CFllw9IZAceOIEji8xZjdSzF5P8Llw88lhfCkw
Djhx5E8dcXTmuu44+u9M7beI5PY6glDR0r6F669HuWGdYFYdcSFpe+IM8vlu
xpzRh/d1BI8L93FZuW6gENmWueNRHeGS2MD/Q7EbXn44wOZlXEdUvrmr/B3t
5diueY9Kvo54vCWgWw/XzxfX27V2nHWEiNSF9F/IN9nfnmLTFHUE7w6FfRzo
r1KLmBfXumuJNe+kLlahv/R6f4y059YSd5Y1v7tcxfihO3TibFgtUSQyVzWM
9t4r3RBZ+riWuCX/4lYU8oH6yD7KY5dqCf0zkz5BKPsmKBp/U6wlOFRYM8n6
j3ufaaYwTy3RJ+RauIncv711YougqiWG3OLuNaC9x+hC7u3sryECG/NPk/Vv
1SOi1ruwhnAU8toiAd1gNNsqtvFjDeH3kUh1UOiG8asrLxyf1xAXNq4XKMZ4
UfNFdIva5Roi6Q/1rgLka9rMZa+dCjXERH2ClAXOHywduGV4Tw2x1HNEjwHz
weOHlV7f/lQTG+4XuZQivtcLqBiet1YTnOy79nigveq0Mi/PplcTbKrXO67h
ejioacHA/aaaoN36rEsJ52P1j3g5bV1NJB2HanGc709rM0OOdjWxIl3Xw4Dz
9exl8PYSqyaUZJ/wTSFfS64pMRpuqSbCbn/+NIvrLzb2gbfgWBXBqS5DMYj5
zWc2jnHlRxXx03/yMSf69/7hPu+ST1XE9F0Oh53oT8NHbFvfPKsifPe8fhaD
8VuhUOPVlUtVxIEDrknxmM95Nz/dKn6sivD3i89NQ/votNJfUe6pIrgCXuUJ
kO/b+k9srf5dSfx68iWC7J/R2MbtE9JSSRAL9ioeqE8m13mm22mVRCidzyXy
/6mw614+cv6VhKq6f+IFtN8lLp9ps3UlEXlqg89G5Jv53JJPs1YlUe21vVAQ
9dGSEdn2WbSS8PSo51tBvks6XXp9j76SyA886XQE9WEvervt+GgFIT6wcrwU
49E6uorX235UEMfOvJkn3z8b0FrP3POxguC7/FhGBuNd2Rtp3/inFYR30tXj
OVLdkNB+i/mRaQVR3Gkvv/YIxkPucF91+Qpi8FKs8VnUz/5GEzM7RwVRsFYl
KhvXd77JbqHG5XLCIFc0dBjXl9eYi5B1Sjnxioi4vRXjid79GaGtd8sJF6mH
6jKoHzeVoXCcUDlxyv5yRQ7yceJlsfCpoTJCiJX3jwruF9J2HRQZCi8jLF5Y
yO+Xxnj0KUjkmXEZYcvZZJCK82sc2ijKtauM0OoxvuOH/mLNviua3fCTSC08
EvED+dGr2iZq4POTcA5ra1yD6yOuQVlsWR3lVxuz8lG/+6YJYv6bfhK/R6Zn
LRAfxYldBw4VlhLxtrsTddE/W+yeH6hyKiWmqkSNXiNeTdTTB27JlRJzlt1C
A+jPsFcXDtIu/SAWq0W230T+3NpddPBT0g/iXklG+hiuF+kosUNKFj8IW6en
T4TIfnIS7w51C/wg5mUCN6ciXmU51OIPB0qImiEO5zqMF2/U7ojvCishdqWN
P72M8cK0qUU8zbCEuKZ4a9EP8RG6fFxCh62EaJZY0iP7Ay5MfpWYqSsmKmIW
3gijPrn2OyVfehcThR/YlMn3yz03PpMUUismSpnmP7Cgf3VfT0r+2FhMqFwd
i6Anf//doy91Nb+IoE4r+jWL/h2LLpBa/6iImDSrez0gj/WApKh0qEwR4bGN
LZDsX+icFyANC4WEshnvjSOI30CZ1KtLqYVEj5RAzTaU1Rrrh93uFRLbvsAF
cVyPid1WCvGShcSpwR0vLVFmHdv6rmGhgJD+rTqdhuvj4cLX2d+pBcTdRKkf
5Pu/vRQaaty2BYTO44mjT8j8tXksQkWqgMgySX4fhfkmbrv7H4vFfIJtOORt
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
Xsb8pTQ4dbTPqQ6WEyBVH+3bdWksTDa8DuY9j2l6ke+vdwxSvy6sg+M6yVvI
/tel+r3XRwbrIHr9Nt61uP7CGjp+HqOth3QjpZH9iOcD7RaRAKF6cA/IN8zG
fKNZUf9qSqMe9v14++oC5lc+1eq5E3frwT+bo6cD/UlRVHYu5HU9fGeU7jAn
f188VpKxkFIPEgulMnrI5zgif7dGUz24Je0oM8Xxnx/OdopcqYeF/co7rNFf
RikZvb/ZG2DlXmmsK4nXgVTls0cbQO/AvWYVjDdbYhOiYi42gPcY21cq5Ec/
Xyzd+qcNkJxzWpjMP5kRny30PzbA5o0c7+6QeHFG1CSUNMD2YO71CSReQSES
m0YbgPs39Z0l1FeJ9d1bE/pGUGWUNolBe9h9/X99E20ExsSBx2S/sVkGHyMG
7Uawntl5Ipr8fdzjRe5V60bYzGmXAah/2EY3niz/RpDT0x7/ivrbPXnqsj29
EcaGqcYMcX1prXUaMW9tBN9koaJuXF989vbqBX8aoZstsHsJ9aNYvBe/i7MJ
mPwulHXiemqytNxmpdAEC6auXjOYT75O3LpXerkJvt3s2SCE8e+52Y3mvS5N
sLU6te8G6ms0cFnuQVQTZC8cOZeE+VzS1CSk6mcTrE/ae/wH4k/fcYGSb6IJ
GsVp/vCcJfuJnrvyiLEZlN5GfGFFfmbWa5c0HGyGPHfKuRnE21dLQ1BEpxlK
hO/UyCI+5uUqXs9smyGfS9dzDvmipHJ8ui2gGSh2sib1on67CuXPimc2w3v4
aZKO8oy83DePjmbYl3MzPgvxLs2U2tlL0QLqIjNpFCiHSR9ylOFuAUVaO/Uq
9KddskjXq+MtsNzVzxiC/tMWE1AcvtYCGW0FtSeRL/xf9n2Ud2+BqWGNTXao
PwXf3k1vv7RA3NOuW0nIx6ZwdvPJihZgyCh4dgnxTqaK1vw41QK9bfsmtiCe
r65ISRgytcLpFB/zL/rk71MFbMzirWC6ZshLAMdT5dVe81OnFTYJrS+Kx/H2
u3b2ONu2AofC7VOx6M/1w+bF0gGtkLDugBs31gtdKisxkxmtcLlDY/4UWQ9G
u3h/bGuFjBBmk0ay//Tm7TaGa9pAdH3GAwu018Y87DwzZxu0rotSKkd8tctF
j/w81gZ108PT5P0qIiIE1+NLbTD54+TsPfL82UvVjYeftYFrs/eYOvJrYLJx
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
N2fb1DI+OHP7j4g9rk//D0yXfmc=
       "]]},
     Annotation[#, "Charting`Private`Tag$412266408#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5500000000000013},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{487.34765625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.1415925253615216`, 3.1415925253615216`}, {0.55, 0.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8840221200961943`*^9, 3.8840221472494087`*^9}, {
  3.884022479737913*^9, 3.8840224941354218`*^9}},
 CellLabel->
  "Out[1292]=",ExpressionUUID->"67867e86-263c-4426-9ef5-27c283ea0e32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LOWER", " ", "DENSITY", " ", "MESH", " ", 
    RowBox[{"(", 
     RowBox[{"74", "K"}], ")"}], " ", "BUT", " ", "4", "X", " ", "MORE", " ", 
    "GRID", " ", "POINTS"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{"GetEField", "[", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "d"}], ")"}], " ", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "d"}], ")"}], " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"0.55", ",", ".65"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8840228247355213`*^9, 3.8840228330498867`*^9}},
 CellLabel->
  "In[1341]:=",ExpressionUUID->"a3be4fd0-faba-472e-a956-95c63dc33b2a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
03vR6ML9v5Jg+oHRZ73ov/uCD2/nnu+/04vSnunp0Zj5e8/2YZd3LxoSr+be
Cv2lHwiWMux60X/3EZc9qplpPNOLfi3cV/wTE7Drp1Yver2AU55JnauS7kVy
C/cdryf23inb0YvOPW7e5Qjyj758UvRpbS+qG+J1ZcZj85tjo5i1F220fSgm
yHwfmkrbljvxD0U/KZLkh3pQnJltmNnxD+27Zkl4DO0R2dZBb+v+oSM+HTbq
oM/5vI0fkor/IZ23UdnM+8QSBVW9cRn/0N3BJgc/HagfxTc2xsT9Q6aVfCJs
0L++REIv8u4/dGX3h3s2gJPLenzuXv+H/rtPeq0iJiPEfglr1ei1+5/9hz5b
Zzipgr82/KSsvq79D6kI7isYB//2N2SpXT38D1mq5/02Bvtx08WrLqL/0Eq7
142ixnBeZqx/bcf/D9UXNkRfNYT87Kj4c4HtH1rN885aG9r39vhym0/2oG2Z
D3doH4P1uf+AwpnOHlQi2LXpNOhXN9TlZPijB9U/XLOqB+Q/H4tOOPqpB/Xn
pCtyMOv5lM4PzcwetJm2m/Udc32bI7GqxPegwTeREQ7gL37SOyn5ez1IcE/J
gVjm/TXqBetDPj2ocOG+cB7rupj9Dj2oRubYaxkYH7qsvHz3uR50KYmefxH8
eZbHh7hdpwcFeo3mpIA/xFbt37tFpgetuhyrsA76E9d0mm/Y2YNGK7OkOCF/
qtY9ili9rgfdLsxssoH6ECegXbKcHeaLOBGeCvM7byFOcUx1IzznK88C9h8R
ztjB0tWN9ts7b9oM8eIVPX+a+LMbRRfmD42cgPzdvfb29KdudMqvvsoY/P9+
7zc8mtmNsjidk9yY95n4bqkuT+xG7crEPWTw14spzYpdEd3IhBqfkAj+FPjD
Yajh343WpTtyhUL/yIKypvOu3ehKVcn0JNjDnRBy3s+yG/13fzwwULP/yYlu
9N99c4I1h1uecjdKNYkzfAzxdtMpm/t1oBu98xK/yLwP2rcnxH9sazfat450
6TSsT5a8mpwr+LpR6+q21Cvgvz+T7BG7WbqRhmFQ2muojycaS9drjneh6YX1
8zsOTrDq6EJDC1g5XmPnjR9dKIPi2bwN+JIfwJ759HMXurFw3j9wqVQ6P6sL
bc1zVGcH/d5oB3+sf96FWO9uXBUK8d66R0Nz/EEXer4JvRYAHLOKvWZFYBf6
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
       "]]},
     Annotation[#, "Charting`Private`Tag$416545897#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5500000000000013},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{493.203125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.1415925253615216`, 3.1415925253615216`}, {0.55, 0.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8840228347047043`*^9},
 CellLabel->
  "Out[1341]=",ExpressionUUID->"6d731579-3342-45d4-b290-e4066b6c3028"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"HIGHER", " ", "DENSITY", " ", "MESH", " ", 
    RowBox[{"(", 
     RowBox[{"540", "K"}], ")"}], " ", "AND", " ", "4", "X", " ", "MORE", " ",
     "GRID", " ", "POINTS"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{"GetEField", "[", 
      RowBox[{"1", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "d"}], ")"}], " ", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a", "+", "d"}], ")"}], " ", 
        RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"theta", ",", 
      RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{"0.55", ",", ".65"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.884022628754881*^9, 3.884022634733193*^9}},
 CellLabel->
  "In[1315]:=",ExpressionUUID->"aa85cbd9-cd1b-45eb-b416-bf95b8e128ef"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
pFrRf98bjh+o5WwTbEXaez4nMEN8790USnvB0YqkzdSoScCvfP1ZJY+ZFvRz
p8PKQ/P/H2VTzi+Fnhb0ivfyKU4DqC8XkhvtVwtqtuuS+gz8bsY6HF8/tqBj
ykkxzpA/n9hjHsW8aUHb19w8mDL/PeDRlgOWj1qQ9lTf4VOwzp0qUS8W1YL+
+z7z9aCny5BfC+pfwCYK79nfubSgibjV3hng39QN7lQ/yxb07vu33tT5fvjD
TEHHoAV9XTeN38D1iiKPf/AeaEESF7Zu0ofrW5yGnP5sb0ERBwMIDsBHQIE8
26N1LehAim7MFuBfjC042YG9Bf33fepn49r9MlN01FHFdHj++1PHZKHvhC46
6t/YcWr++9PlA2cdP/6go/Yvx+fGQX/2/hyWWx/o6NHArof7IH5Hg0lJptl0
NLLw/ex0nY7chhQ6+u9724QNMbXdt5ewkmPL+dc+dBTrsGrGCvpF6zsJ2mUn
Onp8d+sNO7A3kMXrwUFzOrKaTd9F1oH59ch7WQ49OjJ7i2ZLgc8vD7lr6vbT
kS4b0+z89U79ZucSxOmoNEScFgnrK+QeU+z46ei/74tzAocSJFnpyPfP3pVv
4XrTWvm9E+PNyEZnPd91iOeMcHB1YXszypoz8pn/njDxfO3Z4Lpm1LqjOvEv
5JtynhCzYWkzOj2knOgM+dNGtY/nf92MpnbOzC6f/17UKGdPy8NmZGvM97x0
vp8/IH19FtGMGIq7mISB36penTNu3rAuxlXfBvXkIhtDlndoRv99rx0Zyf/7
yIkl/Lrv/msHneb/EXXd8Vx9//9N0hKFJEklLXuFkNc7IZVQFGkhNESRyJ6V
rCQfKaOMhMyIQm7Zyd577733+J37+74vfz4f995zXuf1ep3XGfec5wuruq7G
9wvpp1rxgKerdAc2bHSs1B6/Dx8aqh/C04HlP6NjqVRE4+Eyl0waWwdWscJR
VofkFdf4wlK5pQPLvrX95T/cnxKPjw7OtWPE/fNn22Lyafrasfj3Av+CUXve
6/N/2lfbjhH319OwhGdiee2YYftt9gWkn4Y9IpdUvrdjmyj34ReffD9+L7wd
U6dg9hJxase37Vh0IJc5L8LSx9Ia3ju1Yzcp9+tvOkknfTNpx1qMPj7H79fZ
NWW6/9NG9Stzeubj6w2x03pdKu2Y3LDhOx1kH8w7W3pZph0LS9t34gvqn20D
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
       "]]},
     Annotation[#, "Charting`Private`Tag$414405595#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5500000000000013},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{539.05078125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.1415925253615216`, 3.1415925253615216`}, {0.55, 0.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.884022635675084*^9},
 CellLabel->
  "Out[1315]=",ExpressionUUID->"2b9bbe2e-039e-4f38-ab10-56bd3f664e3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["d"], "Input",
 CellChangeTimes->{3.8846178752727737`*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"f095f8a4-cf3a-4138-9bdd-365dfc00330b"],

Cell[BoxData["0.001`"], "Output",
 CellChangeTimes->{3.8846178755779133`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"de9a1975-ab29-47be-a081-9300ce67ff35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{"GetEField", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0.55", ",", "0.65"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{"EstimateEField", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Orange"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Theta\>\"", ",", "\"\<E Field magnitude\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8846180656012793`*^9, 3.884618097450906*^9}},
 CellLabel->
  "In[1006]:=",ExpressionUUID->"3c78aac7-b15b-48d5-a337-1cf973b0f65f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
uIz6/Lou+CH2qVtQ3W46ZrGfmpuCfm/o11YOVqBjCbZfeynQ72w7efs1ZOm4
O4ej0hX6ObA0/0CWOB0TvxYNmnj3aJYTQ1acRehY89m+r09hPi4a2LwVFQT/
OZar8kN/KkfuONXOT8eVaw91I2GeXWpa5InhBX6+ztU9hv6LtzC1jeWi44QU
Jf0A4ONdQ+qTODY6LgxjNecDPf+YzPfH0+l4oTuPXg760eqM5RPIdKzN3atz
DvSTOfDE+8EaDas597z4C/qZ18yUJy7RsJ1T7PYL0C/JH1MOPpyi4SZl3rb/
YL5W6E7FpozRcKNfcsIbqL/vvUHHoyEaviSuU8AG/mLXShZ70kfDBz0CyyTh
vFIsHz/3tIeGPyW8xFfA7zbq+3JSf9Pw2NNbo29BH7+SBwtpP2mYeOSPwiDU
/1RlVCujlYZ1fxj17gB9qgt0Qp99p2E55Q1Ol6E/R3fdr39eT8PxQ72b3kE+
vLlDG17U0nCPUwNBBPyioqB14mUVDTvUZeloA/8n3samv6qk4SMRMWkvoP9u
yg4Mv0Y0nOZ7eF0t9Nvzl3t3vS2l4YSj1EpeyOfrjnu+WYWw3k6J3M2Qz9Sz
fxXZuTQcdVtaZTv4d+M2NdbctzQ8cnz9DWXwh0ZalHneSxou9l9R1oT9Hbb+
Tch/RsNeX4d97ICP0McqXQWpNBzx/tNNDPW/EbqzvegRDROuf9Vohv2+J/+5
WJxEw5se27iSQI95AeWCkvs0vMdvu9cQ8C/0IHylNIaGr/LZXvsB++nx/9Yr
i6Lhjau+BqJQ/9k4pYjy2zS8SDdAAqBHJG/odxRCw7si3XfNgB/z7nYIvL9J
w8JTd840w/nSxqVgX3GDhkvzm1qLQe/VO7cyK31pcD84lcmAeSPO3j7+wZuG
z3I/OjUF569huJzKJw8a/qqZIzwG9V9k3LxR5Qp6JtVzdkG/xga3fqo+D/xs
n7zUbNejWUyR4fx8hoYLPFTbDkO9vwL9D9U6AD+LJ6SZ/FKIzclfTtJwkehe
jSbQd8eNHX/rjtKwpJfpxSXoP5MVP+l6a8hvHX9LK9Tn6dvo3mBJwx/WjCsn
YJ4lLmwr+WZKw9Xfn2yugPMGefsSvx+g4W30V/r7ob6/M/X7mwxoeEN6rSEP
nBesnuLRzbo0fEMhfCIL5ufOySutLZo0zM9paXEB9rdyqxP6oUbDAZs6tDnB
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
/+5g4PomMYIGo61fiHdkPtthN0DTp8GX0Zd6j1Bff5nQ2QlDGvyRzz+UStbz
/J4p1m9MA8NdEiYPEb+o4iaVFjMabOqYPSaN66WGTem8sqQBXfDslmaUz9kj
u+uJDQ1uJ/87R9abL1E2OHpvHw3C7WjO+Whv/Z+jwZH7cT6PHNlplG+viogJ
PUSDJcJSzQzy/Ha7KNvbmQZmifODncn7sY6fXzm60aBSOff9W5Tnr2V/tDpG
gwMB/zFtEH8h2qpxfS/Er+/MeCzKL2y2Zmn40CB/qdLQZrLfQrK/jOIZGmS+
rDD5jPZqeKaulQikAT/MyZ+sJ6urU7edEUKD9DgHZxe0z0x4fP/kBRp4njlp
vQnl7TolT30Jo8HeT8cDF6H/XB9tudoaTgOeq4efF8r7nDmcUnmLBk82hFQm
oHyo0dXnBVE0IAyr76Wj/E2p/DdpcTSw3HWmvQLlEwY7+m8n0OD+hQmnjeT9
q2f8mfMpNKC8TdxMrv/8gpLoqfs0SBF0eZiJ8pXWO5ScMmkwGO/xoxnPo++W
ntTelU2D+P0F3eR97J6JeEuDPBpc71g62obyI+XlLuuf0mA2vveoFY7/3hwK
XFZEA42mwl4h9Af7gEjU/FIatFyzcElCeYnVmo+Y5TQQp3A9yf1FgWdX/rsS
/z/BdULrMOavN6HtX2tpcI83doW836519+GP9w008I9uHyb7nW0/2kyvbqLB
N6uBqxtwvGvz9MJnrTTI4xzOjSbvMwrIrXnQgXg9Op5Ayh/vMDCM7kS+bH20
mrw/H5DubnfxMw2so6u8inB8xSfSy+cLDSSfqu5rx3GsQfFl5yEamC5ICGCj
/vclehNtRmggI3mx0wjH+f3sp4bjOF9oszIHxyc7XldfnaRB1DfZemccb3hz
o6NpmgbCwvfzP+D4b7nV8HwuDSKfzs6Q9z9Lni2Y3Uelw2s4vnsh/j3w0Sfh
ZCYdquv+uZP9hSE5Se6rAB0EhP5VhODvX1qUo/qKuXRYvLbmdibKV4Up63uK
0WHpjxBuwP/r3363LpCkQ9LK6dtC+P/G3jnOM9J0WNn7t2Qc/SHk4u2nI0eH
szdud0+S9/vtNlwJXUqH6KFOO2Hk+02Lf3dqlemQuHPVVrJ/pJVhWbbwSjqo
39ohS37PIakVWma5hg6q+yJPkvWEO1Zva47RoEM3Zb7WZfJ7C0XB/s6NdPB1
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
        "]]},
      Annotation[#, "Charting`Private`Tag$224628#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
Zhv7jpeSZ6wqVuQRK8nTm2xaKiGvl3aX8SBOVInNEc8pIRPE/1EYHLAfgNih
61hCujrP/xlD92Nv9OuWq0wJKl89bNj/1mXhXBK/VEy+25ITOopY4T437/ec
YvJ0otVdGjr+/cPs+5OOxaSs8++QA4hZvC/Vcp4oJv3+fmfVQWz7cob/5HIR
+bLf3/4t4o6owIemuUUk4+3xFezTgw9ibd5OReRxsyN/9BHHp9WKpZwoIn3C
/Q6oIWYuuP2sdbmQlPXnrsJ+vrsVzH9XcwvJnTattVcQNze8l+FzLiQtdBOP
2COW6VIKOidbSFpOmi3EIn4z0Dt8d+UbeV71sv5DxIxTHqdf530jRxKm2LDv
7vbKnsh8529k0gxxoB89XwMjOdsj+43M+fS5lNkR1T/7ciLYlkjy8/IJN+wn
PC41d97YkSTVU/36WBDTq0qsJy0VkEy04Fl+7I80skxeciwgr5kfTD6POPz+
R+Mzy/mk0898IVfEZt79rC+d8skg2cOMlxFLRO8r6V7OI8/5/QlQwH7GNMP7
os55pPamlRoZxBUVYfyOK7lk4C7fHHnsU+xqaS1zziUZlB7r6CA2nGJ9tmM1
hwRqYbwTYiEmdRkjlxwyuuiGOBfi2Z0+w4mrX8lizoBrQti3KFYesejylTQP
a6o7h9hXkU5NaS2bXC1fsndArKMH64Gu2aSMouXdKMT7rJySf69lkQN3FDdh
X+WoZ5axyMMs8j/3t5tCEGeHTLM6rGeSWSpPrD9iv2PS4ZLSh5nkycwq2e+I
1Ytu3WelZJKQ/vzADGLu1nf8V90ySNB1EfmJuH+4p/UTJYPUNX91aBD7JCl7
ni24pZP565diJxA7s+vLKFLTSUuX82bYz3lGKGQ4wD2NTJSKScTnY4WmiF/U
NDKeWeH+ZifUH7m4TU3YI5UMmWf8JoH4g7nq+gNaKsmUUftTH7Gty9PkEo8U
MmjX3ZNSiInAEuPtdCkk70CO+B7Em95Rdhh6JpMT91ozOBG35MqWfKRLJs2s
m6p4sX/VweTX1OYvJF/ybK84Yl9HFckXrJ9J88DytYuIV5wkvUW5kkgZu21c
jxDfcuHtruJNJFX5H4oVIe5wZTxmvv8Tuanp4xkWZ/S+u437MAh+JDM27zAw
R5zj3vYn9tAHEpzStmYgFvIslCIk35PrB05JmTjj8b+Pz7uOvyM5z1weYUDM
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
2/2eCY/HTltz/Pj1bg1KU6eV8PZjud/Var+sQZ6Uz89TiO3p3Wvzs9bA4tbZ
0ht4vPL8MbUkcg22mEzQhSFeCR6uiShfg9Vuzu14fP1k95vzvj/WgC94/6QH
fn8EL9U4ta5BYZaRFvbxFtlsOn/r9xrE5zfK4PJCn/etWm9gDa6fHirD49lK
DHaq58bX4JRrkBQez36qJlx9fH4NUsWmU7E/uep1t4rg+hrY6q1J4/8BW/68
+s7FtA47rl9TwdfTEFJR2bB1HW6+eLDXCNc39yjf5znWQVlziAPnd1NexrmB
Xetwq7ZLGNcXHIy3qlr410FAUN8Ij8/qqu85V3ZoHewP6qTj9X3CQporM46t
o3ZNJ5smbn/+8T779uQ6GKjmeuP1Y3YJE5UvldZh+63LSvj9MbKdVX6ktg5j
PpsKsa82Nv9jxb1L60CLv3qjBnEvo5HyNcN1OLslQv4z4oMa7BWaZuvw2uBV
CPYBW4RWnVGwXIeyMyJi+P9F4t+H5eJ26/Ckyn4D5jHho2f2uq6D6pDjXry/
2P2hsm1e63CujNspCY83FkQrUfzWweeFAHsb4nQm7bLxV+h+K/XHt+H/TRrM
Sr8j1yE3X2cj9rdKh5GltW/X4WLP49PYh9t76Ius+ed1MNWtyR7B443FUWnU
rHUotpU0pqL9T+r6CYWT67BV1V8Or284NOISI1mxDo/3nfmMfbnB7ne4auvW
gd4oazMd4lMcBv432teh8/pGGv6fNPFRlZH6dx0s6U/54f9FESDrEja0Dpri
Z1Pw/zjlJuGZI9PrQGfAoYL/Z82a77xVs4zuJz00Bf8fqndlsD5CoxC/W4KU
JBEfPOsi4sZIIZx9ezZq4/+pO2YHqpkpRE7DPIcq4qau23H/baUQGctKx/D6
j0Lvew3NdlCISTvNg1uxD9ZGnzuNk0LsPa40hH2+LbJNzes7KURhoMhDdi3c
H1INUN1DIVKpY33i+P9ZfbFqKB+FSN7vIIj94+3hJzb0C1CI43s2WZug7WJm
acUSohTiYEiDCWCfrpjww4fiFEKAn6Mf/y/rXIqVqT5KIapCl5bwepsSpdxz
XDIUIv6rZwz21T71D0y5fpJC2L0Pasf58/sy851UBQrx1Xg49in+v8fnIbCu
RCG0bTePmSH2HVvsUVGhEDuWy3TOYN9rtnV0iDqF+Bf8Qwr/P5X2/KfXd5FC
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
IUiQzyiT9L4M+XbMSnFDdcpp1270/wGh59qx
        "]]},
      Annotation[#, "Charting`Private`Tag$227725#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Theta\"", TraditionalForm], 
    FormBox["\"E Field magnitude\"", TraditionalForm]},
  AxesOrigin->{0, 0.5500000000000013},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{739.22265625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.1415925253615216`, 3.1415925253615216`}, {0.55, 0.65}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.884618066122024*^9, 3.884618097977374*^9}, 
   3.884622674222335*^9},
 CellLabel->
  "Out[1007]=",ExpressionUUID->"b0fd76c6-7fbb-4660-89cf-6c60c1544e23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{"GetEField", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0.16", ",", "0.18"}], "}"}]}]}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{"EstimateEField", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "d"}], ")"}], " ", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Orange"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Theta\>\"", ",", "\"\<E Field magnitude\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8846180065807867`*^9, 3.8846180279177437`*^9}},
 CellLabel->
  "In[1008]:=",ExpressionUUID->"a41980a2-0d1a-40b3-a32c-7555db80f774"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
1b6nPHCgwORa23BYTSMptT14o476+/69f6o7fjeSyv0MHQy21H5Ee6K93zSS
z0916DLw+fDLshvW328kvo40m5xdKHCkTN/YQa+RMDYJn6f2B8o44fBnVLKR
rLxRZ1JD/md/v+Ew29lI7h+ffcn6iAKNfEkOTfMNpF7wTqm6J57v91U1Wg0N
5PBBllty+Pwc8+TRgtQGYvbm391ylP/Ug/mFfEgDier05Cr3wPtp/sjIr4cN
ZIOg4DUlfP6TpfoZgcsNJFrz5YVsfF6szTL6o2wD+WOr9e4uPp+t/XzDzj0N
ZP37nKgEHwpoUWKM/ZbryTk7D1sJfN7n1f5ac5d6ckeP7k0C9X0SekWx1qv1
hO6I/JzcMzxPjoYvzivUk3md7FynF3g/jDmPFHHVk+GBs5cC3CiQbxJ6RnGt
jojs2nKcA+2hEWXL3P24jkx3PWLk8MZ6/5P4npcmdWR8x5DVgUA8/zt1HmxU
qiPd7jSeFHes17zv1jrz1JFcVxlPaS/M91b9xaZp6oj7hzoxLz8KlNh8e3Gz
u5bQ5FoJPniD92/v35H23Fry5miVXu5TPN/6Q2f0omqJv2SjLyPa96BkU0zJ
k1pSyqiyLPaSAvSKh2lPXq8lbaHcodbBFAj6pWLyn0otiT33iEsF9R06bJYp
wltLglzo6/1RX9I79z3RG2vJWsGV3BjUd5Ip4gFnfw1JGnul2vYO6/nHpDaw
oIZkHdo27YD2Gc+2ijHE1pD4G8NNr9E/4xYrL1y9akgC46fvL99ifZdwdJuG
eQ25yGGr/CwM78cZ85ecyjXk74Cw7jfU90H2/bbh/TVEXj9d3uIV5odulS//
W6smx+8nSpiEUMAyf+N2r9Zqsu8/PsmJCApoMsoF6KVXkz+FymaWARSQ0LHZ
fiikmmhqmYyxoT6O4OiA6fvVJPid8oeS9xRYa23enqNbTU4+j6m5GInx9MD2
wJdi1UTsma+R12vMN2+eYjHaVk1oDty8dBbt+/7dKfDIWBVJpVdcnPiA+cXs
D5aVv1WkJqHB8uZnCjge7wss/lJF9p++KXsH5xs93sMa8qyK9IJp1TPUp1yg
9erG9Sry/GnpXVrUx7/Vk1XyZBUpSer8/CkG64Pz6a9o91cR+WqF7zxBGB+D
J1irVyvJbH00W34ono+2Q68jWiqJPuuE1J9PWO8fvLLjbloleR5leLInFu9b
y5evFYIrCQaFa2cSMH/6Qdmx9X4lOaMvp9yK+q3nll43n68kYpGcG/ah/vNy
omxfj6K8L8Pnpr5gPeV+/c0D5krCdXqY8+B3CnAVvmM7PVpBPGjzKjhwfTYw
Vbxh+1tBys693M+P8wfO07H3xFaQtOkkx4vIvyxENijRs4Js8fDqOoHzf7Xf
YX9sVkF0ygsW/JIwXh36HKSpVEHEA1bb+3G9XKya2Lm4K8iOso7erTifYrpP
uHG5nNRU0CVQ+zG+HHsufD+lnBQP2or++IX723FGmPVeOfn+Qm9rWCruz41G
Ij+Ey8kXkfsN79D/EwFFIueGysj2+g8vAr7iftorITr0uYyY+JwruY18nn4J
F31mUkbYC52IVzKe92MMRw/uLSMxZps4nqXj/si+dzS7oZT8zNm8wRz92ave
dtTwdSmRlhDS3fcN43uDqtiyZikxPSy97c9PXG+zX2LBW0qJl2kC/yWUpzKx
V/xYQQkJ3DIx8vwPBbY5e4lXuZcQtctq8+Po3yb6afE7CiXkjqt0nzOuT9Sr
qxKMS38J7czrnzOJFLizr1Diy++/JMY27K5HCt5ncWLHTtn8JfNHpdY/pfYX
lQo71i30l3z2ZAmVQPvKcugl3QaKiW2fAG8SygvRsJXcG1VM1O0FZUXQX2ZN
LZJpRsWkhP39Bh+UJ2x+WurinmLS4szVyYHyFiZ/Ss3UFZHbhZnbjHMokOvC
KR0QWERqWR4IFqC9/gzPpIU1isgJn0bTDrRX/82k9F+GIuJ+ozxg6jcFDuw3
kLGgFJINYbfilNIwH4jPl6F7XEj8c0t+GGfhfS19VDZSrpBcSYiUcMzD/DAv
VBYWCgibrcofFVyPgTKZV9dTC8iB+Ysr6Wi/RmP9sM+DAlK56s90Fv2Z1G2v
nChdQKY4V8JLqeszxhrWsJBPnBK0XF8SvI8Wfs6upuYTGut1qUK5uF40WhqH
HuYTVfmU7aH5eL9sHYtWk8knPte9/hv4i+u303fNZpFCft+QpqtD/uw8AvrB
/1FIQOarDun/8L4VKvyR+ZBCCsI4xkMzMD+WNGfolaGQq00J1xKzKXDqBK3p
lqU8svVOqHA+2hOvFpl2NC2PsBvUP14qoPYTUGTVd8wjVcqR9hdQ3wPjNqtH
snkk11ubsgn1tVo650Ut5ZJK1utWX1Gfkj3H3r9pueSX/YEXBagv1jXVftIx
l7CqNv5rQPuYvPXKdh7PJZmZw5mNuD52r2d4FZZzyIRFf6cb6msKD3Q1S88h
2w4ID9gVU/vNijZ4O+UQ2uM/50xKcX/9KhP9eTyHFAtMCEhUYP6Qeet5/XI2
OSux7mY0rtfdws1d/9KzybmNb0fScb/WVsXKHnTOJmLNYvSPcf0+9vcM313J
Imc4P97pomB+PuWu/DYji3h3F2mzo75bK9xhf5yzyBeOcKHwEoz/G8lst1wW
SRgK/7enHOMNT9r7HUuEsAQI7oqvpICM1Nw5E0dCRJnTvaJqcT+ri619W8ok
Bn7Ld0dRf4Wx9Y8lx0xy+oXkC2r/1VD7ryanl/+Qo24c8t/QfnPvPpbXTn/I
aY2nB9iQj9gHnryO5QwixfcOqgqx3vxlaH/EOYNk2P+9tBP9X1j4jtdxJZ38
Y019oor+eNVaV5/vnE6ei6R88EZ+hlMsz1n/pZGXz9uqN1dj/kuvKWvskkZK
TicxGCK/2T0+w/H//iP3OC5/uFZPgSzRgveLLv8R9u/2gi14fnxVNmicWk0l
ywH3j64i34uXYS3wUSqx/zjidAL3B88dpx/tqymEXtSDE3A/jnqkmAi5ppA9
DyZtBZBvavA0y8O1ZLIkOm25Df2pmWNlz7IumVyXGdRxLcP9Xh/Da+T2mxyO
mXQ6gevXN9xdH7fuN+GaP7OlFP35cx338wW3JHIjx7FXp4YCzmwGsirrk4jx
5gZO/jqslwSChwMe/yKHZ9n/+4b8WaDmfdv6X2R35rVnJxux/ji/TUPQPZF0
VdfocTdT4IuF+poDTSL5ZnTvx0fqfnPx+pHn/pNs1Wmu3Ir2KAbmmWzf8JNM
b3AzNUP/b4lZx2ro8YO8eNqrm4H21aXL5X3d8IOUU5ov0RZh/frQtG2K8Tth
b0p9RYP2+TqqSbxkSSBdMrHmm3F9rFz2dhTvjSez4c9tjuL6ND3aKGlxII4s
XHqcOo72n3Ub96Hj/0r0rwbtYUb70x43dEYKfyHGu+bNd6H9Ah7ZUooSsaSt
bdyX2u/63ZOvfq0yMUTjfEqYJ67nZs9X3Y4QTW6JToW4oH8cnznL7FL5TOyS
B0864/oOeV1/8ftsFEm14Vym9tO+7K3Rq6P1iYz+/PImCf1V7CN1fOJCJDkv
ofvPtQHjsR93gN+VCBLNJ7oghv774s/QL2DykTw+5by5DMdi3L0PX5aGEwOn
/MXSJvT3gZRDfxvek/fWtvbH0L9Th55X0vW8IwuGc3IzOK7ku+KiOB5MPlxj
uxHbgvFJ8Ai/01IQOav24Hkvjl8Kr9X8pntDWDQFU3pb8bwerXSb2PaKWPux
pO5rw/tL4pOQIGcAeUoUagxxbGQ99OOvhj8Ra6gZGMIxl53/phPXvUmjZAGz
VTuu90Mx42QnT9K0NeRuAI7DXOtSBAPdSXlQKWMSjlM3z3IpabuQvSGHzrbg
WIpdvkzokT3RSD9uytmB63Vy87KwnhUx9qc72IZ4RZLEr03GF8n2945S1HGN
XbyC2E8AbbGyln9U+Q4qg1rvr0Evc2juHxxr/bhMkY+wAbHNyW9Xqf33o1jY
z9s9hI6u1rFlHH9Rvy6e9MkNTIM2/KzG8dCp7GYFvycg1Xpkx08cC5zY+6To
vhdY5X5ZvYtjq+MPhXSNfeHyUsgRARzXvbO0HD/4Eiq9bqf+Qfvn3gZnJu0O
hOJkbX1oo/4ens/iyPQarK/Fn1lDf0oFzpjDhiBY7uqiMcOx/guedNqFt/B+
OvNjP/r/ga8Wc/FICFz4wqASiOPg54+uvegMhfuel0V0cP1SPeNTdOvCQCH/
J9Tgejd4NG3h+PsBMiuKzdRx7KxI+2O8/SMkkJYzP3F/MMKeyzpNETDAy3j3
J+6nMHkx2t81kTD8uYmrDfebsNyZhJ3ln+DWzGguC44zZY31HYuioA1sfGRw
f2rIONC05n4GI+VfQmm4n9uk/OMhMxqEO2lfp+N+t5b8rBeZGgMepXNf8vA8
rEpkrKP7FQs5oeI2tXhe/MWrv9749gX6/W+9HMbzxCU2pFsc8xWet5/eegTj
oZHQqX+6AQngUpacyIfnVS442n/u43f482m78DLGK0b3DdvU9X+ArnzU2cd4
/yyl/Grg7PgBE09vX5/CeDA4ei1i9MZPuKB+/JYXxouGAzssM8d/gtSrrUJz
GE/yL+WJvXBIhBreJRM19F/SC7tlo7VEUJf7c0cb/RNJOZgn+uwX6A9Kc7xG
+18u1/iuZ06Cgy6JkS14Xh8dfXqhKigJvgQWG/agvVfCevvuRf+Gx70OzI+R
/9nqN9+VhZPB4aq/xQ1qP3mGUw/YkpOhMC7/szvGG16YU+yTTwGziU3qvzE+
7bCPZkihpABpTw8ORnto4vSqnp1LBYufFQXXkP9Ex8ZQ/dpUyCg80c6A/NvY
U67xX/0P1sW6BSfi/VyqfkNoqec/mOrscF5AvhnuO2eLb6XB6NvDvlXI92tq
wZ/QmTSgf7+sfAr5Bo85eN5yTodZPevdfsjX8yCfpjxtBqi5xnGwIF+7yw07
mXwz4NhIweFY9L/pS6+ONtY/YKk3e40L/a+VL/3le+gfSHmRNfsA/Q0rAzZu
BzJhBr7wuWF+IiwWIqsdlwn7rHV2N+P9xGlxZgOPOIGlMo+M05hfbA5f/DuV
RuCgv4lXJPJZGdQtNtmfBY+s5IwrcT9M034TPns9C6qTUiNYMP4O7aN7JfYl
C6LCpdVa0F+dslfnOUazoFj8TnEPxvuGC7+vbDiaDXaO+j9mMf8qv7s1a9gu
G1Q2v7y2hPdhvs/1gzWp2eC3TURlHu/3zOg/Xhkr2aDw1/bmW8w/fmezjUYp
5sARlvGzLeiP+Jbb2n5PcuCCwJEzOZhPRM1TftsX5kBI1mq2G+oPZeHiMGTM
hZwQrosnUH/gkfuPTmnlQqu0Tss0rs9z1bIu4de58OHgxAwN2u92jff0zoZc
cGNcT+eN+hwePYpb25MHu/ben1DAfNg6pI55wCgP5OlPat9D/19PErar+JQH
/3He9M9DfQblng2p/XmgsUpbIYD6dIfa5CIEKRBe42m1Hv2tRicV8fwOBXx8
mdhuoX1K3C/obDHvbrvtzpSB+Z3s8f6bl+cxT87a778O89mjelCmdDwfdkfl
D2XifuSzeSsm6JoPcgPvmfag/H2+40Gsufnw5HxDiR7awx5zenl5YwFkyP5K
PYP2bM35YNRztgCsdWfljqM9tK3zuSX+BTB+7e2CNspfntfk+11VAG8+nypy
w3x6iiXWN4y9EFTdnmTWUP9fwpF1k08vF2L8cDEoQf6dqvoXrMMLQePM8AaC
/BV6nU1KWwuBgftjJwPKf/c44rbQ3iJQCO61OIT129ze/Ic+BkUQoXO2NvgH
BXTShp4OhRaBg9GK22A8BRL0mAPPNBfBea4XDxZR/uZp8fBYjmKAds0oQeRv
/kL/K/3lYrD7sNjLjvVbjqBLsnlIMejemSPHkqj1ZkQOpaEYuKvZI07+oNZX
+WUHd/0FTydYFEb5deuGmzwu/oVLScZNHShPLIy5vyvoL+7bRfWvyNdfRmL6
RN1fcE3dkuGE/hiq1V/7yFYCbYuJ5lR/nLJ12bLuQgm8eg5ryigvkilyp9Hr
ErBlb2jjxXpv9Wv+gczqEuC5Xn9JGs/L5dPDIntZS+FnxRWzftwvyd3Mcs46
pfAwzUzQGeshFjcJ1eaAUgiR2HzKGOsla85LurKVpbBmfVNIBOu94lQX45Bt
ZdD2to9/NArjz4XIWwuaZcB+N373VuTnMZn/4OKLMtBZRzNKQXkdfsNPksvK
ICaKEuSJ8uQEtgWwMZWDtM2t+ztRXnC+RJjduXI41RbFrI3194zppS/VvuVw
lPBntWJ9obXm8luspBxMJG09L6C8unOVHYV0FfCfRc+1KLSX9n23+YNDFZBN
e1trGOtlsaHZkcMqFfA+8KvnSazHjaU33as3qwDlittPHXE9/D05Fj2f4PzE
e2E5WK9l1Ai5SkZVwFFHk2e30F9DPEDXl1sBEqzfc/I+UWCXjbbPm+4KGK63
Mxf/gP4m17arbKiEVvre7mbkY7f1/tsZnkqYWLe7sRTr18grXnujlCrBv1BF
hTka84kv7z6dN62E7KyzuleRz+p8PP8G90qovBkdk/CeAkKnyPfEiEq4HiDD
yRJPfX+78phpdiXc3cRXphVDAa+u7vTtnZUQpHFbPwn9kyw6dyJ7XRXk6CwF
NYZRoOfRpsK73FVgWh60qhJEAdZSDg1uxSpwVUobM0J7lPYcqSk3qoJUNcZK
fbTn7k247OpaBQ5HrpjfC8dzn6LdIfyhCk7d8y2fxPkldGbmbZlVsEavzOuO
85fO3x/xa6uCaf2iJ+E4ny/Sy1Z+tQpcyIUufuSvN/FuYWRvNVCqe0XHcP4T
hW+P3stXQ+76H4YdARRI9CW06ler4U6odPQU8u9oqvRedq6GuBqG8cuhWA/y
92yLe18NMxm/o6RxvpzDXNDljGqQf7urVADnW1I27d3cUg2Gscojmjg/mHXP
p/+Wq0FwqhdM3lH/HnmE/+aeGvgV++cR/RvcP9/h+67jNeAlYJk89ALz789c
1pMVLXD8TXKFuwn6b2O8TuxUC7jV6VN8LLF+uiEjZbSjFRbr7+/gNKPWj/l7
2CVbYU7i5c2YqxRQ59ddV3qxFWiv6QsJW6D93p09Hg9bwenTVYd3RhSgG7Yu
kg1tBSOfN1PHUF6X2sq3yYxWiEmnYy+/hvdD/PPA2LZWyHjnaHf1CsafrTsd
jNa1wZ7BcY5Maj9z66gr7Dxt0M37cTsvytMtP6pYerINntWwrbrrU0BUlBx8
cr0Nir/s299pjPlKgDrD8WdtcFvfyTn9MgUGJhtHJ2PboPbIf06fkH+ezo2q
2OI2SI2Q5pE2pEDEr5lko5E2eKx4M6TqAuYbO9xD2Zna4WsJY3c06rtsz+xW
KtIOElxyXhyXKCBZ997siXY7/LfLsidHB+OBlMCZ4/fagb1FJOYz6ht7m3Jk
6nU7aMSOTcnrUuDvgjLLl+R2cLxm/usp+iv2UtWcUUM7yJ2tV9BAfU/SjJrZ
l9rh4nx/bokG1gN+c+19WztA2vNI0QG0j0tBXieHqwN6j1e2xGljPTXmkRcm
0gEG6TPtZshnObxY8qFiB8gcEXqRhnwsNbd/0dXugG2d33Pl1fG+Xru4R9S0
A2yPq84/OI/n80e435Z7HbDvguQFjXOYjxn3rvV5dICghuZhZj2sX7cL2ea8
7oBqg5ter6j9WLJte8I+d4DDOw0oPI3n0+Y/vYfJHTBZskfkhhYFbvOsK9It
6IDjz/zPC52lQEvVqeOiDR2gK+j2NgPxsx5+37YMdsBqwr8TwWep72fV7Otf
7IAbbFnhEsoYH3s4AnM2d4LaWvqP8+rU329NaMP3dELpyC+1CMRpVGLvPxTq
hH1CGff9EL87OzagK98JSyelXMVPUaD987ErohqdMMe7V7QccQ0959ItRp3Q
595a/xPxjI250H+nE5YlPn+2VcR6IoUhMcetE7Th+D4aVTwvN7QOhgd0wksB
rsJfiG/c9TboYWQnVD71eLsFcbvC1k0XfnWCyRFrl8oTuH8fHHQSzesE0Tyx
d6voD21+q9EttZ1w/bH0xSbEsxp/GvX3doI5R+a3seOYn3kvVObMdcKYR4GA
ohIF3suCcjh9F1zv9DBfOk79HvZp8sNdXaBpeZd2nvp7cmgJ3wX+LmBRHjs1
IIf1vxprqKhsF3xKDNT9gbjuyqWtjGpdwHGIw/EF4jnxH137r3SB5+jD9O0n
8Txc7Z/MudUFrroSO00RD98qbBbu0gX5w13uzpJ4PjLt6h76d4GK9E7BL4g7
WaerXvjQBYXF9lsZEVeCWTOm710QUtpnR+3ftHmbyOOCzC7YIOLLcE0K67cO
izC3si5wGmNqCUM8+GfkfzJtXbBZZVFxAHFj95baqdEu8GKsy6T29zp8nn0q
7l8XFF232J0kjefjgBbT9a3dQJefmbOCePLMcwGuvd3wjNvvjawMnj9K7ql6
oW4YCat3CBengErQP9OXct3wRNY0MgBxxhtSrmfUu+ErdzRdN+I1UjahNAbd
kF0xISQjjP7dFJeSbtUNPhI8ihclKHCtsafazqkbNPOKFWsQF/jKNXHEpxvr
SYXDAYhPOeoz9r/rhkKLFecJxNPUAvk+fkX9d1kLVxB/zFmifCmtG1yKiyN8
RSigOkpnwlLcDSFO2xTXU793yQSXv43doJhb4hiEeIP/w5Ang91wiTvn13oB
Cnww+vVbfrEbGIy2r/Uhbi46Wjm3qQdsefdzKiAuvP7w2PddPWBlzxfxCPG5
SuPNN/l64Er6bO9jxP9EvuPlke6BQ5Ieieki1PdlapSaT/dAnrKoQzPi6spM
Rq8v9sDHgwlmBojvYFN1OnejB+R4w2c3It7c+/jtRoce0I8ZuXsP8cjk9F/E
sweCF6QEZBG3fDZb/iCoB2weC3+KOoT5gb7IyNHoHrj9KObFLsQX+W5uGv6N
42rN47EHcX8vRh6MovTAm3PKA4cR9ypuUbxa2wOT+gdypxHXCmW/yt7bA61T
nCmb+Cmw85bWw/KZHthGf9o5GvE2Oe83XrS9wKVrd48D8eiteT9P7OgFd8nY
o9R+edZt/0qXDvRCS7pbNXX+se9SQ7/Ee0Hl6Y1r3w9g/eJqs/H2yV7Y41Qf
HcWH8Vwrjof3fC+0LvU8UkPcZ3+vQrtpLzStCjmfQ1xniutKsG0vKE/R8kgj
zpGr76Dt3gumMUvQwYv58KvAV5sDe4HpStLoIcRjzUq+50b0wk8yGVu2F+PN
sY0lzj97YfnHZNEkDwWkNioOHMvuBdbbKavpiK/WPaQdr+iF6nvc3nT78b6N
+cUd29ELXmo0xiGI+z0YlTOZ6IUXnsUGddR+iGcOX+JY1weuyTKzXnup/YtM
7KuZ+2DyVvzMdcR7ht4F+O7rg5bEHTLPqf0v02u+qYj0Yd0RUGKIuK0vU/Gq
Qh8025ffPIW47FXVvhSNPmh6K58lgTiNsDuNjWEfDFU/H57goEDRajqXgHUf
fJ+l29G5D+N5+axst0sfiG0QOpDFQX0fT+Tie78+KE95p3AI+czQt5l8Ce8D
q17uj1KIv7zjeyv5O/LTupf6ihPzsXpZh9ysPvgoK8J5eyfKVxh8XFHZB79c
q8zTkI959Fvf1q4+WDVSWP6F8miYTr0dmu6DhYxCgy2Ih9vPRMzT9mOdaH8u
A+XJtkbG07L3Q6R2/MerKK9OWTtl++F+WFad8G2j9veMX8vmku4Hxf1xT9+w
Yz60I6FE8Ew/qMR9PkHt3x3nZFAvfbkf2osoHszU9we7N3epWPXDdGzlhY8o
r+fsfyM6zv1wRnOw7SUb9XuiG/NGfv1QOB6mRn0/kpODneZ2eD8o6KY03kR5
qY/zGB2/90PYgYCN3ojrDtrufJbVD63v1I9R+59OaO3neV3ZDxaH/Ov+oTy/
1HKhiK5+qBam9dyPuAD3I6mE6X44Ph290rsd98MzIaV02gHIDTPf8xnlmY43
qReyDcDYpz1Dx/H5Vb3nF2t5B6j52soEPv8uU8q0S2oA1FzY+aLweUnevlvj
qgNQecT5ujXiVX6vHVYuDcC6KzQOxxC3nlVyZ7AagKAEmu1z2zBeX530ZXce
gO0nWJmo/cGj8z68PeA3ADM9al9Fqe+TCmlEioYPQEjJ70JOxNtfrcTLfx+A
3ZYk9hfa47z8NeVs1gDszczjjkd5u65dyrlYOQBJObQ9FOr7tsX0pWZdAxCl
eW+vCo61xJLrbaYH4F5ck4UCjkdCzLoe0Q7CtgODFjU7MD6sZx31YRuENQcW
qSxmChy8mT0fzDsII+wtx8pwnFVxhyZaahC2c49IfqO+DyzNtfWX6iC4R3v3
Ud8nXvhQsjPr0iDInXnpUsGK+QG9E0+p5SDsiSswXmLC+voO/5Emp0HomBW7
6Id4WV29VL/vIDCzKXP9RNxSwVNpJmwQdumdCdlPfX85WuLc+u+DoBlRyULt
txu5tfsiU9Yg8L4X3LK2Feth+wDTPZWDsIOu7l8AC+bHLXCbr2sQ+HgSXO8g
fl95zOHYNNo34Br+AHHW+PfuSrRD4Cbx55Qctb83q5qfJtsQSLGymPAyYnx2
WnxrwDsEiR+kJWfQPwNdMZE3pYZgLajee3YLxvOzet/uqw4BG02edgHi3Im0
qR6XhuCLrc2MG9qfsftXzktLHHeb3/iDuP5jk9IwpyH4nFwcLkl933qAueGr
7xCo7PcV1N9MgUCtzK6UMBwvfHnOjbhw6q3RvIQhkIilF3Ok9gfft2ehkgxB
oOCPS1T/mj8rommvGIJ93vBJE3EDZquUoo4hEI9qUKa+7639lvFW0sQQ3I3X
da5He07tS+D+sG4YGhgc1Z3RXrkYzdrn24ahgvf24H+Ii4lMPrfjHoa5D0pK
gYgfTglUMBIdhvgKiXc3EecEiekzisMg/J8n32HEWQpqYyS0hiH0vqEVdb02
aToY7DMeBvHdJfk1aO+/ul3bN98dBvNXL1Op37dMGaZRZlyHwW+TfJwH1Z99
VxzbXwzD6OVdL2gRb7X+J1z8YRiW3N6RZ7g+VXPh3UnfUZ567yF36vctjxSD
P5BhKGpzqBVG/M/GLnXv8mH4yZC9KoV4or/Hevv2YXB6s9NQCPFY9kPJRuPD
8FGG8/sBxMPC8y3Prg2Do/4IPyvigbwW+44xj8C3AzrZ/dT+8wkMNfv2jQAt
/98ECtrnIhnntVlkBCSb/9w6g7htprr8rMIIWDItHNVF3OLU2GS7xgics7Sw
6kP5hmUvoosNR6BG4lkilf95vaNXfluPgGfg9Hl7xFXbqpg/PhrB+kFB1Apx
BXO7PG//ESAabP8uIi4xxvbQPnwE1ILi+MQR57+fcsQ4YQTSj1Uf3Iv6uVb1
u85mjkCw4MP4UNS/w3Mp6FjZCBi6+E014fzNTO/VuNtGIPT9NYM2nL/2Rn7d
lrERyOUHnkvUfth725Nm/42AgY/VNU3Ehz673ezYOgoPTz9Im8L17TjCw/V3
7ygQ5v1+8yi/9ndu1e8jo3Aoynw3tb9+sfz1Zx/lR4FJb0sttZ94FmWjnM+5
Uajt4NaYwPnJ52In7K+OwixbggX1e4m42jOfjW+Pwr+bAgxOiH+8OnxJzWUU
KtJNU21wflCvL5Ok3yi4yh6rrMfz5HtbOJc7bBREg04pMlK/L5otd9jybRQ2
6dsoMeH8+y42QnMZo7C5JPLMfZR/i461s6NkFDK0n2k/w/hn6pf05m/LKHBc
/W91FM/HRTa9s8kjo6BLk1TMgLh62Pzqx5VRsN07orSGuNKhkF8+jGPwNLao
JhLjnfQ3WYv7nGNwsnT0JPX8HDnWwmkiNAbbHrERfsR5/rhUqsmNgV3QC14t
xHep7POUVB+DOpPEs9TvtZhKs2T3G4yBqLnFOur3KxsumI5vuTUGQhrB/SyI
L7RsiJpzwuf1NShb8L4aM/us3+kzBlwnQwJO4np0j5zaWhI6BsVrn4Tu4P3S
YDeQnRw3BlEN65n10B+5TwQFff+OQZq7sSn1exbZtTcfeZvHIHy/1y/q/9NI
fLiOPXtoDPzUVf54on0CM5Y+V5bGgA2OHfFC/pHWtevmGMZBW2Z858BuzKcG
4f7L3eOgV9r5qRj5BV77OizAPw7xzGvGtcjPXd+1zkh1HEp3NcllIp+lqkG1
pYvjICnp9oDaf9/2nG726xvjMJ+1ST6G+v1EQaakiMM49JYvuL/G+99UiT++
yHMcyu9vuXsa+TVlvNpvFjQOhKy750p9319qNWj18zjMdTJankL9xT8tGEN+
jwNHoOWrA7up9131Y3HKOPDR/FNtQ31p0fLzpTXj0MRqsWUB9R3dH3vLomcc
vnFB7yrmI7GhLF00M+Mg0mEWMoD6tvlkxpWtnwBaV0n5dtSnXnivL5RhAiIp
Z+8qUO83Ov79N7dPgGjFPHFGfXlKbVckd0+A4E4Qi8N8a53bq6AN+yfAndtR
sgrtl/ujWlnBNwFrphY+THup32f92xIuOgH7HDsqdyOfJKlfp6ykJ2Bya6Jn
GNo/YWfxWFpxAnTF++XWY34plLg3g051AnrOrQ51oj6L8aq5Ks0JWPppxHGM
+v9whLyOfrw4ATcDOm91o7yOm/K3bhtNgPMfIacb1HwzZipa9sYEcMe6uWRh
PqvfE9NJf2cCXLc3+59D+17vv8pZe38CMtaPSS1gPllhyHIx8tEEVCxZclH7
yTO+Lwi44zkBE8vleT9Rnmqjc4mc/wTwvdbLdcf8/Qm7GP3moAmw7Ywx+If8
s873n6gPm4DtW46UySL/lZfvnaM+T0AZMw/9T+QvXaadYvNtApj/u7TMhvzt
ttBPKfyegBDJ8/q0mJ//UM0QYvwzAS+Wb19spPYzf2pzozFvAmpnywqVkT9f
Lm9kdMkEnL5owKmP9YLZupaWezUTsMrKrzuA8j7IB+w80TIBqhtYPgpifdPk
eEqHqWcCHs4uO1P9wZ667Ns8PAFMJfZPWlCezuyPgtjpCRi6fWDmKtYP/mLm
NPeXJ6DfJX2TNPqj+M4e+ZMbJsFZw/7BK+r/M/pW4bBtyyTQRhzSW8N6SGno
aWIryyRMnJmL7EN5jw4fH/3KMQkfpcnGxygvzWzi8AOeSVj3dEebLRfWexGf
TVUEJiGZ+7+0v9T6q/1yGIvYJNz7OTAlJEj9+/K2hnYZxGdbCtah/75eorB8
OzEJp7tkop1QXl+Q4znHM5PALGYttXAE40uNiNdp7Uno/kFrKID1jOH23pwd
lyYhu8bpRyTyo31XM+NjMgmDXOu+VYmiPJ483g2WkyB7/+r+f+hvrbhf+o62
k/C7nPfWihAF5sU/eU86TkJ8UK/IJeQXnhGYYeGB9tcGDbIhP2UV97F2n0mw
Snk8MILyhkptuC++noSkAHeRApT3Us9Ep+z9JJh/sJmfwfpasl3ricrnSfAV
opXkw/q59YZicsa3SRgKXbnxmdpvYEJkQDx5ElJ0C34nojyBh/s44jInwSct
c1IR7a1Yz6zOUzAJxVnvSy6hvPveqy4h5ZOQa/Dd3AjrdU7Wse/bGibhaGOj
4lfcD7mhrZ3POiZh8uKLJ1vEMB88WMq6NjAJey7NXmSTxvP9LUPl/uQkBL1V
6vklRP3/zPEOo4uTkHCPfpsU8jPIDP1iRjMFedruK/0oj+a0T3Pz5ikwPdh8
exXr6S/ljlvPs06B6udLAryS6D99SyjeMwUqPQUh6rgecx2XbE4cnAInumdf
FMUp8P7mmU+pQjj/1bU+MxncL1PStSLHpmCJl/+WMT4/4MhHHyM/BXvXh4p3
ov4XG3bJcJ2agmHuX3ek5dB/vvRWbzSmQIKIWu9H/7TsmH/PeHEK/Af9m9hR
v3tYX5mH0RRoP7TLylHA88Fbt275xhTsuu6t7Ub93iOBImZ7dwqkiARDNNpv
L/XbbPDBFOj4rddOxOc5s6KCjB9PwbW3rS7n8Pkc1deF9c+nYGPj4aoVWYw3
lR5LGoFTUJq6RNtB7ddx+Z5Q/rspSD/7L4n6PUhSl6mh/KcpEDjcHz2J9l2x
0nmZFDcF7zU2hRYpof9mTuQIJk2BfEUXzV7kG+t8dCYyYwpaLQqDj6J9GnT7
eTkoU5CgFrXKhs/P+G3TDyidggrJ4aliKayP2Nd5b6qbgqHGGBIpT4ETH8bT
XdumIDGQaXfoSfTf4fbRub4piA/5yC+O8v1/lO2zHp8CNwHHmSy0T0ImU7t3
fgq8Weh64pQxHmR/8zBYNw3nhto2/3cW68OzYb+rN03DTp1yyWbkc7jat//s
9mng09cO8VVB/11x3p2zexqGe3nufVHDeNVjpSbDMw1LQ25DRciH4/YVlx8C
03D96JcHGcgna/bs98Pi0xCfk2rlcgbz7UeyneHHp6G1+jCnOPLZSi/Ayq48
DSWTMbSrJ6m/j+9W8VOfhmp7MeEGfP7yLgYH2gvTcKicxyNbE++TiIVYp6vT
MDq5mrxBmdpvdqBp6vo0RMyu/ErA59UT6xktradBSzf39lN8flq2QKHz/jSw
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
d33dxCG0j8SZfUL+X9m5xO6z5BA1PadV+H/v6FogqTFiyyHO92rdvIr19Vht
e5ePK4fI29yXlWnHJigxF2K/eXGIrplrqS+QH0l9Cw3fAA7xLNX7bz3yo/Gb
0T0aysH901OiDfsbP3gV6xfFIVat+Y9Xi/0dvSI1xk5xiGied4Yf9g+Q1e8+
kMQhxuWcZD2w/4mu6dgfGRwif2StaoArrndJRRoBORzCNNChNhH7F5j5d/+8
yyF8ln+s1t2B61fycsfeIg5xSvlG1ijGo3ZPV9fbUg6xc0I8XR37hygmOFS+
5BAFQn95X7D/0wDjrgdvOMQbv1kN4Z04n5/N2F9t5RD9dxb/oSGf+uT8znPv
OcS1xfUsI+Qz3NzDPmyAQwRdCom+Zo/1VsriTt9vHCLyicDxu9if8qnRzukX
h4gy6uNVWWK+oRT7zuw/DpHd81RXDfvHH1xrt57MJRS2d8rsx/51JWMdygJc
guNYLJPIvz+FcsNWciGXiLGe/f0C+1taOHQwpbiETKME7zban5g6z3ZGjkts
tk2ez0b7Wz69bP+qzCWmLy//+Rr9F115xKZTk0vMVezOnrDAfPOQejt7HZcY
+h42WOnCv89xwPoJcAkDtcLdk7aYr1DS225t5RIPsiOCB7ZjvWtpaZ26g0t0
Nz+8V2+O+Vkaue2EI5f4zFofMYTjl937dGfwHi5h87Tmy2obXA9XHmj18OES
ERL13ZbbsL4LlN9pfYhLTIiUe+3m/322rLNl41EuIffBw7oM/c2jnt+hFc0l
9uukXj+K/o5abmyRO80l0m9f/7oJ/VW/9Ge7SBKXSFogUDlpivHQd7+Zl84l
dOkmTo2o76Gy+/bx61xi4OLcwW7U9ztQorn3Dpc4fDfNiv/epF55w7amQi4x
aG0iF7sZ81laTFPlMy6RY7zQ8wfyU2alty3/BZdo68v/14T8zF36/vZqLZcw
/Dyqdgn1GfVnW51v5hL6m8x3HTTC+aNi/zasi0s4Puh/dNYK50eQkJVfH5fI
JVfvgK1YT1RUNToNc4nThsyLcpvYhCk91NJ8nEv4cM4v9UY+T29Ta1w/wyXk
dw86CCCf9en9Fio8LpFWEX6hDO2bP5DWIMnkESsOPeo8RuB6qmphwRLmEU9T
B5fsQvuSg0kNMxI8Qua3apg42tdR8cR8WJZHVOSsmysDrD8YfvWdSjxi29ZN
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
        "]]},
      Annotation[#, "Charting`Private`Tag$230762#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
88Pol2LCuxvghgDxs1WMI+hft4blTrDp9C/1DztH0GZlveg/O+B+XAm8+u3Q
CPr9X3pyNbgnai1HIX8Etf3IMa3kgvpiNatclRhB6v73/nMB7759re5q2wjK
UKueuwjWOlr24978CArc1iryYxsZTby+0+/FOIqCPh1MyAM/pd8+GbxzFGk0
lBt6gA9Y1i6/OjSK4gKZ754EE632pPRTo6jrksrGOifERxl+9mKVUaT5PCyb
tt9HSWzeRVwbRcLWhasJ4OfM7kKfrUZRYuyjJpql7UWO/HIfRSi9er81OJn9
71UOYhRdf6qf83ErxD+nCFPetlF0yfCkXib4VxeyFe4fRWdzlux8wc7np1xO
zMNxfm6T8+DtOXG+ZxnH0Ccpj187ac8Ltqs909w5hjb02xRXOCB+uFNfGh0a
Q+dmzZ/T9ldH+jOSLU+NIbopWd1hsJ/qlVxnlTHEXPY0v5O231vEWPH42hjE
lYSIEnD1nuK6cKsx5LntYUAK2MDH5HO8+xgaMS3YFAVeHNnamRUyhg6HXWJ1
A0dq1fSXx4+hH1luLba0ftkKm8n6vDHELstqfpXWTyvAS2nDY6j20eYh2v6z
WcBHUk/rGKrpT0o9Azbaal3+sXcM8UQ9bT4B1n7JZlMyM4ZGu7PohcHKAnmC
iXTjKL8oRmkvrb83Q/NbIOc4YvF4K017PnBUcjbQUXAcTQnqVjKAD5dHnrkp
NY5q5TXmmcF86Pj8JcVx1LMtYzNtf5+r8VvGca1x9Khu77lFMIumi5HArXGk
eIUhiLZ/v/599zZWh3F0sMvu//3Sc8aV5IVH40hp+Zs27fjI0HW3nrBxRH2S
I097PtBtty7RlDiOwjNHtefA7UsJf0vy4fWvx/T6wB+8FF8l4nF0o2fNvpv2
/ICpXz3oyzjCFDMh2uuLQh/TO/WMo5pd5rO05wtvuA+W3ZweR6oHzFtXwPEJ
DVaqG+PI6dnL5A1w5CELgRNbJ5CAxbMN2vOSp3mbOwQEJlBPyowI7Xp4nsx+
yio5gY5bC+zeBb5fo66weGYCWUeEztKet1goT832aEwgx60572jPC4xbwtKb
jCdQ8b5rIrT7o3tF+nqp3QSSdVPypfW7q/xp35rkNYFStmmH0Z4PnDFzrA8K
nUCmvgSbF/j41M6HTgkTyMpWMSkULOJcfuRW3gT6wLz0KYf2/OefQb9qzQQa
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
I8izQwWtzjQ0vPg4ymgq3j1S5itgbPLXaFf1jzJLOncfavfB9SluWWO1lJC5
yShrrsD4SKj5+9ibS0ImTalqUwXGY9Jt+TpbU4VMvJK7gzda65JX09tMIXN4
z+FsRbQxf87xbXeFTGxcyFAexnd88U6d9w+EzMiNLB9ddEb/66aPH4SMn+cW
gy0YP266lz+3Y+YYMyt6Uc1pF1wPVnu19N0aY4yLDno2Yjw6EKO2+WP+GCMf
4BdnjdZ739z8qmSMibzjXf8K49eivSuabz8fY6o/eX/4jPHto1j5pt1fxxij
a8mCH3a4Hn8of901e5w5nChWPcLH5+cjV/Px5jijHnxGdMYaHP+XHwmqb0ww
NqnHv3oa4fjXzTV2z5lgRBefIvuX4XitSL5LFE8wvLntjzejv/UEpuhXTjCx
7y0K1y7F9ZAxDrz8bYJZ1CgXqYrx/jFfh2l35TmwZOVwucIinB/yb+qCHDgQ
2DHznbUO3p/P68++dOLAnnl10ezvY2NuV1oq7OQAd+mpBjV0tz+I7PTgwEgn
qZiG+YeJ6b1H+V4caOjymmKEviC+IGDchwM6NgGCDsxXvjfeNFjjzwF7tZBv
bH38xd0J2R1BHHhyRxB6BfMfq4ebIqxSOJAsomhmhflXjks9yHVxIMm9+3MZ
5o83PI722HzjgK1Z66uN6CvemhfD+zhgNPW03ijmo5FBR/qHf3PAV3aj6wb0
zstqye94BHDfuYt8xXzWIaVqtexfBGwbinGPQvMz/IfWShLw8NVCsGDr0Yte
rC1TIMCkZf6HeMyHlep9R6/NIcC2STdtPebPMm+Ubr6ZR4B7peG1yehJbU/5
0noE7HwW0VyH+TnxxXvcyoCAu8nKBmz93nDvtMzQZQS8Wzebp4V+LVaxedca
AiQcRdQk5PD7msoU6XgRUPhbXFMog/uH5UPnHT4ENC++UZqBPrTObXLSAQKc
fmQ8ZesZ99lJlTQeJsDb+MrKpehdjg92TAkiQOfZZK5QWsA47tgpuSqEgM1W
q9Ty0LaeEqXBYQR4enCStqGtfEvc7kUS0BgbuIq16WFXmR9RBBjbcGPY85Ml
xyY/mhNLwMhsmUYFtG548W6XBAJ6vmw82ColYDSinOUSEwlwPPbBoxCtFCf+
z+ureH8vyA6FomWuFHr9lUbAsiO/H+1AT7q+XdE8gwAzMw15th6dyBQTBN4m
YO/XGF+2Hn047653UR4BqYIIM7Yevb/YUam/gIC36utVQtFdZbxKrRICumYo
my9FfxDk+zk9JKD+6wsvMXRD1TbVS+UEBJU+EeuREDAvX4u+rBMQEPl4qP4D
+p+3uf6TXhBwNchdtQl979MWNbNqAp5eac/IQOd2U9UB9QRMDld9y56fpfdn
Hy5oImBXk9AhgO3X8dteo/ctAYJwEwHb/yB2jKjTaCVAVqsgm+2PECly++jf
7QRsOTs1k61PPy5uNzvhCwE2Lj9K2fPoQ9KchprvBOQa3ihi+3fsU8wMpgcI
EMt0S/xvf4YZtjqmvwhY3HZHNgft13/EdOEwAXa3599n65GPlaXYzxQSIMeP
XHoSHXW20kuKQ0KytO+7UHSiQ38oIULCyKG4pD1svbOO3OUfPBKWOvaNsueb
RSPGeZ/ESdguZhFlga547vq0ToKEt7d+9uqhay9Gvi+XIcEpXi9uPvqDW/5g
vjwJ88MKr0iz55EGLXTqdBKi7AvypND/ik6oxKji5+bB6eJokUaNxSHqJEzX
26/B9r+QSlu7xleLhCmSl5tZq/j5ObvokHBgvS/Fnv/OXXH5IH8+CaWDVfs7
0Eulys+uWERCkszj9+/RFm1frusZkpBeo3uiE22bO+W+mhEJIXkb3PvQzkGL
a6UZEmYZmXSz58t7rR26SDMSzGyLsr6jA5RChYMW+P8bjxWz59unvt+Sbrci
IZo3qfMnOu5+7ezXNiSsdbFbxtavp0b8a1LBJ+G3lNM5tt9I7maVTXftSJg4
2P6ArVcv1TL3vL6VBPLHnSa2P8mL357HY/8mwa//2Gr2fLpZEJMQ6kJC4p8T
A+z5fceFkmy/XSRsWPzCWgc96NpW4bqbhM8ttVJsf5QJPd7bjXtJuOsyzcQU
/RepO2DmS0LQKteL7Pm0Yp0tV9+fhLSun7PY9wua1wKUZh0hYWhJaP1u9jx6
X6qebBBe776LmQfRpibPLUVCSKg7eZpi+7vYTB74+9dJEtzW8xXZ/i8O7+UO
dESQ4Kxj452F9shafrrhLAmqYRISArT/kR0pT86TUGSzdewNOnT16eKCOBKu
XlTw+4mOVrjzKu0SCQanlLTZfjRJX1raLySR0Le89sY4OrNo4s+JFLw/sMpy
Os6H4pOakgdukBDcu0zKEv3E1lpz5y28/+pkLfu+p159v/GmbBLMZe3d2f4g
rYOX+eb5JMQPtU1l++n0lJe7Ly4kIUMtbaQPPRLdHaRRQsLrMWM5HZzvPCeJ
uKkPSaj9Mty8Ai073yBLtBzvB6fw8Bb0zHGH8qEnJCzf/tnmGFr3VWhzZyUJ
LxP0NPhsf5Armb2NVSQsWjUlMh9t6VlHPa0lYWGWvX8retOyYcWiBhxfM86t
FMX1ykVMdUF6CwnSa7s2G6G9W8wt4t+TMGeynQX7Pi3w5h6HsDYSjHtXAtuv
6E47r9BiAMf7HX9lV1w/97e8fHr6FwmSTnI5yWjDV+daaodJ+CiknXvRI+Ub
v00dI+GErXlEG7q0SF64laDgYnlZmj6u70FZ7yZfE6Ug94iYgy0arl1V7RSj
QPmk90QYmoxzXag9hYI9Sz2iqtCCCC2zfdIU2JQxNNv/41TQd9sCOQouKSrs
iUZb+eXu+jONAuk2lWvn0X+5+x0yUaXgdnxB5QS62sEwMlSdgqY7bStNp2K+
Mn9VXYI+BWvcLwycwP3q8izx9vdLKDitc3vkK9pRsebXzOUUaMdoxg2jZ0yJ
5bqZUhCxxV/SH/e7z6S9wm1zCpj9jmZX5Nn6jWnaP1ZTsH2F/vMu9K6ej0YG
NhQYm1dILsf9dPanVOsAPgW/b6r9vqTAxgu7tj+2o2DBvDyxSbgf57zQ9hHd
RsHsb/3nndHej/pCrLZTEKsyEVmJ/pXhn97gRsHOk+9iknA/Hw8I6+0+REGg
usb4VIwHHntbTcwLpKCzrlBxDzp05xQpv+MUFFMzFjeiLbbWq907ScGFZxFV
XUrs+7N4/bEIvD6hi3UgxhsvzLZarIiiYJuHZc8H9JklKpvDYyi4Xz0Uqa+C
82/eZ4+qeArOd4ZAMlpKLT1AKpECjUyXAm1VATOrUiC27CFeL6QppKvh/lYa
MT24nIKDq1qPGqkLmFv51vOeCCiQkTpzKx2tm9i43qaaAnvfDKlzGA8Z7u1M
cGnF691R/s1LE5+nrKjmaUIEvBaXWR7BeEy9zjw1XFQE1K8l3xhAC8+GqZwQ
E4HNy9/GHMR4LptHywdKiUD68cA+/7kCRnJ0Er1vpghQ5Ly2k7oCpvGT5De+
qQhMo40/sfXnTrlKOdOOi8BYuU5jHMab/lb6BpkcUeh5VgT31gmY5xmDfMGI
KDB/yjL/CsD9/Bn5gJwQBR+mY2MrWvOLtDpQXDBv68+7gflQiMain/fFudD1
iDhNY35lnOoXm6fEBTeD5T405pt5ib9eJ5pwofjRidCfYRgfRv229Q3hgkin
ZPbBGAHzNJv7MDeMC6+ip1WQsQJmqEpOozeSCz6B0xXuxLLxu+GQWywX8j5Z
VAgv4Pg+dTDOMY0L14MWrO9JwP30+HCj5VMuXOa7pjokCRj3/SN2qpN4cKQ/
pbvlJt6fbeFzZKfwQE1hW8bWDFy/V8gKaWkeVPxzwOcr2kA7pXpsKg+0vpv4
h9/C/UZKN2VQkQf+PR//dKCjcpy/C+bwYAPPLsj0toAp7K4M3rOaB2UWyvlX
83C+12ziO1vzIO3M9UStfIyXiz/PstvAg4IOt5tl6MqTwufMFvz7FyM6a+5g
fq62QFbGgweCDZl9DQU43x0TMkpO8cAtq8f4wT0Bs2rlrICcMzy49ezwDcMS
HI86+dbXo3kwfnC9SjJ66siLwTMXebDWrVHl7H2cXwnjxk4ZPHDd11kfzNan
1+2s41by4Ok5K7/BRxjf3Bu8PvqSBy0lhrw9j3H+Xw32H6jhQdBC37JGtPPe
S9PfNvPAoz2zPrUc1zfxVzuzv/CApHqrpSowHjHXH9nIo8FPpWXgjwD3h2z7
hDJxGhpmu/TufYrx19QA/TmSNBjaC84Vops6y/eOK9Dw0tIvyfkZjsewde0Z
2jScWCdR96xSwKj2+R6TmU/D88/m5Dy2fs0uXjloEQ21zoMW8WjjspL73YY0
BCpm3qZeYD6r+cF+ozEN6tVPSjagt0Zxhh4CDRkeuzXOot1/q8fMNqfhkdHK
We/Y+rqnu6vGrGkIKSoe8HqJ8YFulIc7n4Yrkw5k3UGnxedzX9vR0Jcu82AI
Xb5rGDK20/DJb5HTmSqMn6qnf5TeQcPXqvqcErb+z4AJCHSnYVbZt3q2H2tv
sotC9x4aGrX+nLZFC7lhhXwfGgy0s3JT0eL7bvEfHqDBqOrck8r/1odX9Wsd
oeFXgLsDWY3Pixk4ExNEg6dEThtb32h4U0Z7LISGf1e/WemOtpAwfOYWTsPQ
3CteMWjbg1t31J/G72dfY1qDdm0NJJZH05Bzte+xSo2A8V2VknzzAg3LQvLe
jODnx3OfGElfosGnRWltFn4eLd/dcjSJhoEQtznV6ORgcf8vKTSc/VFwnKrF
+fFFV4afToOzY5QJgy5dx88rzaRBobav3hX9oviAtVYuXj/h+CYC/Ub10rfz
d2mQVP66+TG6O7w0XFhMQ7nN/pUP0f/2t85yK6XB6WSifhOau5n6p+4xDe84
tXmcOtzfH2tuNxbQMHcbyTdBq8+2EqY/p+Hcw4m7rmi9aK9LUtU4PpQ2pR9H
w3C0wdF6GpZPvXgtDb3OqeB1VxMNNkopdmx/478rm703vMPnrzy/qQnttWB0
cmkrDYuqidY/bD3vRZUszQ4aeJv23GfreSM5KyzPd+N4faTKZ+uBL7nv7Bzt
oWHLs7IyaXRG7amQXT9omNRTr7cCXbTktmrdEA3UUXHN7WjBtZpSoxEaKqb/
Wcn2f26gf25JH6dBOZy3gq1PbveW+1eSEoPO4DOlx9j68ZalFwJ4YqBxbntB
Oppj6riwS1wMrryWPxqClrh1rHq9pBgsVC/tOMfWf0uleT6QFYMMz7fz2Prq
uYef0ZqKYiBX11bN1l8bffp2I1pZDLhVSdWx6P/1x4b/98f+Dz0qQzM=
        "]]},
      Annotation[#, "Charting`Private`Tag$233804#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Theta\"", TraditionalForm], 
    FormBox["\"E Field magnitude\"", TraditionalForm]},
  AxesOrigin->{0, 0.16000000000000036`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{858.67578125, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3.1415925253615216`, 3.1415925253615216`}, {0.16, 0.18}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8846180228021*^9, 3.884618028387401*^9}, 
   3.884622681800254*^9},
 CellLabel->
  "Out[1009]=",ExpressionUUID->"9ed1805d-c9c5-404b-afac-acd7b9617b4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"directions", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"GetEField", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", "gs"}], ")"}], " ", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"a", "+", "gs"}], ")"}], " ", 
           RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "theta", "]"}], ",", "0", ",", " ", 
          RowBox[{"Sin", "[", "theta", "]"}]}], "}"}]}], ")"}], "/", 
      RowBox[{"Norm", "[", 
       RowBox[{"GetEField", "[", 
        RowBox[{"1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "+", "gs"}], ")"}], " ", 
          RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "+", "gs"}], ")"}], " ", 
          RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi", ",", 
       RowBox[{"2", 
        RowBox[{"Pi", "/", "1600"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "directions", "]"}]}], "Input",
 CellChangeTimes->{{3.884624708714261*^9, 3.884624731244171*^9}, {
  3.884624822597373*^9, 3.8846248228388367`*^9}, {3.884624854124346*^9, 
  3.8846248543382807`*^9}},
 CellLabel->
  "In[1151]:=",ExpressionUUID->"5e1ad2de-fedb-45b5-b677-e98d51ae1f0e"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdnH18VNWZx4OizbpgpzZqqmjHgu20zdoBsUYFecRA4xpghCBBgg6QwAAB
Ju+T9zvv7zN35r4qsE4h1WxBHVdcUpvqVOMaLeK0DRoVdVS02YI6apRRENbd
Lvfkd/3Hz/XmzLnn3nOe8zy/3/d4zfody+vPKyoquu3CoqL//fc//skveH3X
Rf/81dlPFvz/f6DHlgxdeka7LqbnV385dFa7NlDVqy/vYtcldKNh6PxvtOtS
evTGb577WrueQUWznCvY7xnp2TXlH7L2PyJr849r2PUsunjp8LzT2vWP6cnm
dS+d0q5N1JpZfJj93s/o2YNnzrD2ZfQ75bdH2P3r6PfTTafY85jpzt29l7Ln
nU0L//1sirWfQyt/c/Zddn09XfZ28RH293PJ+cqJmez3bqD6ExtdrL9fkumD
/knPcyO917TmZ+y6nD7du/ovbDw3kfP6xR+w8d5Mlz8Zfpz9/S00fW3d39j1
PBpffUMfu55PnZcPf8ra30pXlj/5E3a9gC58am8D+3uiGbfvfl675oiOzziz
ko3vNqp48cYz2vNxt9Fibue1rP1COhC46u+s/ULa8MzOwS+1+7fTU78PLtTe
B3c73Tltz2w23gqypXe9we5X0JTZ+79mv7+IJq4Mn9Seh1tEjidTsYJ2fzH9
fPUdAut/MR3InP8Ma/8r+sHON86y+7+ipmuOLWDfp5Jsy19dpL0frpLuer/2
31n7O+iq259MsPZ30A1nvvcwe5//So/k7qh+V7v/r1R44MJn2P076c9HZmVZ
+zvpMXXmL9nvV9FjpU8Ns/dbRevGTXPY/SV05o1n17+t3V9CT//wxa/Y/aW0
86LqMHt/S2n/RabN7Psto5uOG99h/S8j65f9H7PxWyjrWPeJdp8sdFnT5wu0
+cxZaOyfnpup3c9YqOSuja+z/u8i5XBbQRsv3UVXLHuwgvV3F91ydku39jyZ
u+i6Kx+dtB6W099aQiu156HltPzqpy7W4g+3nJ5777WHtPeTWU63f3n6EdZ+
BS0dfu8i9vwr6D/X3jOdPf8KeuCLNfcNaO1XUP+tO+ez9tV03aVLo6x9NXXL
F3zG2lfTB+Oz9w5r7atp5froatZ+Ja1qPf/XrP1KerhNbmHfcyUN3HHTg0Na
+5Uk97zTxdrfTYvvnrWetb+bTl3+1Oes/7vpgf9YsXmf1v5uOlM18w+s/Soa
iM17mr2/VTRlgt+krQ9uFXFJy6Ps/a+ivdvXsvVQVEObzWVp7T7V0Fc1/hmf
fHOufQ1Ne/PVMvb9a2hp6K5trP1q+rian66Nl1bTopsbD7P1tJqeKzxYYO1X
0wvDa/ax+XkP5eaoX7Lx30Mzez93sflzD732zOyVrP09VDSz8yHW/xr6bOEP
V7Hxr6Hna7YcYu3X0JmT+0pZ+zV0wcn0pHhaSze9/Q17H1RL781KrmLta+kv
w8+y/SlTSx+6an7I1vda2nT4waXafKW19M6bhUnxZi0V+jqr2ftfSyu97xzc
rLW/l6pSr7D1QPfSH5ee/w17f/fS14Yn3rv+zLn295JyND3p+91HV1S/VMa+
332Ue+fPH7H+76PDf829xZ7/Phqtf3A3W/9WOtXwAttPjFb6/TUPPsGex0q3
/6T2Ju3aaqUpC1ax+cpZad+p12b/9tx1ykon7nvoZdaflZKvFn+i9ZezkvXg
vatfOn2u/3X0oeHNb1j/6+jgwNhxFk/WUVHOe7FT638dGep3b2b9r6OK0d+b
tOvUOnrTv3s3638dLf7uxed3n5vPuXUUXHbvpPe3nn53+Hsm7fmM6+nLu55j
8YvW0+OPrmTr27qeEl8HFrH+19MnM18/xfpfTyU3v/jME1r/66nW0Htau59b
T9FTT1zB+t9A1uPz97Dxb6CvX7/6t6z/DeRaNSXP+t9A5a5L/sr630DXHTry
4XKt/w1Ub25i48tsoMeWvZXX5kduA7VOu4S976I6qtob3czGX0fWv638E+u/
jqg0fDXrv44OvreP5XtcHd1QctFONv46mvnHRb9h/ddRIvTRY2z8dXTR/fLb
Ke3719PsC15k/RnraXzP3q/Zeq4n7vs/Yb9nrafBD4IG1n89Lf3+W2z9pOrp
8t+ltjyk9V9P/aW7J73/evrdLefXP6CNfyPNXnXN26z/jTTzqrO/ZP1vpPXn
GY+w/jfSVwv/K8v22410VUu4k/W/kaS+v9jZ+DfSiZYz7HvkNlLJVc4lLL/e
RLfOl1i+Y9xEhRs9n6jn5ittokDZhftZ/5uowvjyd9n4N9HKLypvZP1voj33
Xb+F9b+Jfh3LPczW3yayvvP+B+z720j4eNFnrH8bPX7/dPa+6NvrS18RtPlj
tVHrhHmM9W+jq04tG9N+P2Wjp78su471b6P5/bk4G7+N9tz8JMs3izbTxnmt
/83630ymF96fFA8306KTBz9n499MXOcv3mf9b6aTrhcG2Pg30/t/z57P+t9M
P3jfzfKX3Gb6onvBpP1zC20qGf5cG59xC/2clk/aD7bQuHEOy4+sW+i1Kx4/
yfrfQk/f/PFSNv4tdOHbRx9g/W+hrWvnL2D9f/t7D7R9yuLvVnJ/+DnLX41b
aed3L/nTbu37b6XheDOrP6xbKTL6xgTb37fS4/VT2fOmtlL4Rr+T9b+VjpmC
S1n/W8m0bdF0Nv4G2rV3Y4b130CPn91XzeZ/A+1bvOkV1n8DPVEcumqn1n8D
fXFemr2fVAPdPL2/q1/rv4HKHrqafc9cA82/iWffp2gbTb3/jyy/Nm6jh9es
v4G9/21U9koFiy/WbbRmx7Cn/1z84LbRF6uvZftV6tv7jxUmxf9t1PHz51m9
k9tG/7V8nMXPou20b+rhd1n8207n/cvRHOt/O+VHTvVr963bqaylZdL+vp2m
//RZVt+kttOlA19NsP6304prTy+r1vrfTiOPjLP3WbSD3mk+cJyNfwdNe/u1
btb/Duq4XHmDjX8HxQTvqyz+7CDTk2cnff8ddN4u7rIntf530Oqx4knxbwet
KGuysP7tdP6cKXdr1wY7pRMhFj+MdprjKzqmrQ+zna7Z65u0Puz08ZJHLm47
N18tdvrhyQ8Xsue106HY3K3atd1OJ48nWP7L2cl+3h8v5M5d83Zq/Oknf9H2
/5SdjhlKPtX+Pm2nK38h8ofPff+MncLTnmL1T9ZOlbueZ/lfzk7P/6Rrm5af
5L8d34IdVWz8jVS2p7Cdjb+Rrri1y8vG30gd185i+5O5ke78xbNOtj4a6fmb
rmX7h6WRtt+w/gQbfyMd3zGnRRuPvZGeyPlZvOca6bz/nLJTy+/4Rqo/MPIV
G38jGS9Yyeq9dCPNdix+d6v2fRspdevLGe3vs420yGxh+3uukWrqHjmi7Tf5
Rlp366JXWf3dRMIlz46z8TdR+Q+2/oiNv4lSxSfZ75mbyOK7tp99/yaaVdH+
kfY+LE1UMn7jATb+Jip8/w8PaPftTXTvXmVSPdxE13z4KNsv+CbiHrq5js3n
JvriwHUsfqSbSPrs6tksn24i++ikfDjbRPseGb6Q5TtNtPaimUx/yjfRnEv2
s/hc1EzzZgqz2fib6eCVZ/80cW4+G5vpe51ppseYv71ePElfomb68XbVofVn
aaYPXmvNafHZ2kwXH7HG2fibaaF0+igbfzP5Zt9W+4g2/mba+E+xdu15U81k
TCksn0g305aF1zWz+NJMdxy5+9dPa+NvprelS71a+1wzfT7/cpaf5Jvppv7j
k+rfFvr0+CtLtPrW0EJvTc/9t9be2EImfucK9v1biN78zSY2/haa+/InSx/W
xv/t/aZPN2rtrS20rX7oPLb+W2hkNMDqA66FNh08fbn2fvkW+sr49Xzt/aVa
6J3HLdu095duofx1L7B8O9NCvzVKh7T3n22hoR1vTWHzv4Xqut192u/nW+hX
l741Sb9opY6JPd9ov29opa9v+fteNv5W+vnozax+MrfSbbnde9j6b6XioZdY
fWhppY8+eOkqli99+/cly0bY92+lpgvns/nDtdIVoxcXjmrjb6WM9NpyNv9b
yfCI4tbWa7qVfhRLTsrvWun2a998ls3/VrK/8SCrB3OtdP3GOwbe08bfSnLL
yHdY/dpGl8wY/jc2/9to9Jp/npSPtNHCKRV72fxvo/+Y852PWL3ZRi33nmDx
zNJGFzxaOszWfxv9NfY9Vq/Z2+jFie/8lOk7bRQu/3xY+z2+jR5vH5yUT7SR
d86Sz9j3b6Or2x+cw/SgNgouaZ7P4n8b+cquWKTpj7k2+tX1Lva9898+34s3
sHq2qJ3e3R9zar9naKfGVP1Blg+20+j8FNtPzO30s1f2J9n8byfZOaNHez+W
dvqu8Glcu7a204m1/UE2/na6dNm7k/S4dnpp45GDLP61k+X6H92m9Z9qp9rB
25ew799Oe3p+9n32/dvpLcMitj9m26nvonAjy/fb6Zr6Qj+Lf+3066GyTqa/
OOiKOZtZPmRwUE9UaGff30HN1j8Xsf3fQbeu2nUZ03sc1FDC72Xx30HPnZ1U
71gdZOtpYfqU3UG7Py6w+cw56IMpRzm2/h30B9eKW9n3d1BdasnHLP456I2q
ubdpv5dx0BeXHf6TNr6sg6rueYPpJzkHde28hc3vvIN2XvwRy3eLOqjpx68X
tPEZOugf/z3//+PX3Td3YHvqwN+3dGD/1g58PnsHPj/XgePjO3Tj78D3k+7A
95fpwPeb7cD3n+vA75PvwO9X1Inf19Cp+/6dOD/MnTh/qBPnl6UT55+1E+en
vRPnL9eJ85vv1M3/Tlwf6U5cP5lOXF/ZTlx/uU5cn/lOXL9FXbi+DV269d+F
8cHchfGDujC+WLow/li7MD7ZuzB+cV0Y3/guXfzrwviY7sL4menC+Jrtwvib
68L4nO/C+F3UjfHd0K2L/924P5i7cf+gbtxfLN24/1i7cX+yd+P+xXXj/sZ3
6/a/btwf0924f2a6cX/NduP+m+vG/Tnfjft3UQ/u74Ye3f7fg/mBuQfzB+rB
/MLSg/mHtQfzE3sP5i9cD+Y3fI8u/+nB/Cjdg/lTpgfzq2wP5l+5HszP8j2Y
vxX1Yn5n6NXlf72YH5p7MX+kXswvLb2Yf1p7MT+192L+yvVifsv36vLfXsyP
072YP2d6Mb/O9mL+nevF/Dzfi/l7UR/m94Y+Xf7fh/WBuQ/rB+rD+sLSh/WH
tQ/rE3sf1i9cH9Y3fJ+u/unD+ijdh/VTpg/rq2wf1l+5PqzP8n1YvxVxWN8V
c1j/GTisD0s5rB+NHNaXJg7rTzOH9Wk5h/UrcVjfVnJY/1o4rI9rOKyfrRzW
1zYO6287h/W5g8P6neOwvg9wWP/zHOoDKof6QYpDfWGAQ/0hzaE+Mcjp9AsO
9Y0RDvWPLIf6yBiH+kmOQ31lnEP9Jc+hPlPgUL8pcqK+U+xE/cfgRH2o1In6
kdGJ+pLJifqT2Yn6VLkT9Styor5V6UT9y+JEfazGifqZ1Yn6ms2J+pvdifqc
w6nT75yo7wWcqP/xTtQHVSfqhykn6osDTtQf007UJwedqF9mnKhvjjhR/8w6
UR8dc6J+mnOivjruRP0170R9tuBE/bbIhfpusQv1X4ML9eFSF+rHRhfqyyYX
6s9mF+rT5S7Ur8mF+nalC/Vviwv18RoX6udWF+rrNhfq73YX6vMOl06/d6G+
H3Ch/s+70B9QXegfpFzoLwy40H9Iu9CfGHShf5Fxob8x4kL/I+tCf2TMhf5J
zoX+yrgL/Ze8C/2Zggv9myI3+jvFbvR/DG70h0rd6B8Z3egvmdzoP5nd6E+V
u9G/Ijf6W5Vu9L8sbvTHatzon1nd6K/Z3Oi/2d3ozzncOv/Ojf5ewI3+H+9G
f1B1o3+YcqO/OOBG/zHtRn9y0I3+ZcaN/uaIG/3PrBv90TE3+qc5N/qr4270
X/Nu9GcLbvRvizzo7xZ70P81eNAfLvWgf2z0oL9s8qD/bPagP13uQf+aPOhv
V3rQ/7Z40B+v8aB/bvWgv27zoP9u96A/7/Do/HsP+vsBD/r/vAf5ANWD/EDK
g3zBgAf5g7QH+YRBD/ILGQ/yDSMe5B+yHuQjxjzIT+Q8yFeMe5C/yHuQzyh4
kN8o8iLfUexF/sPgRT6k1Iv8iNGLfInJi/yJ2Yt8SrkX+RXyIt9S6UX+xeJF
PqbGi/yM1Yt8jc2L/I3di3yOw4v8DudFvifgRf6H9yIfpHqRH0p5kS8a8CJ/
lPYinzToRX4p40W+acSL/FPWi3zUmBf5qZwX+apxL/JXeS/yWQWvjt/yId9V
7EP+y+BDPqzUh/yY0Yd8mcmH/JnZh3xauQ/5NfIh31bpQ/7N4kM+rsaH/JzV
h3ydzYf8nd2HfJ7Dh/we50O+L+BD/o/3IR+o+pAfTPmQLxzwIX+Y9iGfOOhD
fjHjQ75xxIf8Y9aHfOSYD/nJnA/5ynEf8pd5H/KZBZ+O3/Qj31nsR/7T4Ec+
tNSP/KjRj3ypyY/8qdmPfGq5H/lV8iPfWulH/tXiRz62xo/8rNWPfK3Nj/yt
3Y98rsOP/C7nR7434Ef+l/cjH6z6kR9O+ZEvHvAjf5z2I5886Ed+OeNHvnnE
j/xz1o989Jgf+emcH/nqcT/y13k/8tkFv47fDiDfXRxA/tsQQD68NID8uDGA
fLkpgPy5OYB8enkA+XUKIN9eGUD+3RJAPr4mgPy8NYB8vS2A/L09gHy+I4D8
PhdAvj8QQP6fD+D5ADWA5wdSATxfMBDA8wfpAJ5PGAzg+YVMAM83jATw/EM2
gOcjxgJ4fiIXwPMV4wE8f5EP4PmMQkB3fiOI5zuKgwTnPwy6+6VBbG8M4u+b
gti/OYjPVx7E56cgjq8yiOO3BPH91ATx/VmD+H5tQXz/9iB+H0cQvx8XxO8b
COq+fxDnhxrE+ZMK4vwaCOL8Swdxfg4Gcf5mgji/R4I4/7NBXB9jQVw/uSCu
r/Egrr98ENdnIag7/xHC9V0c0q3/EMaH0hDGD2MI44sphPHHHML4VB7C+EUh
jG+VIYx/lhDGx5oQxk9rCOOrLYTx1x7C+OwIYfzmQhjfAyFd/A/h/qCGcP9I
hXB/GQjh/pMO4f40GML9KxPC/W0khPtfNoT741gI989cCPfX8RDuv/kQ7s+F
kO78Rxj39+Kwbv8PY35QGsb8wRjG/MIUxvzDHMb8pDyM+QuFMb+pDGP+Ywlj
flQTxvzJGsb8yhbG/MsexvzMEcb8jQtjfhcI6/K/MOaHahjzx1QY88uBMOaf
6TDmp4NhzF8zYcxvR8KY/2bDmB+PhTF/zoUxvx4PY/6dD2N+Xgjrzn9EML8v
jujy/wjWB6URrB+MEawvTBGsP8wRrE/KI1i/UATrm8oI1j+WCNZHNRGsn6wR
rK9sEay/7BGszxwRrN+4CNZ3gYiu/otgfahGsH5MRbC+HIhg/ZmOYH06GMH6
NRPB+nYkgvVvNoL18VgE6+dcBOvr8QjW3/kI1ueFiO78RxTr++Korv6Poj5Q
GkX9wBhFfcEURf3BHEV9ojyK+gVFUd+ojKL+YYmiPlITRf3EGkV9xRZF/cUe
RX3GEUX9houivhOI6vSfKOpDahT1o1QU9aWBKOpP6SjqU4NR1K8yUdS3RqKo
f2WjqI+NRVE/y0VRXxuPov6Wj6I+V4jqzn/EUN8rjun0vxjqg6Ux1A+NMdQX
TTHUH80x1CfLY6hfUgz1zcoY6p+WGOqjNTHUT60x1FdtMdRf7THUZx0x1G+5
GOq7gZhO/42hPqzGUD9OxVBfHoih/pyOoT49GEP9OhNDfXskhvp3Nob6+FgM
9fNcDPX18Rjq7/kY6vOFmO78Rxz1/eK4Tv+Poz9QGkf/wBhHf8EUR//BHEd/
ojyO/gXF0d+ojKP/YYmjP1ITR//EGkd/xRZH/8UeR3/GEUf/houjvxOI6/yf
OPpDahz9o1Qc/aWBOPpP6Tj6U4Nx9K8ycfS3RuLof2Xj6I+NxdE/y8XRXxuP
o/+Wj6M/V4jrzn/w6O9N5dH/K+bRH5zGo39o4NFfLOHRfyzl0Z+cwaN/aeTR
35zFo/9p4tEfLePRPzXz6K/O5dF/LefRn53Ho39LPPq7FTz6v5U8+sNVPPrH
Fh795Woe/ecaHv3pWl7nX/Pob9fx6H/bePTHG3j0z+08+ustPPrvDh79+W4e
/XuOR3/fw6P/H+CRD4jwyA/wPPIFIo/8gcojn7CLR34hxSPf0M8j/zDAIx+x
n0d+Is0jX3GAR/5ikEc+Y4hHfiPDI98xzCP/McIjH3KIR34kyyNfMsojfzLG
I59ylEd+Jccj33KMR/5lnEc+5gSP/EyeR75mgkf+psAjn3Oa153/SCDfMzWB
/E9xAvmgaQnkhwwJ5ItKEsgflSaQT5qRQH7JmEC+aVYC+SdTAvmosgTyU+YE
8lVzE8hflSeQz5qX0PFbCeS7KhLIf1UmkA+rSiA/ZkkgX1adQP6sJoF8Wm0C
+TVrAvm2ugTyb7YE8nENCeTn7Ank61oSyN85EsjndSeQ3+MSyPd5Esj/BRLI
B0YSyA/yCeQLxQTyh2oC+cRdCeQXUwnkG/sTyD8OJJCP3J9AfjKdQL7yQAL5
y8EE8plDCeQ3MwnkO4cTyH+OJJAPPZRAfjSbQL50NIH86VgC+dSjCeRXcwnk
W48lkH8dTyAfeyKB/Gw+gXztRAL520IC+dzTCd35jyTyvVOTyP8WJ5EPnpZE
ftiQRL64JIn8cWkS+eQZSeSXjUnkm2clkX82JZGPLksiP21OIl89N4n8dXkS
+ex5SR2/nUS+uyKJ/HdlEvnwqiTy45Yk8uXVSeTPa5LIp9cmkV+3JpFvr0si
/25LIh/fkER+3p5Evr4lify9I4l8fncS+X0uiXy/J4n8fyCJ5wMiSTw/wCfx
fIGYxPMHahLPJ+xK4vmFVBLPN/Qn8fzDQBLPR+xP4vmJdBLPVxxI4vmLwSSe
zxhK4vmNTBLPdwwn6f/+fe78x4ju/iFd+6zu90d1/Y/pnu+o7vlzuvEd041/
XPd+TujeX173fid077+g+z6ndd+vSMDvO1XA718s4PyYJuD8MQg4v0oEnH+l
As7PGQLOX6OA83uWgPPfJOD6KBNw/ZgFXF9zBVx/5QKuz3mC7vyWgOu7QtCt
fwHjQ5WA8cMiYHypFjD+1AgYn2oFjF9WAeNbnYDxzyZgfGwQMH7aBYyvLQLG
X4eA8blbwPjNCRjfPQLG/4CA+0NEwP2DF3B/EQXcf1QB96ddAu5fKQH3t34B
978BAffH/QLun2kB99cDAu6/gwLuz0MC7t8ZAff3YUG3/wuYHxwSMH/ICphf
jAqYf4wJmJ8cFTB/yQmY3xwTMP8ZFzA/OiFg/pQXML+aEDD/KgiYn50WdOc/
RMzvpoqY/xWLmB9OEzF/NIiYX5aImH+WipifzhAxfzWKmN/OEjH/NYmYH5eJ
mD+bRcyv54qYf5eLmJ/PE3Xnt0XM7ytEXf4vYn1QJWL9YBGxvqgWsf6oEbE+
qRWxfrGKWN/UiVj/2ESsjxpErJ/sItZXLSLWXw4R67NuEes3TsT6ziNi/RcQ
sT6MiFg/8iLWl6KI9acqYn26S8T6NSVifdsvYv07IGJ9vF/E+jktYn19QMT6
e1DE+nxIxPo9I2J9Pyzq6n8R9YFDIuoHWRH1hVER9YcxEfWJoyLqFzkR9Y1j
Iuof4yLqIydE1E/yIuorEyLqLwUR9ZnTou78h4T6zlQJ9Z9iCfWhaRLqRwYJ
9aUSCfWnUgn1qRkS6ldGCfWtWRLqXyYJ9bEyCfUzs4T62lwJ9bdyCfW5eRLq
dyShvlch6fQ/CfXBKgn1Q4uE+mK1hPpjjYT6ZK2E+qVVQn2zTkL90yahPtog
oX5ql1BfbZFQf3VIqM92S7r/f4+E+q5HQv03IKE+HJFQP+Yl1JdFCfVnVUJ9
epeE+nVKQn27X0L9e0BCfXy/hPp5WkJ9/YCE+vughPr8kIT6fUZCfX9YQv1/
REJ/4JCE/kFWQn9hVEL/YUxCf+KohP5FTkJ/45iE/se4hP7ICQn9k7yE/sqE
hP5LQUJ/5rSkO/8ho78zVUb/p1hGf2iajP6RQUZ/qURG/6lURn9qhoz+lVFG
f2uWjP6XSUZ/rExG/8wso782V0b/rVxGf26ejP4dyejvVcjo/1XK6A9Wyegf
WmT0F6tl9B9rZPQna2Wdfymjv1kno/9pk9EfbZDRP7XL6K+2yOi/OmT0Z7tl
3f+/T0Z/1yOj/xuQ0R+OyOgf8zL6y6KM/rMqoz+9S0b/OiWjv90vo/89IKM/
vl9G/zwto79+QEb/fVBGf35IRv8+I6O/Pyyj/z8iIx9wSEZ+ICsjXzAqI38w
JiOfcFRGfiEnI99wTEb+YVxGPuKEjPxEXka+YkJG/qIgI59xWtad/1CQ75iq
IP9RrCAfMk1BfsSgIF9SoiB/UqognzJDQX7FqCDfMktB/sWkIB9TpiA/Y1aQ
r5mrIH9TriCfM09BfocU5HsqFOR/KhXkg6oU5IcsCvJF1QryRzUK8km1io5f
UpBvqlOQf7IpyEc1KMhP2RXkq1oU5K8cCvJZ3QryW5yCfJdHQf4roCAfFlGQ
H+MV5MtEBfkzVUE+bZeC/FpKQb6tX0H+bUBBPm6/gvxcWkG+7oCC/N2ggnze
kIL8XkZBvm9YQf5vREE+8JCC/GBWQb5wVEH+cExBPvGogvxiTkG+8ZiC/OO4
gnzkCQX5ybyCfOWEgvxlQUE+87SiO/+hIt85VUX+s1hFPnSaivyoQUW+tERF
/rRURT51hor8qlFFvnWWivyrSUU+tkxFftasIl87V0X+tlxFPneeivwuqcj3
VqjI/1aqyAdXqcgPW1Tki6tV5I9rVOSTa1Udv6wi31ynIv9sU5GPblCRn7ar
yFe3qMhfO1Tks7tV5Lc5Ffluj4r8d0BFPjyiIj/Oq8iXiyry56qKfPouFfn1
lIp8e7+K/PuAinz8fhX5+bSKfP0BFfn7QRX5/CEV+f2Minz/sIr8/4iK5wMO
qXh+IKvi+YJRFc8fjKl4PuGoiucXciqebzim4vmHcRXPR5xQ8fxEXsXzFRMq
nr8oqHg+47SqO/9xP57vmHq/dv7jfwB4o0u8
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.9999941782715454},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{832.54296875, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1601}, {0.9999941782715454, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.884624727969636*^9, 3.884624731565153*^9}, 
   3.884624823245303*^9, 3.884624854871703*^9},
 CellLabel->
  "Out[1152]=",ExpressionUUID->"f457fc33-51f8-4c6a-9750-80394287478b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"degrees", " ", "of", " ", "inaccuracy"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ArcCos", "[", "0.999995", "]"}], 
   RowBox[{"180", "/", "Pi"}]}]}]], "Input",
 CellChangeTimes->{{3.8846251505566196`*^9, 3.884625178683074*^9}},
 CellLabel->
  "In[1161]:=",ExpressionUUID->"c55cb4a3-8f4e-4b79-89c3-2d8b0459a074"],

Cell[BoxData["0.1811852390706499`"], "Output",
 CellChangeTimes->{{3.884625156915309*^9, 3.8846251790504513`*^9}},
 CellLabel->
  "Out[1161]=",ExpressionUUID->"9a4e33bc-a77c-4764-937d-dd40972a8563"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mags", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Norm", "[", 
      RowBox[{"GetEField", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "gs"}], ")"}], " ", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "+", "gs"}], ")"}], " ", 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"theta", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi", ",", 
       RowBox[{"2", 
        RowBox[{"Pi", "/", "1600"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "mags", "]"}]}], "Input",
 CellChangeTimes->{{3.884624549454052*^9, 3.8846245778844337`*^9}, {
  3.884624841149693*^9, 3.8846248573436604`*^9}},
 CellLabel->
  "In[1153]:=",ExpressionUUID->"44b33507-1b5d-478a-86ae-3cd9f337d8fb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdnHt4E9Xa9iOwoWxBg1asnIxSoFuLBkWIWPFBQMNBDNBKwAIBCgQokJ5D
j9McmmObSTJJBjZC1KpVEaKitAK+Qbq1YJEgIFURIuKmWxGjInYL+n5+18ea
77rHf7yW08madX6e+/4t71q+cd7KXgqFYkpfheL//vv//ZN6zPhQ6Vdzlnz7
2PX/QMXN397ql8pp9NPA/GcfkMpKunr73bo3F7NyOi1N3vTh01I5gwIFhe+a
81l5GH1ZP3vCzmdZWUWf5S3nLYtY+W7aE5nz8CMLWTmT7B+0rhioZ+XRtO/r
51+6mMfKWfTO5c3WR3JZ+R7q+86G+7TzWDmbSqcvCU7VsfJ9VLy8a6d+Diur
aVXVK8qfZrLyOBo7um/7N1pWfoDmq048UPIEKz9IC97s/2PHVFYeT9sXTBk3
/DFWfoiaL73YbMxh5Qk07uFL+ZGHWXki5f3T3bF5AitraNRTQ1J1D7Lyw3TN
NeTzlWNZeRJN/Fr7wM//YOVH6O3sNWO3S/2VQycDZ7sGLWDlR2nR+4G2++ez
8mSa88arK8/OYuXH6NoG22Pbn2Rlovd6tn9UydrDEfXdGR2kkdozhay7VCfz
JrLnU2jGV5899NoD7PnjZD18ZPRx9r3c4xRvuvnmpT+cv/58Ku3c8kbqWfZ9
3FRKP/nQweVS/08jzZdPZB5l/c1NI9/MhfF7pP6dTt/2W65sepQ9n07Nd/6+
bYiGPX+CWt5+dXTefez5E5QWnP5GZRZ7/iS9fXPmO7PY/OCepLbhaVP/eIo9
11JztmnybKn9Wjq6fsr3o1h9ihl0R3JGqpONFzeDtJ9P/X2Smj2fSX+E/C8L
rD+5mXTulYeFZql9s+hEz7GGk9LzWTR4xO27/yD2fDYZ3Y9+fpHND242nZ5H
ro+l8X+Kfhva/dx07/X+5J6iEX0vjPtI+v05tKVry7JC6ffn0Pe9R3a0TmLP
n6aMNz90/cLGi3ua7J9PWDX4XvZcR+033VR3eu71Muno9x9uO1oyjf29jprE
yPAX2XyO6+jI9FdGusaz9+fSPT0Lg09ns/fn0ojbrB/E2O9xc2moxlcQYv0b
n0vldXnJuY+w9+fRluz44OPs+2gezVCvGvvwPez9eXTj621D17L5EZ9Hzy8x
7nJJ83M+3XTqp68+ZeND8+nKov+cHCjNh/n0++NcW/VP1/svPp/cI2b9988p
7P1cmn7OX/Uum0+US+f3HrMJ97P3c+m+9NKpZcfZ+7mUNysZWPs4ez+PtN0T
9ial9/PoyA25baXS+3n03Z93bD7Syd7Po7VXlRa7NP7PUN8f87X///ufoSmu
+Sd7S+vpGTLnZuQO+Q97/xnaXPXTGEHaXxbQaGtp2wmp/xbQq2lby3PYfsEt
oKPhwb0+Ye2NL6DTS2ZdeJetZ4WefL3OlbSx+khP4W/GtJ68lb2vJ++e1cET
bD7F9XS2/dytvcex9xdS5yO3NHaNZu8vJHVd6+5V0npdSEPXnqr5jX1ffCEd
HXZr4pS0PhfRZF1X1Uw232gR/dx2TdfI5he3iL60nu83ls2H+CL6IjNv7hj2
94pn6X+zto0ax/6enqUZe4739JHmz7NU9/PP2w5J8+9Zyv3VtuQJaT/Op0kn
77w3xvqL8ql7s/2A+RJbb/l0n668x8j6K55PvdKnvTFUWp+L6ctf6k/Ma73+
97SY5hWM8i58iNW/mKYvfuLMaen7F9MNd829oflfbH9cQi998OMdg6TxW0K/
37V4wsdj2PtL6JE+xU+7L7LxX0It/OGet9j8Viwly49X+bGZ7P2l1GfmrMW9
pP1kKb1Q8eSIp6X6l9Jdk7/WD5bWj4Ha+TuPLWT9pzLQyJovSn8YxX7PQA9/
llk4hP2ewUCa1ou7k9L6MlBY06fowxevf1/UQL3HDZ/3MzvP4gZKnr59RT7r
36SBnsr4Vv39O6z9y+iD82+OnMb6U7WM7rF0j9WMZPUvo775T516TMnqX0b6
L86MnSP1zzKas269/lc2PtFldEu/u0qN7Pfiy2j7ufuujb3zen3JZfRqefb0
rdL+vZx2OwaeGsDmr2o5lfwwemAj+35aTt/0ddnHsu83LCfVr71dEek8XE43
hDffv5/tp9Hl1Csj0B7vZuO1nNqLjg0Ls/0guZyOv1dzLpeNl2IFvfR1NDaf
rSfVCtqv7X9mprSeVtAnz3VP6JTav4KG+dzfDZHW9woytPU/u9jD+n8FvWfJ
S3tZGu8V9HjVY1d/YfMxuYLeOisqh7D9WlFAE905fXx3s/oLaE7kJtUj0n5Q
QFem1v7tZva9hgK6b//o/lel/amA9hyeNWoUex4toC1Vo/xn2PyIF1DN0PSW
O9l8ShbQibf/9dz+Mjb+Kylf4x0zUOr/lVSd9l37XPY+raTbBmzde5g9N6yk
hRt/7pst7a8radxO9Vc57PejK+mYefDS/ZWs/1dSwaXIggKp/pV06G9zz/6U
z+pfRV+fubKqn1T/KsrdoT0+XTrPVtFD97YM5qX6V9Hh97Z/3M7Gm1tFuzaf
+Y5jz6OraKzdseAW9n58Ff1w79WvNrD+Ta6iA2vj2VNsrP7VVHXw5l4tUv+v
pmvdB0KqPLafrKbzQunYCHtuWE27Ph1blcvq41bToua9vfuy9RJdTffe2e+d
P1l746vpj8Nbnx/DnidX0+dHtrzrZM8VRjq15uBrucNY/UZy+q5tbJXWv5G+
ee+Rbx9l681gpDnaDNrKnnNGWvdp3fRyqf1GajvQveoZqX4jrT595Wsde540
UvtPr46qZPUp1tCyx289/DL7e9Ua2vbwDV9OZ89pDRUcuTB6LntuWENtM0YV
nRzK6l9Dyi8qR2ml8V9DW28/YPmGtTe+hi6v/MLxv2x+JtdQ57qMO86x/lSs
pbWvH/qxnj1XraU7FHkbTrHntJY+fWXQL39ksPrX0iB9obWIPefW0pW9O7Un
R7D619Ku2q+nvX4Xq38t/SPUNz6TPU+upfDM2g+3seeKdTT7sSdXrxvO6l9H
XX9Yht+hY+O/jvaOnJFqZf1hWEcdEyZF+tSy82kdDU698O0h1h/Rv35v/+Rg
ntT/6yi6Y/YTo+9k9a+jOQO03Cpp/ymkzm2ZO+5n36cqpJZj0bRL0v5bSKnF
Q288LNVfSL8I396nz2X1F9L9a7f8OoA9jxbSywfvXTiviK2/Qio57jx7O/u+
ZCH1fl3xu0+qfz3t/yJgWifNv/Vk/OJUxedS/evJ9M+PrhYNYfWvp6Pb3m8/
vobVv57OPB8c8487WP3r6aW1FV98xsYnvp5ObH/44rrbWf3rSb3KZ8uU+n8D
lf+RfkQ9mNW/gXZ+/taQfNZftIGa9z44bFE6q38Dha48um4M6y9uA33zxp9D
kmx9RDfQmPmjllhZe+Mb6JWRw5SDqtn5s4G++vD9oo3sexUb6WNDxbiMG1j9
G2nD+z9dHc6+hzbShR8njL+kYvVvpNIVtpd/uYXVv5GqAy8OGC/Nv420KNH2
y+BTrP830p96S6wX67/kRnpsb+LSAWn9m+iJ/0695U1Wn9JEZ6dvaHCw+lQm
Wlg06Ls/WH1qE52/zZ6RzuYrmeiVNx/Y2Tngen06E+1O/1dfPWufwURDZ7Vs
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
1WH+FK/D/CpRh/lXsg7zs1Qd5m8KDvO7NA7zPyWH+WEGh/mjisP8MovD/FPN
YX6q4TB/JQ7zWy2H+a+Ow/xYz2H+bOAwvzZymH+bOMzPzRzm7xyH+b2Tw/yf
51AfEDnUD6Ic6gstHOoPMQ71iVZOpl9wqG90cKh/JDjUR7o41E+SHOor3Rzq
LykO9ZkeDvUbRT3qO2n1qP8o61EfyqhH/UhVj/pSVj3qT+p61Kc09ahfUT3q
W9p61L909aiP6etRPzPUo75mrEf9zVSP+py5Xqbf1aO+56xH/Y+vR31QrEf9
MFqP+mJLPeqPsXrUJ1vrUb+M16O+2VGP+meiHvXRrnrUT5P1qK9216P+mqpH
fbanHvVbhQX13TQL6r9KC+rDGRbUj1UW1JezLKg/qy2oT2ssqF+TBfVtrQX1
b50F9XG9BfVzgwX1daMF9XeTBfV5s0Wm31tQ33daUP/nLegPiBb0D6IW9Bda
LOg/xCzoT7Ra0L+IW9Df6LCg/5GwoD/SZUH/JGlBf6Xbgv5LyoL+TI8F/RuF
Ff2dNCv6P0or+kMZVvSPVFb0l7Ks6D+prehPaazoX5EV/S2tFf0vnRX9Mb0V
/TODFf01oxX9N5MV/TmzVebfWdHfc1rR/+Ot6A+KVvQPo1b0F1us6D/GrOhP
tlrRv4xb0d/ssKL/mbCiP9plRf80aUV/tduK/mvKiv5sjxX9W4UN/d00G/q/
Shv6wxk29I9VNvSXs2zoP6tt6E9rbOhfkw39ba0N/W+dDf1xvQ39c4MN/XWj
Df13kw39ebNN5t/b0N932tD/523IB4g25AeiNuQLWmzIH8RsyCe02pBfiNuQ
b+iwIf+QsCEf0WVDfiJpQ76i24b8RcqGfEaPDfkNhR35jjQ78h9KO/IhGXbk
R1R25Euy7MifqO3Ip2jsyK+QHfkWrR35F50d+Ri9HfkZgx35GqMd+RuTHfkc
sx35Hc6OfI/TjvwPb0c+SLQjPxS1I1/UYkf+KGZHPqnVjvxS3I58U4cd+aeE
HfmoLjvyU0k78lXdduSvUnbks3rsMn6rAfmutAbkv5QNyIdlNCA/pmpAviyr
AfkzdQPyaZoG5NeoAfk2bQPyb7oG5OP0DcjPGRqQrzM2IH9nakA+z9yA/B7X
gHyfswH5P74B+UCxAfnBaAPyhS0NyB/GGpBPbG1AfjHegHxjRwPyj4kG5CO7
GpCfTDYgX9ndgPxlqgH5zJ4GGb/pQL4zzYH8p9KBfGiGA/lRlQP50iwH8qdq
B/KpGgfyq+RAvlXrQP5V50A+Vu9AftbgQL7W6ED+1uRAPtfsQH6XcyDf63Qg
/8s7kA8WHcgPRx3IF7c4kD+OOZBPbnUgvxx3IN/c4UD+OeFAPrrLgfx00oF8
dbcD+euUA/nsHoeM33Yi353mRP5b6UQ+PMOJ/LjKiXx5lhP5c7UT+XSNE/l1
ciLfrnUi/65zIh+vdyI/b3AiX290In9vciKfb3Yiv885ke93OpH/5514P0B0
4v2BqBPvF7Q48f5BzIn3E1qdeH8h7sT7DR1OvP+QcOL9iC4n3p9IOvF+RbcT
71+knHg/o8cpu7/hwvsdaS6C+x9K2fMMF76vcuHvZ7mwfrULv0/jwu8nF7ZP
68L261zYP3oX9p/Bhf1rdGH/m1w4PmYXjh/nwvF1umTj78L5Ibpw/kRdOL9a
XDj/Yi6cn60unL9xF87vDhfO/4QL10eXC9dP0oXrq9uF6y/lwvXZ45Ld/3Dj
+k5zy9a/G/eHDDfuHyo37i9Zbtx/1G7cnzRu3L/Ijfub1o37n86N+6Pejfun
wY37q9GN+6/Jjfuz2Y37N+fG/d3plu3/bjwfRDeeH1E3ni8tbjx/Ym48n1rd
eH7F3Xi+dbjx/Eu48XzscuP5mXTj+drtxvM35cbzucctu//hwfM9zSM7/z0Y
H2R4MH5QeTC+yPJg/KH2YHyi8WD8Qh6Mb7QejH90HoyP9B6MnwwejK+MHoy/
TB6Mz8wejN84D8Z3To8s/vNgfCh6MH6MejC+bPFg/BnzYHza6sH4Ne7B+LbD
g/FvwoPxcZcH4+ekB+Prbg/G3ykPxuc9Htn9Dy/G92leWfzvxfwgw4v5g8qL
+UWWF/MPtRfzE40X8xfyYn6j9WL+o/NifqT3Yv5k8GJ+ZfRi/mXyYn5m9mL+
xnkxv3N6ZfmfF/ND0Yv5Y9SL+WWLF/PPmBfz01Yv5q9xL+a3HV7MfxNezI+7
vJg/J72YX3d7Mf9OeTE/7/HK7n80Yn6f1ijL/xtRH8hoRP1A1Yj6QlYj6g/q
RtQnNI2oX1Aj6hvaRtQ/dI2oj+gbUT8xNKK+YmxE/cXUiPqMuRH1G64R9R1n
o0z/aUR9SGxE/SjaiPpSSyPqT7FG1KdaG1G/ijeivtXRiPpXohH1sa5G1M+S
jaivdTei/pZqRH2up1F2/6MJ9b20Jpn+14T6YEYT6oeqJtQXs5pQf1Q3oT6p
aUL9kppQ39Q2of6pa0J9VN+E+qmhCfVVYxPqr6Ym1GfNTajfck2o7zqbZPpv
E+rDYhPqx9Em1JdbmlB/jjWhPt3ahPp1vAn17Y4m1L8TTaiPdzWhfp5sQn29
uwn191QT6vM9TbL7Hz7U99N8Mv3fh/5Ahg/9A5UP/YUsH/oPah/6Exof+hfk
Q39D60P/Q+dDf0TvQ//E4EN/xehD/8XkQ3/G7EP/hvOhv+P0yfwfH/pDog/9
o6gP/aUWH/pPMR/6U60+9K/iPvS3OnzofyV86I91+dA/S/rQX+v2of+W8qE/
1+OT3f/g0d/rw6P/l8ajPziAR/9QyaO/mM6j/5jBoz85jEf/UsWjv5nJo/+Z
xaM/ms2jf6rm0V8dz6P/quHRn83h0b8lHv3daTz6v1oe/eHZPPrHOh795Vwe
/Wc9j/50Pi/zr3n0twt49L+NPPrjhTz65yYe/fVSHv13M4/+fDWP/j3Ho79v
49H/d/LIB3h55Ad4HvkCgUf+QOSRT9jKI78Q5ZFvaOaRf2jhkY/YwSM/EeOR
r9jNI3/RyiOfsY9HfiPOI9/RziP/0cEjH9LJIz+S4JEvOcEjf9LFI59ymkd+
Jckj33KeR/6lm0c+5iKP/EyKR77mMo/8TQ+PfM41Xnb/w498Tx8/8j9pfuSD
BviRH1L6kS9K9yN/lOFHPmmYH/kllR/5pkw/8k9ZfuSjsv3IT6n9yFeN9yN/
pfEjn5Xjl/FbfuS7pvmR/9L6kQ+b7Ud+TOdHvizXj/yZ3o98Wr4f+TWDH/m2
Aj/yb0Y/8nGFfuTnTH7k60r9yN+Z/cjnVfuR3+P8yPfZ/Mj/Of3IB3r9yA/y
fuQLBT/yh6If+cStfuQXo37kG5v9yD+2+JGP3OFHfjLmR75ytx/5y1Y/8pn7
/Mhvxv3Id7b7kf/s8CMf2ulHfjThR770hB/50y4/8qmn/civJv3It573I//a
7Uc+9qIf+dmUH/nay37kb3v8yOde88vufwSQ7+0TQP43LYB88IAA8sPKAPLF
6QHkjzMCyCcPCyC/rAog35wZQP45K4B8dHYA+Wl1APnq8QHkrzUB5LNzAjJ+
O4B897QA8t/aAPLhswPIj+sCyJfnBpA/1weQT88PIL9uCCDfXhBA/t0YQD6+
MID8vCmAfH1pAPl7cwD5/OoA8vtcAPl+WwD5f2cA7wd4A3h/gA/g/QIhgPcP
xADeT9gawPsL0QDeb2gO4P2HlgDej9gRwPsTsQDer9gdwPsXrQG8n7EvgPc3
4gG839EewPsfHbLnnbL3E7LfPyGrv0v2fadl35+Ute+8rP3dsv65KOu/lKx/
L8v6v0c2Ptdk46cI4vj2CeL4pwVxfgwI4vxRBnF+pQdx/mUEcX4OC+L8VQVx
fmcGcf5nBXF9ZAdx/aiDuL7GB3H9aYK4PnOCsvtbQVzf04Ky9R/E/WF2EPcP
XRD3l9wg7j/6IO5P+UHcvwxB3N8Kgrj/GYO4PxYGcf80BXF/LQ3i/msO4v5c
HcT9mwvi/m4L4v7vDOL54A3i+cEH8XwRgnj+iEE8n7YG8fyKBvF8aw7i+dcS
xPNxRxDPz1gQz9fdQTx/W4N4Pu8L4vkdD+L53h6Unf9BjA86gxg/JIIYX5wI
YvzRFcT45HQQ45dkEOOb80GMf7qDGB9dDGL8lApifHU5iPFXTxDjs2tB2f0P
AeO7PgLGf2kCxocDBIwflQLGl+kCxp8ZAsanwwSMX1UCxreZAsa/WQLGx9kC
xs9qAePr8QLG3xoB4/McQXZ/W8D4fpogi/8FzA9mC5g/6ATML3IFzD/0AuYn
+QLmLwYB85sCAfMfo4D5UaGA+ZNJwPyqVMD8yyxgflYtYP7GCZjf2QTM/5wC
5odeAfNHXsD8UhAw/xQFzE+3Cpi/RgXMb5sFzH9bBMyPdwiYP8cEzK93C5h/
twqYn+8TMH+PC5jftwuy/F9AfaBTQP0gIaC+cEJA/aFLQH3itID6RVJAfeO8
gPpHt4D6yEUB9ZOUgPrKZQH1lx4B9Zlrguz+Rwj1nT4h1H/SQqgPDQihfqQM
ob6UHkL9KSOE+tSwEOpXqhDqW5kh1L+yQqiPZYdQP1OHUF8bH0L9TRNCfS4n
hPodhVDfmxaS6X8h1Adnh1A/1IVQX8wNof6oD6E+mR9C/dIQQn2zIIT6pzGE
+mhhCPVTUwj11dIQ6q/mEOqz1SHZ/78nhPquLYT6rzOE+rA3hPoxH0J9WQih
/iyGUJ/eGkL9OhpCfbs5hPp3Swj18R0h1M9jIdTXd4dQf28NoT6/L4T6fTyE
+n57CPX/jhD6A50h9A8SIfQXToTQf+gKoT9xOoT+RTKE/sb5EPof3SH0Ry6G
0D9JhdBfuRxC/6UnhP7MtZDs/kcY/Z0+YfR/0sLoDw0Io3+kDKO/lB5G/ykj
jP7UsDD6V6ow+luZYfS/ssLoj2WH0T9Th9FfGx9G/00TRn8uJ4z+HYXR35sW
Rv9PG0Z/cHYY/UNdGP3F3DD6j/ow+pP5YZl/GUZ/syCM/qcxjP5oYRj9U1MY
/dXSMPqv5jD6s9Vh2f+/L4z+ri2M/q8zjP6wN4z+MR9Gf1kIo/8shtGf3hpG
/zoaRn+7OYz+d0sY/fEdYfTPY2H013eH0X9vDaM/vy+M/n08jP5+exj9/44w
8gGdYeQHEmHkC06EkT/oCiOfcDqM/EIyjHzD+TDyD91h5CMuhpGfSIWRr7gc
Rv6iJ4x8xrWw7P5HBPmOPhHkP9IiyIcMiCA/oowgX5IeQf4kI4J8yrAI8iuq
CPItmRHkX7IiyMdkR5CfUUeQrxkfQf5GE0E+JyeC/A5FkO+ZFkH+RxtBPmh2
BPkhXQT5otwI8kf6CPJJ+REZvxRBvqkggvyTMYJ8VGEE+SlTBPmq0gjyV+YI
8lnVEeS3uAjyXbYI8l/OCPJh3gjyY3wE+TIhgvyZGEE+bWsE+bVoBPm25gjy
by0R5ON2RJCfi0WQr9sdQf6uNYJ83r4I8nvxCPJ97RHk/zoiyAd2RpAfTESQ
LzwRQf6wK4J84ukI8ovJCPKN5yPIP3ZHkI+8GEF+MhVBvvJyBPnLngjymdci
svsfIvKdfUTkP9NE5EMHiMiPKkXkS9NF5E8zRORTh4nIr6pE5FszReRfs0Tk
Y7NF5GfVIvK140XkbzUi8rk5IvK7JCLfO01E/lcrIh88W0R+WCciX5wrIn+s
F5FPzhdl/LKIfHOBiPyzUUQ+ulBEftokIl9dKiJ/bRaRz64Wkd/mROS7bSLy
304R+XCviPw4LyJfLojIn4si8ulbReTXoyLy7c0i8u8tIvLxO0Tk52Mi8vW7
ReTvW0Xk8/eJyO/HReT720Xk/ztEvB/QKeL9gYSI9wtOiHj/oEvE+wmnRby/
kBTxfsN5Ee8/dIt4P+KiiPcnUiLer7gs4v2LHhHvZ1wTZfc/NuP9jj6bpfsf
/wf+XLD1
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.6490374432193003},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{794.71875, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1601}, {0.6490374432193003, 0.6677937878240654}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8846245681506853`*^9, 3.884624578196472*^9}, {
  3.884624841720867*^9, 3.884624857773041*^9}},
 CellLabel->
  "Out[1154]=",ExpressionUUID->"baf26da4-f3c2-48f8-ac40-a04dfffc26a4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testPoints", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4.608842669337616`", ",", "6.563585696985424`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.707180200517526`", ",", "2.176750103748627`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.792037566239333`", ",", "4.787781408276944`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.855778982477084`", ",", "6.2237642461949205`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0.5816942256367047`", ",", "6.431626072609152`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1.866278784790517`", ",", "1.5856972073106224`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"2.905554076101517`", ",", "0.3042719406065806`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"4.575278216079155`", ",", "4.368535882641796`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.15228864787249807`", ",", "6.7965613936293`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.0835338797819465`", ",", "1.126015266510481`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0.8357538179378818`", ",", "4.235467354793811`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1.838948320701085`", ",", "4.892962053921949`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6921786231648643`", ",", "1.984597266088046`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"1.6282948913230884`", ",", "6.1271049030900615`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.260241423248773`", ",", "4.049899219509415`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.314099980656643`", ",", "6.682551100251801`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.13939323464767`", ",", "3.2866671843639033`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.5535700266727304`", ",", "6.458169956398989`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"6.4600376108498825`", ",", "2.845434570939234`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"5.915655343265746`", ",", "5.078591103153024`"}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8846182333569803`*^9, 3.884618233359585*^9}},
 CellLabel->
  "In[519]:=",ExpressionUUID->"7532491c-3311-4257-9a12-140566265d49"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testResults", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "e1", ",", "e2", ",", "n1", ",", "n2", ",", "diff", ",", "cos"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"e1", "=", 
         RowBox[{"-", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"GetEField", "[", 
              RowBox[{"1", ",", 
               RowBox[{"point", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
               RowBox[{"point", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{"GetEField", "[", 
              RowBox[{"1", ",", 
               RowBox[{"point", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
               RowBox[{"point", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"e2", "=", 
         RowBox[{"EstimateEField", "[", 
          RowBox[{
           RowBox[{"point", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"point", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"n1", "=", 
         RowBox[{"Norm", "[", "e1", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"n2", "=", 
         RowBox[{"Norm", "[", "e2", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"diff", "=", 
         RowBox[{"2", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n1", "-", "n2"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"n1", "+", "n2"}], ")"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cos", "=", 
         RowBox[{
          RowBox[{"e1", ".", "e2"}], "/", 
          RowBox[{"(", 
           RowBox[{"n1", " ", "n2"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "point", ",", "e1", ",", "e2", ",", " ", "n1", ",", "n2", ",", 
          "diff", ",", "cos"}], " ", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"point", ",", "testPoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testResults", "=", 
   RowBox[{"Insert", "[", 
    RowBox[{"testResults", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Point\>\"", ",", "\"\<E from File\>\"", ",", " ", 
       "\"\<E from Laplace\>\"", ",", " ", "\"\<Norm 1\>\"", ",", " ", 
       "\"\<Norm 2\>\"", ",", " ", "\"\<Difference\>\"", ",", " ", 
       "\"\<Cos\>\""}], "}"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "phiFile", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"testResults", ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Spacings", "->", "2"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.884618445334989*^9, 3.884618580181984*^9}, {
   3.884618612736906*^9, 3.884618673233289*^9}, {3.884618746505497*^9, 
   3.884618746713751*^9}, {3.884619089450535*^9, 3.884619295826829*^9}, {
   3.884620889307818*^9, 3.8846208895484343`*^9}, 3.884621300587367*^9, {
   3.88462198979215*^9, 3.884621993373158*^9}, {3.884622937247395*^9, 
   3.884622937334578*^9}, {3.884623953165118*^9, 3.884623963168676*^9}, {
   3.8846240038025513`*^9, 3.884624003880706*^9}},
 CellLabel->
  "In[520]:=",ExpressionUUID->"23227edb-c727-4743-8f55-83f1a4ec31a1"],

Cell[BoxData["\<\"Phi file: 2/5/2023 Phi from 2D cylindrical solve\"\>"], \
"Print",
 CellChangeTimes->{
  3.8846208906624937`*^9, {3.884621127439847*^9, 3.884621128675748*^9}, 
   3.884621300989311*^9, 3.884621480453376*^9, 3.88462167272626*^9, 
   3.88462200403476*^9, {3.884622598626176*^9, 3.884622609561021*^9}, 
   3.8846229376779413`*^9, {3.8846239592739677`*^9, 3.884623963517462*^9}, 
   3.884624004157276*^9, 3.8852320489714823`*^9},
 CellLabel->
  "During evaluation of \
In[520]:=",ExpressionUUID->"d4655c51-5c25-467b-9065-1f24a9e74bb0"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Point\"\>", "\<\"E from File\"\>", "\<\"E from Laplace\"\>", \
"\<\"Norm 1\"\>", "\<\"Norm 2\"\>", "\<\"Difference\"\>", "\<\"Cos\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"4.608842669337616`", ",", "6.563585696985424`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.009586668799792466`"}], ",", 
       RowBox[{"-", "0.03140027676474356`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.009584937485630773`"}], ",", 
       RowBox[{"-", "0.031402107007291735`"}]}], "}"}], 
     "0.032831107193931314`", "0.03283235220176663`", 
     RowBox[{"-", "0.000037920872484558135`"}], "0.9999999977747976`"},
    {
     RowBox[{"{", 
      RowBox[{"3.707180200517526`", ",", "2.176750103748627`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.12592949522756514`"}], ",", 
       RowBox[{"-", "0.06924971077619313`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.12584248700209244`"}], ",", 
       RowBox[{"-", "0.06926091951875435`"}]}], "}"}], "0.14371416148332686`",
      "0.14364333088401693`", "0.0004929789630776885`", "0.9999999351107389`"},
    {
     RowBox[{"{", 
      RowBox[{"3.792037566239333`", ",", "4.787781408276944`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03902437183446073`"}], ",", 
       RowBox[{"-", "0.05239924867521274`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03902441181541372`"}], ",", 
       RowBox[{"-", "0.0523760100338555`"}]}], "}"}], "0.0653343926182913`", 
     "0.06531578021125932`", "0.0002849197460497959`", 
     "0.9999999773145405`"},
    {
     RowBox[{"{", 
      RowBox[{"3.855778982477084`", ",", "6.2237642461949205`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01455717127941299`"}], ",", 
       RowBox[{"-", "0.04265736055057763`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.014556771182144823`"}], ",", 
       RowBox[{"-", "0.0426622494479334`"}]}], "}"}], "0.0450728481993333`", 
     "0.045077345920173865`", 
     RowBox[{"-", "0.00009978283207254219`"}], "0.9999999990570012`"},
    {
     RowBox[{"{", 
      RowBox[{"0.5816942256367047`", ",", "6.431626072609152`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0031234957095632285`"}], ",", 
       RowBox[{"-", "0.07755922309745297`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.003106743889480512`"}], ",", 
       RowBox[{"-", "0.0775945805355227`"}]}], "}"}], "0.0776220929434922`", 
     "0.07765674977797193`", 
     RowBox[{"-", "0.0004463819265049009`"}], "0.9999999726540877`"},
    {
     RowBox[{"{", 
      RowBox[{"1.866278784790517`", ",", "1.5856972073106224`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.33995605681881896`"}], ",", 
       RowBox[{"-", "0.28745844932177267`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.33976861874807085`"}], ",", 
       RowBox[{"-", "0.2874016845473282`"}]}], "}"}], "0.445199371803553`", 
     "0.4450195979579033`", "0.0004038868003405576`", "0.9999999847653949`"},
    {
     RowBox[{"{", 
      RowBox[{"2.905554076101517`", ",", "0.3042719406065806`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.31384621013816183`"}], ",", 
       RowBox[{"-", "0.03231005326034745`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.31374347757218146`"}], ",", 
       RowBox[{"-", "0.032227622632330366`"}]}], "}"}], 
     "0.31550496534884154`", "0.315394339485695`", "0.0003506926138571129`", 
     "0.9999999743202442`"},
    {
     RowBox[{"{", 
      RowBox[{"4.575278216079155`", ",", "4.368535882641796`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.044293550288485264`"}], ",", 
       RowBox[{"-", "0.03901707478645587`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.044290911058592064`"}], ",", 
       RowBox[{"-", "0.03900521265012835`"}]}], "}"}], "0.05902754206343394`",
      "0.059017721205429856`", "0.000166391394828216`", 
     "0.999999992647618`"},
    {
     RowBox[{"{", 
      RowBox[{"0.15228864787249807`", ",", "6.7965613936293`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.00047275088509687456`"}], ",", 
       RowBox[{"-", "0.0755911690817022`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0004644954614413388`"}], ",", 
       RowBox[{"-", "0.07558185489235647`"}]}], "}"}], "0.07559264737087762`",
      "0.0755832821793479`", "0.0001238979189026056`", 
     "0.9999999941192915`"},
    {
     RowBox[{"{", 
      RowBox[{"3.0835338797819465`", ",", "1.126015266510481`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.23464088554473758`"}], ",", 
       RowBox[{"-", "0.08335202677591538`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.23482611646563623`"}], ",", 
       RowBox[{"-", "0.08338815210773287`"}]}], "}"}], "0.24900583434303614`",
      "0.24919247357469473`", 
     RowBox[{"-", "0.0007492567866746661`"}], "0.9999999937040607`"},
    {
     RowBox[{"{", 
      RowBox[{"0.8357538179378818`", ",", "4.235467354793811`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.02652612025891735`"}], ",", 
       RowBox[{"-", "0.1420506774591826`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.02654460826700955`"}], ",", 
       RowBox[{"-", "0.1420246284041804`"}]}], "}"}], "0.14450615911650017`", 
     "0.1444839482482207`", "0.0001537136927074084`", "0.9999999873786684`"},
    {
     RowBox[{"{", 
      RowBox[{"1.838948320701085`", ",", "4.892962053921949`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.030697796867639987`"}], ",", 
       RowBox[{"-", "0.0936120852652765`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.030734768513063226`"}], ",", 
       RowBox[{"-", "0.0936648692723141`"}]}], "}"}], "0.09851688809661158`", 
     "0.09857856628776496`", 
     RowBox[{"-", "0.000625871269796971`"}], "0.999999982039377`"},
    {
     RowBox[{"{", 
      RowBox[{"0.6921786231648643`", ",", "1.984597266088046`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.19911954362405054`"}], ",", 
       RowBox[{"-", "0.5690074144991515`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.19859228182950162`"}], ",", 
       RowBox[{"-", "0.5692147880382858`"}]}], "}"}], "0.6028416296242816`", 
     "0.6028634748628573`", 
     RowBox[{"-", "0.00003623645366422694`"}], "0.9999995590202896`"},
    {
     RowBox[{"{", 
      RowBox[{"1.6282948913230884`", ",", "6.1271049030900615`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.010914977536936408`"}], ",", 
       RowBox[{"-", "0.07339524466284253`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.010932035310051713`"}], ",", 
       RowBox[{"-", "0.07337009118726923`"}]}], "}"}], "0.07420241689965591`",
      "0.07418004904857113`", "0.00030148914080705243`", 
     "0.9999999615445013`"},
    {
     RowBox[{"{", 
      RowBox[{"6.260241423248773`", ",", "4.049899219509415`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.03885133030247572`"}], ",", 
       RowBox[{"-", "0.012372813213116254`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.038880456667708674`"}], ",", 
       RowBox[{"-", "0.01237175041955696`"}]}], "}"}], "0.04077391780389435`",
      "0.040801349476866325`", 
     RowBox[{"-", "0.0006725487733326207`"}], "0.9999999708535103`"},
    {
     RowBox[{"{", 
      RowBox[{"4.314099980656643`", ",", "6.682551100251801`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.008118070366650926`"}], ",", 
       RowBox[{"-", "0.035141470257266605`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.008118060850687003`"}], ",", 
       RowBox[{"-", "0.035145440491893276`"}]}], "}"}], 
     "0.036066965471470556`", "0.036070831697434816`", 
     RowBox[{"-", "0.00010719002010019548`"}], "0.9999999996867135`"},
    {
     RowBox[{"{", 
      RowBox[{"3.13939323464767`", ",", "3.2866671843639033`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.08817664388798882`"}], ",", 
       RowBox[{"-", "0.09005669767549913`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.0881194551122233`"}], ",", 
       RowBox[{"-", "0.09002359404863824`"}]}], "}"}], "0.1260370156881122`", 
     "0.12597335374875573`", "0.0005052326973586879`", 
     "0.9999999901254135`"},
    {
     RowBox[{"{", 
      RowBox[{"2.5535700266727304`", ",", "6.458169956398989`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.010118424558093173`"}], ",", 
       RowBox[{"-", "0.05956030365858932`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.010116628362408231`"}], ",", 
       RowBox[{"-", "0.05954136436184254`"}]}], "}"}], "0.06041367632780835`",
      "0.06039470373710575`", "0.0003140939509726466`", "0.9999999997308493`"},
    {
     RowBox[{"{", 
      RowBox[{"6.4600376108498825`", ",", "2.845434570939234`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.05275524169163531`"}], ",", 
       RowBox[{"-", "0.009260544908717108`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.05280236666470317`"}], ",", 
       RowBox[{"-", "0.009261730576429206`"}]}], "}"}], 
     "0.05356186346598878`", "0.05360848420412687`", 
     RowBox[{"-", "0.0008700305476585967`"}], "0.9999999915239651`"},
    {
     RowBox[{"{", 
      RowBox[{"5.915655343265746`", ",", "5.078591103153024`"}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.026917456548695016`"}], ",", 
       RowBox[{"-", "0.01625291500321888`"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.02691494270133654`"}], ",", 
       RowBox[{"-", "0.016249005933194338`"}]}], "}"}], 
     "0.03144370705169385`", "0.03143953457723594`", "0.0001327054506043328`",
      "0.999999997880428`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.884622937682487*^9, {3.884623959276742*^9, 3.884623963520986*^9}, 
   3.8846240041603813`*^9, 3.885232048974732*^9},
 CellLabel->
  "Out[523]=",ExpressionUUID->"6ff286eb-febe-4421-8db7-01a88c1efcee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/wbowers/Downloads/SC-Efields.txt\>\"", ",", "testResults", ",", 
   "\"\<Table\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.885232053669777*^9, 3.885232067943315*^9}, {
  3.885232101683914*^9, 3.885232108921545*^9}},
 CellLabel->
  "In[527]:=",ExpressionUUID->"9f8fb13a-cc03-4e31-853e-48359ec7efac"],

Cell[BoxData["\<\"/Users/wbowers/Downloads/SC-Efields.txt\"\>"], "Output",
 CellChangeTimes->{{3.88523205491787*^9, 3.885232068119277*^9}, 
   3.885232111159967*^9},
 CellLabel->
  "Out[527]=",ExpressionUUID->"024a3193-1ac8-482a-b89b-199f84e02251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testResultsv2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"point", ",", 
       RowBox[{"-", 
        RowBox[{"GetPotential", "[", 
         RowBox[{"1", ",", 
          RowBox[{"point", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
          RowBox[{"point", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"solc", "[", 
        RowBox[{
         RowBox[{"point", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"point", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"point", ",", "testPoints"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testResultsv2", "=", 
   RowBox[{"Insert", "[", 
    RowBox[{"testResultsv2", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Point\>\"", ",", "\"\<Potential from File\>\"", ",", " ", 
       "\"\<Potential from Laplace\>\""}], "}"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "phiFile", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"testResultsv2", ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Spacings", "->", "2"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.884622949257772*^9, 3.884623063909938*^9}, 
   3.884623148471693*^9},
 CellLabel->
  "In[1084]:=",ExpressionUUID->"094fadf1-5855-4b9b-801f-571f044c3b6c"],

Cell[BoxData["\<\"Phi file: 2/5/2023 Phi from 2D cylindrical solve\"\>"], \
"Print",
 CellChangeTimes->{{3.884623014269905*^9, 3.884623064194848*^9}, {
  3.884623145882245*^9, 3.884623148815325*^9}},
 CellLabel->
  "During evaluation of \
In[1084]:=",ExpressionUUID->"83bbe327-8c8e-49f2-b24d-8c4493e90a0f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Point\"\>", "\<\"Potential from File\"\>", "\<\"Potential from \
Laplace\"\>"},
    {
     RowBox[{"{", 
      RowBox[{"4.608842669337616`", ",", "6.563585696985424`"}], "}"}], 
     RowBox[{"-", "0.022843667845864595`"}], 
     RowBox[{"-", "0.022843647436142978`"}]},
    {
     RowBox[{"{", 
      RowBox[{"3.707180200517526`", ",", "2.176750103748627`"}], "}"}], 
     RowBox[{"-", "0.2856379287543658`"}], 
     RowBox[{"-", "0.28563758702102104`"}]},
    {
     RowBox[{"{", 
      RowBox[{"3.792037566239333`", ",", "4.787781408276944`"}], "}"}], 
     RowBox[{"-", "0.113568528207396`"}], 
     RowBox[{"-", "0.11356841843290895`"}]},
    {
     RowBox[{"{", 
      RowBox[{"3.855778982477084`", ",", "6.2237642461949205`"}], "}"}], 
     RowBox[{"-", "0.04447333047988948`"}], 
     RowBox[{"-", "0.044473289545081736`"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.5816942256367047`", ",", "6.431626072609152`"}], "}"}], 
     RowBox[{"-", "0.0647828901454912`"}], 
     RowBox[{"-", "0.06478284894855908`"}]},
    {
     RowBox[{"{", 
      RowBox[{"1.866278784790517`", ",", "1.5856972073106224`"}], "}"}], 
     RowBox[{"-", "0.7552474846150622`"}], 
     RowBox[{"-", "0.755245346802992`"}]},
    {
     RowBox[{"{", 
      RowBox[{"2.905554076101517`", ",", "0.3042719406065806`"}], "}"}], 
     RowBox[{"-", "0.5763559934756001`"}], 
     RowBox[{"-", "0.5763545669782913`"}]},
    {
     RowBox[{"{", 
      RowBox[{"4.575278216079155`", ",", "4.368535882641796`"}], "}"}], 
     RowBox[{"-", "0.09990978534171739`"}], 
     RowBox[{"-", "0.09990969284630839`"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.15228864787249807`", ",", "6.7965613936293`"}], "}"}], 
     RowBox[{"-", "0.03753939261107289`"}], 
     RowBox[{"-", "0.03753935014184256`"}]},
    {
     RowBox[{"{", 
      RowBox[{"3.0835338797819465`", ",", "1.126015266510481`"}], "}"}], 
     RowBox[{"-", "0.47613307088561413`"}], 
     RowBox[{"-", "0.47613224783759645`"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.8357538179378818`", ",", "4.235467354793811`"}], "}"}], 
     RowBox[{"-", "0.2845795343759437`"}], 
     RowBox[{"-", "0.28457913516268274`"}]},
    {
     RowBox[{"{", 
      RowBox[{"1.838948320701085`", ",", "4.892962053921949`"}], "}"}], 
     RowBox[{"-", "0.1779925656109327`"}], 
     RowBox[{"-", "0.1779923711245896`"}]},
    {
     RowBox[{"{", 
      RowBox[{"0.6921786231648643`", ",", "1.984597266088046`"}], "}"}], 
     RowBox[{"-", "0.9354830907859324`"}], 
     RowBox[{"-", "0.9354787594067301`"}]},
    {
     RowBox[{"{", 
      RowBox[{"1.6282948913230884`", ",", "6.1271049030900615`"}], "}"}], 
     RowBox[{"-", "0.08076653474886711`"}], 
     RowBox[{"-", "0.08076644537118204`"}]},
    {
     RowBox[{"{", 
      RowBox[{"6.260241423248773`", ",", "4.049899219509415`"}], "}"}], 
     RowBox[{"-", "0.0374481276449707`"}], 
     RowBox[{"-", "0.03744812542140894`"}]},
    {
     RowBox[{"{", 
      RowBox[{"4.314099980656643`", ",", "6.682551100251801`"}], "}"}], 
     RowBox[{"-", "0.021496397544065078`"}], 
     RowBox[{"-", "0.021496376710295244`"}]},
    {
     RowBox[{"{", 
      RowBox[{"3.13939323464767`", ",", "3.2866671843639033`"}], "}"}], 
     RowBox[{"-", "0.25627685592411376`"}], 
     RowBox[{"-", "0.25627668503068124`"}]},
    {
     RowBox[{"{", 
      RowBox[{"2.5535700266727304`", ",", "6.458169956398989`"}], "}"}], 
     RowBox[{"-", "0.04874860853332347`"}], 
     RowBox[{"-", "0.048748587706260796`"}]},
    {
     RowBox[{"{", 
      RowBox[{"6.4600376108498825`", ",", "2.845434570939234`"}], "}"}], 
     RowBox[{"-", "0.04143315626905598`"}], 
     RowBox[{"-", "0.04143316691755411`"}]},
    {
     RowBox[{"{", 
      RowBox[{"5.915655343265746`", ",", "5.078591103153024`"}], "}"}], 
     RowBox[{"-", "0.0340119356021969`"}], 
     RowBox[{"-", "0.0340118890729871`"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8846230142751093`*^9, 3.884623064197237*^9}, {
  3.884623145884989*^9, 3.884623148818657*^9}},
 CellLabel->
  "Out[1087]=",ExpressionUUID->"b54be413-e828-48b7-8b6e-b3e8e7ff7267"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"points", "=", 
  RowBox[{
   RowBox[{"Reap", "[", 
    RowBox[{"AvgElectronsEulerSC", "[", 
     RowBox[{
      RowBox[{"53", "/", "100"}], ",", "1", ",", "15", ",", 
      RowBox[{"2", "/", "5"}], ",", 
      RowBox[{"99", "/", "100"}], ",", "True", ",", "10"}], "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.883415495807514*^9, 3.883415537187469*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"56f128f3-074f-42ac-be7b-3d4c5f94313c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"1000 * RMS travel error: \"\>", "\[InvisibleSpace]", 
   "1.7702571422341973`"}],
  SequenceForm["1000 * RMS travel error: ", 1.7702571422341973`],
  Editable->False]], "Print",
 CellChangeTimes->{3.883415541664977*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"a3c09d9a-afe7-490c-900b-8a072363be14"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V/NC \"\>", "\[InvisibleSpace]", "1.5`"}],
  SequenceForm["V/NC ", 1.5],
  Editable->False]], "Print",
 CellChangeTimes->{3.883415541666564*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"63a51169-146a-4cf5-a033-9c4a344b790b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]: \"\>", "\[InvisibleSpace]", 
   FractionBox["53", "100"]}],
  SequenceForm["\[Lambda]: ", 
   Rational[53, 100]],
  Editable->False]], "Print",
 CellChangeTimes->{3.883415541668098*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"902df059-4fb8-4ca3-8337-32770ca9b6ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Geometry: \"\>", "\[InvisibleSpace]", "\<\"SC\"\>"}],
  SequenceForm["Geometry: ", "SC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8834155416689*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"0e2e70c2-6a26-430c-af76-3bb7045a42c8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collisions: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    TemplateBox[{"10.0", "1.3"},
     "Around"],
    Around[10., 1.2995725793078616`]]}],
  SequenceForm["Collisions: ", 
   Around[10., 1.2995725793078616`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.883415541669715*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"c8de5982-7652-4fa5-b728-566e87c17147"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean path: \"\>", "\[InvisibleSpace]", "8.818598652848783`"}],
  SequenceForm["Mean path: ", 8.818598652848783],
  Editable->False]], "Print",
 CellChangeTimes->{3.8834155416706038`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"a9dedf23-0ee5-437c-8763-f380186b8258"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "7.3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "7.3"}], "}"}]}], "}"}], ",", "7.3"}], 
       "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Ball", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}], "]"}], 
   ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"points", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883415574019368*^9, 3.883415577005597*^9}, {
  3.883415617802328*^9, 3.883415622323182*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"df5f9168-1c1b-4b35-8169-624197580c4a"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.3], CylinderBox[{{0, 0, -7.3}, {0, 0, 7.3}}, 7.3]}, 
   TagBox[SphereBox[{0, 0, 0}, 2],
    "Ball"], 
   {GrayLevel[0], PointSize[0.01], Point3DBox[CompressedData["
1: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
SCL+P64FGfc=
     "]]}},
  ImageSize->{327.37962897538324`, 319.34781026026275`},
  ImageSizeRaw->Automatic,
  ViewPoint->{3.2507222422779747`, 0.9375520713993956, -0.06165238822596398},
  ViewVertical->{0.5823490148703796, 0.16639461209051493`, 
   0.7957276279900966}]], "Output",
 CellChangeTimes->{
  3.8834155774536877`*^9, {3.883415618381312*^9, 3.88341562260007*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"958e3030-3a27-49e2-9d37-6da7add850c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectronsEulerSC", "[", 
   RowBox[{
    RowBox[{"53", "/", "100"}], ",", "10", ",", "15", ",", 
    RowBox[{"2", "/", "5"}], ",", 
    RowBox[{"4", "/", "5"}], ",", "True", ",", "1200"}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8839966859785757`*^9, 3.88399668781317*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"eace5ed0-f29b-42e9-913f-b9814f2c5179"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"1000 * RMS travel error: \"\>", "\[InvisibleSpace]", 
   "14.901313676454977`"}],
  SequenceForm["1000 * RMS travel error: ", 14.901313676454977`],
  Editable->False]], "Print",
 CellChangeTimes->{3.884001233754362*^9},
 CellLabel->
  "During evaluation of \
In[359]:=",ExpressionUUID->"facbcda4-5003-44ec-922c-876b3f35d25a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V/NC \"\>", "\[InvisibleSpace]", "15.`"}],
  SequenceForm["V/NC ", 15.],
  Editable->False]], "Print",
 CellChangeTimes->{3.88400123376696*^9},
 CellLabel->
  "During evaluation of \
In[359]:=",ExpressionUUID->"4fc3b350-25e1-44b4-8d06-f82a9a05b56b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]: \"\>", "\[InvisibleSpace]", 
   FractionBox["53", "100"]}],
  SequenceForm["\[Lambda]: ", 
   Rational[53, 100]],
  Editable->False]], "Print",
 CellChangeTimes->{3.884001233788365*^9},
 CellLabel->
  "During evaluation of \
In[359]:=",ExpressionUUID->"6a710113-64fe-460e-8d4e-32ed305b5a7b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Geometry: \"\>", "\[InvisibleSpace]", "\<\"SC\"\>"}],
  SequenceForm["Geometry: ", "SC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.884001233804846*^9},
 CellLabel->
  "During evaluation of \
In[359]:=",ExpressionUUID->"b6ada873-9d9c-42df-9d96-5abe600505b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collisions: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    TemplateBox[{"195.4", "2.8"},
     "Around"],
    Around[195.4475, 2.7557774996931164`]]}],
  SequenceForm["Collisions: ", 
   Around[195.4475, 2.7557774996931164`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.884001233826069*^9},
 CellLabel->
  "During evaluation of \
In[359]:=",ExpressionUUID->"b508942d-5498-4630-a1b8-fc5bf3be747d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean path: \"\>", "\[InvisibleSpace]", "163.39525616259743`"}],
  
  SequenceForm["Mean path: ", 163.39525616259743`],
  Editable->False]], "Print",
 CellChangeTimes->{3.884001233839517*^9},
 CellLabel->
  "During evaluation of \
In[359]:=",ExpressionUUID->"9a5a73f9-d9d9-4ace-945e-5549ab2e7640"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"34.8", "0.4"},
   "Around"],
  Around[34.77583333333333, 0.433631582286974]]], "Output",
 CellChangeTimes->{3.884001233852907*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"04bc9e6d-2de0-4868-a8bd-0ea85b768130"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectronsEulerSC", "[", 
   RowBox[{
    RowBox[{"53", "/", "100"}], ",", "10", ",", "15", ",", 
    RowBox[{"2", "/", "5"}], ",", 
    RowBox[{"4", "/", "5"}], ",", "True", ",", "10"}], "]"}], " "}]], "Input",\

 CellChangeTimes->{{3.884622832061893*^9, 3.88462283218897*^9}},
 CellLabel->
  "In[1385]:=",ExpressionUUID->"09badc24-796e-411c-ba94-c41f41163305"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"1000 * RMS travel error: \"\>", "\[InvisibleSpace]", 
   "14.256228645218036`"}],
  SequenceForm["1000 * RMS travel error: ", 14.256228645218036`],
  Editable->False]], "Print",
 CellChangeTimes->{3.884622855983199*^9, 3.8846232281195993`*^9, 
  3.885166085241881*^9},
 CellLabel->
  "During evaluation of \
In[1385]:=",ExpressionUUID->"73fa7b67-69e4-45d7-a63c-ec6f648abb22"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V/NC \"\>", "\[InvisibleSpace]", "15.`"}],
  SequenceForm["V/NC ", 15.],
  Editable->False]], "Print",
 CellChangeTimes->{3.884622855983199*^9, 3.8846232281195993`*^9, 
  3.885166085244424*^9},
 CellLabel->
  "During evaluation of \
In[1385]:=",ExpressionUUID->"16e2a762-6c9c-430f-8005-49a1f45b4aa8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]: \"\>", "\[InvisibleSpace]", 
   FractionBox["53", "100"]}],
  SequenceForm["\[Lambda]: ", 
   Rational[53, 100]],
  Editable->False]], "Print",
 CellChangeTimes->{3.884622855983199*^9, 3.8846232281195993`*^9, 
  3.885166085246902*^9},
 CellLabel->
  "During evaluation of \
In[1385]:=",ExpressionUUID->"d5e67836-b6a5-44e8-b96e-f9fb5e8479f7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Geometry: \"\>", "\[InvisibleSpace]", "\<\"SC\"\>"}],
  SequenceForm["Geometry: ", "SC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.884622855983199*^9, 3.8846232281195993`*^9, 
  3.885166085248942*^9},
 CellLabel->
  "During evaluation of \
In[1385]:=",ExpressionUUID->"8d0fc20a-71c6-4a93-95ca-b29a90bceba7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collisions: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    TemplateBox[{"193.", "20."},
     "Around"],
    Around[192.9, 19.717702142434796`]]}],
  SequenceForm["Collisions: ", 
   Around[192.9, 19.717702142434796`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.884622855983199*^9, 3.8846232281195993`*^9, 
  3.885166085251007*^9},
 CellLabel->
  "During evaluation of \
In[1385]:=",ExpressionUUID->"de76aa1f-89a8-46a1-85ec-0427ade418ea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean path: \"\>", "\[InvisibleSpace]", "162.86383107831648`"}],
  
  SequenceForm["Mean path: ", 162.86383107831648`],
  Editable->False]], "Print",
 CellChangeTimes->{3.884622855983199*^9, 3.8846232281195993`*^9, 
  3.8851660852535*^9},
 CellLabel->
  "During evaluation of \
In[1385]:=",ExpressionUUID->"5311f750-b568-4dd0-a27f-92757dd73d23"],

Cell[BoxData["\<\"Phi file: 2/5/2023 Phi from 2D cylindrical solve\"\>"], \
"Print",
 CellChangeTimes->{3.884622855983199*^9, 3.8846232281195993`*^9, 
  3.8851660852554502`*^9},
 CellLabel->
  "During evaluation of \
In[1385]:=",ExpressionUUID->"95bb802e-7530-42b0-bfb7-1acf42d103c1"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"32.5", "3.2"},
   "Around"],
  Around[32.5, 3.2395129949491546`]]], "Output",
 CellChangeTimes->{3.884622855993997*^9, 3.884623228130753*^9, 
  3.88516608525749*^9},
 CellLabel->
  "Out[1385]=",ExpressionUUID->"92b7381f-07f8-4dee-b20e-7ab8cd462e48"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectronsEulerSC", "[", 
   RowBox[{
   "\[Lambda]_", ",", "Ni_", ",", "Ui_", ",", "dt_", ",", "tbound_", ",", 
    "print_", ",", "getbins_", ",", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eErrorList", ",", "V", ",", "result", ",", "stack", ",", "collisions", 
      ",", "paths", ",", "svals", ",", "countbin", ",", "electronsbin", ",", 
      "squaredbin", ",", "lbin", ",", "lbinSquared", ",", "data", ",", " ", 
      "seedcount", ",", "totalpaths", ",", "Nc"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V", "=", 
      RowBox[{"Ui", "*", "Ni"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"totalpaths", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"seedcount", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"collisions", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eErrorList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"paths", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"svals", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"getbins", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"countbin", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "binwidth"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"electronsbin", " ", "=", "  ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "binwidth"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"squaredbin", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "binwidth"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lbin", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"lmax", "/", "2"}], "+", "1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lbinSquared", " ", "=", "  ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"lmax", "/", "2"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{"lmax", "/", "2"}], "+", "1"}]}], "]"}]}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stack", " ", "=", " ", 
      RowBox[{"CreateDataStructure", "[", "\"\<Stack\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x0", ",", "x1", ",", "y0", ",", "y1", ",", "z0", ",", "z1", ",", 
            "numElectrons", ",", "cos\[Theta]", ",", "\[Phi]", ",", "s", ",", 
            "vx", ",", "vy", ",", "vz", ",", " ", "energy", ",", "eError", 
            ",", "numCollisions", ",", "pathval", ",", "sval", ",", "idx", 
            ",", "c\[Theta]0", ",", "\[Phi]0", ",", "SH", ",", "l", ",", "l2",
             ",", "collisionE", ",", "cost", ",", "phi", ",", "start", ",", 
            "path", ",", "input"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numElectrons", " ", "=", " ", "1"}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"numCollisions", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"stack", "[", 
            RowBox[{"\"\<Push\>\"", ",", 
             RowBox[{"GetStartingPos", "[", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c\[Theta]0", ",", "\[Phi]0"}], "}"}], " ", "=", " ", 
            RowBox[{"GetAngles", "[", 
             RowBox[{"x0", ",", "y0", ",", "z0"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", " ", 
              RowBox[{"stack", "[", "\"\<EmptyQ\>\"", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "x0", ",", "y0", ",", "z0", ",", "vx", ",", "vy", ",", "vz"}],
                 "}"}], "=", 
               RowBox[{"stack", "[", "\"\<Pop\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"cos\[Theta]", "=", "1"}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"energy", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"path", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"While", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "=", 
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{
                    RowBox[{"ExponentialDistribution", "[", 
                    RowBox[{"1", "/", "\[Lambda]"}], "]"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "16"}]}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "x1", ",", "y1", ",", "z1", ",", " ", "vx", ",", " ", "vy",
                     ",", " ", "vz", ",", " ", "energy", ",", "eError", ",", 
                    "pathval", ",", "sval"}], "}"}], "=", 
                  RowBox[{"GetNewPositionsEuler", "[", 
                   RowBox[{
                   "dt", ",", "s", ",", "V", ",", "x0", ",", "y0", ",", "z0", 
                    ",", "vx", ",", "vy", ",", "vz"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"eErrorList", ",", "eError"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"InBounds", "[", 
                  RowBox[{"x1", ",", "y1", ",", "z1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"path", "+=", "pathval"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"paths", ",", "pathval"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"svals", "+=", "s"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"numCollisions", "++"}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"energy", ">=", "Ui"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"numElectrons", "++"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"stack", "[", 
                    RowBox[{"\"\<Push\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "x1", ",", "y1", ",", "z1", ",", "0", ",", "0", ",", 
                    "0"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"energy", "-=", "Ui"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"collisionE", "=", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{
                    RowBox[{"Ui", "*", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"UniformDistribution", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "10"}], ",", " ", 
                    RowBox[{"1", "/", "2"}]}], "}"}], "]"}], "]"}]}], ",", 
                    "16"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"energy", "-=", "collisionE"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"energy", "<", "0"}], ",", 
                    RowBox[{"energy", "=", "0"}]}], "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "vx", ",", " ", "vy", ",", " ", "vz", ",", " ", "cost", 
                    ",", " ", "phi"}], "}"}], "=", 
                  RowBox[{"UpdateVelocity", "[", 
                   RowBox[{
                   "energy", ",", " ", "vx", ",", " ", "vy", ",", " ", "vz", 
                    ",", " ", "tbound"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"totalpaths", "+=", "path"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"c\[Theta]0", ",", "numElectrons"}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"getbins", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"idx", "=", 
               RowBox[{"FindBinNum", "[", 
                RowBox[{"c\[Theta]0", ",", "binwidth"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"countbin", "[", 
                RowBox[{"[", "idx", "]"}], "]"}], "+=", "1"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"electronsbin", "[", 
                RowBox[{"[", "idx", "]"}], "]"}], "+=", "numElectrons"}], ";",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"squaredbin", "[", 
                RowBox[{"[", "idx", "]"}], "]"}], "+=", 
               RowBox[{"numElectrons", "^", "2"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"SH", "=", 
               RowBox[{"numElectrons", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"SphericalHarmonicY", "[", 
                    RowBox[{"l", ",", "0", ",", 
                    RowBox[{"ArcCos", "[", "c\[Theta]0", "]"}], ",", 
                    "\[Phi]0"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], 
                 "]"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"l", "=", " ", "0"}], ",", " ", 
                RowBox[{"l", " ", "<=", " ", "lmax"}], ",", " ", 
                RowBox[{"l", "+=", "2"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"lbin", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], "]"}], "]"}], "+=", 
                  RowBox[{"SH", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"l2", "=", "0"}], ",", 
                   RowBox[{"l2", "<=", "lmax"}], ",", 
                   RowBox[{"l2", "+=", "2"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"lbinSquared", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"l2", "/", "2"}], "+", "1"}]}], "]"}], "]"}], "+=", 
                    RowBox[{
                    RowBox[{"SH", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], "]"}], "]"}], 
                    RowBox[{"SH", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l2", "/", "2"}], "+", "1"}], "]"}], "]"}]}]}]}], 
                  "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"collisions", ",", "numCollisions"}], "]"}], ";", 
           "\[IndentingNewLine]", "numElectrons"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "count", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"print", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<1000 * RMS travel error: \>\"", ",", 
          RowBox[{"1000", "*", 
           RowBox[{"RootMeanSquare", "[", "eErrorList", "]"}]}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<V/NC \>\"", ",", 
          RowBox[{"Ni", " ", "Ui", " ", 
           RowBox[{"\[Lambda]", "/", "5.3"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\[Lambda]: \>\"", ",", "\[Lambda]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Geometry: \>\"", ",", "ID"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Collisions: \>\"", ",", " ", 
          RowBox[{"Around", "[", 
           RowBox[{
            RowBox[{"Mean", "[", "collisions", "]"}], ",", 
            RowBox[{
             RowBox[{"StandardDeviation", "[", "collisions", "]"}], "/", 
             RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Mean path: \>\"", ",", "  ", 
          RowBox[{
           RowBox[{"totalpaths", "/", "count"}], "/", "\[Lambda]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "phiFile", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"getbins", ",", 
       RowBox[{"Sow", "[", 
        RowBox[{"{", 
         RowBox[{
         "countbin", ",", "electronsbin", ",", " ", "squaredbin", ",", "lbin",
           ",", "lbinSquared", ",", "data"}], "}"}], "]"}], ",", 
       RowBox[{"Sow", "[", "data", "]"}]}], " ", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "result", "]"}], ",", 
       RowBox[{
        RowBox[{"StandardDeviation", "[", "result", "]"}], "/", 
        RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->CompressedData["
1:eJwdx28o43EAx/H162Ys/xKd48y/mxLdYh6gpK+UMNdyiGTHdts8wJrulEad
69DwZB7I/Gtx6DygSEryL3nggZvtuq3ZXXdyJr7Oplziwfl9vg/evXonqw2V
Wk4gELzggwqn6CDeR4lBK7fDxcSIdw+89pAKZs9y/3fJJSV7Xy1u2OtVncCV
H3dn8POuTJ3IWx6l1MHX58JWmKBrZXKRGafQ/bHSB3Uyix8WdR8xv7U8zRun
/CvfFMCZzal2aOcczIUuW8EE73ppfyEc/lM4AmNl6Vb4tjnLBhWi+UXYrq71
wmKzlekJ1f+G29edzMPYsQBsck4yR23CNPcVJaaUnAxYs/qvDd4o1QYYmfzf
AnN7g4fhK9XLcTh65puGE+afC2t/KXk+K12C9IE2P7mmpN502wGTNOmaIN4Y
o1MLo8oy7+BcQjZzZqNTHuKnJNgVyIGynTACHYNfSmCjT6KEF7+MTL3fVQfv
rV5mav2ABuZ7PMwBRYOpKkBJx8k+8/3t1ip09TnW4JyIO6/mHRIImeKSD0Gq
G0riosUR8NlpeDwsPpZL4CdxjxRyRnEaLErVl3fzKgbNFfARLG8+Sg==
  "],
 CellLabel->"In[20]:=",ExpressionUUID->"c457e28c-a4dc-4f52-98fc-4f66d915d9f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"AvgElectronsEulerSC", "[", 
   RowBox[{
    RowBox[{"1", "/", "2"}], ",", "10", ",", "15", ",", 
    RowBox[{"2", "/", "5"}], ",", 
    RowBox[{"4", "/", "5"}], ",", "True", ",", "False", ",", "100"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.885229394359735*^9, 3.885229423390448*^9}, {
  3.8852295481952972`*^9, 3.8852295483096943`*^9}, {3.8852314783450127`*^9, 
  3.8852314812622547`*^9}},
 CellLabel->
  "In[517]:=",ExpressionUUID->"e190e21d-b6ba-417f-b9ab-49cf652e1022"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"1000 * RMS travel error: \"\>", "\[InvisibleSpace]", 
   "14.329105873298198`"}],
  SequenceForm["1000 * RMS travel error: ", 14.329105873298198`],
  Editable->False]], "Print",
 CellChangeTimes->{3.88523189339837*^9},
 CellLabel->
  "During evaluation of \
In[517]:=",ExpressionUUID->"4f3fe3b6-7ea9-49ae-b71f-443656a4daec"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V/NC \"\>", "\[InvisibleSpace]", "14.150943396226417`"}],
  SequenceForm["V/NC ", 14.150943396226417`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8852318934004383`*^9},
 CellLabel->
  "During evaluation of \
In[517]:=",ExpressionUUID->"418f875e-d049-45b7-9d01-6755c2db2c55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]: \"\>", "\[InvisibleSpace]", 
   FractionBox["1", "2"]}],
  SequenceForm["\[Lambda]: ", 
   Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.885231893402562*^9},
 CellLabel->
  "During evaluation of \
In[517]:=",ExpressionUUID->"e797bd0f-c0a0-4f68-ab18-6fd137086927"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Geometry: \"\>", "\[InvisibleSpace]", "\<\"SC\"\>"}],
  SequenceForm["Geometry: ", "SC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.885231893404244*^9},
 CellLabel->
  "During evaluation of \
In[517]:=",ExpressionUUID->"cc1a1b79-f696-4b6f-a30d-b226322a668f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collisions: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    TemplateBox[{"229.", "11."},
     "Around"],
    Around[228.53, 10.52586477648888]]}],
  SequenceForm["Collisions: ", 
   Around[228.53, 10.52586477648888]],
  Editable->False]], "Print",
 CellChangeTimes->{3.88523189340596*^9},
 CellLabel->
  "During evaluation of \
In[517]:=",ExpressionUUID->"fa2c6c7a-86da-4bff-b3ae-c0fa9886a416"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean path: \"\>", "\[InvisibleSpace]", "192.60208464656498`"}],
  
  SequenceForm["Mean path: ", 192.60208464656498`],
  Editable->False]], "Print",
 CellChangeTimes->{3.88523189340808*^9},
 CellLabel->
  "During evaluation of \
In[517]:=",ExpressionUUID->"19de08b4-0960-4947-bf8e-10d2a8455843"],

Cell[BoxData["\<\"Phi file: 2/5/2023 Phi from 2D cylindrical solve\"\>"], \
"Print",
 CellChangeTimes->{3.8852318934097643`*^9},
 CellLabel->
  "During evaluation of \
In[517]:=",ExpressionUUID->"91fac98d-b804-4f34-a875-0a7fcbc35d52"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"409.96129`", ",", 
   InterpretationBox[
    TemplateBox[{"35.7", "1.5"},
     "Around"],
    Around[35.72, 1.4666033044164508`]]}], "}"}]], "Output",
 CellChangeTimes->{{3.885229418155707*^9, 3.88522942810273*^9}, 
   3.8852295872922297`*^9, 3.885230536363679*^9, 3.885231893411509*^9},
 CellLabel->
  "Out[517]=",ExpressionUUID->"2da64c95-2935-4e04-bc99-b329a890bd6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"AvgElectronsEulerSCFAST", "[", 
   RowBox[{
    RowBox[{"1", "/", "2"}], ",", "10", ",", "15", ",", 
    RowBox[{"2", "/", "5"}], ",", 
    RowBox[{"4", "/", "5"}], ",", "True", ",", "False", ",", "100"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.885229465496994*^9, 3.885229467629534*^9}, 
   3.8852314823279676`*^9},
 CellLabel->
  "In[518]:=",ExpressionUUID->"a775e97b-c281-49bc-9375-b2b3c143b011"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"1000 * RMS travel error: \"\>", "\[InvisibleSpace]", 
   "14.654513416975476`"}],
  SequenceForm["1000 * RMS travel error: ", 14.654513416975476`],
  Editable->False]], "Print",
 CellChangeTimes->{3.885230864758225*^9, 3.8852309258930817`*^9, 
  3.88523118364736*^9, 3.8852312694702787`*^9, 3.8852313242703457`*^9, 
  3.885231380011561*^9, 3.885231421656155*^9, 3.885231455143243*^9, 
  3.885232008543981*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"ec1df841-d379-4b7b-b2b6-86da0e5ffd10"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"V/NC \"\>", "\[InvisibleSpace]", "14.150943396226417`"}],
  SequenceForm["V/NC ", 14.150943396226417`],
  Editable->False]], "Print",
 CellChangeTimes->{3.885230864758225*^9, 3.8852309258930817`*^9, 
  3.88523118364736*^9, 3.8852312694702787`*^9, 3.8852313242703457`*^9, 
  3.885231380011561*^9, 3.885231421656155*^9, 3.885231455143243*^9, 
  3.8852320085461597`*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"b3913af0-edb9-4964-ac17-773ca5f03b4e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Lambda]: \"\>", "\[InvisibleSpace]", 
   FractionBox["1", "2"]}],
  SequenceForm["\[Lambda]: ", 
   Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.885230864758225*^9, 3.8852309258930817`*^9, 
  3.88523118364736*^9, 3.8852312694702787`*^9, 3.8852313242703457`*^9, 
  3.885231380011561*^9, 3.885231421656155*^9, 3.885231455143243*^9, 
  3.885232008548455*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"181a51ee-d4b5-4cf5-9ae8-f8a9e2d7e4d5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Geometry: \"\>", "\[InvisibleSpace]", "\<\"SC\"\>"}],
  SequenceForm["Geometry: ", "SC"],
  Editable->False]], "Print",
 CellChangeTimes->{3.885230864758225*^9, 3.8852309258930817`*^9, 
  3.88523118364736*^9, 3.8852312694702787`*^9, 3.8852313242703457`*^9, 
  3.885231380011561*^9, 3.885231421656155*^9, 3.885231455143243*^9, 
  3.885232008550321*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"e0b451a6-4c7a-4e09-a539-8ef063ab6c5a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Collisions: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    TemplateBox[{"226.", "10."},
     "Around"],
    Around[225.75, 9.679786029440816]]}],
  SequenceForm["Collisions: ", 
   Around[225.75, 9.679786029440816]],
  Editable->False]], "Print",
 CellChangeTimes->{3.885230864758225*^9, 3.8852309258930817`*^9, 
  3.88523118364736*^9, 3.8852312694702787`*^9, 3.8852313242703457`*^9, 
  3.885231380011561*^9, 3.885231421656155*^9, 3.885231455143243*^9, 
  3.885232008552112*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"810b5ffa-de34-4833-9b38-26f248a956c1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Mean path: \"\>", "\[InvisibleSpace]", "0"}],
  SequenceForm["Mean path: ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.885230864758225*^9, 3.8852309258930817`*^9, 
  3.88523118364736*^9, 3.8852312694702787`*^9, 3.8852313242703457`*^9, 
  3.885231380011561*^9, 3.885231421656155*^9, 3.885231455143243*^9, 
  3.885232008553988*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"cb8b377c-c4d2-472c-9372-bc70b1464ea7"],

Cell[BoxData["\<\"Phi file: 2/5/2023 Phi from 2D cylindrical solve\"\>"], \
"Print",
 CellChangeTimes->{3.885230864758225*^9, 3.8852309258930817`*^9, 
  3.88523118364736*^9, 3.8852312694702787`*^9, 3.8852313242703457`*^9, 
  3.885231380011561*^9, 3.885231421656155*^9, 3.885231455143243*^9, 
  3.88523200855573*^9},
 CellLabel->
  "During evaluation of \
In[518]:=",ExpressionUUID->"3ec41294-f686-4416-98c2-17887346be10"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"115.10808`", ",", 
   InterpretationBox[
    TemplateBox[{"36.9", "1.4"},
     "Around"],
    Around[36.87, 1.42337307445761]]}], "}"}]], "Output",
 CellChangeTimes->{{3.885229449763929*^9, 3.885229476041782*^9}, 
   3.885229508819077*^9, 3.8852297058459272`*^9, {3.885229847694559*^9, 
   3.885229870172268*^9}, 3.8852299082539454`*^9, 3.885230183469363*^9, 
   3.8852303408027*^9, 3.885230488642764*^9, 3.885230789277442*^9, {
   3.8852308435716133`*^9, 3.885230864788417*^9}, 3.885230925963481*^9, 
   3.885231183713992*^9, 3.8852312695251303`*^9, 3.885231324313504*^9, 
   3.8852313800603867`*^9, 3.885231421710259*^9, 3.885231455158993*^9, 
   3.885232008557539*^9},
 CellLabel->
  "Out[518]=",ExpressionUUID->"f6fcdd7f-72b0-4f05-afc0-73aacc0785eb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AvgElectronsEulerSCFAST", "[", 
   RowBox[{
   "\[Lambda]_", ",", "Ni_", ",", "Ui_", ",", "dt_", ",", "tbound_", ",", 
    "print_", ",", "getbins_", ",", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eErrorList", ",", "V", ",", "result", ",", "stack", ",", "collisions", 
      ",", "paths", ",", "svals", ",", "eErrorListMASTER", ",", "countbin", 
      ",", "electronsbin", ",", "squaredbin", ",", "lbin", ",", "lbinSquared",
       ",", "data", ",", " ", "seedcount", ",", "totalpaths", ",", "Nc"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"V", "=", 
      RowBox[{"Ui", "*", "Ni"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"seedcount", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"collisions", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "each", " ", "kernel", " ", "creates", " ", "its", " ", "own", " ", 
       "version", " ", "of", " ", "eErrorList"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"eErrorListMASTER", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"paths", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"svals", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"getbins", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"countbin", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "binwidth"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"electronsbin", " ", "=", "  ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "binwidth"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"squaredbin", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "binwidth"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lbin", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"lmax", "/", "2"}], "+", "1"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"lbinSquared", " ", "=", "  ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"lmax", "/", "2"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{"lmax", "/", "2"}], "+", "1"}]}], "]"}]}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "x0", ",", "x1", ",", "y0", ",", "y1", ",", "z0", ",", "z1", ",", 
            "numElectrons", ",", "cos\[Theta]", ",", "\[Phi]", ",", "s", ",", 
            "vx", ",", "vy", ",", "vz", ",", " ", "energy", ",", "eError", 
            ",", "numCollisions", ",", "pathval", ",", "sval", ",", "idx", 
            ",", "c\[Theta]0", ",", "\[Phi]0", ",", "SH", ",", "l", ",", "l2",
             ",", "collisionE", ",", "cost", ",", "phi", ",", "start", ",", 
            "path", ",", "input"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numElectrons", " ", "=", " ", "1"}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"numCollisions", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"eErrorList", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"stack", " ", "=", " ", 
            RowBox[{"CreateDataStructure", "[", "\"\<Stack\>\"", "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"stack", "[", 
            RowBox[{"\"\<Push\>\"", ",", 
             RowBox[{"GetStartingPos", "[", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c\[Theta]0", ",", "\[Phi]0"}], "}"}], " ", "=", " ", 
            RowBox[{"GetAngles", "[", 
             RowBox[{"x0", ",", "y0", ",", "z0"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"stack", "[", "\"\<EmptyQ\>\"", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "x0", ",", "y0", ",", "z0", ",", "vx", ",", "vy", ",", "vz"}],
                 "}"}], "=", 
               RowBox[{"stack", "[", "\"\<Pop\>\"", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"cos\[Theta]", "=", "1"}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"energy", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"path", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"While", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"s", "=", 
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{
                    RowBox[{"ExponentialDistribution", "[", 
                    RowBox[{"1", "/", "\[Lambda]"}], "]"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "16"}]}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "x1", ",", "y1", ",", "z1", ",", " ", "vx", ",", " ", "vy",
                     ",", " ", "vz", ",", " ", "energy", ",", "eError", ",", 
                    "pathval", ",", "sval"}], "}"}], "=", 
                  RowBox[{"GetNewPositionsEuler", "[", 
                   RowBox[{
                   "dt", ",", "s", ",", "V", ",", "x0", ",", "y0", ",", "z0", 
                    ",", "vx", ",", "vy", ",", "vz"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"eErrorList", ",", "eError"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"InBounds", "[", 
                  RowBox[{"x1", ",", "y1", ",", "z1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"path", "+=", "pathval"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"paths", ",", "pathval"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"svals", "+=", "s"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"numCollisions", "++"}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"energy", ">=", "Ui"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"numElectrons", "++"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"stack", "[", 
                    RowBox[{"\"\<Push\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "x1", ",", "y1", ",", "z1", ",", "0", ",", "0", ",", 
                    "0"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"energy", "-=", "Ui"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"collisionE", "=", 
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{
                    RowBox[{"Ui", "*", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"UniformDistribution", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "/", "10"}], ",", " ", 
                    RowBox[{"1", "/", "2"}]}], "}"}], "]"}], "]"}]}], ",", 
                    "16"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"energy", "-=", "collisionE"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"energy", "<", "0"}], ",", 
                    RowBox[{"energy", "=", "0"}]}], "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "vx", ",", " ", "vy", ",", " ", "vz", ",", " ", "cost", 
                    ",", " ", "phi"}], "}"}], "=", 
                  RowBox[{"UpdateVelocity", "[", 
                   RowBox[{
                   "energy", ",", " ", "vx", ",", " ", "vy", ",", " ", "vz", 
                    ",", " ", "tbound"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x0", ",", "y0", ",", "z0"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"totalpaths", "+=", "path"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"data", ",", 
             RowBox[{"{", 
              RowBox[{"c\[Theta]0", ",", "numElectrons"}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"getbins", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"idx", "=", 
               RowBox[{"FindBinNum", "[", 
                RowBox[{"c\[Theta]0", ",", "binwidth"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"countbin", "[", 
                RowBox[{"[", "idx", "]"}], "]"}], "+=", "1"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"electronsbin", "[", 
                RowBox[{"[", "idx", "]"}], "]"}], "+=", "numElectrons"}], ";",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"squaredbin", "[", 
                RowBox[{"[", "idx", "]"}], "]"}], "+=", 
               RowBox[{"numElectrons", "^", "2"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"SH", "=", 
               RowBox[{"numElectrons", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Conjugate", "[", 
                   RowBox[{"SphericalHarmonicY", "[", 
                    RowBox[{"l", ",", "0", ",", 
                    RowBox[{"ArcCos", "[", "c\[Theta]0", "]"}], ",", 
                    "\[Phi]0"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], 
                 "]"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"l", "=", " ", "0"}], ",", " ", 
                RowBox[{"l", " ", "<=", " ", "lmax"}], ",", " ", 
                RowBox[{"l", "+=", "2"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"lbin", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], "]"}], "]"}], "+=", 
                  RowBox[{"SH", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"l2", "=", "0"}], ",", 
                   RowBox[{"l2", "<=", "lmax"}], ",", 
                   RowBox[{"l2", "+=", "2"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"lbinSquared", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], ",", 
                    RowBox[{
                    RowBox[{"l2", "/", "2"}], "+", "1"}]}], "]"}], "]"}], "+=", 
                    RowBox[{
                    RowBox[{"SH", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l", "/", "2"}], "+", "1"}], "]"}], "]"}], 
                    RowBox[{"SH", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"l2", "/", "2"}], "+", "1"}], "]"}], "]"}]}]}]}], 
                  "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
            "numElectrons", ",", " ", "eErrorList", ",", " ", 
             "numCollisions"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", "count", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"collisions", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", "result"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"eErrorListMASTER", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "result"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "result"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"print", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<1000 * RMS travel error: \>\"", ",", 
          RowBox[{"1000", "*", 
           RowBox[{"RootMeanSquare", "[", 
            RowBox[{"Flatten", "[", "eErrorListMASTER", "]"}], "]"}]}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<V/NC \>\"", ",", 
          RowBox[{"Ni", " ", "Ui", " ", 
           RowBox[{"\[Lambda]", "/", "5.3"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<\[Lambda]: \>\"", ",", "\[Lambda]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Geometry: \>\"", ",", "ID"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Collisions: \>\"", ",", " ", 
          RowBox[{"Around", "[", 
           RowBox[{
            RowBox[{"Mean", "[", "collisions", "]"}], ",", 
            RowBox[{
             RowBox[{"StandardDeviation", "[", "collisions", "]"}], "/", 
             RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "phiFile", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"getbins", ",", 
       RowBox[{"Sow", "[", 
        RowBox[{"{", 
         RowBox[{
         "countbin", ",", "electronsbin", ",", " ", "squaredbin", ",", "lbin",
           ",", "lbinSquared", ",", "data"}], "}"}], "]"}], ",", 
       RowBox[{"Sow", "[", "data", "]"}]}], " ", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"Mean", "[", "result", "]"}], ",", 
       RowBox[{
        RowBox[{"StandardDeviation", "[", "result", "]"}], "/", 
        RowBox[{"Sqrt", "[", "count", "]"}]}]}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfU21ek7NpzeOPzOeLQDROw+brQTRNbxJYLqM22Yb
iN63mWU7iK56YHEeRCec3QGmrVj/XwbRE2s/XgHR1ft23wPRL2TvPQfRJnI3
OGuBtAT3Uy4QLbM9RghEC6T7CIPotmuLpEG0x4E9ciBafJeiPog+YMBuCKKX
3bvsD6L/zFkWBqLLI2xiQfQkL8YEEB2zSzgFRLe8b0kD0W+23WwG0UrnPDtA
NNeth30g2ube04kgmvWC9HQQPTd98gwQvejpuvkg2qSuZQGI/ndh5hKw+65H
LwXRzG/LVoLoaVturwHRK1QfCtYB6U2tbUIgGgClZLv/
  "],
 CellLabel->
  "In[528]:=",ExpressionUUID->"569d23c0-4dbf-40bb-bf16-5ac6915679cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxes", "=", 
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Ni", ",", 
      RowBox[{"MaxElectronsNew", "[", 
       RowBox[{"1", ",", "Ni", ",", "250"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Ni", ",", "5", ",", "11", ",", "2"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.882797230368416*^9, 3.8827972530291843`*^9}, {
  3.8827973912644253`*^9, 3.882797432734559*^9}, {3.882798610854123*^9, 
  3.8827986209538116`*^9}, {3.88279966064177*^9, 3.882799662719651*^9}, {
  3.882799759214788*^9, 3.882799783160177*^9}, {3.8851725743904*^9, 
  3.8851726008546953`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"256a0189-bfc5-413e-80f7-14cee58eb656"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     InterpretationBox[
      TemplateBox[{"6.5", "0.6"},
       "Around"],
      Around[6.534693365742996, 0.6453513776126205]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     InterpretationBox[
      TemplateBox[{"12.7", "0.7"},
       "Around"],
      Around[12.687452548376806`, 0.6678552463851386]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     InterpretationBox[
      TemplateBox[{"20.1", "1.3"},
       "Around"],
      Around[20.059361444918952`, 1.3292482645907597`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     InterpretationBox[
      TemplateBox[{"33.3", "2.7"},
       "Around"],
      Around[33.340099195326246`, 2.709476163068887]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.88279860819459*^9, 3.8827996590104437`*^9, 
  3.882799757789062*^9, 3.88280131583364*^9, 3.885172814804597*^9, 
  3.8851732405872917`*^9, 3.8851737873344*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"11895d7c-ec30-4157-9539-485b589cbf9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "maxes", "]"}]], "Input",
 CellChangeTimes->{{3.885173266746949*^9, 3.8851732684972878`*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"081f2b07-197c-406d-81df-61466bf4b1ee"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{5., 5.889341988130376}, {5., 6.534693365742996}}], 
         LineBox[{{5., 6.534693365742996}, {5., 7.180044743355616}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{7., 12.019597301991666`}, {7., 12.687452548376806`}}], 
         LineBox[{{7., 12.687452548376806`}, {7., 13.355307794761945`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{9., 18.730113180328193`}, {9., 20.059361444918952`}}], 
         LineBox[{{9., 20.059361444918952`}, {9., 21.388609709509712`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{11., 30.63062303225736}, {11., 33.340099195326246`}}], 
         LineBox[{{11., 33.340099195326246`}, {11., 36.04957535839513}}]}},
       Antialiasing->False]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{5., 7.180044743355616}, 
            Offset[{3, 0}, {5., 7.180044743355616}]}, {{5., 
            7.180044743355616}, Offset[{-3, 0}, {5., 7.180044743355616}]}, {{
            5., 5.889341988130376}, 
            Offset[{3, 0}, {5., 5.889341988130376}]}, {{5., 
            5.889341988130376}, 
            Offset[{-3, 0}, {5., 5.889341988130376}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{7., 13.355307794761945`}, 
            Offset[{3, 0}, {7., 13.355307794761945`}]}, {{7., 
            13.355307794761945`}, 
            Offset[{-3, 0}, {7., 13.355307794761945`}]}, {{7., 
            12.019597301991666`}, 
            Offset[{3, 0}, {7., 12.019597301991666`}]}, {{7., 
            12.019597301991666`}, 
            Offset[{-3, 0}, {7., 12.019597301991666`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{9., 21.388609709509712`}, 
            Offset[{3, 0}, {9., 21.388609709509712`}]}, {{9., 
            21.388609709509712`}, 
            Offset[{-3, 0}, {9., 21.388609709509712`}]}, {{9., 
            18.730113180328193`}, 
            Offset[{3, 0}, {9., 18.730113180328193`}]}, {{9., 
            18.730113180328193`}, 
            Offset[{-3, 0}, {9., 18.730113180328193`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{11., 36.04957535839513}, 
            Offset[{3, 0}, {11., 36.04957535839513}]}, {{11., 
            36.04957535839513}, Offset[{-3, 0}, {11., 36.04957535839513}]}, {{
            11., 30.63062303225736}, 
            Offset[{3, 0}, {11., 30.63062303225736}]}, {{11., 
            30.63062303225736}, 
            Offset[{-3, 0}, {11., 30.63062303225736}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{5., 6.534693365742996}, {7., 12.687452548376806`}, {9., 
     20.059361444918952`}, {11., 33.340099195326246`}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{4.8750000000000115`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{4.8750000000000115`, 11.}, {0, 36.04957535839513}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885173268876563*^9, 3.885173823530892*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"9640621e-e645-43ee-bc05-75128409cf74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listForFit", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    "maxes"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorslist", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], "&"}], "/@", "maxes"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"listForFit", ",", 
     RowBox[{
      RowBox[{"p1", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"p2", " ", "x"}], "]"}]}], "+", "p3"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], ",", " ", "x", 
     ",", 
     RowBox[{"Weights", "->", 
      RowBox[{"1", "/", 
       RowBox[{"errorslist", "^", "2"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"25", "-", "p3"}], ")"}], "/", "p1"}], "]"}], "/", "p2"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"f", ",", "p1"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{"f", ",", "p2"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], ".", 
     RowBox[{"fit", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"f", ",", "p1"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{"f", ",", "p2"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], "]"}]}], "/.", 
    RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"res", "=", 
  RowBox[{
   RowBox[{"Around", "[", 
    RowBox[{"f", ",", 
     RowBox[{"Sqrt", "[", "error", "]"}]}], "]"}], "/.", 
   RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}]}], "Input",
 CellLabel->
  "In[186]:=",ExpressionUUID->"0ac46de8-760f-460b-8b04-0b2e0516716d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p1", "\[Rule]", "1.523536017638957`"}], ",", 
   RowBox[{"p2", "\[Rule]", "0.32842871655458095`"}], ",", 
   RowBox[{"p3", "\[Rule]", 
    RowBox[{"-", "2.080248282009968`"}]}]}], "}"}]], "Print",
 CellChangeTimes->{3.882802213567136*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"505ea3bc-582c-4eaa-b7b4-a095510ecfd8"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"8.76", "0.09"},
   "Around"],
  Around[8.762238229695356, 0.08825861717051864]]], "Output",
 CellChangeTimes->{3.882802213591*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"9e198169-95cf-499c-8a5b-79cb586d3c6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "maxes", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fit", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "3", ",", "11"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"res", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "25"}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Black", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "25"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "25"}], "}"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "25"}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Breakdown", " ", "Point"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.5", ",", "30"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"N", ",", "i"}], "]"}], ",", "Electrons"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Finding breakdown for sphere-in-cylinder MC with \[Gamma] = \
25\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.882802186943843*^9, 3.882802197139536*^9}, {
  3.882802233145946*^9, 3.88280229073711*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"eb08572b-4b75-4b79-a1ce-66dc039372ca"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3., 1.9205425810325}, {3., 2.000923807865902}}], 
          LineBox[{{3., 2.000923807865902}, {3., 2.081305034699304}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{5., 5.295949127418933}, {5., 5.812793336263699}}], 
          LineBox[{{5., 5.812793336263699}, {5., 6.329637545108464}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{7., 10.783291482990835`}, {7., 12.37862174465163}}], 
          LineBox[{{7., 12.37862174465163}, {7., 13.973952006312425`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{9., 26.27831280471827}, {9., 29.927619350008946`}}], 
          LineBox[{{9., 29.927619350008946`}, {9., 33.576925895299624`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{11., 50.45237745721622}, {11., 53.87248920845226}}], 
          LineBox[{{11., 53.87248920845226}, {11., 57.29260095968829}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3., 2.081305034699304}, 
             Offset[{3, 0}, {3., 2.081305034699304}]}, {{3., 
             2.081305034699304}, Offset[{-3, 0}, {3., 2.081305034699304}]}, {{
             3., 1.9205425810325}, Offset[{3, 0}, {3., 1.9205425810325}]}, {{
             3., 1.9205425810325}, 
             Offset[{-3, 0}, {3., 1.9205425810325}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5., 6.329637545108464}, 
             Offset[{3, 0}, {5., 6.329637545108464}]}, {{5., 
             6.329637545108464}, Offset[{-3, 0}, {5., 6.329637545108464}]}, {{
             5., 5.295949127418933}, 
             Offset[{3, 0}, {5., 5.295949127418933}]}, {{5., 
             5.295949127418933}, 
             Offset[{-3, 0}, {5., 5.295949127418933}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7., 13.973952006312425`}, 
             Offset[{3, 0}, {7., 13.973952006312425`}]}, {{7., 
             13.973952006312425`}, 
             Offset[{-3, 0}, {7., 13.973952006312425`}]}, {{7., 
             10.783291482990835`}, 
             Offset[{3, 0}, {7., 10.783291482990835`}]}, {{7., 
             10.783291482990835`}, 
             Offset[{-3, 0}, {7., 10.783291482990835`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9., 33.576925895299624`}, 
             Offset[{3, 0}, {9., 33.576925895299624`}]}, {{9., 
             33.576925895299624`}, 
             Offset[{-3, 0}, {9., 33.576925895299624`}]}, {{9., 
             26.27831280471827}, Offset[{3, 0}, {9., 26.27831280471827}]}, {{
             9., 26.27831280471827}, 
             Offset[{-3, 0}, {9., 26.27831280471827}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11., 57.29260095968829}, 
             Offset[{3, 0}, {11., 57.29260095968829}]}, {{11., 
             57.29260095968829}, 
             Offset[{-3, 0}, {11., 57.29260095968829}]}, {{11., 
             50.45237745721622}, Offset[{3, 0}, {11., 50.45237745721622}]}, {{
             11., 50.45237745721622}, 
             Offset[{-3, 0}, {11., 50.45237745721622}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{3., 2.000923807865902}, {5., 5.812793336263699}, {7., 
      12.37862174465163}, {9., 29.927619350008946`}, {11., 
      53.87248920845226}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVyn881HcAx/GvZL5HOzrOz8M5PiW/Es7v8ibdursII3uoLKKHWIl+nGWE
auvHhtSkIj+SOoohVhGXWmS6S7/8aA+jFEqdtsJorP3xejz/eZlHJQTHzKMo
yv9T//tANsqmKBpdARmC9SoUjn32h+QzNRr8eMrAgKYQuEbeu0CDxuTULv8n
TAry7tpCQ10a59dGv1jHoXD3bQpxsqIx+mNsV6wrBRmHyd8SSGNGdLZPsY1C
VbJjSGcxDfbPp65dekrhsENKbr4PA04lgca1jSqwtXnPXnFWA0fXp2ddr1fF
c++c1+3PNbG7pIwhuagG8QnP6XHe5zhuGuu8vlIdxTvlWotSmbipdkmRMcUA
ve2ABDItmMU1upz3WoDqKe2/nbK1UeSuFrP8ERO14cMCPc+FiNtv3ZTeqo0W
oWJl/NOFcJClkkA2C76z1rcFh1m4uCFry3i+DhTe+W9O2OhAl2ea26PHBt/8
p7qaDh2cLZ25pVGih4XtHz6GSHRx/7EolBttgMmZBGWcARv9N7wkVlwjfPlh
Y4x6GxsB+5LyjDgcHMp6KElK0sNsU1Cgi40p2q6EOwWy9LEyqDBYbsDFd8Wh
SVda9HFTy1v+tY85PA2jwo9GGqCozUMqieFhR9iz30a0DcF345zMqbNAGv/V
Pd0bhtC+w6zfxCTIK1bdV7fRCGnvQq6Wb14Ey66cuh5NY4gr5l/XebUYTVlL
j+2oMgabNSx7ELcEdmOhmt3+HFjub1pGTVlDV2ucvj3NwQhfbce3zbZQazlT
bVFgAnqu8I0y1R7fODf2MsSmyOysihta4YBLwqji5glTnHKr/zN99TJMvDbS
fplnBnbkAL/d3xFPpedURDwuilI2jTUkOwFlrWvDd3Ihyu2RORY549h2MtbV
ysWL434inoKPQmPfjgWG5uhb85X/O2tX2GcPf0zfag73vL0tfhlu2PtCkHhV
Zo7kMbPgQdoD4nlLPZaweJDOi3EeOOIJhjI8SCWKh5R2n/5ow+XIbEZFwVUe
0vcMWEcOrkB6SHVYIsMCjaGP9rsEAe73ugWMSAvMSZ88Vg/2QT/b7wD9qwUy
txTyT2/wBU3c9XzULVFqJ7g5GLUSb/RGRr0iLBGS1/3hXZYfwhRmrKRqS2Tb
bHt2umEVqsLOHGLOWWJk7J7t78MCyFrvY3sowWCQ7oP5q1Yj7H2Wv3o5wUA2
+4miQIjbcl+HhAsEoUc5lydLhXCUTrC6LxIc4uiPc6VCMCMiesorCUwCXBsl
9ULcabPbLKghUAsMT3CRC+F8pjP5YBNB+X2TU1NzQrB8NcpUHxJUXHAV5EaL
kM5p/j7+EYHXOhojcSK8nUjc+vAxQdPmXb94J4pwt7LX/lwPAaM1eeKv1E8/
W3rNt59g6J/L3PiTIihHvlBkjBLcyBt2L+0QYcOtmZrRVwS+blZ3tLpE6Cis
PhE0RqD6erc8rVuE8mD9cHMlwYHakyGRQyJENL0ckr0nKEg7DrdZETrzTrdZ
TRDYd/U11MwXwyMxoCJnkqC3RFlpqykGe1FDwqZpgtY9z3UWG4iRScUFt88Q
XDuy84dyUzHG+0z4Dv8SCLycUhYTMSLqu/TzZwliBSlKqY0YndkHp+fmCEqT
y4bsHMX4DyiTCzQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$148347887#1"]& ]}, {}}, 
   {RGBColor[1, 0, 0], PointSize[0.02], PointBox[{8.762238229695356, 25}]}, 
   {GrayLevel[0], Dashing[{Small, Small}], 
    LineBox[{{0, 25}, {8.762238229695356, 25}}], 
    LineBox[{{8.762238229695356, 0}, {8.762238229695356, 25}}]}, InsetBox[
    RowBox[{"Breakdown", " ", "Point"}], {7.5, 30}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     SubscriptBox["N", "i"], TraditionalForm], 
    FormBox["Electrons", TraditionalForm]},
  AxesOrigin->{2.83333333333334, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Finding breakdown for sphere-in-cylinder MC with \[Gamma] = 25\"", 
    TraditionalForm],
  PlotRange->{{2.83333333333334, 11.}, {0, 57.29260095968829}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.882802188632916*^9, 3.882802197410054*^9}, {
  3.882802233513332*^9, 3.882802291024581*^9}},
 CellLabel->
  "Out[201]=",ExpressionUUID->"db917857-23dd-4313-8bac-7e44dcd1d5f3"]
}, Open  ]],

Cell["\<\
To-do\[CloseCurlyQuote]s:
- Bins and smooth function diagram
- Paschen curve\
\>", "Text",
 CellChangeTimes->{{3.884624974716435*^9, 
  3.884624991040937*^9}},ExpressionUUID->"c8ec599f-bb62-4995-af02-\
21c59ebd4013"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxElectronsOld", "[", 
   RowBox[{"\[Lambda]_", ",", "Ni_", ",", "reps_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "idx", ",", "errors", ",", "electronsPart", ",", "list", ",", " ", 
      "bins", ",", "i", ",", "thetaslist", ",", "constants", ",", "SHYs", ",",
       "fit", ",", "max", ",", "error"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"wont", " ", "work", " ", "currently"}], " ", "-", " ", 
      RowBox[{
      "need", " ", "to", " ", "take", " ", "arccos", " ", "of", " ", "launch",
        " ", "angle", " ", "and", " ", "append", " ", "horizontal", " ", 
       "angle", " ", "to", " ", "data"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bins", " ", "=", 
      RowBox[{"Last", "[", 
       RowBox[{"Last", "[", 
        RowBox[{"Last", "[", 
         RowBox[{"Reap", "[", 
          RowBox[{"AvgElectronsEulerSC", "[", 
           RowBox[{"\[Lambda]", ",", "Ni", ",", "15", ",", 
            RowBox[{"2", "/", "5"}], ",", 
            RowBox[{"4", "/", "5"}], ",", "True", ",", "reps"}], "]"}], " ", 
          "]"}], "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errors", " ", "=", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"bins", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", 
          RowBox[{"bins", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"bins", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"bins", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}]}], "]"}], 
       "/", 
       RowBox[{"Sqrt", "[", "reps", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"electronsPart", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Around", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bins", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{"bins", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"errors", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list", " ", "=", " ", 
      RowBox[{"bins", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "electronsPart", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"LinearModelFit", "[", 
       RowBox[{"list", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"SphericalHarmonicY", "[", 
           RowBox[{"l", ",", "0", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
        RowBox[{"IncludeConstantBasis", "\[Rule]", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", "t", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"max", "=", 
      RowBox[{"NMaximize", "[", 
       RowBox[{
        RowBox[{"fit", "[", 
         RowBox[{"t", ",", "0"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SHYs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"l", ",", "0", ",", "t", ",", "0"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"SHYs", ".", 
         RowBox[{"fit", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
         RowBox[{"Transpose", "[", "SHYs", "]"}]}], "]"}], "/.", 
       RowBox[{"max", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"max", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "error"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.875882681879311*^9, 3.875882745907441*^9}, {
   3.875882781075012*^9, 3.875882785857771*^9}, 3.875882843174971*^9, {
   3.882209024340885*^9, 3.8822090669578867`*^9}, {3.883246970945506*^9, 
   3.883246972763667*^9}, {3.885166231596676*^9, 3.885166231840418*^9}, {
   3.885166906076519*^9, 3.885166926474669*^9}},
 CellLabel->
  "In[1421]:=",ExpressionUUID->"4aff16de-225b-4c90-807a-179aaf750b05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxElectronsNew", "[", 
   RowBox[{"\[Lambda]_", ",", "Ni_", ",", "reps_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "idx", ",", "list", ",", "i", ",", "thetaslist", ",", "constants", ",", 
      "SHYs", ",", "fit", ",", "max", ",", "error"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", " ", "=", 
      RowBox[{
       RowBox[{"Last", "[", 
        RowBox[{"Last", "[", 
         RowBox[{"Reap", "[", 
          RowBox[{"AvgElectronsEulerSC", "[", 
           RowBox[{"\[Lambda]", ",", "Ni", ",", "15", ",", 
            RowBox[{"2", "/", "5"}], ",", 
            RowBox[{"4", "/", "5"}], ",", "False", ",", "False", ",", 
            "reps"}], "]"}], " ", "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"LinearModelFit", "[", 
       RowBox[{"list", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"SphericalHarmonicY", "[", 
           RowBox[{"l", ",", "0", ",", "\[Theta]", ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], "]"}], 
        ",", "\[Theta]", ",", 
        RowBox[{"IncludeConstantBasis", "\[Rule]", "False"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", "t", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"max", "=", 
      RowBox[{"NMaximize", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fit", "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"-", "1"}], "<=", "t", "<=", "1"}]}], "}"}], ",", "t"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SHYs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"l", ",", "0", ",", "t", ",", "0"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"SHYs", ".", 
         RowBox[{"fit", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
         RowBox[{"Transpose", "[", "SHYs", "]"}]}], "]"}], "/.", 
       RowBox[{"max", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Around", "[", 
      RowBox[{
       RowBox[{"max", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "error"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.885166236372797*^9, 3.885166247667095*^9}, {
   3.885166282916974*^9, 3.8851662979434547`*^9}, {3.885166384253399*^9, 
   3.885166425236723*^9}, {3.8851664728268023`*^9, 3.885166473033333*^9}, {
   3.8851669331100807`*^9, 3.8851669629003468`*^9}, {3.885167028427463*^9, 
   3.8851670289873543`*^9}, {3.885167118255642*^9, 3.88516713047445*^9}, {
   3.885172820122736*^9, 3.885172820526136*^9}, 3.885173311357257*^9},
 CellLabel->
  "In[173]:=",ExpressionUUID->"3d31c92f-ec38-4109-a127-6edf6521145e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SHtestdata", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\</Users/wbowers/Downloads/testData1.txt\>\"", ",", " ", 
       "\"\<Table\>\""}], "]"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.885225591099407*^9, 3.8852256756620283`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"e448a5cd-f58f-40ec-89e9-ec47f079e563"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "SHtestdata", "]"}]], "Input",
 CellChangeTimes->{{3.885225631806809*^9, 3.885225690675281*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"8340104f-d28e-4177-990b-f16476f9d6bf"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     NCache[
      Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1:eJxcXWV4VUfXDW6FQnF3CBYCJMSTHXf34BQoxd3d3d3d3Z3g7gT3QHD30pbv
zMxeM28//vDc596cM7p17bXLN+8Y0zKzjY1N/qo2NuL/Hw3bH/t3y4WDNuIf
NaaWxR8lFd35yEt+tvGk8MUfS+z1e8Gfo+hX27ldhvd8wJ8j6EOl53NOOT1U
nwcFUm67hKtNSzxTzxsUQ31vPdx4qsRN9dnGnw6MDJ3gtvw5vy+a/jy+5Pmr
FnheddpSYNT1z3mO8+8jKSqT/QJv3yP8PB+6WkOM8JH6nBpFGd2Sw9p5PuG/
96Dstf/KfXncGx6PN0We7VNnWsEr/H0yuZapF1X8J39v407H2zsM2kkX+flx
VGhGL7o57QG/P4ReLY1N9DzzVo+32uu8B+xnX+Xf+1OxVyPaj62L+bnRvKhR
g3xX8XrYONOGHc0H3vTAeIKoQPGE9wEZh/jvfWlVzNYcKYPP8e8TaUWzb6Nm
/XbbC8+r0Hni8l8bPdTz/W1o6unF/jweG3uyD1uRO6DyC/4cQ9/uh/Rol/Ue
f/ai1y06TdvneoLHn0JdBzWdUObgMz2fe2sTqvwdc4LHF0XxXxoV+LvjXX5f
IqnzwettQ1SsQc4uUYcv6/kfHrEy8XTdx/x9IG0IfNin0AZ+no0Lfb6WmpCr
yE29HxG7D+9teBTnK5oOtGl5uPbnvfy+OKpRcMDqhU6v+Xk+lOf3PN75Ql7y
38fQ+qVrci15w+eFouhg/9LOf/hd4fGE0pHBk2o2zXxJz3/93R6Ld0e81L8P
O/KuQJ3KF/l5wfTXXLFhF/V5G5HhOn5b3AQvrGe3F6f/6F2Gf58aTVMTnxab
tJ/3YxBR8Z+e6YcH3zqI85SY9WeDUxMw/iCK+fCiVJYt93l+SdRz2JUhRfvz
+aBGdLzIkFLT7LF+ofTrwPBrq0am6/uwfNHt0BJLX/H34bR71Nuj64ry/bGp
S2PWnj5QYwjfXxs7yt26QrtefY55YX8utH31W1oDnM/61KaYZ4UVfuY81zl/
f5hPVtzXYNpb9dc821c81ePZmedc9xJ/PtPziX2277hd9H5+vi+5vJmW79pP
nA8/ilrT37piJ70wnkoD7d/d6cvrZ93/vtZtfF0d++lNn9ol9N+wY48X9tv3
dKT1hAx+Xk3a/yN9f5uWp3l8EdTfy7HxnuCT/L0ttZ6RddXqlq/47yvRJa9D
x8aUuKbn71x34t+HUnHfHanBtJvlpo7j+zIokgLjC/rdzYH1daRuv5xs/Pbf
l1q+VW171ddhz17+7EWdXnZY8GLSS/59BWrf9fc+h39L4/2Mo+MrbYpdWIT9
caP0ThmJXQc91OvlHNJ4/u/0mJ9HVDD4U90xT7DfoXT+7zb58p9NO4j9F9Ji
shfuWzRFVqw1fWfFG1o+nZ1ZtGnZ+fz3g6zz9a3tlgCPs/w5hPwXVGpU7/sO
Pn+xtMq6rUc34+/rUMTMY0cz0nn/BgVQmZKDezU6iPWIopHfP2R+tRT3N5ye
7Ip1Tfr5hr9vQvaBE+/f/sTy2bofP1w7nR91md9nE0wX9guBj9/XpZXdNv17
odkGnm8Vsgbrt9QN98efij/t6FM+M85TJN1/kGfq6iF8nwbF091ZCzYdzYL9
CaJ+Nfs/G/LXDP28f25OLDS52TMebyhVdquf+f0e6C8HqioFFs5TEH3Y/od1
giBvg+meEBcV1/N+RlO2ojXa2OfFfQinW9bpmTec79OgMBLSOer+cZYP8SQG
49LoKj/PidLHn6040J7PmyV/enQumfdBrcf697eHC4HzVuuv3wp5Hb+zPZU/
V6CSCxpXO5Mf+i2W7rcTBw7nz57mHcw1PKcz9EEEFaz61a1QNpaP1nptrZbY
a+bYe/y+ON7/J1ofbb28rFC3vsd4Pn5kbcao+dVwn4iiTvyevXo65G0idWm/
qtjTjrxfqcn0bz7/wZ6T32h9Vj95aZkll9br87m5yMLMTd0hX3yoTfjHCbHd
oK9cqPQ0+ytfNuI+B1I7Ia6ynNHyx1JWO59fYH1rrc+jKekRz5tCP/uS+9cy
di5vsB7BNL1pZ+ePay95YX/K/DtnXfSvON/hdDUo9MnrnLf592FUT/7j82Lj
TT1Dcrz8Weq43t8K/3zp/mDeK60/FrxdeTzUCefBiT5simo7pyf0cyKNPFjF
khjp+rzXuHfS/UOO61q/ZWlQOanUedxXb/KuYd+i+9oT+vOuivOK7HuG8Vr2
wv3RybVHZOj9eFN5/CXXNTyeB81oz6IDLSNmLuf3BZBt8PWwAzdfa/ml9hPn
qyat3fJ2zIOB2N8wyvGuSFDU39BnEfRbRJ7GnwpDHrlQYq4iI+sd7KP1Xal+
zerG4zxb+mTH7joezUaf0O/LfPPl3bJveX8GxVL19Pt/NHR+pdcjizSoIP+c
qOcfr3fkOcfrY9k/YnZzykFfVKdTE8bTvg339f2dPqRD7T/HQV74UOWz2/6p
UQP604vchPi5x+fBWs9Czwr2ntIN3yfRXI+LuX9J5vOc2oCaPdj9tdMpvj+W
vtg4reWo3xvt4/c1oLErtk49FL1F35fCpU898Vo2Ud/XN5s/Lc7z4oiWN/8s
u7UyvQ7sGy+S6nj5NS0/Qk/m8Jgbz/YJJdCrMGFgX+a/T6CVG/rNeHrovt5v
N2s1Xnhiv6JpQMzrK+9nPeHnxdBwn6ylfKbf0uM5M89u7Ohzxl57P3/W5+a2
sEccSb5+YYY+bytnrP/s78P2nrW+c0teKTij11F9P09uX9x83sHdvD6BtCNk
k/O877hfkXRqbVdLYxp9N+D48CzlkyH//Ojg1Qtzx8Q91vKlRNF8w1pkwv2O
oh3XiuZq79JTr1/mfdksEbhCr5/n63fXW4yfw9+n0MCRS2jhyefmvpQZ/jJ6
1yP9fJ9e2zofTUnX86/lmS21V/bXWh72mrek4u6/8b0vvc0y6dbRUzgfEZQ0
qVXNOeehb33peyGb9OIOy7wwXjH6grvu6vGnbdl+IKg17lss1cz3xwDHHCzP
LHv1deCYk5vGQF41IN9JQ39rdesw/z6S5HBG3uDxRVC+Wlvmv12J/XOiTSV3
1Drdjs+PZV/kpzaWiD+i5dWGvb3X+HZ4qPWl2m/YawmUtD7s2/IBb/Tz17kI
lQ15HETzVro+brUL+2dLwhqZkcD2l6Wfqo7a8yu1YfvV8gfH5S/TvtRm7G8w
Ce/sZ1bYk0lU9Ob5r7Hpz/V+9LLN/Wm0O+SJLdV/Ub7EXW/cN6ILrdKetqnB
8teyHxJ29onocx/6rxyNdRIG3B19/oPaP3o8YCT0gRc5RXY/ea7TBS2fXz6q
XyK1AewtorJLLpU+eh72njf9VqfylGctp+n1CxtdqU/xY5h/KE18/KHs5Y64
vx60NPsV+35+8JfiKfveZreXnIV/mkxn8p/Ys2s87mc87bTd6l2l+GY936KW
dC3WNUPL1xxSYMGerEupQl04YD6ONPrF+sHrf8P9DqY/qg5d+jgN9qsTxd/s
6f/uIMsH63xtP9JkquML1ueWf1hs+tVcrSus4/fF0Z82HQdnPfZYj2fDFaEA
cV6qU5eDvtGLIqHPiIK+B2+PPHFG73eTgM13Lrd5rd8/ZfLWTStLs/y17MUG
V/alFyqN8YZQldhsS6e48n5TMvkecx5YMDfLD5ucNKbs729SfA7w85xpe92H
M//qbeRHe+EONH+u92tulqxdP31L0/uRJB1Y6MP61Kxd+ZPeuSBPo8i26q34
oO+H9P3JU8l2wLjdGF8E/ey1MWX2Ozw/iL6enWLjuB33xZ2qFqrwIP8a+Cch
FHquTOtsI27p9R42+Om9I5XTtLxW9vlTL4x/767x2d8V4fth3Z+Ogc61el06
w78PI2me/cXyy7J3//4xLk8On/NanmV1sW224jXbo9Z9kuqp88qD2F81H4y3
Hr0Ux6UmyytrPV/kCnVf1A7xjBh6mn4rqs75g1r/bXhnV/T9/FT+HESTd524
PNIO+oeoz+Nfsy/oC//DnuMHB7V+7CUHcFPPv/S6n11n1d6oz49af9gTgTR7
8OlvX4tjvKFUcVhgycB1xp7pIQ/8Uy0vSqe0cLsfmaGfd3HAslG/rIX8bsDn
87ne3+f5mv+Re/5B/Tngys1TD2xPeeF5Sj+laXmu/O0LWj9lzEjwfVQG99eT
phbLmpCv1mH+fSKdfmDbu/sE3g/Lf7L2wvJgMJ5QOieOTzvIsyAS3mfYEZw3
B2pVZ/P3XfVh3/rT4zpZpr9/a/RPxLa1kz5MZf/BWt9/CjZct+rQA70+whrN
OAN5HUC7sgsNnK4/9y0kIi64n850IfhtySZ9Wb9Y9tey+p2tK/5G70e3vsG/
b0N8wjqPhx1+KVsg9rXeb9ua7wdtqYb99qYhP9e3OBEA+82Nrva3iZnrDHni
QuI0ts2F+JUHHT1fyHXj5od6vko+It4SRmGRSY8ytRyqP1fLdrfx5WJpev0t
Z6ruyjOwF8LZPoQ8dqD2T3+sfn/5ppbf7aTBb+7r+uhfLz3LZ+znHkd2+M/O
C/0XTGXuzN9+2w7750192zZdm3Us3m+N90ANa8qInznRqR4HFpaoDfs5jqS7
sg77EUk3N4uAZboevwwPVr+l9ZnSTw/1fnqt/vK819lr+vmDqwiH9Lg+jyeq
uU45MxD3I4zsfpa3PBD4rzHU4e652NJdYH9E8P2Ef5ZAKQtyWEvG+2PNX6xm
8+YvtP7PmUV45Lg/7nRLuMuFX2l9LKRpvfbQl/7kHnFpcsN/jXxX/jX8lwDy
nrO5tasb+1OWf3c3R7nto6fCnoqizStLWx4Y3hfE8b5X+u/Ved9m3jd0xL+5
7ODPEb14JSYI+epM4fm7lx10FethR3XL9d3/I/2Y3o+dA1suD66G+YdRaPII
52vHcF5COD54W6+3sKYHn2b/2LIn7lQTEo3Pi+WvjRLh6qEv9Xr9vnt52qRd
kN8R9Lt/3hXNvsFe86GJ9SckjY28rs9LrQtD927t8UjPf0aDlLyj+8L/9iZp
Li3n/bT2p+mLp+H+1RE/CyKPX9+cv9V+5EGMb0LFa49ibWDvB9CO23YO1/98
oNerW8C0L9mb3NHvW7x44JCxhRFvjKEmfVsFD5qD+FgEne+UxdNrHOJFRH9b
tyu8Oc5rIMU5eltXnvWDZV8OPy8CivCfvUmad8Hwnx1pzLkTlseA9Y9i/XVb
Py8tl/CIIG+dqIk8QBw/svzTZv8sPNKvN/a3PnWWBgr23522DMp1Z8/cu1r/
+FjWZ9Eap7V8Vv459HsIXS4tJNJOfb5VPAbyOITPD+LxodRMhA9cEG+pR8fv
bB/W7yLiyb7s39/Sz1f2GtYnhcYemd3kXCasrx/r05d6vwb1FxFlY49M7y8i
xrhvyZRpZNTyVr+a+ymij0NvXNfyO+JNT2vJd+v5Hk7t+vbhlBN6fLPCCo8L
eXFWv88ShpaCxPmvRI1WTp5x+jbOiwtdFu72C9g3wdTsyJUaLYvv0eudW5gT
p3Ffie1Rc/69unn3PzMP9qkvdW09+XU/L+gjP45H7tP6f/a70H/2rcZ+RpIM
F0et5s/x1FuYZ6HrtX7alygcmA36fHy1pCe1hL3qQ0Ojg+cPqgJ/qiYV83W5
tAH2lCWPpfuXl+N5lj5R/h3rT0qhwCzCosH4Pcjl2rH2DoOuaP1dSVy3cezv
Wu+LvlWyX7O6iFf40fq/RIIE8jyQlm4sdy7JIV3vl0xvdXqp59+nU89rHfYi
PhnA+QvYR5WIvvT5eqIv7ms0Sfft3tmD2M8i4WIHrml9MqBYefdbzpBXsZxP
w/2yp8sdm+Q4X/yU/lxKuJOTWD5Z9vnGl0VfjWgP/ySGvsy8O3XkcMQHUuiC
UOehiLcQxXp1rB7T7LVeH2G9x06+p+V36YnFV40bCHvQkRxCM1+9uoXlgWWf
y3BYFqyfN50X4mIex48s/1aGo4rx/bDsXZGN6H0C61+ICtR33x8z44r++1zt
XWY+WgN5VYlGjun8b5VCuG/VSbonp/bz712pRfe1T5d9hb535PgMy4NFzcin
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
NaNLXnB86diBjGBCPF9h/rrILzLs8+BHXU7z9+CI1OOJo0VQ3vD/w1utno38
spRu3Z0ZtyvC77X+iX5Mo50PqGeU0wWSYAKf0Wh+Za4HlimCfIvDfXCuGIji
/XrSK0ynGIzzup6eZTrAG1jPFfTmIVxBR75cRx/8XnLzb9+j3xAnoT8Wrgrz
9eCFzDhYHb6vqwgEIV5qo89eY4AH7uMsypMCLNYLmd4Nzoe06W1+FH7P6kFV
n7mewt5ikPpJGG/Vq3W+murVbgj//mCWXyhFfltpfnGOp5vFdkVnwE+ETB/u
k/Dz3hJQ2O+j83C7Z/qef8Fk6Ke1mV7fWPu+Anqb5TUWOP9J9Wzc/1jjKehd
VVt/Bf2NpJ2/qK80k8gLjMH5laRRSVbIXRc+X+M5nC9dDG+E94nRs2x3caGd
x6xPLfxExCt5pt+Iv2/Yll8d5RNPsbxJN/RHMukPlnv4N/A6DTSW5Wevx/dV
Gj8I8U+O+Z9MC+N3/Sv79tzzVOATe5sfJuoZKZJwYo3r4SreFfitOhL641de
H9DzfkMYT82fng/7WfU5wacst/o59stAulgAJYgvC0zPGvWWHqbvBP5Ys+nT
IJ/Np8mjGWDmfqyMhph+LfiP4JPivG6ifiJw6vw+xT96/UX7X16/Vr9w+MnW
mF6N+8GK3cUeft8q/tHzYcVzbArzpX4Nnt+NZPu5fyx/i+IpjZeQbxZQNz6+
Qz0/SSIf/seccD9qPIp4vpZYnWUh9Fuivxd68kA8T7vVz4GvgX44/AoKDT+A
8ckjaWc9hfioZtt6UIc28+PA+R43PLrXazV/QHzZiebwcD8/OYy/6gd7PNFD
AEzIr4qtn/9emL/VbC99gtfjRD7lVNRj0iRyK09jf9bTKKYnvud+zlrfRP6a
QZcKoNz9E48WQJvzh6cfzzsU5/kA+vwsJtxbf4GaqS/Tm6+DnksV7T8zNv+7
H11PWPs7dl9F+0/7pY7/7cX2Kn1wHzbRRoa7voz7oMTw5Xi+XGI2SafPMd/l
RPuxgjPwMUnTF8X5UWH8c9wX8A8BXqfMPh/5SLP1V7eE8VW95RXh/bQeDb5y
M7F66isT3Y9Ez+MPw/uo/tuYMP6ynE91fASz6XYN/rcNhh/B++UZHtbXo/K9
UW+NmR+u3zccfZy6q/vJvsNyqeuRL+XQTyMYgAq8fz/rZ+E87Eezc7iC4P7W
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
vugfNpPQGQbg/E5RTAzCMF41Fl+j/11i+Ausr7TxbVxvirPn7ANdr1LsGb93
vSOtVyI+zDK+DcavkU4QguPa8PvoZWfu+NP68P7PfLL17N/Bp4ziGQmHX5of
9gOrDXQb5PVWq2+E+dD6GOa7l/nPg59SSSJPdpj7I3cXw13EjzFaP3VJ/4nf
vh7mJ7NlztBDbkK9L9P4l9CrbSKRewr1jN60y9gdo5QW66Gf8aXQzygy/VLc
V/WmLwF9lnb6keEN3cGfjhn/C+NTbfrX6GemSORZF3p8pHoZOM/3N71Q14fh
7lXxjpifXNPjwvuXm74s7q9aKhHCwvvh593Zbrq/4xWE/vUf5K99iNkNt98K
fmat1dsRX8TND8b1TPW8WxPe5yEudw7A+7UaXgHrt9HwdOvC9+dG2Wx5AudF
D2oRAUz0C1pN3wH15VZidtjYw6AvkmfxL877OqtnI/+rJ0mPf3b/Pa3fIB7p
R+yesf2ejq8V+/jBjg8/TACi8Mcq/R+99TrDxyH/ajd8h+vvKv7tq/D7X+5l
QJ7rE6i/t/H9o3hS/Saxn9N049GHx/sGPZty6iyCc7iP6kjSubvmh/FV/jPi
r2q6Qgqi8JNvIZFTynU+u+JpnC8l9I4/XL9X9epdj0HjX/RLq6w/fF+4/1kt
97ld8TxV1Lr5hInH7IX7OkH3vMMJJc6jTFoxngGHt4X52FZvssr87VDvTJCE
/29+Gv5e6FS3on6QMv2uWWG+tN+P9VVEnL3HJmJ+m+hoCdCAF6snsefc7PeP
+gGjnlRBi/i4Xo1+5yC6RgAZVk8ZnjQ/NuyvWvPfRX1rgI0f8qNKiwcQbxWR
yGtsRP+s1OIl5Je9zB8M+tQ1xN2IrOuAR0+SXBdV7g+ieFzMR6b5aaF+XUjj
2F7oMPczVf404p9cKhMDQeAr+9BtXC7/HvlOs/V7kF9WGt/H8amKv0I9rJ0+
Gc4CuahPF5genes1aH/0Lvv7lPk9w48xbv7yHi/rfnG9TuW/oP9UZ/x+4I0b
TT/T9dYUHw48QZPFjzhfY3b+uj+n6l9hP/QwfJbv55IkPwHi73y6i6fvCfw+
nwSedDDWY1/rRyK+qLXzHOspbfURnGdEuZKAOR7sCJaDugb360B68EJ2cET/
tobEnepz9AfI8AbuB7e9AKTAT0hSdDgc8EIW9BObTQ8Z92MePf4pG0IC71xn
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
oK8v+PnF408BH0gFFcvADOZLY8Z/iP5VO935AQuiTgs/a78P57nM+BAxX5qk
o7rPfO2jMePC/isfyC3hPD7+BBN4wJ7mmr4E8MRNhgfF/E8+zXlvQHxO1qvB
P9zA4yb/AH97m/mLz8LzyPj8RMSzqXQDjydv2x2+X/vJV4TvG7CnKODYzzmm
nwQ8WglFwfCYh8phLxPGl+DzZqqv5PVK5QdGvFRt++X8CrVMV7oZ9jBGIleZ
jfsxwOqFeJ7BxNOLF23ZGX7WeUPYzyqrx+H+DCOh40sfb78vpclbuAH3cfhZ
52lh38uN73V92A/Fr+0O+70ny+fNQT2zgab1YMQK8pkasxeI15LAQ4X9Uf1V
10t/memsq63eRi1UNeCPE377Ees5lFIEAIb4J8X68xfZ74usP4J4YqDpI0CP
pIVOEwJp2I9m6i4EWMgv6gzf6vPrHzC9TE/US8pJ4F0X4v7k23y63f/o+TU/
gP1NIZHzHf10eL4VTIfyAPKlGC1juPuxb4T9Vz0t1GvSjI99Q1iffiIohfia
iLv1r853PQlJ1+8E31TCnhf9nxKrFzheQvVVXS9O8Vuul6b83ohPikjSXegB
RvZX589gn3LoX/UsALTa91/wruhXDqBcIayD3kyCcgWhCftUT4ym3rJxZ3h/
nXdEfbfa9GPAL5VBfLp3duC8NxGr+Rz36KawnndPYgMJPE8VsTr3mE8QnxXT
flG09VQu7Hnc5g3x93Uk4xPnenwm7aOx4PuqoEt2r797Y73r62j92fd3pAgM
4edsEjmOy12f8nppuDmeXfWYt4b1X9yNG87Yr5jNd9m/Z/wM0xkdNT+s7zcP
3f/Dmf2Qr5YTq01f8yHuYwFx9aWgi9crVO8H9ajhJOMd+zqeS/vJzpeg9Qvk
N0U0YvEe43KuwvoC7+980AeLgPH8sJ+Kz4CeciUxm9G1ezk/tIwzDcH5byCB
R5+DfnSCYtJgdf7vh5e/9XPhLT4PqPgMrG+25UeIx1LopEuZIe46+75Wy++w
Xgm6neG6y8yf9hpl81CWX/QaQdu4vJYPPE4h3cjjXn1dD1zChYvRr6wjnuZ5
6VnHDz314j1vxb99LTyv9pO9/li77uPPB3/k/XudX0G/LUky7nIM7nOSBgvg
Bvao3uZd0X+M/U89OGF8BOjPFVt/CPl+lfF3o55K9M8kE3hjP2pND/6J8Pfd
xGAin4jRnO6sCO/6MVrPcr0sSdf+A/73NtpLCFoQT4P/B/6ikYSeZ2+P9zrr
nxZZvId5ihbawPQso31+Sejptzl+UPGXjk+TdsHfgT8roV1Hc8PSz5vikxAP
D7J+OM5X3OZlNof9PWDHkOiGYv4nTgInOg7+v4FKRdDK9Ww0P4K/TRo/q/n3
6H7niRyc1VOp0eZ5dobn13jY9dekfPt4R9gvnQe3fkVHm+kHYh69iFid6Kt7
cf6JeguhDexDPkXB+pzEJNfvbWK6znXwlymd+Q2j86J6R66n9g3DQe+fGM7L
yGO5Aww8bH/jk8W8RMz4Qx3/zOoafyrx/qp8/FeYD0vS9NdZ0AXrW0OfHcoT
YcvCfqoeu/cHlS8M56fY5tfAt9pAhwgAc1bY/8hYPlM3BflOJZ0tA0jol9Qb
HhX2lWjUmYzoxL/PM31f3OdGkvDkI7wPWb3E593X97vy0jv3WBF+1noE4p8q
m0cCH16Lyo8/Bv2yJAl85Bngs+J0uBCaof+XMH0lmz+Nfv9gFB3dsd30EyJ/
qfU5nJdWq2dOC+ul89fgo+4l006vT0J+k2n8dDgPhSTh5E/A45bSUCEgfSjs
v/JDfRT2U/MZ8Nc003NM3/0m7EsxHT2ux72pK5CPlFLaih9nTMvcHN43cl4T
jh+F/miR6YUg3y2je99iwJ7rU6u+u+t71kgDAvYu3+oLuA9ppvdu9z/Kh7Re
DTxLnc3ffhK+X/Fx4IduNvztjHC/hyrBQvg+PX/I71KoH6snnwL7mTQ8hNeT
W0XQwPtrFVze67cy7Jfq8WBeopHOkYIo8PAJ4umkB3uBr6PZ8N7A//Wly0Tg
bUNY/5M5HNtvS/j5X+czIw/mr5sMv4B6ZQ9afHeXrJf/hs9roGwef0zDfG4p
fc9w4PdwnuMk7bNDbw3+okUIdZ2/V+gKnkH/opZErunYV8N9kvZD4bhgL3Ve
H/iTJJ1+88WPDhuPek6r6Zc8H+6n8oUgH4reRwQYcJ/q6CoZ6Ed9nkjgaIHf
udrySefbUr5RxIdtJPRdLzn/o/LjID5qtXje+3fK1+j6ABpvuN6XzjO7HqTq
lcDfJ62e/mFY753N3LEG3107nS0Dtp+E59f5V+SzjRYvbQ3fJ+3QP8B/VWX4
f3x/huk74/3TSeSL0M+Kvu9Mpu+oWhnWR/n+4Q8K6eMcBghiPmio6bngfUqs
3rk57IfSSSD+zcM8avDXWt9cG9Z70CF371W7DvxzMauHgR8+SdL+XuH63xr/
fRE+7wQZKEE/qdrqPf8H7yANuvfD+zN6b0Ij3j9u+CTXV1d5dORrMcNz4D42
0CnTU36Zvg/y/RQ6WAaYHJ+i/UXjg4jiv1tZ3v4xzAMUG385+GQSNI3hxLsR
n6eafuuXYT9U/9XrjU+W8gS087+rXg/qJYMNv7wl2DcJ39ux/zk2f4N4s1Lb
i2Xwj7nW33c+ZOUjdDyU5vuwPw304BIuYCP+yaBz5D/wiWUafxzw1CUk8htn
ON84VzsXjEa9uAcJHWEL7G+V9Y+vCJ+v+qd3B//K6tr3nor5o4SdH9znSptf
gr1N2Pwa9Grr6W8zy/NLH0P+m7R5je1hv6ScMP/1sH6qV4r65ADTz1kZ9l/5
apGPxknoBD/ZHd5H9T+hZxoz/lPkDw0kdLQjHJ/ftYAR19iPDON78njlex7X
OMrn95W/BflXmuX3OO+Rf5zQ2H3IPsh3UiinjDu2zq8j4zHQb47edyzTf/0X
eJhyO6/A26Tafjwa/EWn94v8u+qfLA9/r/qcqKeXk9ChjEY/MGn8tYjXK0jo
fhbgvldS7O3aT+fOdP0rrffAnmeT0IdMRzxQTiKXCf8fnW/Fq0O/sYmEjnIT
+DQrbZ4I9cgcm9f8LOyHyB1nPBPOl/LZIj+I0QUi6PRwsG+qV+t42u5CaI/n
LSehC3twebB/PzLbzF6ovyVJ2glrHU+k+kuId4utP4d+UV/Lr7eG51f845Lw
71UfFHxTVZavA4/dRkIX8tua8O9FXizH12vSVh4QQ/yeMHyK90f6SkDsfA0f
j+GJe9izfMuv7gj24QGW/1kI/Z0qOkkI3OBPiM4/mxkYMJ/caPhOnKcSw5ub
P6Z2kvG0AnxfX5vXwXr0o1uXr123/z0+z6L5m813R/G26htvCH8v9Dk7wN/T
TD/ex4IOmN9OUPcSZlx3/TfVA0R9nKibFMgQzxaZPi/43hpI5OBP9Xx1DsP1
J8K+DKZVXJ798Un7ubfhJRGP1ho+3PMnrUeB7yfP8NKIh1uNbwP+Jt3m2Z1f
XP2T6/eovvXa8PcC1/8V5y2bFrStWnHQ9buCfVE9DcSjgwxvgXyw3vRNnw77
q/PRwGtE8ZG0Y6E/XENZuwdFFgr93nzTt3H9N7XfXm8XeY9U18vJkoLt9rBe
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
     "]]}, {{}, {}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{533.421875, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.99986, 0.9999}, {0, 153.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.885225633244792*^9, 3.885225691047068*^9}},
 CellLabel->
  "Out[225]=",ExpressionUUID->"5ad538b2-05ad-4724-a0c4-5b33a681b38d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fit2", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"SHtestdata", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SphericalHarmonicY", "[", 
       RowBox[{"l", ",", "0", ",", "\[Theta]", ",", "0"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], "]"}], ",", 
    "\[Theta]", ",", 
    RowBox[{"IncludeConstantBasis", "\[Rule]", "False"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fit2", "[", "\"\<ParameterTable\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.8828887766423693`*^9, 3.885225611947206*^9, {3.8852257068637247`*^9, 
   3.885225753822502*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"cea6b598-3692-46bb-b7ad-16e731844039"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.004530923033886829`"}], "+", 
       RowBox[{"55.73336282582811`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "-", 
       RowBox[{"13.859164416798505`", " ", 
        RowBox[{"(", 
         RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ")"}]}], "+", 
       RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "-", 
       RowBox[{"0.33518058540950835`", " ", 
        RowBox[{"(", 
         RowBox[{"35", "-", 
          RowBox[{"1260", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{"6930", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "-", 
          RowBox[{"12012", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "+", 
          RowBox[{"6435", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "8"]}]}], ")"}]}], "+", 
       RowBox[{"0.04555682450766163`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "63"}], "+", 
          RowBox[{"3465", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
          RowBox[{"30030", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
          RowBox[{"90090", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
          RowBox[{"109395", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "8"]}], "+", 
          RowBox[{"46189", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "10"]}]}], ")"}]}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-0.01606170395913843, 
     176.71164661998768`, -131.01188981806513`, 
     80.56039298953237, -36.88665689538956, 
     9.021706502464614}, {{$CellContext`\[Theta]}, {
      Rational[1, 2] Pi^Rational[-1, 2], 
       Rational[1, 4] (5/Pi)^Rational[1, 2] (-1 + 
        3 Cos[$CellContext`\[Theta]]^2), Rational[3, 16] 
       Pi^Rational[-1, 2] (3 - 30 Cos[$CellContext`\[Theta]]^2 + 
        35 Cos[$CellContext`\[Theta]]^4), 
       Rational[1, 32] (13/Pi)^Rational[1, 2] (-5 + 
        105 Cos[$CellContext`\[Theta]]^2 - 315 Cos[$CellContext`\[Theta]]^4 + 
        231 Cos[$CellContext`\[Theta]]^6), 
       Rational[1, 256] (17/Pi)^Rational[1, 2] (35 - 1260 
        Cos[$CellContext`\[Theta]]^2 + 6930 Cos[$CellContext`\[Theta]]^4 - 
        12012 Cos[$CellContext`\[Theta]]^6 + 
        6435 Cos[$CellContext`\[Theta]]^8), 
       Rational[1, 512] (21/Pi)^Rational[1, 2] (-63 + 
        3465 Cos[$CellContext`\[Theta]]^2 - 30030 
        Cos[$CellContext`\[Theta]]^4 + 90090 Cos[$CellContext`\[Theta]]^6 - 
        109395 Cos[$CellContext`\[Theta]]^8 + 
        46189 Cos[$CellContext`\[Theta]]^10)}}, {0, 0}}, CompressedData["
1:eJztxTENACEQAMEDBVigQgYekEBCjXUkQPHFi5hNNlPnHitHRHqXFl+nkyRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiT59wKRMECG
    
    "], {{-0.24765, 121}, {0.58485, 30}, {0.82089, 64}, {0.51459, 60}, {
     0.53806, 47}, {-0.75322, 74}, {-0.39226, 42}, {-0.80142, 69}, {
     0.51232, 13}, {-0.17224, 62}, {-0.15049, 37}, {-0.57335, 67}, {
     0.66387, 29}, {0.95469, 35}, {0.29807, 100}, {
     0.96864, 28}, {-0.25395, 82}, {-0.51817, 52}, {-0.99356, 69}, {-0.32185, 
      43}, {-0.39371, 27}, {0.55179, 24}, {0.94505, 49}, {-0.13984, 39}, {
     0.23051, 92}, {
     0.42301, 27}, {-0.54261, 67}, {-0.97725, 16}, {-0.81705, 72}, {-0.46902, 
      31}, {-0.18148, 105}, {-0.77333, 69}, {
     0.18222, 66}, {-0.45996, 95}, {-0.58435, 32}, {-0.29311, 43}, {-0.6312, 
      46}, {0.185, 25}, {0.39197, 35}, {
     0.58647, 68}, {-0.10921, 83}, {-0.91304, 36}, {0.85279, 74}, {
     0.52913, 65}, {-0.30105, 55}, {-0.26577, 31}, {0.85336, 65}, {
     0.25227, 51}, {-0.25412, 62}, {0.01481, 72}, {
     0.25186, 71}, {-0.55439, 33}, {-0.41417, 28}, {-0.92368, 48}, {-0.49524, 
      99}, {0.54652, 117}, {-0.63093, 54}, {
     0.61031, 13}, {-0.89491, 58}, {-0.78414, 18}, {-0.24616, 15}, {
     0.1678, 43}, {-0.39623, 22}, {-0.97713, 69}, {-0.75052, 51}, {-0.7391, 
      54}, {-0.76283, 48}, {0.11452, 39}, {-0.59373, 40}, {0.18906, 15}, {
     0.25756, 42}, {0.84899, 35}, {
     0.10435, 36}, {-0.69464, 14}, {-0.20622, 61}, {-0.18975, 12}, {
     0.88741, 10}, {0.34537, 43}, {
     0.96103, 21}, {-0.82966, 63}, {-0.87596, 21}, {0.87487, 60}, {
     0.10831, 31}, {-0.86144, 9}, {0.32927, 81}, {-0.80088, 27}, {
     0.54693, 39}, {0.63286, 32}, {
     0.62177, 54}, {-0.34058, 13}, {-0.28513, 70}, {-0.37718, 52}, {
     0.61293, 98}, {
     0.22062, 53}, {-0.08974, 79}, {-0.38585, 17}, {-0.59032, 45}, {-0.89836, 
      64}, {0.40063, 59}, {-0.96867, 124}, {-0.15591, 71}, {-0.08915, 
      50}, {-0.94477, 18}, {
     0.05934, 11}, {-0.40989, 42}, {-0.56276, 62}, {-0.9222, 86}, {
     0.84421, 48}, {0.02244, 11}, {0.76191, 55}, {
     0.83532, 20}, {-0.2093, 49}, {0.43213, 50}, {
     0.05691, 69}, {-0.72036, 58}, {-0.39878, 57}, {0.17869, 87}, {
     0.31819, 23}, {-0.81842, 65}, {0.6306, 87}, {0.99079, 29}, {
     0.13055, 9}, {0.6583, 76}, {-0.86749, 16}, {-0.97559, 60}, {
     0.50062, 86}, {0.47727, 83}, {0.67795, 49}, {-0.16783, 41}, {
     0.88008, 32}, {
     0.52773, 93}, {-0.41308, 103}, {-0.95523, 39}, {-0.05824, 52}, {-0.75737,
       37}, {-0.8267, 25}, {-0.19287, 46}, {-0.21104, 54}, {-0.32519, 
      29}, {-0.51183, 38}, {-0.87283, 50}, {
     0.27612, 57}, {-0.56437, 59}, {-0.42242, 56}, {
     0.75625, 34}, {-0.17276, 57}, {
     0.89415, 65}, {-0.7255, 23}, {-0.54585, 95}, {-0.60203, 18}, {-0.35986, 
      83}, {0.61891, 35}, {0.18492, 35}, {-0.59091, 49}, {0.70388, 32}, {
     0.89578, 143}, {-0.04217, 44}, {0.93283, 60}, {0.97383, 14}, {
     0.89061, 56}, {-0.56205, 61}, {
     0.59643, 25}, {-0.00653, 33}, {-0.8184, 22}, {
     0.18388, 60}, {-0.52919, 78}, {-0.88188, 18}, {
     0.63261, 23}, {-0.37189, 92}, {0.25199, 13}, {
     0.49504, 20}, {-0.41482, 36}, {-0.63027, 31}, {-0.87095, 35}, {-0.63923, 
      96}, {0.51087, 111}, {-0.99334, 43}, {0.1108, 108}, {0.07156, 49}, {
     0.01545, 29}, {0.15558, 55}, {
     0.56859, 31}, {-0.35385, 58}, {-0.27085, 89}, {0.29267, 90}, {
     0.49621, 32}, {0.88268, 68}, {-0.67492, 72}, {
     0.41536, 29}, {-0.58759, 32}, {-0.91118, 21}, {
     0.70695, 35}, {-0.45717, 20}, {-0.15993, 25}, {-0.10058, 47}, {
     0.28086, 63}, {-0.79282, 27}, {
     0.31794, 40}, {-0.63532, 41}, {-0.21098, 64}, {0.00567, 55}, {
     0.04345, 31}, {0.02593, 106}, {
     0.80574, 35}, {-0.585, 41}, {-0.60483, 32}, {
     0.90704, 86}, {-0.6246, 38}, {-0.64963, 60}, {-0.29386, 39}, {
     0.03946, 64}, {-0.46436, 64}, {
     0.91898, 76}, {-0.18772, 74}, {-0.51693, 108}, {0.14729, 62}, {
     0.3833, 61}, {-0.583, 23}, {-0.35039, 81}, {
     0.15598, 34}, {-0.54471, 62}, {-0.75493, 88}, {
     0.95296, 61}, {-0.76749, 49}, {-0.80376, 12}, {-0.69807, 87}, {-0.49086, 
      30}, {0.32331, 50}, {-0.96936, 97}, {-0.809, 41}, {
     0.60114, 12}, {-0.97679, 33}, {0.7553, 71}, {0.13182, 8}, {
     0.44934, 68}, {-0.32077, 31}, {0.24563, 65}, {
     0.54245, 33}, {-0.83774, 35}, {0.01992, 34}, {-0.80531, 54}, {
     0.57615, 29}, {-0.75836, 85}, {-0.17812, 100}, {0.8923, 84}, {
     0.06679, 12}, {-0.70155, 61}, {
     0.10614, 18}, {-0.31569, 21}, {-0.65853, 50}, {0.96361, 23}, {
     0.49609, 74}, {0.68484, 67}, {-0.05495, 82}, {
     0.64905, 12}, {-0.56029, 13}, {-0.72847, 32}, {-0.21702, 30}, {
     0.91929, 23}, {-0.40806, 45}, {-0.6598, 52}, {
     0.6009, 101}, {-0.09781, 3}, {
     0.1182, 24}, {-0.79614, 27}, {-0.7933, 35}, {0.34332, 29}, {
     0.69123, 22}, {-0.26619, 65}, {-0.14042, 23}, {-0.6789, 60}, {-0.81062, 
      49}, {-0.77212, 28}, {0.86451, 53}, {0.41443, 74}, {0.33043, 90}, {
     0.72651, 27}, {0.3139, 87}, {0.21733, 57}, {0.81177, 42}, {
     0.23639, 35}, {
     0.43638, 97}, {-0.04579, 67}, {-0.77265, 19}, {-0.28394, 24}, {-0.25663, 
      74}, {-0.12424, 96}, {-0.12982, 48}, {
     0.28409, 33}, {-0.33567, 16}, {-0.12199, 43}, {
     0.3992, 90}, {-0.06091, 32}, {-0.56168, 47}, {-0.75317, 54}, {
     0.70853, 32}, {-0.73993, 41}, {-0.69725, 32}, {
     0.92713, 110}, {-0.80558, 23}, {-0.12349, 23}, {
     0.19656, 41}, {-0.33391, 39}, {0.24367, 40}, {
     0.87877, 30}, {-0.142, 94}, {0.43057, 79}, {
     0.93734, 55}, {-0.98202, 49}, {-0.68009, 20}, {-0.18917, 42}, {-0.62304, 
      38}, {0.17639, 43}, {0.52364, 32}, {-0.77489, 45}, {-0.60067, 45}, {
     0.92125, 24}, {
     0.14439, 78}, {-0.94577, 47}, {-0.92367, 57}, {-0.91639, 16}, {-0.12173, 
      35}, {-0.88364, 27}, {0.63191, 25}, {0.22685, 29}, {-0.55294, 42}, {
     0.25865, 57}, {0.00947, 57}, {0.32964, 30}, {-0.64986, 59}, {
     0.58753, 20}, {0.4035, 34}, {0.87344, 53}, {-0.56432, 49}, {
     0.93916, 51}, {0.91197, 35}, {0.33661, 42}, {-0.47937, 23}, {
     0.9745, 80}, {-0.77108, 63}, {0.62376, 30}, {0.40885, 71}, {
     0.54502, 32}, {-0.35623, 23}, {0.17455, 40}, {0.7031, 56}, {
     0.8269, 72}, {-0.46009, 60}, {0.50717, 89}, {0.65398, 49}, {
     0.82451, 61}, {-0.79047, 28}, {-0.87761, 33}, {-0.82583, 43}, {-0.6873, 
      52}, {0.60566, 45}, {-0.42549, 37}, {-0.64301, 64}, {-0.80232, 48}, {
     0.90493, 45}, {-0.08108, 43}, {-0.84937, 32}, {0.74177, 24}, {
     0.83844, 15}, {-0.17102, 63}, {0.63004, 57}, {0.4027, 52}, {
     0.42202, 40}, {0.48111, 31}, {0.95166, 83}, {-0.85982, 28}, {
     0.80378, 60}, {-0.59282, 36}, {0.36423, 80}, {-0.57699, 48}, {
     0.67133, 35}, {-0.46325, 61}, {0.18879, 48}, {-0.01144, 31}, {
     0.40627, 44}, {-0.51292, 32}, {-0.4433, 48}, {0.53388, 73}, {
     0.35318, 61}, {0.22303, 33}, {0.54325, 46}, {
     0.28128, 62}, {-0.43488, 34}, {0.75894, 21}, {0.63704, 66}, {
     0.42882, 46}, {0.8897, 23}, {-0.15022, 14}, {0.82733, 22}, {
     0.73832, 28}, {0.46263, 90}, {
     0.20444, 79}, {-0.788, 53}, {-0.09073, 33}, {-0.18898, 52}, {-0.13977, 
      55}, {0.66329, 19}, {-0.27835, 38}, {-0.41039, 53}, {0.28239, 104}, {
     0.34386, 41}, {
     0.85884, 44}, {-0.66892, 60}, {-0.82373, 102}, {-0.78313, 28}, {-0.37259,
       47}, {0.10138, 79}, {-0.18417, 38}, {0.2259, 44}, {
     0.39126, 10}, {-0.52683, 25}, {0.42054, 51}, {0.10195, 28}, {
     0.89971, 33}, {0.80736, 60}, {0.95664, 38}, {
     0.914, 40}, {-0.11031, 54}, {0.73947, 62}, {
     0.04944, 84}, {-0.05722, 57}, {-0.05986, 14}, {-0.73111, 36}, {
     0.1418, 14}, {0.23641, 30}, {0.05674, 59}, {-0.61897, 105}, {
     0.9424, 29}, {-0.3047, 20}, {
     0.27417, 36}, {-0.36245, 40}, {-0.3593, 46}, {-0.60014, 47}, {-0.85747, 
      54}, {0.77288, 45}, {-0.75835, 10}, {0.54636, 69}, {-0.22554, 44}, {
     0.35373, 32}, {0.94444, 79}, {0.88732, 16}, {0.1961, 16}, {
     0.36819, 101}, {-0.70087, 74}, {
     0.7038, 106}, {-0.41087, 32}, {-0.91813, 20}, {-0.47762, 43}, {-0.06152, 
      21}, {0.64683, 65}, {-0.35956, 34}, {0.18446, 81}, {-0.6593, 67}, {
     0.2778, 5}, {-0.30605, 34}, {0.55211, 10}, {
     0.84621, 13}, {-0.11635, 26}, {
     0.34324, 21}, {-0.19255, 141}, {-0.08317, 50}, {
     0.03243, 31}, {-0.01472, 90}, {-0.03095, 42}, {-0.98581, 17}, {
     0.72402, 106}, {0.64651, 54}, {-0.32779, 19}, {-0.88173, 19}, {
     0.70072, 72}, {-0.64551, 38}, {0.96276, 93}, {
     0.46207, 59}, {-0.64271, 30}, {0.04506, 51}, {0.70267, 38}, {
     0.61656, 83}, {-0.71071, 87}, {0.25016, 66}, {-0.41911, 73}, {
     0.72471, 72}, {
     0.4348, 112}, {-0.84679, 45}, {-0.89021, 41}, {-0.67076, 13}, {-0.88586, 
      71}, {0.53529, 49}, {0.53152, 51}, {0.97569, 59}, {
     0.60154, 13}, {-0.80904, 23}, {0.06299, 53}, {
     0.74445, 100}, {-0.68819, 103}, {0.09825, 53}, {0.27918, 85}, {
     0.96036, 62}, {0.01131, 48}, {0.03085, 128}, {0.93033, 67}, {
     0.90324, 14}, {-0.08538, 19}, {-0.38028, 46}, {-0.98035, 79}, {
     0.49819, 39}, {
     0.19693, 75}, {-0.72518, 75}, {-0.30043, 74}, {-0.36947, 46}, {
     0.74661, 59}, {-0.17616, 33}, {-0.67251, 85}, {0.40209, 78}, {
     0.6319, 17}, {-0.61678, 30}, {-0.4198, 38}, {0.78266, 6}, {
     0.94136, 46}, {-0.42677, 22}, {
     0.83688, 27}, {-0.42783, 73}, {-0.99938, 45}, {-0.66446, 93}, {-0.14292, 
      43}, {0.95075, 93}, {-0.48403, 50}, {-0.39592, 12}, {-0.98208, 
      71}, {-0.53247, 9}, {0.67256, 52}, {0.04393, 80}, {
     0.81398, 71}, {-0.57499, 94}, {0.94342, 63}, {
     0.74276, 20}, {-0.87076, 33}, {-0.54274, 38}, {0.96331, 80}, {
     0.98148, 60}, {0.0719, 107}, {-0.30044, 83}, {
     0.13503, 54}, {-0.12102, 17}, {-0.10169, 55}, {-0.75363, 78}, {
     0.49028, 61}, {-0.66388, 45}, {-0.87318, 22}, {-0.9302, 61}, {
     0.56833, 19}, {0.56058, 47}, {-0.25594, 64}, {-0.00668, 76}, {
     0.58674, 10}, {-0.17807, 74}, {-0.52602, 23}, {
     0.60991, 61}, {-0.88427, 41}, {-0.59562, 55}, {
     0.42217, 34}, {-0.61999, 21}, {0.73512, 59}, {0.12954, 37}, {
     0.37116, 40}, {-0.09002, 48}, {0.99746, 45}, {
     0.78096, 53}, {-0.09773, 67}, {0.14902, 38}, {0.54772, 91}, {
     0.46713, 32}, {0.51255, 50}, {-0.95633, 34}, {
     0.33448, 43}, {-0.68263, 59}, {0.43799, 55}, {-0.18868, 46}, {
     0.88551, 57}, {-0.61388, 40}, {0.39634, 43}, {-0.84344, 41}, {
     0.80478, 35}, {-0.12081, 73}, {0.59418, 39}, {-0.21162, 44}, {
     0.95264, 44}, {-0.40592, 50}, {
     0.01922, 35}, {-0.1245, 42}, {-0.04342, 73}, {0.42537, 42}, {
     0.38403, 54}, {0.21227, 75}, {-0.4928, 28}, {-0.45371, 88}, {
     0.62244, 57}, {-0.51128, 57}, {
     0.00139, 44}, {-0.55473, 33}, {-0.60292, 71}, {-0.64416, 56}, {-0.23907, 
      18}, {0.59462, 76}, {0.67081, 60}, {-0.83548, 45}, {
     0.14076, 9}, {-0.24361, 60}, {0.1411, 45}, {
     0.13254, 98}, {-0.51477, 82}, {
     0.93011, 55}, {-0.87979, 14}, {-0.58617, 77}, {
     0.99448, 40}, {-0.4524, 41}, {0.77322, 16}, {
     0.40697, 36}, {-0.20541, 52}, {0.0124, 35}, {-0.04144, 25}, {
     0.01161, 78}, {0.44835, 22}, {-0.36726, 39}, {-0.11019, 65}, {
     0.18969, 89}, {0.10889, 22}, {-0.23192, 43}, {
     0.29866, 31}, {-0.0966, 41}, {0.76046, 74}, {
     0.29468, 31}, {-0.47001, 54}, {-0.05438, 41}, {-0.32599, 122}, {-0.22042,
       27}, {0.52732, 31}, {0.7408, 58}, {-0.06477, 93}, {-0.13687, 15}, {
     0.29095, 23}, {-0.97834, 17}, {0.92301, 61}, {0.24639, 25}, {
     0.97135, 109}, {0.34109, 74}, {0.59191, 39}, {0.37687, 97}, {
     0.46673, 47}, {0.18681, 53}, {-0.20868, 89}, {-0.32796, 15}, {
     0.99562, 51}, {0.85775, 14}, {
     0.01491, 40}, {-0.27445, 25}, {-0.42436, 57}, {
     0.92784, 45}, {-0.46947, 31}, {
     0.49409, 47}, {-0.15203, 33}, {-0.12744, 95}, {-0.72252, 73}, {
     0.64047, 32}, {0.73665, 19}, {-0.83553, 38}, {
     0.57362, 54}, {-0.05697, 30}, {-0.83334, 51}, {-0.24472, 78}, {
     0.07052, 36}, {-0.08443, 62}, {0.96356, 29}, {
     0.78217, 15}, {-0.6892, 35}, {
     0.27051, 83}, {-0.58268, 47}, {-0.69123, 63}, {-0.23882, 12}, {
     0.00277, 89}, {0.76349, 20}, {-0.41088, 57}, {-0.26617, 55}, {
     0.92261, 119}, {0.46773, 34}, {0.52286, 32}, {-0.10563, 49}, {
     0.87364, 23}, {-0.90786, 23}, {-0.6711, 23}, {
     0.53222, 51}, {-0.04741, 43}, {0.00076, 48}, {-0.7252, 48}, {
     0.61865, 84}, {0.93746, 72}, {
     0.96473, 94}, {-0.02988, 27}, {-0.95452, 39}, {-0.23478, 29}, {
     0.88563, 72}, {0.01288, 14}, {0.10663, 32}, {-0.02349, 71}, {
     0.96921, 101}, {-0.38021, 62}, {
     0.51671, 74}, {-0.94458, 15}, {-0.74073, 47}, {0.26612, 42}, {
     0.9727, 31}, {-0.07337, 43}, {0.30426, 31}, {
     0.07211, 86}, {-0.45048, 37}, {-0.57747, 25}, {-0.42097, 38}, {-0.47215, 
      81}, {0.68062, 67}, {0.97597, 30}, {-0.48229, 92}, {-0.07745, 72}, {
     0.30396, 18}, {-0.30534, 48}, {0.68083, 74}, {-0.26805, 89}, {
     0.47878, 13}, {0.08776, 31}, {0.22884, 21}, {-0.46142, 75}, {
     0.66537, 27}, {-0.22958, 54}, {0.56394, 41}, {0.98643, 39}, {
     0.54062, 74}, {-0.97437, 61}, {
     0.03059, 54}, {-0.72775, 71}, {-0.63207, 34}, {-0.48977, 45}, {
     0.24304, 44}, {-0.46998, 55}, {-0.9462, 42}, {
     0.62456, 38}, {-0.62897, 53}, {0.9775, 48}, {-0.64866, 13}, {
     0.70468, 42}, {
     0.00935, 43}, {-0.67837, 23}, {-0.23017, 52}, {-0.63909, 21}, {
     0.66616, 33}, {0.83145, 53}, {
     0.73078, 45}, {-0.38655, 108}, {-0.12676, 87}, {
     0.49392, 90}, {-0.63219, 16}, {0.93438, 91}, {
     0.71175, 121}, {-0.21847, 35}, {-0.92862, 68}, {-0.09417, 44}, {-0.17149,
       54}, {-0.36761, 67}, {0.12944, 25}, {0.04881, 13}, {-0.07759, 58}, {
     0.1452, 62}, {-0.9608, 67}, {-0.44423, 52}, {0.12768, 17}, {
     0.92002, 42}, {0.18252, 120}, {0.83245, 64}, {-0.58753, 89}, {
     0.35807, 61}, {-0.94954, 68}, {-0.28291, 16}, {
     0.17519, 82}, {-0.68334, 52}, {
     0.84763, 68}, {-0.41917, 67}, {-0.58402, 44}, {-0.898, 35}, {
     0.91965, 67}, {0.48798, 51}, {-0.10728, 84}, {
     0.05949, 65}, {-0.25939, 48}, {-0.72889, 60}, {-0.33572, 73}, {
     0.76052, 47}, {0.85136, 30}, {-0.94758, 94}, {-0.62672, 55}, {
     0.28895, 26}, {-0.71374, 55}, {-0.74043, 36}, {0.19751, 24}, {
     0.77345, 79}, {-0.47395, 26}, {0.32971, 67}, {0.36162, 25}, {
     0.4803, 9}, {-0.42801, 28}, {-0.1547, 23}, {
     0.87564, 44}, {-0.12156, 42}, {
     0.39785, 30}, {-0.9753, 48}, {-0.03366, 79}, {0.71458, 34}, {
     0.39382, 84}, {-0.85095, 62}, {-0.46911, 45}, {
     0.64829, 75}, {-0.59622, 31}, {-0.31085, 102}, {0.90799, 45}, {
     0.74454, 69}, {-0.26416, 39}, {-0.88649, 35}, {-0.73757, 32}, {
     0.00911, 60}, {-0.54402, 70}, {0.11207, 26}, {
     0.691, 16}, {-0.9181, 18}, {-0.45819, 45}, {-0.98203, 30}, {
     0.69116, 27}, {-0.72373, 89}, {-0.37167, 63}, {0.95222, 59}, {
     0.59953, 31}, {0.62739, 23}, {0.15737, 94}, {0.98018, 88}, {
     0.74781, 40}, {-0.17178, 93}, {0.16323, 23}, {0.27434, 33}, {
     0.7005, 41}, {-0.65362, 85}, {-0.69725, 10}, {-0.76829, 32}, {-0.01724, 
      24}, {0.72976, 42}, {-0.11048, 29}, {-0.97094, 47}, {0.68032, 63}, {
     0.28423, 48}, {-0.67623, 82}, {-0.67802, 20}, {0.05048, 44}, {
     0.74115, 50}, {0.7145, 26}, {
     0.3649, 21}, {-0.47677, 11}, {-0.54557, 92}, {-0.3514, 15}, {
     0.17066, 44}, {0.74677, 30}, {-0.29884, 37}, {-0.06196, 81}, {
     0.14109, 84}, {-0.57745, 32}, {0.14444, 21}, {0.37364, 88}, {
     0.84937, 87}, {-0.58846, 95}, {
     0.23643, 57}, {-0.61655, 87}, {-0.44402, 34}, {-0.98258, 81}, {-0.8269, 
      41}, {-0.40599, 60}, {
     0.93909, 86}, {-0.04055, 60}, {-0.65088, 88}, {-0.02179, 40}, {-0.2732, 
      60}, {0.00938, 19}, {0.09754, 77}, {
     0.17283, 46}, {-0.89221, 59}, {-0.18304, 27}, {0.39203, 25}, {
     0.75424, 28}, {-0.2329, 36}, {0.54053, 21}, {
     0.27759, 5}, {-0.54675, 35}, {
     0.61306, 11}, {-0.40481, 37}, {-0.93501, 43}, {
     0.01739, 16}, {-0.32385, 37}, {-0.96053, 18}, {-0.05911, 46}, {
     0.99334, 25}, {0.37106, 36}, {-0.5041, 25}, {
     0.42482, 56}, {-0.88673, 70}, {
     0.97708, 58}, {-0.34113, 51}, {-0.66636, 40}, {-0.71261, 25}, {
     0.2044, 36}, {
     0.38377, 38}, {-0.8171, 60}, {-0.38125, 67}, {-0.60699, 43}, {-0.72957, 
      43}, {0.66571, 72}, {
     0.5025, 62}, {-0.99671, 33}, {-0.47037, 20}, {-0.09794, 55}, {-0.64473, 
      22}, {0.42001, 49}, {-0.59567, 14}, {-0.19946, 55}, {0.05241, 87}, {
     0.1984, 40}, {-0.48371, 41}, {0.17366, 13}, {0.56767, 38}, {
     0.27812, 28}, {0.96466, 86}, {-0.2352, 69}, {
     0.9725, 37}, {-0.18723, 28}, {-0.63014, 29}, {-0.59535, 83}, {-0.75293, 
      46}, {0.00633, 62}, {-0.06996, 80}, {-0.66975, 41}, {-0.26138, 
      82}, {-0.0925, 37}, {-0.68929, 76}, {0.86923, 78}, {
     0.47408, 54}, {-0.56021, 36}, {0.34053, 36}, {-0.16472, 14}, {
     0.2145, 74}, {0.57607, 53}, {0.57809, 36}, {0.61992, 21}, {
     0.62045, 48}, {0.90212, 64}, {-0.78094, 138}, {
     0.82096, 85}, {-0.71638, 74}, {0.30457, 27}, {0.60818, 48}, {
     0.70245, 98}, {0.92377, 49}, {0.23033, 67}, {-0.83759, 19}, {
     0.13626, 25}, {0.0648, 70}, {-0.09297, 24}, {-0.73872, 84}, {
     0.14415, 60}, {0.64338, 64}, {0.33335, 34}, {0.81725, 97}, {
     0.68926, 23}, {-0.66438, 48}, {0.4808, 46}, {
     0.52897, 34}, {-0.39969, 38}, {0.95824, 17}, {-0.92991, 69}, {
     0.94736, 39}, {0.28644, 14}, {
     0.05747, 104}, {-0.32283, 51}, {-0.29636, 35}, {0.57203, 66}, {
     0.70085, 71}, {0.99958, 63}, {0.90261, 84}, {
     0.59044, 70}, {-0.11448, 28}, {-0.204, 26}, {-0.90859, 55}, {
     0.78445, 66}, {0.01325, 57}, {-0.78738, 13}, {
     0.4293, 16}, {-0.08653, 72}, {0.82243, 43}, {0.5313, 44}, {
     0.06152, 47}, {-0.03331, 33}, {-0.19116, 71}, {-0.49428, 34}, {
     0.74382, 17}, {-0.07246, 22}, {-0.23918, 20}, {
     0.2775, 69}, {-0.80793, 31}, {0.09248, 52}, {0.21592, 34}, {
     0.38385, 53}, {-0.38551, 78}, {-0.85787, 82}, {0.2189, 84}, {
     0.64374, 18}, {0.86156, 46}, {0.3101, 57}, {0.1485, 35}, {
     0.81798, 50}, {-0.51377, 74}, {-0.5172, 29}, {-0.24639, 58}, {
     0.6816, 25}, {-0.71479, 131}, {0.93791, 19}, {0.66675, 83}, {
     0.49184, 46}, {-0.5329, 53}, {0.48971, 51}, {-0.2829, 27}, {
     0.82078, 21}, {-0.30669, 58}, {-0.81795, 35}, {-0.43856, 38}, {
     0.57747, 57}, {-0.5674, 87}, {
     0.29146, 34}, {-0.90574, 88}, {-0.79293, 26}, {0.08299, 39}, {
     0.95031, 64}, {0.29492, 58}, {
     0.13171, 24}, {-0.30178, 94}, {-0.82889, 35}, {-0.88897, 51}, {-0.80437, 
      74}, {-0.72115, 30}, {0.9582, 35}, {
     0.46721, 15}, {-0.8775, 84}, {-0.64457, 29}, {
     0.82671, 13}, {-0.79437, 71}, {0.5967, 41}, {0.95055, 48}, {
     0.5307, 45}, {-0.01207, 46}, {0.32357, 78}, {
     0.84735, 55}, {-0.58735, 71}, {-0.86491, 86}, {-0.36703, 39}, {-0.8154, 
      54}, {-0.48892, 62}, {-0.70142, 32}, {-0.14686, 32}, {0.87649, 52}, {
     0.28051, 37}, {-0.91434, 36}, {0.79384, 13}, {
     0.15062, 49}, {-0.70246, 53}, {-0.99156, 94}, {
     0.77458, 20}, {-0.50176, 63}, {0.20895, 86}, {
     0.04911, 70}, {-0.83038, 34}, {-0.29172, 28}, {0.05196, 91}, {
     0.99279, 16}, {-0.5735, 54}, {
     0.50914, 34}, {-0.08633, 39}, {-0.04961, 37}, {-0.90807, 78}, {-0.58291, 
      63}, {-0.33442, 77}, {0.48674, 55}, {-0.73974, 39}, {-0.42764, 47}, {
     0.85184, 79}, {-0.85035, 64}, {0.53422, 40}, {
     0.92891, 24}, {-0.97231, 49}, {0.2695, 17}, {-0.60225, 58}, {
     0.98856, 27}, {-0.52863, 21}, {-0.28487, 60}, {
     0.8847, 39}, {-0.94371, 100}, {-0.1061, 43}, {0.79615, 82}, {
     0.73385, 57}, {0.36742, 17}, {-0.52144, 7}, {
     0.57811, 46}, {-0.57453, 47}, {-0.62055, 49}, {
     0.59462, 20}, {-0.11149, 28}, {0.0468, 25}, {-0.43943, 56}, {
     0.73185, 50}, {
     0.56762, 54}, {-0.84401, 101}, {-0.8109, 70}, {-0.59751, 31}, {-0.76954, 
      37}, {0.22135, 70}, {0.56069, 11}, {-0.97202, 55}, {0.9299, 64}, {
     0.9569, 58}, {-0.57574, 65}, {-0.12364, 39}, {0.09408, 54}, {
     0.13612, 20}, {0.35035, 55}, {
     0.04698, 12}, {-0.30689, 60}, {-0.95238, 39}, {-0.21183, 20}, {
     0.02565, 74}, {-0.92466, 27}, {-0.21048, 37}, {-0.47009, 87}, {-0.48356, 
      35}, {-0.39812, 94}, {0.51622, 31}, {-0.76149, 22}, {-0.2245, 35}, {
     0.18144, 45}, {0.32269, 61}, {0.92477, 58}, {-0.98422, 33}, {
     0.5832, 37}, {-0.95925, 72}, {
     0.99449, 56}, {-0.5787, 38}, {-0.36971, 50}, {0.12699, 104}, {
     0.33052, 71}, {0.56133, 123}, {
     0.35006, 64}, {-0.59442, 71}, {-0.79174, 109}, {-0.26686, 83}, {
     0.97052, 49}, {0.52754, 17}, {
     0.15725, 76}, {-0.20846, 21}, {-0.98242, 84}, {-0.25016, 87}, {-0.29514, 
      80}, {-0.5973, 55}, {0.79097, 94}, {-0.18056, 33}, {
     0.86476, 39}, {-0.84465, 84}, {0.83822, 34}, {-0.26171, 32}, {
     0.33384, 41}, {-0.24456, 25}, {0.6156, 65}, {0.12568, 96}, {
     0.20407, 58}, {0.80493, 11}, {0.71436, 51}, {0.50318, 34}, {
     0.52993, 74}, {0.48518, 32}, {0.00154, 57}, {
     0.38058, 38}, {-0.17473, 51}, {-0.34653, 34}, {-0.17204, 10}, {
     0.38425, 67}, {0.15279, 85}, {0.5153, 26}, {
     0.62233, 27}, {-0.42958, 72}, {0.61283, 28}, {
     0.91049, 69}, {-0.53303, 50}, {0.24599, 97}, {
     0.90402, 96}, {-0.69742, 84}, {0.77625, 40}, {
     0.61194, 32}, {-0.57879, 54}, {0.86849, 13}, {
     0.06149, 44}, {-0.14256, 43}, {0.28317, 109}, {0.21368, 27}, {
     0.95286, 47}, {0.08873, 71}, {-0.38745, 35}, {
     0.34325, 24}, {-0.29906, 62}, {-0.05573, 51}, {0.7426, 23}, {
     0.07412, 30}, {-0.73581, 48}, {-0.99885, 65}, {-0.12251, 19}, {-0.72636, 
      48}, {0.57798, 55}, {-0.36571, 43}, {-0.55171, 110}, {
     0.17795, 84}, {-0.70929, 9}, {-0.52755, 44}, {0.79939, 69}, {
     0.0418, 64}, {-0.58031, 106}, {-0.57052, 76}, {0.20646, 77}, {
     0.55435, 15}, {0.73575, 17}, {-0.17621, 80}, {0.30988, 33}, {
     0.36561, 20}, {-0.27457, 38}, {-0.93644, 40}, {
     0.06573, 46}, {-0.57441, 85}, {
     0.81227, 50}, {-0.83858, 67}, {-0.73705, 23}, {0.44857, 22}, {
     0.34378, 38}, {-0.13452, 67}, {
     0.30517, 67}, {-0.80361, 39}, {-0.538, 30}, {-0.96871, 49}, {-0.33081, 
      45}, {-0.03117, 72}, {-0.87734, 37}, {-0.88907, 34}, {-0.70301, 
      62}, {-0.86233, 23}, {-0.14749, 24}, {-0.16991, 62}, {0.94463, 135}, {
     0.93768, 82}, {
     0.2996, 25}, {-0.17701, 50}, {-0.31244, 84}, {-0.13078, 58}, {
     0.22997, 102}, {0.45141, 116}, {
     0.48587, 37}, {-0.69022, 37}, {-0.38945, 39}, {-0.24898, 70}, {
     0.35157, 21}, {0.60415, 70}, {0.80644, 20}, {0.58554, 34}, {
     0.852, 36}, {-0.70801, 58}, {0.98862, 83}, {-0.64773, 38}, {
     0.25591, 36}, {0.16811, 88}, {0.07257, 57}, {-0.29973, 19}, {
     0.81123, 43}, {-0.84032, 85}, {-0.33871, 20}, {
     0.08743, 82}, {-0.8864, 44}, {-0.08213, 67}, {
     0.45634, 27}, {-0.65252, 70}, {-0.13938, 54}, {-0.63429, 75}, {-0.31471, 
      99}, {0.26072, 81}, {0.68392, 21}, {
     0.44638, 63}, {-0.1571, 48}, {-0.2887, 76}, {
     0.91764, 90}, {-0.29683, 78}, {
     0.08565, 53}, {-0.45445, 78}, {-0.12659, 34}, {-0.38885, 17}, {
     0.81322, 93}, {-0.78025, 50}, {-0.66712, 51}, {-0.07038, 86}, {
     0.0671, 42}, {0.62356, 82}, {-0.04126, 24}, {-0.18377, 41}, {
     0.35465, 64}, {-0.22752, 49}, {-0.26568, 70}, {
     0.23343, 123}, {-0.58677, 10}, {-0.87492, 25}, {
     0.14837, 55}, {-0.8921, 79}, {0.31622, 29}, {
     0.35783, 49}, {-0.47653, 67}, {0.20966, 81}, {-0.62903, 64}, {
     0.42893, 24}, {-0.14157, 47}, {0.02824, 30}, {
     0.64598, 58}, {-0.44149, 81}, {-0.41775, 74}, {-0.4912, 60}, {-0.65967, 
      84}, {0.159, 105}, {0.19357, 67}, {-0.79702, 69}, {0.78462, 82}, {
     0.44322, 66}, {-0.93004, 56}, {-0.71582, 84}, {-0.23634, 54}, {-0.65877, 
      30}, {-0.48227, 99}, {-0.8233, 23}, {0.02506, 37}, {
     0.65077, 69}, {-0.97376, 27}, {-0.6132, 74}, {-0.58284, 83}, {
     0.85023, 62}, {0.884, 107}, {
     0.96514, 33}, {-0.41293, 51}, {-0.75105, 61}, {-0.87574, 39}, {
     0.93172, 42}, {0.62198, 30}, {-0.69852, 44}, {
     0.13685, 23}, {-0.26678, 52}, {0.12523, 78}, {
     0.63159, 61}, {-0.12645, 44}, {-0.43805, 85}, {
     0.43981, 20}, {-0.86231, 18}, {-0.57168, 66}, {-0.55286, 28}, {
     0.6648, 44}, {
     0.30699, 28}, {-0.20329, 55}, {-0.58989, 57}, {-0.22234, 36}, {-0.64737, 
      75}, {0.77069, 42}, {
     0.35558, 37}, {-0.36648, 35}, {-0.51096, 29}, {-0.12432, 54}, {-0.83364, 
      66}, {0.25922, 77}, {-0.26723, 39}, {0.50952, 52}, {-0.4953, 61}, {
     0.80985, 71}, {0.93669, 30}, {-0.33234, 35}, {
     0.84608, 58}, {-0.64629, 44}, {-0.44036, 60}, {0.57971, 77}, {
     0.33756, 52}, {-0.20992, 47}, {0.05899, 84}, {
     0.88502, 35}, {-0.04832, 28}, {-0.52322, 39}, {0.74033, 62}, {
     0.85601, 25}, {0.03024, 88}, {-0.8835, 70}, {
     0.88021, 39}, {-0.57856, 74}, {0.31997, 28}, {
     0.52046, 40}, {-0.08252, 48}, {0.08955, 63}, {0.02421, 49}, {
     0.98139, 59}, {-0.4454, 50}, {-0.90003, 33}, {-0.25474, 38}, {-0.04959, 
      77}, {-0.48492, 102}, {-0.42221, 112}, {0.20779, 63}, {
     0.42426, 49}, {-0.46354, 28}, {0.27286, 83}, {
     0.054, 101}, {-0.49152, 62}, {-0.22137, 52}, {
     0.36594, 24}, {-0.6243, 44}, {-0.98667, 13}, {
     0.83991, 27}, {-0.43666, 61}, {0.03416, 61}, {0.82336, 44}, {
     0.11229, 66}, {-0.93425, 74}, {0.72022, 70}, {
     0.41652, 34}, {-0.17199, 75}, {-0.76962, 44}, {-0.70078, 43}, {-0.70052, 
      46}, {0.26496, 46}, {-0.69072, 73}, {0.37466, 23}, {0.42262, 14}, {
     0.52228, 25}, {-0.38931, 31}, {
     0.50599, 80}, {-0.79389, 24}, {-0.22703, 107}, {0.64834, 51}, {
     0.7127, 38}, {-0.93934, 80}, {-0.6923, 31}, {0.35055, 47}, {
     0.33684, 49}, {0.23094, 16}, {-0.97777, 35}, {-0.94795, 53}, {
     0.45902, 26}, {-0.16417, 64}, {
     0.84062, 48}, {-0.26901, 58}, {-0.60004, 46}, {-0.56322, 20}, {
     0.54567, 22}, {0.34163, 39}, {-0.21326, 80}, {-0.16329, 17}, {
     0.89388, 19}, {
     0.39039, 12}, {-0.94253, 79}, {-0.17075, 56}, {-0.64621, 71}, {-0.40831, 
      22}, {0.08626, 32}, {-0.86347, 39}, {
     0.80617, 43}, {-0.80723, 67}, {-0.10009, 50}, {-0.05529, 29}, {
     0.99214, 118}, {-0.88742, 56}, {
     0.74104, 49}, {-0.59765, 62}, {-0.16074, 48}, {0.15054, 81}, {
     0.31808, 34}, {0.12302, 68}, {-0.59276, 56}, {-0.07196, 46}, {
     0.86153, 58}, {0.37681, 44}, {-0.1802, 7}, {0.33729, 22}, {
     0.88316, 63}, {-0.67764, 46}, {-0.55655, 52}, {-0.84784, 24}, {
     0.41864, 44}, {-0.29434, 84}, {0.99229, 104}, {
     0.18104, 44}, {-0.33484, 107}, {-0.40657, 75}, {-0.54745, 51}, {
     0.32841, 52}, {-0.6028, 37}, {-0.36029, 73}, {0.14185, 69}, {
     0.45444, 38}, {-0.71375, 48}, {0.47028, 18}, {0.44302, 56}, {
     0.16567, 131}, {0.84719, 58}, {0.27256, 81}, {-0.96448, 47}, {
     0.13996, 28}, {0.35402, 37}, {-0.3418, 35}, {-0.69657, 55}, {
     0.26732, 26}, {0.87484, 42}, {-0.12421, 9}, {
     0.00943, 114}, {-0.3049, 27}, {
     0.69965, 51}, {-0.80895, 91}, {-0.1305, 74}, {-0.48821, 32}, {
     0.3421, 87}, {0.01619, 33}, {-0.88534, 45}, {
     0.97378, 46}, {-0.30152, 70}, {0.93512, 15}, {0.58519, 33}, {
     0.71985, 81}, {-0.24712, 32}, {0.09181, 34}, {
     0.24339, 49}, {-0.62224, 101}, {
     0.33233, 86}, {-0.42972, 65}, {-0.94987, 76}, {-0.20417, 22}, {-0.96785, 
      31}, {0.72946, 24}, {0.32517, 28}, {-0.65073, 89}, {0.3356, 72}, {
     0.93823, 34}, {-0.37786, 34}, {-0.09893, 51}, {0.47293, 15}, {
     0.69557, 110}, {-0.63457, 32}, {-0.10598, 70}, {-0.98584, 33}, {
     0.97561, 71}, {0.62661, 91}, {0.31607, 56}, {
     0.45361, 58}, {-0.22824, 47}, {0.18971, 50}, {0.68837, 15}, {
     0.38173, 62}, {-0.05708, 117}, {0.73283, 35}, {
     0.39242, 44}, {-0.45432, 26}, {-0.45214, 100}, {-0.7037, 79}, {-0.72434, 
      93}, {-0.0123, 31}, {0.80884, 47}, {-0.24739, 8}, {0.69683, 73}, {
     0.00447, 51}, {0.72658, 36}, {-0.48413, 28}, {0.5129, 11}, {
     0.02209, 80}, {0.41478, 32}, {-0.46239, 72}, {
     0.92115, 26}, {-0.12121, 99}, {-0.8287, 78}, {-0.60152, 35}, {
     0.18533, 59}, {-0.23389, 66}, {-0.00743, 74}, {-0.08367, 62}, {
     0.7288, 88}, {-0.71156, 20}, {0.08143, 42}, {-0.78582, 59}, {
     0.44233, 26}, {0.34304, 107}, {-0.41518, 51}, {0.48947, 35}, {
     0.37518, 88}, {-0.01361, 71}, {-0.98139, 36}, {-0.6758, 63}, {-0.55436, 
      56}, {-0.98056, 54}, {
     0.57308, 23}, {-0.22975, 6}, {-0.87274, 40}, {-0.18261, 90}, {-0.29011, 
      49}, {0.6758, 21}, {0.82875, 65}, {0.80065, 55}, {
     0.576, 82}, {-0.87793, 13}, {-0.25403, 53}, {-0.04352, 113}, {-0.47475, 
      56}, {-0.69821, 74}, {0.43669, 89}, {0.11293, 43}, {
     0.57094, 17}, {-0.66289, 37}, {-0.26933, 77}, {
     0.37669, 49}, {-0.12066, 37}, {-0.34556, 62}, {
     0.55829, 21}, {-0.30381, 20}, {-0.44794, 77}, {
     0.59139, 26}, {-0.08314, 72}, {-0.26704, 35}, {-0.92979, 50}, {
     0.57829, 44}, {
     0.48811, 61}, {-0.46268, 40}, {-0.25984, 76}, {-0.11361, 45}, {
     0.16706, 48}, {0.07204, 8}, {0.36871, 45}, {
     0.26061, 45}, {-0.81047, 15}, {0.50639, 26}, {0.39615, 29}, {
     0.10913, 40}, {0.042, 28}, {0.44872, 58}, {
     0.8173, 88}, {-0.46235, 68}, {-0.42235, 19}, {0.71078, 53}, {
     0.60903, 65}, {-0.71838, 111}, {0.74961, 120}, {0.75873, 56}, {
     0.02671, 90}, {0.37859, 64}, {-0.22878, 54}, {-0.526, 30}, {
     0.97124, 66}, {-0.49162, 35}, {0.03467, 56}, {-0.7518, 75}, {
     0.11999, 109}, {-0.98019, 36}, {-0.76114, 52}, {0.27664, 18}, {
     0.87983, 77}, {0.07927, 72}, {-0.05446, 28}, {0.92762, 64}, {
     0.89407, 20}, {
     0.85662, 69}, {-0.11676, 52}, {-0.50184, 52}, {-0.30583, 35}, {-0.48653, 
      68}, {0.55597, 42}, {-0.92275, 63}, {0.26994, 54}, {0.41455, 42}, {
     0.2427, 27}, {0.02923, 50}, {
     0.04522, 63}, {-0.40813, 37}, {-0.15856, 61}, {-0.53451, 42}, {-0.72792, 
      98}, {0.18779, 80}, {-0.87534, 63}, {0.57319, 41}, {-0.6403, 69}, {
     0.61366, 40}, {
     0.75393, 17}, {-0.49753, 25}, {-0.67643, 20}, {-0.11162, 30}, {-0.96871, 
      72}, {0.04478, 71}, {0.1055, 31}, {-0.84999, 73}, {-0.42425, 87}, {
     0.10196, 45}, {-0.28181, 73}, {0.83164, 71}, {0.13781, 71}, {
     0.12015, 34}, {-0.11679, 50}, {0.28977, 79}, {
     0.04605, 85}, {-0.08702, 101}, {0.71444, 31}, {0.08548, 23}, {
     0.26539, 25}, {0.85891, 26}, {-0.26592, 40}, {
     0.57325, 45}, {-0.73146, 20}, {
     0.0949, 34}, {-0.30041, 90}, {-0.76918, 57}, {-0.82464, 34}, {-0.86811, 
      43}, {-0.7318, 35}, {-0.58283, 8}, {0.17205, 33}, {-0.83332, 49}, {
     0.2992, 84}, {0.99261, 45}, {
     0.10265, 80}, {-0.7747, 17}, {-0.22059, 9}, {0.65557, 39}, {
     0.79595, 32}, {-0.48681, 67}, {0.20584, 16}, {0.61971, 65}, {
     0.90226, 41}, {0.87744, 44}, {
     0.51971, 48}, {-0.60226, 93}, {-0.48742, 70}, {-0.31261, 65}, {
     0.63029, 34}, {-0.57166, 73}, {0.55333, 33}, {0.27312, 32}, {
     0.75215, 69}, {-0.78107, 69}, {-0.5127, 80}, {
     0.83883, 61}, {-0.92549, 12}, {-0.06686, 25}, {
     0.16777, 74}, {-0.26538, 38}, {0.40098, 30}, {0.48132, 32}, {
     0.20063, 39}, {
     0.2615, 16}, {-0.94489, 24}, {-0.0775, 52}, {-0.54677, 43}, {
     0.34331, 19}, {-0.96817, 38}, {-0.22087, 71}, {-0.98531, 54}, {-0.40727, 
      16}, {0.33148, 46}, {0.18723, 40}, {-0.96245, 44}, {-0.51676, 80}, {
     0.61673, 29}, {-0.12507, 49}, {-0.46537, 33}, {-0.06369, 24}, {
     0.30477, 87}, {-0.99687, 73}, {0.00996, 23}, {-0.4568, 42}, {
     0.1575, 31}, {-0.11407, 36}, {-0.36599, 24}, {-0.57716, 75}, {
     0.01649, 77}, {-0.23544, 119}, {-0.40553, 15}, {
     0.82343, 44}, {-0.79088, 90}, {-0.78904, 56}, {-0.12924, 14}, {-0.32221, 
      48}, {0.92634, 66}, {-0.4774, 83}, {-0.06347, 53}, {-0.43173, 
      47}, {-0.88781, 44}, {-0.36785, 16}, {-0.46216, 38}, {
     0.2862, 53}, {-0.21648, 13}, {0.01737, 47}, {
     0.05171, 41}, {-0.10043, 67}, {
     0.00186, 68}, {-0.75506, 45}, {-0.43302, 50}, {-0.19416, 59}, {
     0.8972, 51}, {-0.60643, 35}, {-0.00973, 58}, {-0.7932, 27}, {-0.76847, 
      43}, {-0.6252, 50}, {
     0.93217, 31}, {-0.64573, 32}, {-0.09145, 55}, {-0.17009, 60}, {
     0.7006, 20}, {-0.94964, 52}, {-0.7121, 100}, {0.62775, 33}, {
     0.44236, 21}, {0.60493, 78}, {-0.23342, 56}, {-0.23631, 81}, {
     0.4564, 34}, {-0.89655, 37}, {-0.13539, 68}, {-0.52123, 41}, {
     0.68692, 34}, {-0.51911, 55}, {-0.58287, 86}, {
     0.57342, 27}, {-0.83003, 16}, {0.04798, 49}, {-0.55413, 88}, {
     0.95046, 67}, {-0.70644, 26}, {-0.9512, 37}, {
     0.20787, 29}, {-0.98322, 78}, {-0.91873, 32}, {0.99725, 52}, {
     0.527, 54}, {0.22496, 32}, {0.07204, 62}, {0.9911, 61}, {
     0.27637, 17}, {-0.90374, 59}, {-0.84678, 21}, {
     0.31691, 50}, {-0.08229, 66}, {0.62832, 53}, {-0.62717, 80}, {
     0.56529, 95}, {0.40793, 16}, {0.50441, 41}, {0.84873, 60}, {
     0.66356, 44}, {
     0.06828, 72}, {-0.87563, 71}, {-0.06996, 25}, {-0.61356, 21}, {
     0.35406, 54}, {0.45928, 19}, {-0.01529, 72}, {-0.18836, 85}, {
     0.34788, 37}, {-0.52846, 32}, {-0.01613, 74}, {0.92459, 66}, {
     0.15825, 53}, {-0.31983, 76}, {-0.03977, 28}, {-0.89093, 9}, {-0.94975, 
      109}, {0.27069, 40}, {-0.81208, 65}, {-0.39461, 76}, {-0.15779, 71}, {
     0.25108, 24}, {0.5603, 50}, {-0.20668, 46}, {-0.52354, 45}, {
     0.22072, 110}, {-0.78243, 74}, {0.79506, 76}, {-0.57916, 28}, {
     0.03964, 58}, {-0.61343, 41}, {-0.47744, 53}, {0.70946, 23}, {
     0.70581, 33}, {-0.75295, 47}, {-0.02, 44}, {0.61697, 12}, {
     0.37966, 35}, {-0.13236, 73}, {0.74876, 42}, {
     0.57889, 99}, {-0.17142, 82}, {-0.85742, 38}, {-0.31549, 58}, {-0.55329, 
      92}, {0.34455, 27}, {-0.6674, 52}, {
     0.16698, 16}, {-0.48551, 16}, {-0.25818, 43}, {-0.17466, 57}, {
     0.14844, 81}, {0.59769, 37}, {0.92868, 28}, {
     0.20253, 44}, {-0.03579, 83}, {0.11, 65}, {-0.23233, 28}, {
     0.57721, 34}, {-0.63343, 25}, {0.60475, 17}, {
     0.94055, 31}, {-0.92633, 22}, {-0.18512, 58}, {-0.28082, 66}, {
     0.11136, 6}, {-0.73843, 33}, {
     0.13685, 55}, {-0.96811, 11}, {-0.83943, 58}, {
     0.31469, 45}, {-0.59491, 31}, {-0.38354, 29}, {0.11986, 78}, {
     0.47431, 15}, {-0.97591, 64}, {0.47524, 95}, {
     0.69341, 64}, {-0.75342, 107}, {-0.68175, 27}, {-0.71384, 44}, {-0.49396,
       53}, {-0.93905, 76}, {0.13902, 25}, {-0.32678, 29}, {0.04829, 56}, {
     0.9241, 97}, {-0.14066, 36}, {-0.40997, 31}, {
     0.61439, 83}, {-0.44036, 49}, {-0.69427, 27}, {0.70164, 12}, {
     0.73823, 52}, {-0.04015, 47}, {0.86084, 19}, {0.71611, 119}, {
     0.27477, 47}, {0.39916, 18}, {-0.75207, 48}, {-0.45874, 106}, {
     0.55666, 33}, {0.08954, 26}, {0.77019, 40}, {-0.56422, 26}, {
     0.12279, 43}, {0.11477, 31}, {-0.32738, 31}, {0.77638, 40}, {
     0.82879, 46}, {0.07363, 29}, {-0.41963, 74}, {-0.1294, 39}, {
     0.57007, 59}, {0.77324, 54}, {-0.71608, 75}, {0.04455, 51}, {
     0.00345, 132}, {0.3569, 16}, {0.82867, 59}, {
     0.15307, 115}, {-0.51771, 36}, {-0.22655, 99}, {
     0.425, 48}, {-0.01564, 41}, {0.31717, 45}, {-0.92886, 100}, {
     0.48995, 66}, {-0.24076, 26}, {-0.23579, 19}, {-0.61927, 53}, {
     0.90382, 20}, {-0.04696, 50}, {
     0.88522, 25}, {-0.55921, 73}, {-0.16458, 74}, {-0.79894, 56}, {-0.67826, 
      75}, {-0.86924, 25}, {0.11288, 88}, {
     0.71674, 46}, {-0.57036, 71}, {-0.26519, 58}, {-0.20838, 32}, {
     0.35813, 36}, {-0.07836, 55}, {0.91119, 46}, {-0.48107, 104}, {
     0.42556, 105}, {0.75489, 55}, {-0.55292, 61}, {
     0.73525, 53}, {-0.95469, 81}, {0.10189, 48}, {
     0.12933, 71}, {-0.82891, 15}, {-0.45201, 22}, {-0.25497, 22}, {-0.76088, 
      44}, {-0.58305, 67}, {-0.03906, 64}, {0.79588, 28}, {0.58229, 79}, {
     0.8072, 15}, {0.69636, 41}, {-0.12291, 29}, {
     0.08743, 46}, {-0.65186, 116}, {-0.36474, 30}, {-0.0348, 41}, {
     0.86558, 38}, {-0.89148, 25}, {0.03803, 22}, {
     0.60036, 48}, {-0.58078, 59}, {
     0.97037, 76}, {-0.75735, 59}, {-0.41285, 12}, {0.74816, 86}, {
     0.52083, 49}, {-0.66414, 67}, {0.45693, 58}, {-0.87141, 55}, {
     0.64983, 11}, {0.34451, 14}, {0.48346, 117}, {-0.39959, 18}, {
     0.40415, 89}, {0.82405, 47}, {0.39967, 48}, {0.82757, 79}, {
     0.9399, 21}, {0.83469, 37}, {0.83647, 63}, {0.68516, 35}, {
     0.05939, 17}, {0.804, 39}, {0.72667, 37}, {0.41499, 61}, {
     0.90124, 40}, {-0.65354, 79}, {-0.76287, 56}, {-0.74396, 44}, {
     0.48328, 52}, {
     0.68343, 56}, {-0.70141, 32}, {-0.15004, 48}, {-0.315, 59}, {
     0.63512, 79}, {0.14939, 39}, {0.90045, 93}, {-0.89065, 39}, {
     0.1359, 40}, {-0.59187, 49}, {0.19336, 18}, {-0.9994, 59}, {
     0.04316, 59}, {0.48036, 41}, {0.3778, 56}, {-0.14958, 47}, {
     0.07496, 54}, {-0.35645, 64}, {-0.78857, 61}, {-0.30387, 34}, {-0.18222, 
      69}, {-0.21963, 59}, {-0.78334, 67}, {0.57659, 31}, {-0.38676, 80}, {
     0.66875, 22}, {-0.10625, 46}, {-0.05963, 107}, {
     0.06898, 29}, {-0.26574, 62}, {0.66198, 59}, {0.43439, 33}, {
     0.09805, 41}, {0.00829, 69}, {0.14316, 43}, {
     0.94689, 35}, {-0.26119, 62}, {
     0.83698, 91}, {-0.44927, 34}, {-0.26609, 30}, {
     0.80098, 29}, {-0.64974, 110}, {0.2888, 29}, {-0.89075, 36}, {
     0.49703, 34}, {-0.99228, 34}, {-0.49207, 103}, {
     0.91516, 24}, {-0.15074, 32}, {-0.36035, 55}, {
     0.2218, 41}, {-0.51283, 79}, {-0.87381, 58}, {0.85236, 32}, {
     0.48927, 38}, {0.8045, 57}, {-0.86168, 50}, {
     0.16347, 97}, {-0.27939, 59}, {-0.6356, 83}, {
     0.36919, 55}, {-0.80101, 77}, {-0.15301, 22}, {-0.7307, 42}, {-0.31949, 
      33}, {-0.58283, 67}, {0.10721, 31}, {-0.73278, 80}, {0.77502, 68}, {
     0.32167, 34}, {-0.54654, 44}, {-0.34241, 68}, {
     0.22235, 31}, {-0.71113, 25}, {0.52125, 53}, {0.03294, 38}, {
     0.59197, 11}, {-0.48858, 51}, {-0.05565, 18}, {-0.84546, 35}, {-0.51764, 
      57}, {0.70078, 46}, {-0.58713, 66}, {
     0.51139, 42}, {-0.06386, 79}, {-0.72405, 61}, {0.45537, 72}, {
     0.09658, 16}, {-0.1246, 70}, {-0.5673, 31}, {
     0.45778, 84}, {-0.47363, 83}, {-0.25545, 74}, {
     0.86386, 52}, {-0.82955, 25}, {
     0.32176, 49}, {-0.75995, 28}, {-0.85979, 44}, {
     0.78643, 48}, {-0.79609, 96}, {
     0.10097, 22}, {-0.67584, 24}, {-0.67531, 35}, {
     0.7964, 40}, {-0.12364, 120}, {-0.19713, 30}, {-0.37701, 47}, {-0.95518, 
      48}, {-0.77142, 59}, {0.84105, 36}, {0.96234, 60}, {-0.02603, 95}, {
     0.36066, 59}, {0.96007, 28}, {0.73954, 58}, {
     0.41435, 52}, {-0.447, 71}, {0.68228, 49}, {-0.90314, 23}, {
     0.30974, 29}, {-0.07713, 81}, {-0.71277, 31}, {0.05332, 89}, {
     0.95661, 44}, {-0.33438, 70}, {
     0.63979, 23}, {-0.28046, 60}, {-0.61994, 45}, {-0.32437, 129}, {-0.02193,
       18}, {-0.07949, 40}, {0.7888, 40}, {-0.69846, 58}, {0.55234, 65}, {
     0.66271, 54}, {0.37502, 72}, {0.528, 88}, {
     0.39261, 80}, {-0.75588, 87}, {0.55605, 20}, {0.76427, 16}, {
     0.22788, 85}, {-0.33532, 37}, {0.26769, 60}, {
     0.18413, 24}, {-0.42354, 27}, {0.10372, 33}, {0.35222, 13}, {
     0.32081, 77}, {0.32737, 48}, {0.52013, 29}, {-0.59752, 135}, {
     0.45028, 68}, {0.51789, 10}, {-0.56704, 8}, {
     0.94728, 29}, {-0.30616, 114}, {
     0.21045, 52}, {-0.56569, 61}, {-0.97311, 37}, {-0.78581, 104}, {
     0.01229, 86}, {0.43087, 42}, {-0.46399, 32}, {
     0.88599, 61}, {-0.66559, 36}, {0.18909, 25}, {-0.56422, 69}, {
     0.11783, 93}, {0.93886, 51}, {0.54, 16}, {0.03609, 21}, {
     0.81597, 16}, {-0.81647, 29}, {-0.68529, 77}, {0.2393, 59}, {
     0.49307, 38}, {0.88051, 63}, {
     0.08205, 82}, {-0.48207, 54}, {-0.06748, 117}, {-0.48209, 124}, {-0.5717,
       20}, {-0.9168, 46}, {-0.49364, 30}, {0.67341, 50}, {
     0.49189, 46}, {-0.2159, 19}, {0.04258, 51}, {-0.6968, 58}, {
     0.55867, 24}, {0.25914, 67}, {
     0.46911, 69}, {-0.51477, 36}, {-0.63618, 55}, {-0.25255, 49}, {-0.91462, 
      36}, {0.68327, 74}, {
     0.9851, 85}, {-0.05169, 43}, {-0.28356, 14}, {-0.28678, 37}, {
     0.13421, 68}, {0.941, 100}, {-0.95736, 119}, {-0.4895, 100}, {
     0.25869, 73}, {-0.80388, 72}, {-0.3744, 24}, {-0.68121, 64}, {
     0.94993, 22}, {0.3353, 60}, {-0.92313, 19}, {-0.13819, 46}, {
     0.94566, 35}, {0.12649, 28}, {-0.5, 42}, {-0.88381, 31}, {0.74132, 37}, {
     0.14336, 25}, {
     0.63323, 70}, {-0.40971, 35}, {-0.16091, 56}, {-0.59186, 20}, {-0.69346, 
      62}, {0.06831, 71}, {0.43289, 12}, {-0.85408, 32}, {
     0.40726, 25}, {-0.10673, 61}, {0.61974, 11}, {
     0.61064, 11}, {-0.51033, 61}, {
     0.07387, 24}, {-0.6056, 53}, {-0.39038, 32}, {-0.04964, 87}, {
     0.92193, 55}, {-0.00852, 58}, {0.069, 130}, {
     0.4242, 53}, {-0.93787, 103}, {0.00689, 42}, {-0.50596, 48}, {
     0.07881, 100}, {0.33896, 85}, {0.71144, 21}, {0.14886, 28}, {
     0.9059, 97}, {-0.84215, 17}, {-0.36774, 60}, {-0.18851, 86}, {
     0.25358, 25}, {-0.36703, 48}, {-0.63931, 72}, {0.55898, 100}, {
     0.37474, 10}, {-0.323, 99}, {-0.09523, 44}, {-0.62677, 40}, {-0.80628, 
      60}, {0.5897, 49}, {0.06771, 49}, {0.45458, 33}, {0.59582, 51}, {
     0.02, 76}, {-0.16886, 36}, {-0.80179, 34}, {-0.57688, 78}, {
     0.87237, 65}, {-0.27344, 120}, {-0.87624, 38}, {
     0.87551, 59}, {-0.96297, 36}, {0.02598, 28}, {0.63566, 43}, {
     0.9861, 17}, {0.8455, 101}, {-0.49365, 41}, {
     0.98698, 45}, {-0.62744, 52}, {-0.04523, 47}, {
     0.43375, 40}, {-0.34453, 26}, {0.40469, 40}, {
     0.49594, 50}, {-0.0973, 82}, {0.51149, 51}, {-0.07092, 22}, {
     0.75907, 82}, {-0.8383, 77}, {
     0.85645, 104}, {-0.46072, 126}, {-0.07625, 55}, {
     0.46831, 36}, {-0.74568, 51}, {-0.59395, 78}, {0.72276, 105}, {
     0.40736, 91}, {-0.00748, 22}, {-0.10051, 53}, {0.77264, 45}, {
     0.57834, 39}, {-0.69603, 42}, {-0.73623, 59}, {-0.80145, 18}, {-0.1637, 
      26}, {0.51444, 59}, {0.74959, 24}, {0.88884, 86}, {
     0.09009, 92}, {-0.2563, 32}, {0.99778, 64}, {0.11201, 30}, {
     0.44614, 19}, {0.43551, 30}, {-0.06051, 47}, {
     0.37304, 30}, {-0.24745, 33}, {-0.74373, 58}, {-0.19186, 67}, {-0.75695, 
      55}, {-0.95079, 40}, {-0.33434, 32}, {0.46561, 93}, {-0.21611, 30}, {
     0.6222, 33}, {-0.13124, 22}, {-0.91229, 37}, {-0.75017, 49}, {
     0.34968, 55}, {-0.31525, 26}, {-0.75496, 52}, {-0.90665, 60}, {-0.47559, 
      88}, {0.95235, 52}, {-0.57227, 45}, {-0.38252, 79}, {
     0.06313, 29}, {-0.62726, 37}, {0.54149, 57}, {0.46854, 40}, {
     0.72225, 21}, {0.28064, 70}, {0.52152, 90}, {-0.46498, 100}, {
     0.11673, 56}, {-0.46158, 40}, {-0.4625, 76}, {-0.61534, 22}, {
     0.48355, 38}, {0.60043, 31}, {-0.2603, 37}, {0.74731, 58}, {
     0.95733, 102}, {-0.02328, 28}, {-0.6903, 35}, {0.74423, 28}, {
     0.44471, 96}, {0.30898, 60}, {-0.99218, 14}, {0.75538, 25}, {
     0.84775, 36}, {-0.01937, 24}, {0.31852, 47}, {-0.8866, 76}, {
     0.75365, 22}, {-0.50755, 34}, {0.10932, 67}, {-0.3863, 29}, {
     0.37604, 56}, {-0.67951, 50}, {-0.99573, 22}, {0.22876, 20}, {
     0.69121, 70}, {-0.92296, 45}, {-0.21271, 74}, {-0.65657, 81}, {
     0.3919, 56}, {0.33548, 52}, {0.46825, 33}, {0.75021, 42}, {
     0.04452, 59}, {0.8196, 85}, {0.57964, 58}, {
     0.72301, 72}, {-0.65005, 43}, {-0.06058, 51}, {0.12472, 19}, {
     0.04833, 94}, {-0.11467, 36}, {
     0.40151, 68}, {-0.71141, 83}, {-0.91686, 43}, {-0.67281, 66}, {
     0.22829, 21}, {0.1563, 83}, {
     0.27822, 22}, {-0.03695, 21}, {-0.70021, 49}, {
     0.59913, 34}, {-0.22224, 59}, {-0.26115, 68}, {0.62711, 51}, {
     0.08686, 38}, {-0.96243, 49}, {-0.80095, 64}, {
     0.0352, 15}, {-0.33466, 42}, {-0.61675, 95}, {-0.72489, 42}, {
     0.07825, 38}, {-0.13485, 17}, {-0.28344, 31}, {-0.80728, 17}, {-0.25309, 
      44}, {-0.45209, 31}, {0.37265, 27}, {0.38558, 100}, {0.92571, 67}, {
     0.3902, 36}, {0.03424, 20}, {0.54284, 59}, {-0.97002, 30}, {
     0.30488, 25}, {0.21892, 49}, {
     0.05543, 61}, {-0.97452, 23}, {-0.26024, 71}, {-0.98599, 60}, {-0.6847, 
      63}, {0.28029, 68}, {-0.96102, 76}, {-0.43891, 111}, {
     0.33291, 34}, {-0.08191, 51}, {0.40114, 106}, {0.33892, 47}, {
     0.36282, 67}, {0.02842, 6}, {0.036, 11}, {-0.95255, 54}, {0.04859, 91}, {
     0.58428, 24}, {-0.1356, 38}, {-0.47549, 23}, {-0.41926, 50}, {-0.98452, 
      31}, {-0.58178, 78}, {0.82287, 43}, {0.98138, 120}, {-0.31728, 57}, {
     0.16466, 21}, {0.67257, 21}, {-0.69628, 83}, {-0.56745, 53}, {
     0.01592, 26}, {-0.87907, 74}, {-0.27202, 60}, {-0.43207, 83}, {-0.04337, 
      77}, {-0.12199, 68}, {0.40991, 37}, {-0.28357, 50}, {
     0.03191, 46}, {-0.8626, 16}, {
     0.90394, 53}, {-0.75364, 52}, {-0.90626, 70}, {
     0.56995, 20}, {-0.17394, 33}, {
     0.6548, 67}, {-0.91224, 56}, {-0.28058, 37}, {-0.8949, 37}, {
     0.41381, 52}, {0.97689, 83}, {
     0.41115, 63}, {-0.59275, 101}, {-0.92609, 88}, {0.39417, 14}, {
     0.32375, 32}, {0.74879, 29}, {0.56058, 44}, {-0.3918, 89}, {
     0.6454, 26}, {-0.11035, 46}, {0.01688, 127}, {
     0.24812, 81}, {-0.8329, 104}, {0.52272, 68}, {0.92884, 31}, {
     0.57874, 43}, {0.45637, 52}, {-0.03399, 39}, {
     0.72559, 76}, {-0.34409, 53}, {-0.63707, 26}, {-0.55172, 79}, {
     0.79365, 97}, {-0.93111, 35}, {0.09824, 42}, {0.81241, 21}, {
     0.60658, 102}, {-0.71001, 39}, {-0.21128, 50}, {
     0.69783, 56}, {-0.1749, 9}, {0.5362, 67}, {-0.29838, 42}, {
     0.94314, 57}, {0.22855, 25}, {0.25473, 110}, {0.3212, 68}, {
     0.39332, 53}, {0.20405, 56}, {0.17823, 28}, {
     0.02621, 64}, {-0.87783, 66}, {0.33169, 19}, {0.93112, 56}, {
     0.99617, 100}, {-0.85447, 41}, {0.43583, 26}, {-0.12544, 22}, {
     0.19209, 45}, {0.29018, 72}, {0.8249, 63}, {
     0.09292, 34}, {-0.49166, 66}, {
     0.97825, 7}, {-0.58702, 60}, {-0.7749, 77}, {
     0.92178, 50}, {-0.25767, 15}, {0.47887, 41}, {-0.27783, 22}, {
     0.96771, 36}, {0.22112, 43}, {0.72857, 46}, {-0.06774, 29}, {
     0.14756, 80}, {-0.80351, 51}, {
     0.17511, 38}, {-0.33341, 30}, {-0.29806, 16}, {0.13661, 40}, {
     0.86146, 62}, {0.64067, 22}, {0.23763, 52}, {-0.39711, 39}, {
     0.03785, 96}, {-0.06314, 51}, {-0.04976, 68}, {
     0.73987, 61}, {-0.23498, 32}, {
     0.58037, 22}, {-0.78958, 47}, {-0.98157, 60}, {-0.6514, 34}, {-0.31345, 
      105}, {-0.73138, 36}, {0.77839, 36}, {-0.85098, 27}, {
     0.56546, 49}, {-0.1207, 21}, {-0.36261, 8}, {-0.68948, 35}, {
     0.77343, 35}, {-0.37554, 45}, {0.4292, 10}, {-0.10876, 27}, {
     0.60834, 13}, {-0.92724, 15}, {-0.10706, 90}, {0.88579, 80}, {
     0.84703, 81}, {-0.59487, 22}, {0.83855, 45}, {0.13422, 31}, {
     0.30684, 61}, {-0.78126, 69}, {0.05208, 58}, {-0.7052, 24}, {
     0.90393, 49}, {-0.50951, 39}, {0.38922, 23}, {0.78577, 24}, {
     0.32527, 26}, {-0.36778, 44}, {-0.91995, 50}, {0.42154, 11}, {
     0.38197, 90}, {-0.86582, 39}, {0.14676, 18}, {
     0.74323, 59}, {-0.59673, 61}, {-0.27227, 12}, {
     0.22287, 64}, {-0.70449, 20}, {
     0.43107, 27}, {-0.51679, 71}, {-0.22658, 27}, {-0.30863, 22}, {-0.45063, 
      90}, {-0.79605, 77}, {0.05259, 23}, {-0.16705, 83}, {-0.47205, 50}, {
     0.40074, 46}, {0.83145, 62}, {0.03435, 42}, {-0.5069, 35}, {
     0.2057, 67}, {-0.50375, 34}, {-0.42501, 81}, {-0.22995, 12}, {-0.80499, 
      49}, {-0.04734, 50}, {-0.69754, 110}, {-0.49307, 19}, {0.72604, 27}, {
     0.94404, 35}, {0.66148, 43}, {-0.4767, 41}, {0.08623, 12}, {
     0.34561, 21}, {-0.39442, 63}, {0.90211, 71}, {
     0.05347, 98}, {-0.7168, 35}, {-0.16318, 39}, {0.11209, 36}, {
     0.15122, 43}, {-0.90714, 59}, {-0.79518, 76}, {0.61667, 51}, {
     0.62302, 45}, {-0.32568, 98}, {0.81894, 72}, {-0.61314, 83}, {
     0.20769, 104}, {0.32504, 66}, {-0.54433, 62}, {0.60253, 47}, {
     0.04219, 18}, {0.10482, 65}, {0.77074, 65}, {
     0.09999, 86}, {-0.84402, 67}, {0.01544, 33}, {
     0.8, 62}, {-0.27203, 26}, {-0.71329, 54}, {0.28504, 64}, {
     0.12526, 21}, {-0.71485, 77}, {-0.90012, 55}, {-0.52749, 76}, {-0.9872, 
      69}, {0.66879, 62}, {-0.70007, 35}, {-0.46815, 73}, {
     0.14724, 67}, {-0.58217, 35}, {0.40122, 53}, {0.95485, 45}, {
     0.31368, 48}, {-0.98075, 55}, {-0.27456, 33}, {-0.63351, 10}, {-0.81963, 
      25}, {-0.2754, 76}, {-0.9167, 48}, {0.31365, 67}, {0.96156, 42}, {
     0.40971, 55}, {0.05369, 31}, {0.56362, 55}, {0.70924, 38}, {
     0.5107, 15}, {-0.38857, 23}, {-0.71182, 42}, {-0.4001, 62}, {-0.02447, 
      49}, {0.86619, 101}, {0.76636, 32}, {0.9593, 88}, {0.11091, 73}, {
     0.89272, 28}, {-0.84856, 21}, {0.51331, 81}, {-0.9101, 48}, {
     0.83471, 64}, {-0.11821, 56}, {0.0378, 73}, {0.99653, 68}, {
     0.72869, 35}, {0.85315, 46}, {0.0548, 43}, {
     0.41981, 29}, {-0.81649, 43}, {
     0.18196, 23}, {-0.29799, 33}, {-0.1035, 20}, {-0.18234, 98}, {-0.54111, 
      23}, {-0.22288, 23}, {-0.32714, 51}, {-0.11237, 69}, {-0.64342, 
      92}, {-0.62454, 46}, {-0.73151, 14}, {
     0.83591, 44}, {-0.60158, 28}, {-0.99844, 49}, {-0.67869, 58}, {
     0.35074, 73}, {-0.92754, 70}, {-0.94788, 22}, {
     0.12718, 107}, {-0.11806, 46}, {0.06878, 12}, {
     0.78975, 72}, {-0.50371, 72}, {-0.81651, 26}, {-0.87971, 54}, {-0.02391, 
      87}, {-0.931, 58}, {-0.03272, 43}, {
     0.44731, 90}, {-0.81437, 60}, {-0.90829, 34}, {0.19107, 62}, {
     0.24526, 32}, {-0.78088, 30}, {-0.9509, 30}, {-0.36915, 54}, {-0.81589, 
      91}, {-0.36343, 98}, {0.05121, 25}, {0.05372, 45}, {
     0.81188, 29}, {-0.09515, 44}, {0.22737, 87}, {
     0.46091, 67}, {-0.58906, 44}, {-0.63319, 37}, {0.88581, 49}, {
     0.08405, 125}, {-0.41167, 36}, {-0.81207, 109}, {-0.87762, 
      56}, {-0.58163, 41}, {-0.58529, 34}, {-0.26474, 23}, {-0.37667, 49}, {
     0.93303, 44}, {0.66794, 59}, {0.46303, 28}, {-0.79907, 38}, {
     0.35181, 61}, {
     0.41584, 34}, {-0.46809, 62}, {-0.45029, 60}, {-0.77427, 36}, {
     0.23274, 20}, {-0.21442, 56}, {0.81373, 74}, {-0.40056, 84}, {
     0.56803, 64}, {0.34698, 82}, {0.2936, 35}, {-0.81369, 32}, {
     0.21943, 55}, {0.21096, 115}, {-0.76496, 97}, {-0.89916, 48}, {
     0.09623, 38}, {-0.46718, 56}, {
     0.38101, 61}, {-0.54969, 50}, {-0.07053, 108}, {
     0.38764, 41}, {-0.50569, 53}, {-0.13893, 57}, {-0.98634, 53}, {
     0.39079, 13}, {0.40789, 34}, {0.43068, 50}, {-0.11071, 52}, {
     0.94461, 66}, {-0.50739, 32}, {-0.36718, 83}, {-0.86363, 46}, {
     0.47917, 98}, {-0.23413, 60}, {-0.9976, 14}, {0.12173, 40}, {
     0.86878, 53}, {-0.60488, 33}, {0.35325, 55}, {
     0.42218, 70}, {-0.78506, 66}, {0.78501, 49}, {-0.11598, 41}, {
     0.68697, 53}, {0.74219, 56}, {0.64989, 37}, {0.84386, 30}, {
     0.03794, 40}, {-0.74262, 51}, {0.85083, 88}, {0.70751, 31}, {
     0.77819, 26}, {-0.92499, 79}, {0.32387, 46}, {
     0.41469, 78}, {-0.9518, 86}, {-0.1298, 38}, {-0.31179, 76}, {-0.90152, 
      84}, {-0.60435, 73}, {0.49695, 97}, {-0.28863, 53}, {-0.36484, 66}, {
     0.39106, 49}, {-0.66565, 52}, {-0.60545, 102}, {-0.45179, 87}, {
     0.98963, 61}, {-0.38799, 95}, {-0.37463, 92}, {-0.99929, 76}, {-0.78601, 
      84}, {0.77616, 45}, {0.24414, 54}, {
     0.19277, 31}, {-0.22506, 12}, {-0.24366, 34}, {-0.57097, 34}, {-0.24938, 
      89}, {-0.52055, 69}, {0.70748, 54}, {0.41479, 70}, {0.30966, 64}, {
     0.15423, 23}, {0.39064, 23}, {0.94928, 93}, {0.02174, 43}, {
     0.08714, 32}, {-0.22532, 74}, {-0.74141, 41}, {
     0.08915, 69}, {-0.24625, 59}, {0.229, 89}, {-0.00278, 64}, {
     0.20078, 103}, {-0.03212, 10}, {
     0.06444, 107}, {-0.53565, 63}, {-0.77127, 30}, {-0.16986, 119}, {
     0.24527, 54}, {-0.75181, 62}, {
     0.15969, 14}, {-0.457, 102}, {-0.51978, 36}, {-0.3274, 51}, {-0.43646, 
      46}, {0.1192, 69}, {-0.86776, 77}, {0.0841, 30}, {
     0.50117, 31}, {-0.86228, 62}, {
     0.01475, 37}, {-0.13972, 83}, {-0.12678, 67}, {-0.47647, 75}, {-0.97791, 
      41}, {-0.39625, 33}, {-0.55616, 22}, {0.72843, 46}, {-0.15284, 60}, {
     0.34342, 27}, {-0.63425, 23}, {0.93118, 12}, {
     0.80021, 33}, {-0.03572, 92}, {0.13322, 62}, {0.33821, 82}, {
     0.34608, 57}, {
     0.93723, 71}, {-0.91091, 50}, {-0.60593, 62}, {-0.80732, 20}, {-0.0146, 
      58}, {0.29584, 49}, {0.20588, 51}, {0.53732, 35}, {
     0.40154, 77}, {-0.18829, 34}, {
     0.49675, 53}, {-0.05017, 79}, {-0.68762, 53}, {-0.1459, 62}, {
     0.08326, 55}, {0.73977, 14}, {0.32919, 47}, {0.21858, 14}, {
     0.92572, 59}, {-0.00807, 37}, {0.62039, 111}, {0.24187, 36}, {
     0.33631, 98}, {0.84805, 73}, {
     0.40624, 29}, {-0.4563, 34}, {-0.88854, 34}, {
     0.84468, 44}, {-0.80075, 32}, {-0.88411, 42}, {
     0.54578, 28}, {-0.24773, 40}, {0.15319, 30}, {
     0.38543, 43}, {-0.8964, 23}, {-0.82271, 30}, {
     0.31774, 21}, {-0.67374, 43}, {0.1889, 80}, {
     0.53861, 67}, {-0.54673, 72}, {-0.76869, 59}, {
     0.00513, 55}, {-0.32388, 25}, {-0.31455, 88}, {
     0.55172, 46}, {-0.95959, 89}, {-0.43941, 33}, {-0.91955, 36}, {-0.82722, 
      39}, {0.16013, 74}, {0.12311, 67}, {0.43395, 57}, {0.91098, 32}, {
     0.02205, 53}, {0.11155, 22}, {
     0.5827, 81}, {-0.77226, 64}, {-0.02632, 28}, {-0.95435, 29}, {
     0.73001, 63}, {-0.71427, 22}, {-0.18611, 55}, {-0.53852, 51}, {-0.91592, 
      62}, {0.87811, 66}, {-0.32703, 37}, {0.10473, 33}, {
     0.65191, 69}, {-0.99834, 75}, {-0.99948, 70}, {-0.00841, 41}, {-0.27446, 
      36}, {-0.66159, 15}, {0.87861, 62}, {0.10179, 97}, {
     0.01399, 46}, {-0.42762, 42}, {
     0.76315, 15}, {-0.3201, 84}, {-0.8535, 46}, {-0.43491, 43}, {
     0.48749, 49}, {-0.07239, 50}, {-0.86801, 35}, {-0.0092, 15}, {
     0.14256, 73}, {-0.33759, 37}, {-0.29096, 34}, {0.12824, 31}, {
     0.95763, 118}, {
     0.03306, 88}, {-0.93138, 22}, {-0.29852, 64}, {-0.55374, 12}, {
     0.4308, 61}, {0.65987, 29}, {-0.82986, 25}, {-0.58172, 49}, {
     0.79178, 45}, {-0.21394, 15}, {0.71348, 25}, {-0.62106, 19}, {
     0.55379, 32}, {-0.88218, 73}, {0.2305, 57}, {-0.94489, 49}, {
     0.84575, 28}, {0.64414, 87}, {-0.39728, 58}, {
     0.51612, 83}, {-0.85852, 74}, {-0.58593, 10}, {
     0.23492, 46}, {-0.94122, 14}, {-0.03749, 35}, {-0.34023, 82}, {
     0.80494, 28}, {
     0.30935, 33}, {-0.61989, 48}, {-0.74209, 41}, {-0.50326, 80}, {-0.40444, 
      27}, {-0.07066, 52}, {0.37218, 34}, {-0.10951, 48}, {
     0.22668, 16}, {-0.79167, 29}, {
     0.89507, 28}, {-0.59524, 79}, {-0.27232, 82}, {-0.59066, 41}, {-0.91619, 
      34}, {-0.38026, 45}, {0.39399, 29}, {0.2828, 44}, {
     0.21135, 59}, {-0.95504, 74}, {-0.02304, 42}, {-0.138, 48}, {-0.85671, 
      101}, {0.65802, 65}, {0.64911, 43}, {-0.07645, 20}, {-0.23317, 52}, {
     0.38164, 21}, {0.67847, 67}, {0.15736, 47}, {0.47143, 51}, {
     0.37862, 46}, {-0.85893, 65}, {-0.96913, 48}, {-0.04841, 65}, {-0.31347, 
      80}, {0.51698, 21}, {0.11294, 32}, {-0.89006, 67}, {-0.47219, 87}, {
     0.55495, 23}, {-0.7142, 28}, {-0.35431, 33}, {-0.70912, 71}, {
     0.20762, 60}, {0.977, 7}, {0.38002, 93}, {-0.84341, 69}, {
     0.17314, 59}, {-0.28681, 78}, {0.6827, 82}, {
     0.91394, 23}, {-0.71203, 62}, {-0.80453, 40}, {0.01196, 42}, {
     0.44202, 66}, {0.93764, 73}, {-0.05472, 35}, {
     0.65487, 22}, {-0.32964, 39}, {-0.81758, 37}, {-0.93502, 75}, {-0.38824, 
      59}, {0.26635, 81}, {-0.92198, 92}, {0.28836, 60}, {0.49431, 36}, {
     0.69411, 56}, {0.69317, 62}, {0.03119, 48}, {0.57429, 71}, {
     0.2786, 43}, {0.16826, 48}, {-0.08922, 58}, {0.06817, 89}, {
     0.27077, 41}, {-0.81711, 58}, {0.69514, 20}, {0.30065, 78}, {
     0.67231, 42}, {0.65598, 77}, {0.56392, 80}, {0.49191, 68}, {
     0.01053, 69}, {0.68825, 69}, {-0.57383, 32}, {0.28453, 87}, {
     0.01355, 55}, {0.56362, 26}, {-0.58833, 57}, {
     0.14193, 24}, {-0.09121, 53}, {-0.94967, 107}, {
     0.93414, 84}, {-0.49291, 37}, {0.12109, 21}, {0.29181, 72}, {
     0.16994, 53}, {0.49276, 46}, {0.33836, 26}, {
     0.59013, 16}, {-0.45719, 40}, {0.54501, 67}, {0.91475, 65}, {
     0.3895, 20}, {-0.27233, 34}, {
     0.92771, 29}, {-0.90588, 39}, {-0.26148, 100}, {0.295, 29}, {
     0.38971, 33}, {0.76668, 38}, {-0.33003, 34}, {-0.77428, 58}, {
     0.2329, 48}, {-0.53476, 36}, {-0.0115, 100}, {-0.86163, 94}, {
     0.58118, 31}, {0.11428, 40}, {0.21739, 46}, {0.31381, 19}, {
     0.20591, 48}, {
     0.13436, 54}, {-0.91535, 55}, {-0.29574, 73}, {-0.06166, 58}, {
     0.6611, 12}, {-0.84387, 33}, {
     0.09965, 75}, {-0.31358, 43}, {-0.60379, 29}, {0.82095, 32}, {
     0.13866, 68}, {-0.5035, 40}, {-0.80081, 85}, {-0.70547, 73}, {-0.98314, 
      23}, {-0.2504, 96}, {0.78062, 40}, {-0.40983, 64}, {0.22826, 41}, {
     0.9023, 65}, {-0.35456, 103}, {-0.40557, 57}, {-0.80194, 64}, {
     0.42546, 87}, {-0.93963, 34}, {0.24982, 34}, {0.40457, 42}, {
     0.73245, 10}, {-0.57814, 28}, {0.24702, 22}, {0.97813, 80}, {
     0.11059, 74}, {-0.7721, 56}, {-0.58396, 21}, {-0.94328, 35}, {-0.59598, 
      33}, {-0.58596, 16}, {0.54073, 35}, {-0.36821, 41}, {0.94612, 42}, {
     0.94318, 46}, {-0.44331, 22}, {
     0.63517, 23}, {-0.64534, 45}, {-0.22808, 45}, {0.109, 36}, {
     0.76877, 12}, {0.04057, 75}, {-0.30969, 40}, {-0.79983, 60}, {
     0.47725, 5}, {-0.51184, 18}, {0.9144, 64}, {-0.52998, 33}, {
     0.03892, 36}, {-0.10483, 19}, {0.45125, 61}, {-0.67569, 25}, {
     0.31314, 16}, {0.00844, 9}, {0.22246, 25}, {0.71731, 108}, {
     0.62948, 45}, {-0.0845, 23}, {0.30455, 94}, {
     0.67335, 23}, {-0.82543, 79}, {-0.85583, 28}, {
     0.81275, 49}, {-0.48073, 14}, {-0.40746, 44}, {
     0.51612, 47}, {-0.64268, 43}, {-0.7832, 55}, {-0.12409, 92}, {
     0.49202, 15}, {0.84327, 47}, {-0.85575, 34}, {
     0.60007, 23}, {-0.1659, 67}, {-0.78802, 14}, {0.12841, 110}, {
     0.05398, 66}, {-0.58882, 28}, {0.12119, 66}, {
     0.66415, 60}, {-0.85433, 15}, {0.31935, 56}, {
     0.77661, 47}, {-0.28196, 66}, {-0.5391, 58}, {0.45593, 63}, {
     0.28834, 64}, {-0.86369, 24}, {0.11509, 74}, {
     0.51191, 61}, {-0.2336, 78}, {-0.17079, 16}, {-0.51944, 48}, {-0.39775, 
      78}, {-0.39422, 113}, {0.12047, 71}, {0.3838, 28}, {-0.84833, 16}, {
     0.2596, 25}, {0.39606, 61}, {0.88659, 19}, {
     0.23631, 46}, {-0.93027, 34}, {-0.72884, 63}, {-0.99687, 50}, {-0.96502, 
      78}, {-0.88344, 63}, {0.72636, 80}, {0.7666, 34}, {-0.63465, 34}, {
     0.51768, 21}, {0.8252, 44}, {-0.99974, 26}, {-0.57921, 47}, {
     0.34549, 31}, {0.86099, 23}, {
     0.2649, 76}, {-0.085, 29}, {-0.77216, 76}, {
     0.28321, 16}, {-0.22089, 75}, {
     0.33124, 97}, {-0.3911, 32}, {-0.08774, 83}, {-0.69848, 75}, {
     0.81425, 17}, {-0.91864, 32}, {-0.43094, 42}, {
     0.23647, 87}, {-0.01817, 77}, {-0.87488, 37}, {0.90046, 80}, {
     0.55082, 36}, {0.03012, 42}, {
     0.50246, 47}, {-0.65414, 55}, {-0.31838, 104}, {
     0.15954, 45}, {-0.18729, 60}, {0.55915, 123}, {0.10266, 28}, {
     0.786, 41}, {-0.24457, 86}, {-0.11882, 50}, {-0.00821, 60}, {
     0.79048, 96}, {0.51704, 65}, {-0.40272, 64}, {
     0.60115, 27}, {-0.72325, 44}, {0.49718, 60}, {-0.86713, 71}, {
     0.26505, 59}, {-0.43818, 47}, {-0.31576, 38}, {0.61174, 83}, {
     0.32728, 21}, {-0.27344, 69}, {
     0.29355, 37}, {-0.72849, 33}, {-0.60586, 54}, {0.74976, 53}, {
     0.05153, 50}, {0.83878, 110}, {-0.10278, 71}, {
     0.18742, 57}, {-0.72869, 67}, {
     0.16667, 90}, {-0.40925, 88}, {-0.88647, 46}, {-0.39819, 97}, {
     0.86238, 7}, {0.60407, 93}, {
     0.45501, 26}, {-0.86175, 117}, {-0.16368, 30}, {
     0.97312, 38}, {-0.99984, 49}, {
     0.05674, 59}, {-0.73121, 64}, {-0.25871, 55}, {-0.41973, 35}, {-0.42567, 
      82}, {-0.89128, 50}, {-0.48798, 40}, {0.30721, 60}, {-0.82551, 87}, {
     0.07177, 26}, {-0.11257, 41}, {-0.30196, 48}, {
     0.2804, 45}, {-0.45951, 42}, {0.47333, 85}, {0.19872, 92}, {
     0.3984, 17}, {0.38744, 44}, {0.75603, 16}, {0.03907, 23}, {
     0.98476, 95}, {-0.87861, 45}, {-0.34051, 27}, {-0.79148, 64}, {
     0.06991, 13}, {-0.18314, 63}, {-0.26627, 76}, {
     0.86088, 63}, {-0.92541, 97}, {0.35639, 79}, {-0.1506, 46}, {
     0.80517, 98}, {0.78166, 45}, {-0.06023, 62}, {0.01119, 36}, {
     0.22536, 7}, {0.94969, 44}, {
     0.38901, 72}, {-0.22781, 57}, {-0.50165, 45}, {0.24707, 53}, {
     0.62788, 114}, {-0.3518, 75}, {0.83351, 64}, {
     0.29914, 20}, {-0.71449, 45}, {0.85013, 56}, {
     0.59604, 31}, {-0.20947, 32}, {0.023, 73}, {0.26798, 47}, {
     0.01062, 34}, {-0.503, 32}, {-0.11853, 74}, {-0.95959, 48}, {-0.27686, 
      81}, {0.38957, 27}, {-0.40869, 46}, {0.59944, 22}, {
     0.86391, 48}, {-0.15477, 36}, {0.82041, 70}, {0.36939, 33}, {
     0.864, 62}, {0.33605, 31}, {0.32639, 72}, {0.14096, 28}, {0.79357, 69}, {
     0.77211, 44}, {-0.40368, 82}, {-0.09105, 41}, {-0.36235, 52}, {-0.47106, 
      52}, {-0.33964, 72}, {-0.49911, 58}, {
     0.41758, 74}, {-0.47375, 89}, {-0.69041, 50}, {-0.07274, 44}, {
     0.90144, 24}, {0.78739, 58}, {0.0362, 33}, {0.25071, 89}, {
     0.75377, 31}, {-0.38159, 55}, {
     0.19594, 118}, {-0.10791, 54}, {-0.40819, 11}, {-0.84866, 20}, {-0.42676,
       86}, {-0.10729, 80}, {0.95586, 47}, {0.49705, 82}, {0.22759, 27}, {
     0.6322, 48}, {-0.29582, 40}, {
     0.05706, 39}, {-0.13057, 116}, {-0.66935, 54}, {-0.3221, 24}, {-0.31807, 
      57}, {-0.97554, 29}, {-0.91796, 37}, {-0.64129, 22}, {-0.56582, 56}, {
     0.24739, 90}, {0.36885, 102}, {
     0.33963, 38}, {-0.49717, 82}, {-0.60944, 24}, {-0.58296, 42}, {
     0.22437, 54}, {-0.14296, 30}, {-0.47357, 37}, {
     0.06181, 11}, {-0.5183, 23}, {-0.25148, 46}, {-0.4071, 27}, {
     0.88473, 68}, {-0.58097, 18}, {-0.79279, 87}, {0.25768, 17}, {
     0.32439, 14}, {0.78919, 98}, {
     0.67799, 32}, {-0.34805, 52}, {-0.11282, 70}, {0.31569, 47}, {
     0.25384, 49}, {0.38461, 49}, {-0.41527, 80}, {0.26285, 21}, {
     0.52151, 32}, {-0.30761, 79}, {0.29824, 88}, {
     0.79153, 18}, {-0.49034, 27}, {0.27559, 57}, {0.662, 89}, {
     0.98035, 38}, {0.87596, 23}, {0.50191, 51}, {
     0.28398, 153}, {-0.08265, 79}, {-0.39104, 28}, {-0.8225, 54}, {-0.1607, 
      87}, {-0.63489, 78}, {0.10689, 59}, {0.66258, 32}, {0.94592, 51}, {
     0.59783, 13}, {0.8842, 70}, {-0.83573, 62}, {-0.39362, 71}, {
     0.93538, 63}, {
     0.18141, 62}, {-0.39637, 63}, {-0.75638, 27}, {-0.67501, 23}, {-0.30619, 
      24}, {0.8471, 60}, {0.73736, 59}, {0.18034, 44}, {-0.55248, 64}, {
     0.77484, 12}, {0.41807, 73}, {-0.07659, 37}, {
     0.62791, 66}, {-0.92692, 26}, {0.46648, 29}, {0.65694, 69}, {
     0.55448, 22}, {0.47183, 79}, {-0.37186, 91}, {0.02309, 62}, {
     0.48352, 40}, {-0.35828, 69}, {
     0.84574, 74}, {-0.89708, 25}, {-0.46469, 38}, {-0.93435, 38}, {-0.49332, 
      67}, {0.76505, 46}, {0.78704, 64}, {0.54498, 20}, {-0.35242, 26}, {
     0.56243, 77}, {-0.80368, 57}, {-0.67262, 61}, {
     0.12966, 19}, {-0.79987, 75}, {-0.99174, 67}, {0.36215, 49}, {
     0.71722, 51}, {0.62466, 16}, {-0.4069, 47}, {-0.40156, 63}, {
     0.55301, 20}, {-0.40158, 30}, {0.71413, 26}, {0.60686, 12}, {
     0.51159, 70}, {-0.01077, 33}, {
     0.63582, 112}, {-0.04764, 110}, {-0.73282, 103}, {-0.78414, 
      21}, {-0.81472, 23}, {-0.93018, 72}, {0.81442, 92}, {
     0.94663, 51}, {-0.95613, 58}, {0.71602, 50}, {
     0.68832, 81}, {-0.17324, 60}, {0.75161, 55}, {
     0.69768, 28}, {-0.85271, 47}, {-0.86262, 37}, {-0.18185, 70}, {
     0.66333, 57}, {-0.17644, 88}, {0.26575, 79}, {
     0.36733, 14}, {-0.71434, 96}, {0.98634, 81}, {-0.07601, 94}, {
     0.56334, 83}, {-0.07878, 30}, {-0.53546, 22}, {-0.32341, 54}, {-0.84169, 
      18}, {-0.81309, 68}, {-0.51445, 33}, {0.28877, 20}, {0.42743, 28}, {
     0.28769, 21}, {-0.92388, 23}, {0.63102, 108}, {0.81837, 27}, {
     0.02026, 73}, {-0.06245, 18}, {
     0.6343, 24}, {-0.81482, 17}, {-0.5386, 62}, {
     0.28786, 47}, {-0.75491, 52}, {0.4527, 15}, {0.09977, 30}, {
     0.4394, 43}, {-0.18294, 30}, {-0.41759, 29}, {0.83393, 63}, {
     0.51416, 46}, {-0.69756, 49}, {-0.32599, 26}, {
     0.39906, 53}, {-0.4352, 32}, {
     0.16934, 31}, {-0.15287, 73}, {-0.38204, 22}, {
     0.92614, 17}, {-0.1821, 37}, {0.59571, 20}, {0.04286, 65}, {
     0.33792, 53}, {-0.17154, 73}, {-0.05397, 15}, {-0.8049, 66}, {
     0.64087, 100}, {-0.98632, 42}, {-0.01841, 10}, {0.78875, 61}, {
     0.16115, 68}, {0.46928, 44}, {0.67984, 81}, {-0.30064, 45}, {
     0.62335, 47}, {0.19307, 36}, {-0.00714, 22}, {
     0.34608, 29}, {-0.90032, 104}, {0.22502, 62}, {
     0.31711, 48}, {-0.05716, 75}, {0.83197, 39}, {-0.01804, 19}, {
     0.18407, 41}, {-0.58408, 41}, {-0.44995, 45}, {-0.84353, 23}, {-0.80858, 
      78}, {-0.13962, 70}, {0.61584, 18}, {
     0.03711, 47}, {-0.46425, 43}, {-0.21752, 36}, {
     0.378, 58}, {-0.81495, 42}, {-0.9569, 51}, {
     0.11036, 100}, {-0.34708, 42}, {-0.39759, 42}, {
     0.28853, 97}, {-0.93904, 30}, {
     0.51823, 48}, {-0.61902, 50}, {-0.31491, 82}, {
     0.90421, 71}, {-0.98878, 9}, {0.93855, 58}, {
     0.75673, 31}, {-0.16394, 79}, {-0.19972, 62}, {
     0.20859, 38}, {-0.66231, 24}, {-0.65022, 63}, {-0.05967, 45}, {
     0.70961, 21}, {-0.34022, 51}, {-0.77391, 26}, {
     0.57028, 45}, {-0.40241, 68}, {0.95416, 49}, {0.83385, 33}, {
     0.81436, 111}, {0.14754, 98}, {
     0.1336, 85}, {-0.86999, 14}, {-0.17751, 59}, {-0.46714, 71}, {-0.06285, 
      59}, {-0.61126, 13}, {0.88311, 121}, {-0.08493, 23}, {0.31372, 29}, {
     0.01815, 42}, {0.1932, 43}, {0.28521, 22}, {-0.01208, 19}, {
     0.58612, 10}, {-0.86883, 73}, {-0.80083, 73}, {0.28163, 63}, {
     0.16619, 64}, {-0.02248, 39}, {0.32054, 78}, {
     0.87293, 32}, {-0.16688, 52}, {0.06193, 54}, {-0.53232, 51}, {
     0.79862, 45}, {0.31551, 32}, {0.79871, 15}, {0.71582, 78}, {
     0.234, 48}, {-0.84103, 108}, {0.48147, 36}, {
     0.61039, 52}, {-0.23144, 21}, {0.52522, 46}, {-0.31768, 53}, {
     0.25487, 53}, {0.27619, 73}, {-0.472, 27}, {
     0.94737, 40}, {-0.71245, 64}, {0.42111, 72}, {
     0.28333, 82}, {-0.15994, 39}, {-0.02451, 50}, {
     0.07803, 27}, {-0.90667, 62}, {-0.27109, 76}, {0.5979, 52}, {
     0.84392, 84}, {-0.77158, 48}, {-0.7775, 95}, {
     0.58634, 46}, {-0.57764, 56}, {-0.20611, 90}, {-0.27822, 42}, {
     0.30635, 34}, {-0.89848, 97}, {
     0.57869, 40}, {-0.57558, 62}, {-0.67633, 90}, {0.17345, 28}, {
     0.69114, 26}, {0.64082, 75}, {-0.90439, 97}, {-0.21931, 27}, {
     0.29721, 15}, {0.88701, 72}, {
     0.45698, 101}, {-0.4413, 24}, {-0.71035, 42}, {0.30865, 28}, {
     0.36997, 61}, {0.04136, 54}, {0.4674, 32}, {-0.26929, 36}, {
     0.0861, 64}, {0.67326, 73}, {
     0.04265, 48}, {-0.83936, 58}, {-0.68472, 63}, {-0.39144, 33}, {
     0.84563, 33}, {-0.12259, 78}, {-0.77914, 16}, {-0.47043, 40}, {
     0.66381, 58}, {0.63726, 25}, {-0.31266, 56}, {
     0.22981, 19}, {-0.29664, 35}, {-0.09319, 78}, {-0.84281, 59}, {-0.24986, 
      13}, {0.69031, 18}, {0.4418, 57}, {0.45594, 29}, {
     0.79764, 36}, {-0.9264, 100}, {0.86395, 77}, {
     0.89689, 70}, {-0.3919, 95}, {-0.27722, 16}, {-0.20248, 103}, {
     0.16328, 92}, {
     0.78551, 46}, {-0.48869, 45}, {-0.50636, 28}, {-0.23803, 21}, {
     0.43538, 44}, {-0.67293, 30}, {-0.06149, 66}, {-0.02505, 61}, {
     0.38004, 42}, {0.49149, 101}, {
     0.7162, 66}, {-0.17868, 33}, {-0.26863, 28}, {-0.95867, 49}, {
     0.19404, 31}, {0.90238, 29}, {0.79441, 72}, {
     0.83324, 26}, {-0.20295, 36}, {-0.21637, 38}, {
     0.63738, 52}, {-0.56621, 46}, {0.95229, 43}, {-0.28135, 45}, {
     0.3819, 43}, {-0.76718, 65}, {0.41247, 36}, {0.70496, 28}, {
     0.90708, 68}, {0.54513, 24}, {-0.37966, 5}, {
     0.94772, 74}, {-0.94928, 80}, {0.84108, 76}, {
     0.00089, 91}, {-0.18002, 20}, {-0.17123, 38}, {
     0.829, 41}, {-0.75748, 52}, {0.08555, 35}, {-0.30242, 81}, {
     0.28245, 42}, {0.24991, 33}, {-0.91001, 62}, {-0.84753, 64}, {
     0.72303, 39}, {0.99766, 70}, {-0.02838, 75}, {-0.28258, 33}, {
     0.0186, 84}, {-0.8895, 10}, {-0.5003, 43}, {-0.40582, 16}, {
     0.71548, 31}, {-0.58664, 52}, {0.83847, 17}, {0.72497, 52}, {
     0.57351, 47}, {-0.65499, 26}, {-0.08745, 77}, {-0.68774, 28}, {
     0.55762, 30}, {-0.11069, 32}, {-0.94322, 67}, {
     0.4484, 42}, {-0.878, 32}, {0.20796, 86}, {
     0.61264, 43}, {-0.58381, 31}, {-0.70621, 27}, {-0.49603, 64}, {-0.40218, 
      82}, {0.74158, 19}, {-0.81712, 66}, {-0.70832, 52}, {
     0.4583, 28}, {-0.51114, 24}, {-0.84943, 26}, {0.40604, 47}, {
     0.41037, 48}, {-0.98178, 44}, {
     0.02932, 29}, {-0.36983, 91}, {-0.00328, 61}, {0.02097, 33}, {
     0.41495, 62}, {-0.35478, 26}, {
     0.37313, 37}, {-0.18326, 31}, {-0.96069, 48}, {0.63538, 71}, {
     0.68722, 102}, {-0.30152, 24}, {0.88333, 115}, {-0.10964, 41}, {
     0.47663, 49}, {
     0.5933, 35}, {-0.79941, 85}, {-0.01221, 65}, {-0.60008, 36}, {
     0.42729, 84}, {-0.06633, 31}, {-0.20758, 60}, {0.46376, 23}, {
     0.51275, 31}, {-0.27259, 54}, {-0.92418, 25}, {
     0.79028, 25}, {-0.88568, 76}, {-0.11835, 16}, {
     0.34079, 47}, {-0.49446, 21}, {-0.06287, 71}, {-0.68534, 20}, {-0.14311, 
      14}, {0.52611, 31}, {-0.83904, 70}, {
     0.04614, 39}, {-0.7553, 32}, {-0.02525, 48}, {0.05307, 26}, {
     0.20379, 27}, {-0.24852, 112}, {-0.16325, 95}, {-0.67945, 89}, {-0.53675,
       110}, {-0.97509, 6}, {-0.09867, 113}, {-0.63277, 71}, {0.82054, 34}, {
     0.10158, 73}, {0.69672, 73}, {0.82185, 40}, {
     0.00966, 47}, {-0.92694, 14}, {-0.59818, 53}, {0.5223, 44}, {
     0.49599, 87}, {-0.7991, 41}, {
     0.45323, 45}, {-0.4743, 25}, {-0.12346, 62}, {
     0.9999, 47}, {-0.50126, 112}, {-0.77923, 67}, {-0.58317, 64}, {
     0.05797, 62}, {0.31781, 72}, {0.1436, 40}, {0.06812, 9}, {0.87725, 12}, {
     0.18377, 34}, {-0.48771, 81}, {-0.70728, 18}, {0.67136, 15}, {
     0.11487, 84}, {0.95187, 60}, {-0.72511, 49}, {0.76839, 15}, {
     0.91724, 56}, {0.92114, 47}, {0.79038, 47}, {
     0.63843, 41}, {-0.62007, 42}, {0.2304, 84}, {0.24595, 38}, {
     0.34064, 44}, {0.85481, 80}, {-0.13561, 71}, {0.80368, 83}, {
     0.1574, 68}, {-0.15965, 40}, {-0.54627, 31}, {-0.09252, 72}, {
     0.81328, 73}, {-0.8445, 111}, {0.12146, 59}, {
     0.60483, 15}, {-0.41176, 13}, {0.52015, 71}, {0.72983, 52}, {
     0.76607, 27}, {
     0.3667, 54}, {-0.42336, 49}, {-0.37774, 75}, {-0.2494, 44}, {-0.84001, 
      56}, {-0.13953, 76}, {-0.73026, 43}, {0.55473, 46}, {
     0.25131, 67}, {-0.98781, 58}, {0.8106, 60}, {0.88698, 44}, {
     0.81376, 68}, {0.28147, 78}, {-0.28923, 108}, {-0.61716, 58}, {
     0.90243, 45}, {-0.4944, 57}, {0.15089, 29}, {
     0.60795, 68}, {-0.38291, 48}, {-0.30869, 34}, {-0.82645, 58}, {
     0.29301, 32}, {0.96995, 24}, {0.45817, 76}, {0.91428, 38}, {
     0.18311, 44}, {0.42329, 57}, {0.592, 133}, {0.61231, 27}, {
     0.03225, 105}, {-0.53759, 56}, {0.78954, 80}, {
     0.61838, 52}, {-0.821, 45}, {-0.72679, 75}, {
     0.05255, 49}, {-0.64633, 51}, {0.07899, 59}, {0.33039, 81}, {
     0.60203, 32}, {-0.36621, 50}, {0.23495, 39}, {
     0.49739, 45}, {-0.76945, 73}, {0.79889, 65}, {
     0.28131, 43}, {-0.88124, 34}, {-0.8891, 25}, {-0.73205, 36}, {-0.53241, 
      48}, {-0.54407, 101}, {-0.90629, 53}, {-0.11992, 91}, {
     0.62145, 21}, {-0.57214, 44}, {-0.68919, 66}, {-0.44628, 46}, {
     0.57289, 17}, {0.0809, 87}, {0.26598, 97}, {-0.017, 17}, {0.13011, 48}, {
     0.202, 28}, {-0.84217, 19}, {-0.19879, 39}, {-0.82271, 62}, {
     0.09179, 59}, {-0.86746, 40}, {-0.47957, 72}, {
     0.02718, 54}, {-0.51737, 34}, {-0.58383, 86}, {-0.27935, 60}, {-0.66697, 
      50}, {0.56063, 30}, {-0.75374, 90}, {0.32809, 95}, {
     0.84034, 65}, {-0.75961, 17}, {0.15561, 87}, {0.41429, 67}, {
     0.1743, 43}, {-0.97643, 40}, {-0.5341, 73}, {-0.59532, 35}, {
     0.1178, 85}, {0.19056, 62}, {-0.65666, 18}, {-0.37568, 15}, {
     0.57613, 14}, {0.49414, 56}, {-0.27904, 47}, {
     0.59717, 52}, {-0.48378, 47}, {0.80638, 62}, {0.13883, 81}, {
     0.82332, 37}, {-0.66091, 76}, {-0.76422, 53}, {
     0.66062, 9}, {-0.84874, 44}, {-0.1324, 80}, {-0.3694, 40}, {
     0.05454, 46}, {0.03061, 9}, {0.95708, 42}, {
     0.15984, 28}, {-0.0954, 28}, {-0.44084, 37}, {0.6101, 59}, {
     0.53417, 24}, {-0.84829, 72}, {-0.7045, 76}, {-0.93824, 89}, {
     0.2491, 136}, {
     0.15272, 60}, {-0.19669, 108}, {-0.98704, 88}, {-0.34254, 45}, {
     0.90336, 50}, {0.30388, 43}, {-0.17572, 101}, {0.32062, 26}, {
     0.24354, 48}, {0.87997, 32}, {0.48186, 71}, {
     0.29977, 37}, {-0.48046, 41}, {-0.38141, 58}, {
     0.37163, 69}, {-0.79784, 16}, {-0.10382, 32}, {0.92896, 72}, {
     0.13534, 20}, {
     0.36216, 88}, {-0.74886, 81}, {-0.9489, 33}, {-0.81036, 89}, {
     0.93784, 43}, {-0.86741, 54}, {-0.96913, 88}, {-0.31494, 36}, {-0.8018, 
      14}, {-0.53236, 91}, {0.74866, 40}, {-0.90127, 27}, {
     0.99468, 22}, {-0.27945, 88}, {-0.22058, 78}, {-0.52608, 95}, {
     0.26724, 47}, {0.08284, 66}, {-0.60065, 49}, {0.27686, 78}, {
     0.63187, 51}, {-0.67194, 61}, {-0.7072, 60}, {0.31061, 93}, {
     0.72266, 51}, {0.45608, 81}, {
     0.72239, 41}, {-0.38553, 34}, {-0.94323, 87}, {-0.21331, 56}, {
     0.25192, 47}, {0.38121, 68}, {-0.08834, 84}, {
     0.07283, 41}, {-0.29851, 59}, {
     0.29491, 109}, {-0.33451, 71}, {-0.95342, 45}, {
     0.2719, 96}, {-0.01718, 37}, {0.4415, 39}, {0.69379, 27}, {
     0.42465, 16}, {-0.63251, 37}, {-0.49397, 56}, {
     0.90356, 73}, {-0.37582, 15}, {0.28424, 16}, {
     0.96131, 80}, {-0.33852, 63}, {-0.06423, 67}, {
     0.86616, 88}, {-0.5408, 74}, {-0.24625, 68}, {0.91048, 26}, {
     0.08054, 39}, {-0.5961, 71}, {
     0.85816, 47}, {-0.6758, 64}, {-0.58127, 34}, {
     0.91595, 63}, {-0.82444, 32}, {-0.26942, 68}, {-0.37838, 28}, {
     0.04566, 24}, {-0.43107, 52}, {-0.58369, 20}, {
     0.95921, 125}, {-0.60409, 33}, {
     0.19494, 46}, {-0.02588, 30}, {-0.02963, 49}, {-0.80337, 55}, {
     0.41474, 76}, {0.95188, 32}, {0.84219, 54}, {0.2931, 28}, {
     0.59194, 30}, {0.65446, 92}, {-0.56865, 73}, {
     0.62751, 102}, {-0.14607, 64}, {0.03506, 69}, {0.27849, 85}, {
     0.75017, 25}, {-0.2933, 22}, {
     0.0839, 54}, {-0.74738, 56}, {-0.53209, 51}, {-0.23099, 41}, {
     0.15372, 41}, {-0.44569, 78}, {0.64149, 59}, {0.34297, 25}, {
     0.06307, 33}, {0.0786, 26}, {
     0.68833, 78}, {-0.56578, 53}, {-0.45168, 37}, {0.9602, 78}, {
     0.12678, 70}, {-0.76878, 45}, {0.76822, 27}, {
     0.27223, 34}, {-0.26473, 21}, {-0.72266, 29}, {
     0.77886, 97}, {-0.3022, 24}, {-0.40927, 25}, {-0.36926, 46}, {-0.32995, 
      44}, {-0.7259, 44}, {-0.6916, 36}, {-0.98858, 57}, {-0.04486, 
      67}, {-0.754, 52}, {-0.53574, 34}, {-0.925, 82}, {-0.78393, 
      15}, {-0.88084, 20}, {0.21496, 26}, {0.49156, 38}, {
     0.79924, 62}, {-0.66759, 36}, {-0.12007, 10}, {-0.12096, 63}, {-0.62548, 
      20}, {-0.05918, 23}, {0.73453, 37}, {-0.96702, 63}, {-0.37615, 62}, {
     0.77047, 53}, {0.83022, 74}, {-0.64013, 15}, {0.5023, 34}, {
     0.95143, 56}, {-0.94781, 29}, {0.53824, 41}, {
     0.14571, 71}, {-0.52685, 37}, {-0.09555, 45}, {-0.35553, 79}, {-0.92999, 
      62}, {0.17068, 88}, {-0.82401, 86}, {-0.74672, 21}, {-0.21533, 
      41}, {-0.36187, 19}, {0.54202, 90}, {-0.60543, 16}, {-0.07185, 39}, {
     0.43292, 47}, {0.46993, 41}, {
     0.69301, 21}, {-0.32823, 57}, {-0.08563, 39}, {-0.9819, 39}, {-0.56997, 
      35}, {0.54292, 67}, {
     0.90029, 48}, {-0.64545, 69}, {-0.21344, 60}, {-0.35463, 39}, {-0.13339, 
      34}, {-0.85145, 51}, {0.48683, 50}, {0.63205, 52}, {-0.01861, 69}, {
     0.22532, 84}, {
     0.13119, 41}, {-0.57627, 49}, {-0.25358, 61}, {-0.81618, 60}, {
     0.82203, 8}, {0.29013, 8}, {
     0.95929, 16}, {-0.71748, 55}, {-0.86606, 77}, {0.23761, 38}, {
     0.83349, 71}, {-0.42441, 95}, {-0.8297, 80}, {-0.9452, 46}, {
     0.77418, 65}, {0.75584, 50}, {
     0.73224, 40}, {-0.42516, 31}, {-0.78754, 69}, {
     0.43311, 76}, {-0.96841, 22}, {0.4504, 47}, {-0.15839, 95}, {
     0.98939, 77}, {-0.31687, 64}, {
     0.30531, 90}, {-0.13376, 67}, {-0.53845, 89}, {
     0.69093, 91}, {-0.18066, 43}, {0.96847, 83}, {-0.48818, 62}, {
     0.23066, 15}, {-0.46397, 53}, {-0.63772, 13}, {-0.52199, 100}, {-0.59425,
       19}, {0.60126, 41}, {0.45457, 29}, {0.2874, 84}, {0.90504, 52}, {
     0.1296, 69}, {-0.271, 79}, {-0.66257, 29}, {
     0.7132, 37}, {-0.14648, 12}, {-0.05539, 11}, {0.64956, 8}, {
     0.08057, 62}, {-0.85431, 101}, {-0.17861, 41}, {-0.06833, 
      102}, {-0.14586, 46}, {-0.91254, 24}, {-0.9738, 23}, {-0.13597, 
      39}, {-0.96936, 46}, {-0.96915, 7}, {-0.41528, 44}, {-0.35222, 
      88}, {-0.72099, 82}, {
     0.98793, 82}, {-0.03493, 37}, {-0.7556, 25}, {-0.95281, 75}, {
     0.06912, 50}, {0.79655, 61}, {-0.60014, 56}, {
     0.74452, 18}, {-0.69376, 12}, {0.5892, 56}, {
     0.55502, 59}, {-0.7297, 66}, {-0.01248, 27}, {0.88562, 28}, {
     0.02237, 39}, {-0.18243, 55}, {
     0.51526, 23}, {-0.55984, 139}, {-0.49768, 37}, {0.61891, 65}, {
     0.86311, 26}, {-0.84672, 27}, {-0.35419, 51}, {0.56564, 47}, {
     0.84605, 44}, {-0.42025, 52}, {0.91594, 90}, {0.20785, 33}, {
     0.06491, 81}, {0.55297, 80}, {-0.73824, 12}, {0.86168, 83}, {
     0.65072, 52}, {-0.98143, 92}, {-0.54247, 6}, {-0.25089, 49}, {-0.06323, 
      66}, {-0.96443, 63}, {-0.6775, 16}, {
     0.82128, 52}, {-0.71879, 23}, {-0.61006, 18}, {
     0.08359, 46}, {-0.29832, 35}, {0.58994, 12}, {0.50189, 86}, {
     0.25767, 69}, {-0.18268, 27}, {-0.21779, 19}, {-0.2763, 36}, {
     0.70539, 36}, {0.32285, 32}, {
     0.34193, 42}, {-0.288, 13}, {-0.11595, 38}, {
     0.47207, 41}, {-0.05453, 94}, {0.86131, 35}, {-0.56093, 94}, {
     0.87541, 61}, {-0.66888, 39}, {-0.40332, 61}, {
     0.82989, 32}, {-0.44667, 89}, {
     0.69552, 14}, {-0.51158, 56}, {-0.86563, 42}, {0.93681, 54}, {
     0.24179, 66}, {
     0.60103, 46}, {-0.65566, 89}, {-0.33967, 98}, {-0.82998, 16}, {-0.66411, 
      32}, {-0.69208, 80}, {-0.15957, 32}, {-0.30916, 48}, {-0.18479, 38}, {
     0.75362, 46}, {-0.79861, 48}, {-0.7893, 45}, {0.78752, 46}, {
     0.222, 33}, {0.18614, 33}, {
     0.2258, 75}, {-0.71087, 97}, {-0.04597, 26}, {-0.87028, 37}, {
     0.82921, 43}, {0.03797, 48}, {-0.44415, 72}, {-0.64031, 86}, {
     0.51935, 72}, {-0.73598, 37}, {0.84552, 8}, {0.21881, 41}, {
     0.73284, 67}, {0.42222, 24}, {0.85139, 58}, {-0.13057, 74}, {
     0.19644, 15}, {0.39667, 59}, {0.22272, 45}, {-0.95441, 21}, {
     0.17018, 75}, {-0.23752, 18}, {
     0.96589, 77}, {-0.62179, 48}, {-0.4049, 54}, {-0.14694, 64}, {
     0.79222, 48}, {0.04872, 36}, {0.02336, 38}, {0.83208, 112}, {
     0.23676, 26}, {-0.58784, 12}, {
     0.58194, 87}, {-0.33274, 25}, {-0.26492, 15}, {0.54685, 73}, {
     0.55022, 62}, {-0.80245, 21}, {-0.80741, 55}, {0.24261, 48}, {
     0.09104, 50}, {0.93635, 50}, {0.72037, 18}, {-0.55298, 34}, {
     0.84818, 59}, {0.54358, 41}, {-0.09765, 79}, {-0.38671, 26}, {
     0.15271, 72}, {0.32787, 65}, {
     0.94129, 52}, {-0.99986, 26}, {-0.54255, 108}, {-0.02518, 36}, {-0.03674,
       27}, {-0.79485, 24}, {-0.13776, 51}, {0.03506, 96}, {-0.21673, 64}, {
     0.74625, 41}, {0.28772, 6}, {-0.12367, 21}, {
     0.89575, 28}, {-0.14042, 30}, {0.11664, 62}, {-0.56833, 20}, {
     0.95017, 82}, {-0.73871, 57}, {-0.92939, 35}, {-0.36977, 13}, {
     0.82777, 72}, {
     0.66546, 69}, {-0.44127, 105}, {-0.10471, 85}, {-0.89083, 47}, {-0.99865,
       48}, {-0.28271, 75}, {-0.67845, 30}, {-0.26884, 62}, {-0.8648, 31}, {
     0.81983, 23}, {0.96217, 38}, {-0.48705, 73}, {-0.13225, 43}, {
     0.60512, 30}, {0.05809, 36}, {
     0.94483, 87}, {-0.94771, 20}, {-0.55347, 47}, {-0.48715, 87}, {-0.16979, 
      119}, {-0.15263, 62}, {-0.02974, 35}, {0.28757, 78}, {-0.10875, 58}, {
     0.95765, 24}, {-0.8094, 24}, {-0.62046, 41}, {-0.79398, 48}, {
     0.78252, 24}, {-0.65341, 21}, {
     0.30019, 29}, {-0.23822, 29}, {-0.89767, 66}, {-0.34396, 48}, {-0.33073, 
      90}, {-0.7109, 58}, {-0.06629, 32}, {
     0.96216, 44}, {-0.88536, 41}, {-0.38905, 39}, {
     0.73737, 98}, {-0.76534, 42}, {-0.32869, 15}, {-0.77389, 33}, {
     0.17337, 48}, {0.9067, 52}, {-0.49649, 11}, {0.47281, 60}, {
     0.36632, 41}, {
     0.27799, 44}, {-0.34171, 45}, {-0.77517, 64}, {-0.02971, 51}, {
     0.06938, 100}, {-0.80277, 44}, {0.56623, 116}, {0.95411, 75}, {
     0.20466, 30}, {-0.82332, 27}, {
     0.76542, 90}, {-0.65104, 36}, {-0.12607, 27}, {-0.03279, 25}, {
     0.5556, 70}, {-0.1887, 64}, {-0.77457, 45}, {
     0.27271, 19}, {-0.25808, 35}, {-0.05223, 76}, {-0.6074, 60}, {
     0.69674, 77}, {0.96187, 40}, {0.44662, 14}, {0.69391, 81}, {
     0.4022, 76}, {
     0.01487, 38}, {-0.79017, 31}, {-0.68736, 94}, {-0.59185, 37}, {-0.85538, 
      79}, {0.21728, 101}, {0.62669, 26}, {0.26524, 67}, {
     0.36636, 84}, {-0.59146, 96}, {-0.55808, 39}, {0.55453, 49}, {
     0.39594, 43}, {0.36988, 103}, {-0.29281, 85}, {-0.14701, 45}, {
     0.86192, 49}, {0.47591, 50}, {0.45918, 53}, {-0.95827, 40}, {
     0.72871, 27}, {-0.75852, 84}, {0.93581, 41}, {-0.98629, 15}, {
     0.81751, 32}, {0.10904, 129}, {-0.81769, 38}, {
     0.98889, 104}, {-0.75571, 51}, {-0.64587, 58}, {
     0.16704, 28}, {-0.03301, 56}, {
     0.72785, 62}, {-0.22165, 69}, {-0.06906, 29}, {-0.96003, 89}, {
     0.9897, 95}, {0.89675, 64}, {-0.48055, 11}, {
     0.7945, 10}, {-0.89586, 78}, {-0.36091, 58}, {
     0.70233, 34}, {-0.47439, 45}, {0.05352, 33}, {-0.6154, 43}, {
     0.82042, 38}, {0.28208, 51}, {-0.09771, 62}, {
     0.97717, 4}, {-0.20904, 38}, {0.67453, 26}, {
     0.19102, 26}, {-0.99814, 41}, {-0.72168, 51}, {0.14363, 27}, {
     0.05024, 27}, {-0.31413, 92}, {
     0.70206, 68}, {-0.06002, 129}, {-0.99464, 36}, {
     0.7977, 96}, {-0.36061, 41}, {-0.21176, 90}, {
     0.17546, 28}, {-0.75879, 40}, {-0.92943, 68}, {
     0.11017, 35}, {-0.54104, 79}, {-0.75217, 80}, {-0.86594, 23}, {-0.81924, 
      45}, {0.11336, 13}, {0.26262, 33}, {-0.72486, 49}, {-0.93594, 62}, {
     0.16128, 34}, {-0.0501, 20}, {-0.18507, 32}, {0.39474, 38}, {
     0.71213, 60}, {0.60961, 52}, {
     0.58936, 29}, {-0.9347, 8}, {-0.19069, 37}, {-0.99259, 40}, {
     0.15322, 31}, {0.37888, 44}, {0.30063, 55}, {-0.59678, 41}, {
     0.26129, 42}, {-0.82421, 92}, {-0.72385, 42}, {-0.00682, 81}, {
     0.75939, 21}, {-0.25484, 74}, {0.07941, 93}, {0.07588, 44}, {
     0.34438, 43}, {0.29363, 43}, {-0.85156, 81}, {
     0.97227, 16}, {-0.19553, 73}, {0.86631, 24}, {-0.19331, 19}, {
     0.73402, 27}, {0.05263, 60}, {
     0.82231, 23}, {-0.25537, 12}, {-0.86109, 48}, {-0.71119, 86}, {
     0.17296, 56}, {-0.73439, 51}, {
     0.44214, 101}, {-0.92236, 20}, {-0.02323, 57}, {0.94047, 25}, {
     0.98071, 107}, {-0.07064, 55}, {
     0.38459, 78}, {-0.88664, 65}, {-0.29851, 24}, {
     0.11296, 76}, {-0.96313, 55}, {
     0.53852, 26}, {-0.85751, 66}, {-0.7506, 32}, {-0.37131, 87}, {-0.6528, 
      30}, {0.54399, 77}, {0.98546, 47}, {-0.72041, 53}, {0.90372, 28}, {
     0.73487, 35}, {-0.60961, 19}, {-0.48357, 60}, {-0.891, 78}, {-0.92608, 
      40}, {0.92234, 34}, {-0.69465, 34}, {-0.71161, 56}, {-0.4041, 30}, {
     0.33268, 78}, {
     0.73879, 54}, {-0.36628, 18}, {-0.67814, 34}, {-0.1409, 52}, {
     0.22383, 26}, {-0.28232, 54}, {-0.88543, 48}, {-0.78773, 71}, {-0.47712, 
      37}, {-0.64657, 64}, {0.03518, 42}, {0.34229, 68}, {-0.31185, 38}, {
     0.12509, 25}, {0.89825, 117}, {0.96818, 27}, {0.79251, 88}, {
     0.5492, 69}, {-0.39403, 40}, {
     0.89431, 39}, {-0.3273, 85}, {-0.29496, 30}, {-0.22469, 71}, {
     0.04294, 91}, {-0.07799, 44}, {0.8744, 39}, {-0.81639, 69}, {
     0.15073, 98}, {0.04097, 73}, {
     0.43918, 49}, {-0.47515, 55}, {-0.17503, 88}, {0.7496, 24}, {
     0.4475, 131}, {0.61821, 43}, {
     0.05268, 24}, {-0.80076, 44}, {-0.43184, 58}, {0.5669, 61}, {
     0.04717, 26}, {-0.52568, 22}, {
     0.82461, 19}, {-0.66347, 54}, {-0.16648, 86}, {0.34945, 97}, {
     0.11838, 21}, {-0.96828, 22}, {-0.96237, 22}, {
     0.83137, 72}, {-0.67784, 21}, {-0.43566, 35}, {-0.46026, 82}, {-0.41698, 
      45}, {-0.89806, 36}, {-0.07252, 46}, {-0.63885, 43}, {-0.62999, 
      87}, {-0.05868, 34}, {-0.77579, 93}, {0.13458, 74}, {0.19019, 83}, {
     0.51981, 30}, {0.12573, 53}, {0.49778, 91}, {0.96207, 46}, {
     0.00298, 35}, {0.77615, 14}, {-0.90176, 69}, {-0.13313, 36}, {
     0.62587, 30}, {0.5484, 83}, {-0.99881, 80}, {0.37377, 104}, {
     0.19708, 75}, {
     0.21262, 57}, {-0.361, 20}, {-0.08496, 59}, {-0.46619, 63}, {
     0.41963, 54}, {0.82195, 54}, {-0.64874, 10}, {0.84137, 75}, {
     0.10527, 32}, {-0.62807, 49}, {0.09316, 75}, {-0.26384, 34}, {
     0.73634, 58}, {0.20285, 17}, {-0.81626, 42}, {
     0.62265, 64}, {-0.38924, 66}, {-0.61041, 56}, {
     0.63236, 49}, {-0.15032, 47}, {0.83809, 73}, {-0.63675, 19}, {
     0.27986, 75}, {-0.2134, 15}, {0.64652, 13}, {
     0.77243, 43}, {-0.45122, 31}, {0.66073, 44}, {
     0.01942, 69}, {-0.95995, 48}, {-0.86046, 59}, {
     0.28726, 32}, {-0.49455, 62}, {-0.09768, 15}, {
     0.49651, 70}, {-0.71978, 87}, {0.26231, 6}, {-0.34534, 43}, {
     0.30323, 9}, {0.534, 42}, {-0.92385, 72}, {0.03552, 68}, {0.75085, 48}, {
     0.86602, 34}, {
     0.26988, 27}, {-0.90167, 123}, {-0.26138, 98}, {-0.41043, 81}, {-0.33921,
       61}, {0.66439, 23}, {0.63695, 62}, {0.70965, 103}, {-0.25542, 34}, {
     0.93387, 41}, {-0.88411, 17}, {-0.32118, 47}, {-0.40125, 56}, {-0.88377, 
      86}, {0.5857, 47}, {
     0.65607, 128}, {-0.01668, 60}, {-0.10931, 14}, {-0.62619, 49}, {
     0.56431, 13}, {-0.87657, 61}, {-0.54633, 59}, {-0.18867, 36}, {-0.11005, 
      41}, {0.94574, 79}, {-0.76067, 51}, {-0.533, 40}, {-0.7073, 
      85}, {-0.87302, 88}, {-0.77864, 15}, {0.15274, 33}, {-0.85647, 64}, {
     0.68855, 21}, {0.95665, 40}, {-0.38731, 86}, {0.05567, 71}, {
     0.84018, 66}, {-0.52946, 46}, {0.22142, 28}, {0.51982, 50}, {
     0.62284, 50}, {-0.96833, 45}, {0.00616, 45}, {0.1476, 85}, {
     0.44167, 41}, {0.21144, 64}, {0.18927, 28}, {0.4542, 51}, {
     0.48905, 56}, {-0.15448, 71}, {0.77236, 59}, {
     0.00628, 30}, {-0.90657, 81}, {0.54126, 18}, {0.01672, 78}, {
     0.59713, 31}, {0.41092, 78}, {-0.76227, 52}, {0.62256, 10}, {
     0.24101, 54}, {0.29736, 36}, {-0.83442, 16}, {
     0.70951, 89}, {-0.70743, 41}, {0.85124, 29}, {0.3974, 26}, {
     0.59374, 47}, {0.84769, 11}, {-0.2678, 68}, {0.29007, 60}, {
     0.31075, 101}, {0.21805, 83}, {0.56406, 46}, {0.55818, 95}, {
     0.98196, 59}, {-0.50381, 18}, {-0.52262, 53}, {0.65044, 22}, {
     0.79377, 19}, {0.77382, 54}, {-0.76636, 26}, {-0.50103, 71}, {
     0.95979, 96}, {0.79849, 33}, {0.71695, 38}, {-0.65397, 51}, {
     0.03239, 42}, {
     0.29629, 15}, {-0.40309, 53}, {-0.37868, 53}, {-0.46321, 22}, {-0.51149, 
      49}, {-0.69554, 82}, {0.83001, 30}, {-0.54445, 17}, {
     0.64723, 19}, {-0.65572, 34}, {-0.09268, 49}, {-0.39381, 54}, {
     0.23803, 33}, {0.09995, 88}, {0.06457, 55}, {-0.76152, 77}, {
     0.63899, 63}, {0.1948, 34}, {0.76227, 49}, {0.65108, 72}, {
     0.91019, 72}, {-0.09028, 45}, {0.42503, 17}, {-0.09185, 80}, {
     0.28599, 28}, {0.02644, 59}, {-0.77848, 91}, {-0.64616, 81}, {
     0.56795, 66}, {0.14554, 76}, {-0.11856, 27}, {-0.26286, 21}, {
     0.97902, 26}, {0.0181, 52}, {0.75297, 70}, {-0.74569, 59}, {
     0.76416, 13}, {-0.83339, 62}, {
     0.63635, 16}, {-0.42594, 92}, {-0.43691, 50}, {-0.32308, 52}, {
     0.31782, 119}, {
     0.64577, 33}, {-0.4872, 82}, {-0.93742, 59}, {-0.90498, 16}, {-0.84795, 
      25}, {-0.69785, 61}, {-0.51601, 137}, {
     0.41443, 44}, {-0.63115, 85}, {-0.75405, 25}, {0.42398, 88}, {
     0.71102, 76}, {0.45645, 51}, {
     0.27833, 29}, {-0.10955, 33}, {-0.13387, 27}, {-0.50096, 19}, {-0.49861, 
      33}, {-0.41486, 47}, {0.32203, 23}, {-0.29793, 83}, {
     0.28324, 16}, {-0.9033, 25}, {-0.51268, 31}, {0.5994, 15}, {
     0.73211, 29}, {-0.80293, 69}, {-0.23201, 71}, {
     0.63319, 75}, {-0.1084, 55}, {
     0.24534, 31}, {-0.46909, 78}, {-0.94492, 61}, {0.32886, 31}, {
     0.04896, 41}, {
     0.65919, 60}, {-0.56356, 20}, {-0.08153, 43}, {-0.88309, 64}, {-0.75805, 
      61}, {-0.73185, 58}, {0.76186, 44}, {0.80973, 13}, {
     0.56161, 125}, {-0.48506, 111}, {-0.41011, 89}, {
     0.5094, 37}, {-0.07319, 35}, {-0.1326, 16}, {0.86268, 96}, {
     0.25597, 35}, {-0.9448, 10}, {-0.09747, 26}, {0.09923, 33}, {
     0.25129, 86}, {-0.21873, 41}, {0.41264, 110}, {0.26096, 68}, {
     0.39335, 49}, {0.71821, 15}, {0.66836, 71}, {
     0.91915, 21}, {-0.97945, 82}, {-0.09443, 52}, {
     0.23277, 49}, {-0.98756, 4}, {0.80243, 32}, {
     0.05673, 46}, {-0.80899, 95}, {-0.80802, 91}, {-0.61751, 79}, {
     0.21963, 19}, {0.40746, 63}, {-0.34405, 37}, {-0.53981, 48}, {
     0.88176, 78}, {0.64029, 25}, {0.26432, 46}, {0.51931, 42}, {
     0.50186, 30}, {0.8947, 58}, {
     0.66421, 23}, {-0.28828, 26}, {-0.62317, 15}, {
     0.46773, 67}, {-0.10661, 89}, {-0.80624, 30}, {0.89232, 27}, {
     0.87226, 99}, {0.53264, 52}, {-0.29803, 38}, {-0.08745, 46}, {
     0.24174, 14}, {-0.99464, 23}, {-0.35712, 45}, {-0.83493, 84}, {-0.19974, 
      57}, {-0.4452, 58}, {-0.50643, 25}, {-0.21707, 38}, {-0.79446, 65}, {
     0.72788, 33}, {-0.27581, 31}, {
     0.30504, 26}, {-0.63169, 7}, {-0.38374, 42}, {
     0.65435, 18}, {-0.50016, 11}, {-0.56285, 73}, {0.71563, 114}, {
     0.06577, 46}, {0.47219, 35}, {-0.82923, 41}, {-0.58442, 51}, {
     0.67297, 89}, {-0.57688, 6}, {-0.04216, 36}, {
     0.04018, 30}, {-0.41345, 72}, {0.51739, 50}, {-0.68389, 46}, {
     0.28189, 49}, {-0.18652, 73}, {0.0892, 11}, {0.95373, 70}, {
     0.26741, 73}, {-0.06245, 81}, {-0.64847, 13}, {0.56406, 61}, {
     0.88625, 33}, {0.21381, 17}, {
     0.69951, 36}, {-0.57837, 90}, {-0.36817, 84}, {-0.88114, 56}, {
     0.33571, 86}, {-0.99721, 56}, {0.81319, 80}, {
     0.68266, 44}, {-0.738, 10}, {-0.42209, 90}, {-0.8042, 21}, {
     0.64972, 18}, {
     0.25648, 30}, {-0.66331, 75}, {-0.86948, 37}, {-0.73339, 18}, {
     0.08195, 68}, {-0.0452, 54}, {-0.23198, 12}, {-0.83493, 66}, {
     0.82672, 90}, {-0.5925, 53}, {
     0.15528, 73}, {-0.32167, 78}, {-0.7815, 35}, {0.9618, 26}, {
     0.89291, 36}, {-0.07177, 78}, {0.81985, 51}, {0.67067, 42}, {
     0.02187, 88}, {-0.48172, 46}, {0.8922, 17}, {0.40198, 15}, {
     0.23312, 22}, {-0.2003, 70}, {
     0.57897, 76}, {-0.16383, 45}, {-0.9058, 41}, {
     0.80829, 64}, {-0.66611, 16}, {
     0.11933, 77}, {-0.61427, 73}, {-0.13165, 50}, {-0.14665, 70}, {
     0.31174, 42}, {-0.88519, 33}, {0.48932, 43}, {-0.49908, 42}, {
     0.01203, 28}, {0.58143, 72}, {0.12139, 51}, {-0.60457, 55}, {
     0.45513, 57}, {0.8603, 17}, {0.78241, 35}, {-0.7455, 87}, {
     0.61573, 13}, {0.16945, 27}, {-0.15834, 46}, {
     0.37703, 96}, {-0.78662, 28}, {0.15531, 61}, {-0.32168, 47}, {
     0.1331, 30}, {-0.19724, 80}, {0.4189, 71}, {-0.66477, 33}, {
     0.56025, 11}, {-0.95637, 32}, {-0.5618, 30}, {
     0.71513, 27}, {-0.4107, 63}, {
     0.01592, 70}, {-0.28991, 22}, {-0.51961, 87}, {-0.2421, 35}, {
     0.50924, 106}, {-0.24563, 18}, {0.05181, 46}, {0.49362, 28}, {
     0.49325, 100}, {0.54369, 30}, {-0.17729, 10}, {
     0.4378, 30}, {-0.13218, 52}, {-0.19699, 45}, {-0.72731, 31}, {-0.06717, 
      40}, {0.46978, 92}, {-0.36806, 53}, {-0.08255, 19}, {
     0.85153, 61}, {-0.19824, 79}, {-0.46575, 62}, {-0.3899, 30}, {-0.058, 
      32}, {0.14091, 63}, {0.07127, 34}, {0.0069, 45}, {-0.15319, 55}, {
     0.23623, 26}, {0.56466, 29}, {0.04625, 15}, {0.95997, 11}, {
     0.54983, 44}, {0.2782, 53}, {-0.39997, 18}, {
     0.95312, 38}, {-0.74801, 81}, {-0.34645, 34}, {-0.26239, 23}, {-0.91738, 
      24}, {-0.89042, 28}, {0.07339, 26}, {-0.57641, 10}, {-0.93803, 62}, {
     0.64666, 130}, {0.04373, 48}, {-0.33687, 38}, {-0.81098, 21}, {
     0.31768, 63}, {0.61981, 27}, {-0.23082, 62}, {0.3768, 122}, {
     0.09646, 15}, {0.0724, 21}, {-0.76595, 14}, {-0.27719, 13}, {
     0.6567, 32}, {
     0.21358, 65}, {-0.32406, 80}, {-0.04418, 36}, {-0.62894, 42}, {-0.81173, 
      25}, {-0.64867, 27}, {-0.65786, 46}, {
     0.95199, 56}, {-0.87508, 39}, {-0.66657, 57}, {
     0.07734, 69}, {-0.19336, 30}, {0.2511, 29}, {-0.72734, 25}, {
     0.74492, 79}, {0.61898, 48}, {0.38085, 37}, {
     0.76274, 25}, {-0.1717, 67}, {-0.09708, 64}, {
     0.98403, 19}, {-0.52662, 32}, {
     0.97402, 81}, {-0.0613, 13}, {-0.17803, 48}, {-0.22371, 38}, {-0.18153, 
      41}, {0.16285, 97}, {-0.81797, 83}, {0.14385, 91}, {
     0.03177, 46}, {-0.2143, 35}, {0.18676, 68}, {-0.16028, 15}, {
     0.87344, 78}, {-0.51096, 40}, {0.78187, 36}, {0.10832, 34}, {
     0.73065, 42}, {0.58833, 57}, {
     0.76155, 43}, {-0.76493, 30}, {-0.38026, 44}, {-0.5793, 67}, {
     0.19714, 41}, {-0.66673, 81}, {-0.20038, 32}, {-0.96635, 61}, {
     0.46307, 53}, {0.45729, 60}, {-0.98025, 25}, {0.65171, 59}, {
     0.25509, 13}, {-0.6856, 58}, {-0.00414, 32}, {0.30754, 24}, {
     0.61976, 65}, {-0.07666, 3}, {
     0.23339, 79}, {-0.86775, 61}, {-0.7969, 81}, {
     0.24797, 71}, {-0.73171, 30}, {-0.15648, 41}, {-0.67513, 21}, {
     0.05356, 45}, {-0.66596, 90}, {-0.61317, 24}, {
     0.64215, 73}, {-0.26589, 93}, {-0.01305, 105}, {0.25116, 30}, {
     0.29308, 28}, {-0.74569, 16}, {0.53602, 48}, {
     0.30579, 37}, {-0.95455, 111}, {-0.12053, 14}, {
     0.65061, 80}, {-0.58467, 27}, {0.18118, 34}, {-0.05072, 40}, {
     0.62289, 93}, {-0.45475, 63}, {-0.6202, 46}, {-0.71572, 70}, {-0.87892, 
      26}, {-0.05789, 23}, {-0.91534, 50}, {0.82699, 40}, {-0.30052, 58}, {
     0.73284, 13}, {
     0.14822, 31}, {-0.12804, 15}, {-0.84584, 47}, {-0.9548, 62}, {-0.10113, 
      46}, {-0.82625, 46}, {0.06495, 23}, {
     0.01909, 37}, {-0.38278, 73}, {-0.37287, 52}, {-0.63501, 60}, {
     0.47954, 17}, {0.08659, 112}, {-0.06542, 70}, {0.55409, 83}, {
     0.10074, 59}, {-0.21951, 49}, {
     0.97691, 59}, {-0.80562, 31}, {-0.12055, 57}, {
     0.77246, 50}, {-0.09113, 112}, {0.51376, 140}, {-0.3133, 25}, {
     0.39655, 23}, {-0.7156, 29}, {
     0.39484, 42}, {-0.01735, 70}, {-0.97768, 49}, {0.89251, 112}, {
     0.41748, 48}, {-0.27193, 39}, {-0.25495, 12}, {-0.12564, 79}, {-0.33979, 
      15}, {-0.82877, 18}, {-0.64281, 46}, {-0.4867, 3}, {-0.25171, 9}, {
     0.34433, 33}, {
     0.88388, 75}, {-0.56938, 55}, {-0.69709, 53}, {-0.40727, 82}, {-0.34253, 
      55}, {0.32529, 55}, {0.94946, 25}, {-0.39569, 65}, {0.60468, 82}, {
     0.18025, 34}, {0.71214, 83}, {0.48623, 92}, {0.6343, 22}, {
     0.13796, 30}, {-0.95272, 51}, {0.51724, 19}, {0.46533, 44}, {
     0.96999, 15}, {-0.97956, 9}, {-0.93515, 55}, {-0.63998, 54}, {-0.47236, 
      17}, {-0.34141, 25}, {0.13711, 107}, {0.0388, 33}, {0.52439, 44}, {
     0.90056, 114}, {-0.69981, 69}, {-0.78673, 23}, {-0.33596, 74}, {
     0.52797, 30}, {-0.36022, 21}, {-0.03868, 29}, {-0.52677, 102}, {
     0.31615, 43}, {0.11551, 20}, {0.49798, 76}, {-0.73783, 85}, {
     0.90367, 69}, {-0.38069, 45}, {-0.46768, 49}, {-0.05977, 36}, {-0.44852, 
      81}, {0.20476, 34}, {-0.64567, 67}, {0.59473, 67}, {0.40278, 13}, {
     0.42136, 59}, {0.84641, 14}, {0.34378, 23}, {-0.32721, 92}, {
     0.69812, 33}, {-0.9335, 65}, {-0.78509, 40}, {
     0.27995, 68}, {-0.8217, 72}, {-0.34567, 31}, {0.86152, 87}, {
     0.11153, 27}, {-0.59095, 57}, {-0.37236, 35}, {-0.1002, 20}, {-0.29858, 
      33}, {0.84832, 30}, {-0.46261, 26}, {0.15138, 71}, {0.49684, 25}, {
     0.10375, 62}, {0.55461, 44}, {-0.70827, 57}, {0.24582, 34}, {
     0.83847, 49}, {-0.01446, 54}, {-0.87138, 76}, {
     0.47973, 65}, {-0.37787, 68}, {0.73403, 60}, {0.93097, 27}, {
     0.18825, 121}, {-0.0524, 48}, {-0.01525, 76}, {-0.67156, 29}, {-0.88754, 
      107}, {0.88886, 36}, {
     0.2536, 37}, {-0.93342, 70}, {-0.5857, 25}, {-0.05689, 45}, {
     0.58659, 27}, {-0.67365, 51}, {-0.70923, 114}, {0.64519, 36}, {
     0.54758, 60}, {-0.41152, 27}, {-0.35561, 41}, {0.4321, 62}, {
     0.23338, 111}, {0.11488, 18}, {0.46845, 26}, {
     0.62761, 56}, {-0.6849, 40}, {-0.24618, 78}, {
     0.96866, 75}, {-0.10409, 36}, {-0.49731, 69}, {-0.65284, 64}, {-0.06655, 
      104}, {-0.41045, 57}, {-0.22406, 85}, {-0.67383, 65}, {-0.51939, 
      32}, {-0.85601, 74}, {0.1096, 45}, {-0.48258, 45}, {
     0.87898, 39}, {-0.88689, 26}, {-0.34364, 73}, {-0.73888, 27}, {
     0.22379, 40}, {-0.28597, 83}, {-0.36672, 115}, {-0.05634, 57}, {
     0.18317, 84}, {0.96821, 52}, {-0.364, 53}, {
     0.96963, 35}, {-0.00523, 47}, {0.87753, 25}, {-0.91702, 68}, {
     0.48837, 32}, {-0.37453, 46}, {-0.42556, 20}, {-0.61956, 29}, {-0.19706, 
      13}, {-0.08305, 87}, {0.60233, 104}, {-0.06699, 18}, {-0.82522, 28}, {
     0.27325, 87}, {-0.37705, 81}, {-0.59782, 66}, {0.0275, 15}, {
     0.52269, 30}, {0.02792, 32}, {0.94691, 89}, {0.65267, 26}, {
     0.6862, 49}, {0.02943, 26}, {0.84073, 28}, {-0.81599, 32}, {
     0.60995, 70}, {0.9336, 22}, {0.8594, 54}, {
     0.43008, 49}, {-0.33979, 33}, {
     0.86938, 30}, {-0.35571, 91}, {-0.43749, 51}, {-0.89569, 51}, {-0.74138, 
      37}, {0.59731, 38}, {-0.78578, 30}, {0.08929, 57}, {0.16245, 74}, {
     0.42782, 35}, {0.19637, 33}, {0.94231, 72}, {0.82467, 105}, {
     0.22307, 37}, {0.41982, 67}, {0.85676, 16}, {
     0.24655, 32}, {-0.52254, 79}, {-0.81377, 101}, {
     0.07472, 60}, {-0.93361, 29}, {-0.87297, 78}, {-0.22665, 24}, {
     0.75008, 26}, {-0.13954, 80}, {-0.82628, 53}, {0.09726, 23}, {
     0.0903, 109}, {-0.45339, 118}, {0.22948, 100}, {
     0.63072, 29}, {-0.63427, 38}, {
     0.49424, 43}, {-0.61981, 41}, {-0.40043, 38}, {
     0.46535, 29}, {-0.62879, 63}, {0.94906, 76}, {-0.18186, 34}, {
     0.31846, 26}, {-0.28845, 99}, {0.22678, 62}, {0.4295, 70}, {
     0.06153, 44}, {-0.17114, 70}, {-0.36938, 40}, {-0.19421, 62}, {-0.60031, 
      18}, {-0.69705, 71}, {-0.61605, 107}, {-0.86941, 35}, {-0.58011, 38}, {
     0.23443, 16}, {-0.52817, 30}, {-0.76174, 66}, {
     0.76328, 37}, {-0.99363, 34}, {0.19812, 66}, {-0.09208, 35}, {
     0.98129, 27}, {-0.427, 67}, {-0.40705, 51}, {-0.46638, 97}, {-0.70711, 
      63}, {-0.77155, 75}, {-0.80299, 20}, {0.76257, 51}, {
     0.84574, 81}, {-0.73479, 62}, {0.49813, 28}, {0.57035, 64}, {
     0.11968, 54}, {-0.36927, 100}, {-0.73824, 24}, {-0.78121, 75}, {-0.75524,
       42}, {-0.02278, 54}, {0.25446, 66}, {0.71181, 50}, {
     0.64483, 53}, {-0.67553, 24}, {-0.82059, 39}, {-0.73433, 25}, {-0.72912, 
      48}, {0.7158, 34}, {0.68321, 36}, {-0.59725, 70}, {
     0.86218, 19}, {-0.42784, 74}, {0.15423, 44}, {0.63941, 30}, {
     0.01678, 50}, {-0.53682, 49}, {-0.11192, 62}, {-0.39535, 25}, {-0.33882, 
      40}, {0.54722, 53}, {0.65883, 26}, {0.57956, 34}, {-0.53949, 84}, {
     0.19384, 44}, {0.90871, 68}, {-0.05432, 57}, {-0.39606, 19}, {
     0.95127, 30}, {-0.80279, 28}, {
     0.21339, 52}, {-0.65671, 33}, {-0.62178, 29}, {-0.91636, 43}, {-0.27075, 
      74}, {-0.25544, 45}, {-0.29397, 30}, {-0.25762, 11}, {-0.98719, 27}, {
     0.73599, 31}, {-0.02597, 44}, {
     0.62638, 49}, {-0.22079, 54}, {-0.91104, 45}, {0.08291, 74}, {
     0.97941, 35}, {-0.08911, 112}, {-0.26276, 73}, {-0.56229, 18}, {
     0.4247, 26}, {
     0.50797, 55}, {-0.13395, 35}, {-0.32251, 35}, {-0.70854, 100}, {
     0.88437, 16}, {0.38435, 34}, {-0.05977, 25}, {
     0.7043, 53}, {-0.50619, 51}, {-0.80911, 28}, {0.50349, 94}, {
     0.0455, 84}, {-0.90096, 61}, {0.42147, 31}, {
     0.66527, 50}, {-0.81002, 40}, {0.47772, 70}, {-0.64005, 65}, {
     0.6807, 19}, {-0.30591, 48}, {-0.84502, 28}, {
     0.64729, 32}, {-0.53091, 55}, {0.61445, 35}, {0.30709, 50}, {
     0.90407, 62}, {0.54063, 46}, {-0.60362, 82}, {0.60824, 48}, {
     0.23931, 45}, {-0.15755, 38}, {-0.98453, 51}, {-0.5707, 123}, {-0.47841, 
      38}, {0.22685, 29}, {0.64154, 90}, {0.50829, 19}, {-0.3606, 46}, {
     0.6741, 39}, {-0.83975, 15}, {-0.19358, 24}, {-0.00272, 51}, {-0.51404, 
      88}, {0.16912, 76}, {0.45071, 61}, {0.65624, 17}, {0.54032, 108}, {
     0.7589, 25}, {-0.89626, 89}, {-0.59375, 73}, {0.27966, 23}, {
     0.74048, 56}, {-0.70283, 70}, {
     0.84085, 51}, {-0.03811, 9}, {-0.28523, 31}, {-0.18261, 73}, {-0.15308, 
      57}, {-0.1351, 60}, {-0.23486, 31}, {
     0.8222, 37}, {-0.72567, 77}, {-0.57142, 36}, {-0.64081, 80}, {-0.41644, 
      41}, {0.06792, 79}, {0.09566, 71}, {0.50191, 23}, {
     0.9466, 18}, {-0.8541, 98}, {-0.70288, 62}, {-0.12815, 94}, {-0.65392, 
      39}, {
     0.31569, 72}, {-0.96095, 22}, {-0.72401, 45}, {-0.79949, 30}, {-0.92932, 
      24}, {-0.62491, 22}, {-0.9311, 51}, {0.36, 105}, {-0.58373, 69}, {
     0.25795, 124}, {0.57365, 35}, {-0.63881, 22}, {0.35323, 97}, {
     0.91972, 66}, {0.98633, 64}, {0.66482, 39}, {
     0.94044, 79}, {-0.04474, 89}, {0.81122, 12}, {
     0.64242, 67}, {-0.62011, 99}, {-0.19429, 6}, {
     0.23119, 70}, {-0.99603, 64}, {
     0.50197, 44}, {-0.03329, 64}, {-0.19061, 44}, {
     0.06105, 57}, {-0.02677, 56}, {-0.44428, 96}, {
     0.16569, 13}, {-0.48718, 39}, {0.50703, 47}, {0.51653, 45}, {
     0.7308, 27}, {0.34918, 82}, {-0.14836, 12}, {
     0.9425, 41}, {-0.40144, 57}, {-0.51437, 14}, {-0.86609, 89}, {
     0.66283, 14}, {-0.60863, 77}, {-0.28293, 91}, {
     0.40082, 80}, {-0.25753, 65}, {-0.98304, 61}, {
     0.32448, 13}, {-0.01401, 77}, {-0.59755, 50}, {
     0.38206, 25}, {-0.71743, 48}, {-0.75085, 58}, {-0.70543, 55}, {-0.13088, 
      48}, {0.62976, 81}, {0.03876, 52}, {0.80909, 16}, {
     0.91747, 22}, {-0.53285, 27}, {-0.27866, 43}, {-0.08326, 36}, {-0.92588, 
      32}, {-0.96642, 44}, {-0.1833, 62}, {-0.69998, 69}, {
     0.225, 56}, {-0.39151, 55}, {-0.61522, 121}, {-0.72017, 88}, {
     0.09416, 14}, {0.16674, 58}, {-0.30781, 47}, {
     0.64702, 32}, {-0.60906, 20}, {0.68298, 18}, {-0.57152, 21}, {
     0.69353, 53}, {-0.39512, 22}, {-0.29589, 20}, {0.31196, 39}, {
     0.56741, 28}, {0.78145, 37}, {0.97495, 2}, {0.18971, 89}, {
     0.36497, 68}, {-0.33617, 11}, {-0.384, 20}, {0.87258, 37}, {
     0.47076, 37}, {0.90409, 104}, {-0.09592, 31}, {0.66901, 66}, {
     0.85075, 31}, {-0.54027, 19}, {0.13368, 34}, {-0.67718, 8}, {
     0.21903, 29}, {0.82942, 4}, {-0.4099, 22}, {-0.86722, 48}, {
     0.10863, 104}, {-0.16246, 38}, {-0.09713, 87}, {-0.21616, 51}, {
     0.37903, 59}, {-0.36446, 38}, {-0.07544, 42}, {
     0.39238, 36}, {-0.77412, 36}, {-0.01453, 25}, {0.64735, 38}, {
     0.50483, 35}, {0.25382, 58}, {-0.37429, 23}, {0.08345, 48}, {
     0.27648, 20}, {-0.12931, 49}, {0.08683, 27}, {-0.1205, 20}, {
     0.69147, 57}, {-0.85958, 35}, {-0.95571, 38}, {-0.77227, 53}, {
     0.70363, 63}, {-0.91884, 73}, {0.88567, 66}, {-0.98525, 43}, {
     0.70115, 76}, {-0.58636, 13}, {0.20872, 32}, {
     0.53629, 97}, {-0.6107, 68}, {-0.6569, 46}, {-0.79812, 34}, {-0.85183, 
      67}, {0.25817, 74}, {-0.77408, 24}, {-0.43181, 23}, {-0.03119, 
      7}, {-0.62234, 23}, {-0.19521, 42}, {0.34272, 66}, {0.02572, 104}, {
     0.03865, 18}, {-0.98349, 106}, {0.0028, 86}, {
     0.90711, 36}, {-0.25136, 67}, {-0.50208, 31}, {-0.00169, 14}, {
     0.86442, 16}, {-0.10129, 74}, {0.61756, 13}, {-0.12676, 58}, {
     0.25328, 29}, {-0.50214, 24}, {0.48654, 33}, {
     0.54142, 47}, {-0.21763, 35}, {0.77771, 14}, {0.86532, 28}, {
     0.13787, 59}, {
     0.13257, 110}, {-0.54393, 45}, {-0.34085, 9}, {-0.5777, 109}, {-0.6874, 
      21}, {-0.63888, 99}, {-0.497, 34}, {
     0.16897, 50}, {-0.43522, 21}, {-0.53644, 14}, {-0.89625, 69}, {-0.12349, 
      14}, {-0.40143, 36}, {-0.39999, 55}, {0.06924, 43}, {0.80905, 42}, {
     0.79626, 34}, {-0.83821, 23}, {-0.49175, 79}, {-0.46123, 45}, {
     0.02701, 66}, {-0.23868, 104}, {-0.73159, 34}, {-0.09116, 99}, {
     0.16029, 72}, {-0.43657, 79}, {-0.91809, 83}, {-0.10451, 26}, {
     0.14729, 70}, {-0.40643, 112}, {-0.39081, 24}, {-0.52452, 97}, {-0.52021,
       64}, {-0.67239, 20}, {-0.72481, 56}, {
     0.18543, 20}, {-0.19913, 38}, {-0.67391, 25}, {0.62844, 51}, {
     0.49081, 18}, {
     0.42653, 58}, {-0.58882, 72}, {-0.73902, 29}, {-0.60506, 61}, {
     0.70961, 32}, {0.98304, 12}, {-0.8017, 71}, {
     0.90149, 42}, {-0.81786, 58}, {-0.43252, 34}, {
     0.6485, 63}, {-0.73106, 64}, {0.21309, 33}, {0.74039, 46}, {
     0.77526, 98}, {
     0.31192, 19}, {-0.77231, 34}, {-0.8603, 15}, {-0.31258, 31}, {-0.49988, 
      51}, {-0.97079, 32}, {0.2172, 67}, {-0.80584, 61}, {
     0.45924, 76}, {-0.48438, 32}, {0.22651, 21}, {0.66233, 33}, {
     0.60022, 29}, {0.48243, 58}, {-0.14699, 81}, {-0.66408, 64}, {
     0.39539, 19}, {-0.78694, 47}, {-0.33013, 46}, {-0.86444, 21}, {-0.08041, 
      67}, {0.7751, 70}, {0.9096, 35}, {-0.43944, 48}, {0.48921, 31}, {
     0.26774, 59}, {-0.6416, 58}, {0.45446, 54}, {0.75212, 67}, {
     0.33959, 77}, {
     0.72932, 21}, {-0.35009, 32}, {-0.4741, 59}, {-0.71319, 38}, {-0.11491, 
      12}, {0.91575, 86}, {-0.52944, 28}, {0.11077, 34}, {0.68983, 16}, {
     0.66439, 32}, {-0.46976, 36}, {-0.38448, 67}, {
     0.21066, 45}, {-0.74102, 116}, {
     0.13483, 69}, {-0.03594, 20}, {-0.84384, 40}, {-0.65591, 73}, {-0.91117, 
      16}, {-0.24643, 16}, {-0.87284, 55}, {
     0.41667, 24}, {-0.15955, 53}, {-0.78626, 60}, {0.25628, 10}, {
     0.12547, 91}, {-0.89267, 63}, {-0.0137, 91}, {0.30356, 45}, {
     0.41367, 111}, {-0.93035, 27}, {0.33684, 32}, {0.20789, 41}, {
     0.88302, 89}, {-0.512, 35}, {
     0.00903, 39}, {-0.74715, 83}, {-0.75639, 22}, {-0.79501, 52}, {
     0.74756, 127}, {-0.08308, 48}, {0.07507, 32}, {-0.70658, 12}, {
     0.05407, 48}, {0.23027, 59}, {-0.02147, 92}, {
     0.86827, 34}, {-0.43955, 24}, {-0.03667, 27}, {
     0.62966, 80}, {-0.65173, 33}, {0.2461, 98}, {
     0.24268, 73}, {-0.27679, 48}, {0.13797, 41}, {
     0.79928, 26}, {-0.04552, 40}, {0.95415, 54}, {
     0.26164, 55}, {-0.46562, 44}, {0.45202, 101}, {-0.69901, 43}, {
     0.21943, 68}, {0.67977, 130}, {0.65425, 41}, {-0.77808, 65}, {
     0.73521, 59}, {-0.51599, 25}, {-0.87476, 37}, {-0.42737, 53}, {
     0.15936, 45}, {-0.41604, 69}, {-0.92112, 35}, {0.24742, 26}, {
     0.56177, 85}, {0.43484, 36}, {0.89982, 69}, {0.29701, 52}, {
     0.84109, 10}, {0.1847, 37}, {-0.62343, 67}, {0.42297, 19}, {
     0.12689, 29}, {-0.07534, 23}, {0.56095, 28}, {0.35842, 23}, {
     0.19394, 85}, {-0.45893, 68}, {-0.57828, 111}, {0.26737, 6}, {
     0.56208, 67}, {0.3077, 46}, {0.27823, 36}, {-0.25497, 79}, {
     0.02126, 54}, {0.01346, 31}, {0.36075, 57}, {-0.50989, 93}, {
     0.98101, 36}, {0.4708, 73}, {
     0.68488, 66}, {-0.87174, 81}, {-0.86252, 34}, {-0.4781, 40}, {
     0.10745, 14}, {-0.56328, 59}, {-0.27764, 114}, {-0.37962, 30}, {-0.77868,
       10}, {-0.66727, 9}, {0.15241, 59}, {0.55653, 50}, {0.95475, 17}, {
     0.24192, 69}, {0.35949, 53}, {0.89654, 73}, {
     0.97272, 16}, {-0.03612, 86}, {0.65746, 15}, {-0.54064, 76}, {
     0.51119, 64}, {-0.73734, 54}, {-0.25042, 68}, {-0.83276, 46}, {-0.09744, 
      14}, {-0.14394, 65}, {-0.43937, 40}, {-0.59376, 43}, {
     0.93405, 24}, {-0.94856, 44}, {-0.05425, 57}, {-0.90872, 22}, {
     0.01545, 33}, {-0.78749, 59}, {-0.1304, 26}, {0.19563, 26}, {
     0.0681, 18}, {0.34707, 53}, {0.59384, 60}, {-0.05466, 74}, {
     0.62596, 33}, {-0.16464, 63}, {-0.62493, 44}, {-0.72137, 81}, {
     0.43277, 15}, {-0.31496, 87}, {-0.85899, 34}, {
     0.78252, 34}, {-0.24385, 46}, {0.37144, 92}, {0.87123, 73}, {
     0.78783, 56}, {0.55225, 19}, {0.06757, 88}, {0.0406, 10}, {
     0.84415, 27}, {0.90879, 10}, {-0.92307, 29}, {
     0.47347, 42}, {-0.17706, 32}, {-0.99147, 82}, {0.43129, 72}, {
     0.56769, 32}, {-0.42938, 51}, {-0.11241, 107}, {0.05926, 10}, {
     0.88162, 101}, {0.90971, 11}, {-0.27909, 65}, {-0.49669, 91}, {
     0.79518, 11}, {-0.18562, 11}, {-0.41291, 46}, {-0.68061, 54}, {-0.21682, 
      28}, {-0.02402, 38}, {-0.13657, 32}, {
     0.00977, 92}, {-0.79551, 91}, {-0.84186, 72}, {
     0.04588, 27}, {-0.47345, 45}, {0.55673, 64}, {-0.91461, 68}, {
     0.9127, 47}, {-0.30899, 44}, {-0.36577, 26}, {-0.08327, 42}, {
     0.08514, 77}, {0.02607, 52}, {0.30595, 37}, {
     0.80588, 44}, {-0.33656, 53}, {0.98774, 15}, {
     0.61523, 71}, {-0.7072, 94}, {0.40943, 30}, {
     0.2344, 49}, {-0.84786, 39}, {-0.94422, 32}, {0.70915, 24}, {
     0.84948, 85}, {-0.39586, 30}, {-0.12462, 61}, {-0.49196, 78}, {
     0.43414, 20}, {0.4472, 53}, {-0.39817, 21}, {0.35043, 54}, {
     0.76723, 39}, {-0.7009, 50}, {0.58176, 93}, {0.50151, 89}, {
     0.99546, 77}, {-0.72972, 13}, {-0.53856, 73}, {
     0.56466, 98}, {-0.2608, 90}, {-0.76521, 73}, {
     0.29107, 70}, {-0.77851, 72}, {0.83824, 57}, {
     0.30756, 38}, {-0.10815, 60}, {0.4167, 56}, {-0.08581, 40}, {
     0.75455, 21}, {0.63893, 127}, {0.64083, 21}, {
     0.43116, 61}, {-0.69574, 42}, {0.93475, 77}, {-0.01843, 25}, {
     0.45364, 78}, {0.08796, 72}, {-0.84248, 41}, {0.44542, 13}, {
     0.19194, 34}, {0.54289, 63}, {0.25394, 40}, {
     0.07383, 77}, {-0.17119, 72}, {0.9476, 19}, {-0.23187, 59}, {
     0.94448, 51}, {0.46542, 64}, {0.7963, 29}, {
     0.59347, 79}, {-0.27725, 66}, {0.50903, 57}, {0.74356, 35}, {
     0.14767, 68}, {-0.65797, 62}, {-0.56975, 95}, {-0.66544, 23}, {-0.9934, 
      58}, {-0.88755, 80}, {-0.1249, 74}, {0.61121, 31}, {0.54808, 58}, {
     0.47354, 16}, {0.40451, 37}, {
     0.31747, 42}, {-0.77435, 30}, {-0.35225, 99}, {
     0.59121, 30}, {-0.91407, 31}, {0.52651, 101}, {-0.15182, 24}, {
     0.00616, 109}, {0.83892, 19}, {-0.11357, 91}, {-0.5222, 35}, {
     0.04346, 114}, {-0.84496, 53}, {-0.1623, 49}, {-0.61053, 83}, {
     0.22989, 16}, {
     0.01539, 35}, {-0.25987, 36}, {-0.05607, 14}, {-0.27338, 48}, {
     0.4334, 33}, {0.00153, 51}, {-0.02409, 52}, {0.34735, 62}, {
     0.70016, 13}, {-0.65247, 48}, {-0.22276, 64}, {-0.12143, 31}, {-0.86317, 
      21}, {0.50421, 56}, {0.64988, 30}, {-0.67637, 26}, {
     0.82171, 26}, {-0.54429, 38}, {-0.38344, 66}, {0.99524, 25}, {
     0.21753, 59}, {-0.64275, 60}, {0.0563, 82}, {-0.03783, 44}, {
     0.27236, 47}, {0.55587, 69}, {0.29927, 115}, {0.79522, 39}, {
     0.94921, 49}, {0.79421, 54}, {0.12415, 17}, {0.74169, 61}, {
     0.58961, 38}, {-0.96589, 47}, {
     0.32946, 27}, {-0.55204, 67}, {-0.83055, 26}, {0.38217, 54}, {
     0.99828, 102}, {-0.42461, 67}, {-0.84002, 87}, {
     0.98082, 5}, {-0.67975, 35}, {-0.01329, 54}, {
     0.61099, 16}, {-0.48837, 34}, {
     0.42082, 52}, {-0.55916, 37}, {-0.42421, 79}, {0.78844, 16}, {
     0.13008, 19}, {-0.98726, 114}, {-0.0759, 53}, {-0.4867, 55}, {-0.88334, 
      63}, {0.32246, 37}, {0.74679, 73}, {0.56804, 65}, {
     0.0474, 32}, {-0.78833, 75}, {-0.86417, 10}, {-0.68237, 22}, {-0.02777, 
      94}, {0.61048, 59}, {-0.42589, 118}, {-0.6283, 22}, {
     0.17668, 22}, {-0.84449, 89}, {-0.26785, 93}, {-0.12439, 19}, {-0.84645, 
      59}, {0.49156, 39}, {-0.933, 95}, {-0.42436, 41}, {-0.27515, 
      6}, {-0.45563, 39}, {-0.08223, 16}, {
     0.88836, 116}, {-0.43228, 56}, {-0.49726, 36}, {0.45782, 29}, {
     0.75766, 47}, {-0.425, 67}, {0.41288, 106}, {
     0.0553, 95}, {-0.19234, 47}, {
     0.61171, 67}, {-0.00756, 56}, {-0.02657, 24}, {-0.39596, 46}, {-0.03118, 
      24}, {0.02706, 57}, {0.21967, 54}, {
     0.07149, 36}, {-0.085, 82}, {-0.80368, 11}, {0.45123, 71}, {
     0.02986, 45}, {0.06953, 24}, {
     0.22215, 76}, {-0.4279, 69}, {-0.46194, 41}, {-0.43152, 47}, {
     0.01802, 20}, {0.89233, 2}, {
     0.68006, 46}, {-0.79889, 23}, {-0.0866, 22}, {-0.14615, 48}, {
     0.55892, 70}, {0.80557, 120}, {0.76948, 47}, {-0.93021, 74}, {
     0.37744, 69}, {-0.70538, 68}, {
     0.18181, 54}, {-0.03968, 76}, {-0.1187, 60}, {
     0.85214, 51}, {-0.21594, 97}, {0.19394, 8}, {-0.15076, 62}, {
     0.93957, 36}, {-0.68128, 50}, {-0.5958, 72}, {-0.04033, 76}, {-0.77295, 
      34}, {0.72495, 71}, {-0.2341, 62}, {
     0.741, 40}, {-0.91544, 29}, {-0.71453, 60}, {0.33524, 31}, {
     0.47646, 60}, {-0.09211, 58}, {0.59035, 46}, {0.64535, 79}, {
     0.71069, 80}, {0.001, 73}, {0.6051, 75}, {0.57726, 36}, {-0.70168, 34}, {
     0.05604, 52}, {
     0.78294, 82}, {-0.99732, 68}, {-0.45005, 31}, {-0.57645, 47}, {-0.33709, 
      32}, {-0.16784, 58}, {-0.80175, 50}, {-0.68862, 47}, {
     0.53674, 114}, {-0.04277, 46}, {-0.3669, 31}, {
     0.5752, 52}, {-0.93212, 79}, {-0.98235, 51}, {
     0.21943, 89}, {-0.41772, 97}, {0.96499, 94}, {
     0.3519, 61}, {-0.88502, 91}, {-0.36789, 39}, {-0.79868, 46}, {
     0.65545, 14}, {-0.43666, 43}, {0.94639, 29}, {0.9075, 87}, {
     0.12857, 16}, {0.64022, 52}, {0.84918, 69}, {
     0.64382, 84}, {-0.80203, 10}, {-0.14454, 55}, {
     0.92585, 33}, {-0.38249, 57}, {-0.94382, 49}, {
     0.16641, 47}, {-0.54241, 36}, {-0.88384, 51}, {-0.03219, 36}, {
     0.68036, 70}, {0.87784, 62}, {
     0.8402, 49}, {-0.68466, 51}, {-0.00933, 37}, {0.20626, 40}, {
     0.82673, 35}, {0.0793, 40}, {0.40466, 48}, {
     0.81504, 95}, {-0.71707, 78}, {
     0.41978, 76}, {-0.37708, 65}, {-0.42216, 70}, {0.02989, 90}, {
     0.00676, 31}, {0.31375, 51}, {0.83897, 57}, {-0.52679, 60}, {
     0.66016, 40}, {-0.88282, 132}, {-0.46156, 39}, {
     0.25325, 47}, {-0.07892, 39}, {0.82266, 26}, {0.29029, 74}, {
     0.41881, 39}, {0.53608, 41}, {-0.51207, 77}, {0.95899, 24}, {
     0.3491, 52}, {0.24521, 34}, {
     0.60256, 45}, {-0.54361, 97}, {-0.79578, 55}, {-0.27185, 55}, {-0.53141, 
      78}, {-0.66701, 7}, {-0.9236, 14}, {-0.14905, 52}, {0.45384, 39}, {
     0.9323, 65}, {-0.06545, 33}, {0.61143, 77}, {-0.8243, 43}, {
     0.32769, 42}, {-0.29428, 92}, {-0.9384, 76}, {-0.10793, 37}, {
     0.27955, 29}, {-0.96743, 46}, {-0.92002, 113}, {
     0.69819, 26}, {-0.80736, 60}, {0.7849, 64}, {0.88914, 64}, {
     0.74175, 29}, {0.94599, 13}, {0.12905, 88}, {
     0.66296, 20}, {-0.70434, 32}, {-0.47851, 121}, {-0.93274, 48}, {
     0.73633, 19}, {0.30925, 95}, {0.16327, 30}, {0.12734, 61}, {
     0.81072, 58}, {-0.53971, 19}, {0.63048, 84}, {
     0.47285, 12}, {-0.33498, 33}, {
     0.331, 62}, {-0.872, 17}, {-0.98739, 73}, {0.90207, 104}, {
     0.90852, 43}, {-0.38465, 90}, {0.25256, 35}, {-0.7051, 53}, {
     0.55462, 58}, {0.14707, 26}, {-0.30478, 64}, {
     0.88049, 52}, {-0.06647, 26}, {-0.30726, 70}, {-0.23538, 33}, {-0.05852, 
      89}, {-0.71125, 60}, {0.44607, 71}, {-0.38147, 75}, {-0.9454, 28}, {
     0.16865, 31}, {0.63756, 81}, {0.36622, 46}, {-0.77162, 55}, {
     0.30182, 77}, {-0.89141, 56}, {-0.72512, 47}, {
     0.72828, 46}, {-0.17101, 72}, {-0.92339, 17}, {
     0.39181, 75}, {-0.76831, 73}, {0.93421, 29}, {0.62556, 43}, {
     0.21516, 25}, {-0.56296, 53}, {0.12184, 33}, {0.97953, 57}, {
     0.06033, 37}, {0.25949, 44}, {-0.26571, 43}, {
     0.6667, 85}, {-0.47068, 91}, {-0.5719, 49}, {-0.76178, 18}, {-0.81117, 
      20}, {-0.80154, 109}, {-0.73928, 11}, {0.36181, 82}, {0.79766, 23}, {
     0.50957, 56}, {-0.45053, 25}, {-0.62394, 55}, {
     0.93016, 32}, {-0.33056, 76}, {-0.96775, 69}, {
     0.98187, 26}, {-0.22595, 67}, {0.05691, 51}, {
     0.55744, 68}, {-0.27505, 75}, {0.45541, 98}, {0.20343, 41}, {
     0.74991, 63}, {-0.27974, 73}, {
     0.28797, 14}, {-0.69163, 63}, {-0.85687, 82}, {-0.35626, 52}, {-0.38003, 
      89}, {0.3007, 58}, {-0.21711, 66}, {0.836, 17}, {
     0.5316, 12}, {-0.519, 63}, {-0.82086, 25}, {
     0.8599, 46}, {-0.92481, 31}, {0.81194, 80}, {
     0.95333, 64}, {-0.53645, 27}, {0.61778, 14}, {0.38844, 20}, {
     0.65535, 61}, {-0.85934, 59}, {0.63785, 79}, {-0.32159, 84}, {
     0.2462, 77}, {0.70421, 31}, {0.47725, 75}, {
     0.86951, 46}, {-0.91176, 69}, {0.71055, 63}, {
     0.1787, 24}, {-0.99068, 51}, {0.64744, 28}, {0.59975, 83}, {
     0.13586, 47}, {0.02189, 113}, {0.88102, 35}, {
     0.4898, 17}, {-0.07932, 72}, {
     0.82558, 17}, {-0.67664, 24}, {-0.79229, 20}, {-0.9857, 39}, {
     0.51143, 12}, {-0.72255, 72}, {0.25475, 21}, {
     0.0751, 20}, {-0.40162, 67}, {0.21878, 48}, {
     0.94175, 71}, {-0.67065, 106}, {
     0.90058, 40}, {-0.27629, 28}, {-0.53064, 86}, {-0.35162, 24}, {-0.65203, 
      39}, {0.10985, 23}, {0.27376, 59}, {0.10665, 41}, {0.64718, 20}, {
     0.94228, 76}, {0.55132, 34}, {
     0.22153, 16}, {-0.38545, 116}, {-0.88249, 68}, {0.2426, 54}, {
     0.27533, 19}, {
     0.03089, 26}, {-0.08026, 38}, {-0.64546, 43}, {-0.65036, 51}, {
     0.61855, 38}, {0.85208, 30}, {-0.30109, 27}, {0.09623, 34}, {
     0.56696, 28}, {-0.93948, 54}, {-0.4626, 30}, {-0.66562, 22}, {-0.63408, 
      44}, {-0.31938, 52}, {-0.30764, 25}, {0.67419, 41}, {0.97171, 46}, {
     0.94553, 40}, {0.15809, 36}, {0.92063, 61}, {-0.30553, 128}, {
     0.71461, 40}, {-0.31134, 22}, {0.93073, 43}, {
     0.66609, 12}, {-0.61196, 100}, {-0.30654, 41}, {
     0.03546, 57}, {-0.46838, 14}, {-0.20021, 17}, {-0.45826, 49}, {-0.94653, 
      52}, {0.95736, 71}, {0.87986, 70}, {
     0.97118, 52}, {-0.31395, 46}, {-0.18399, 65}, {-0.21592, 23}, {-0.60821, 
      62}, {-0.10626, 73}, {-0.79001, 45}, {-0.0387, 27}, {-0.72424, 
      75}, {-0.48489, 65}, {-0.34665, 49}, {-0.52962, 47}, {-0.93286, 72}, {
     0.26019, 30}, {0.41058, 15}, {-0.34181, 70}, {-0.35792, 75}, {
     0.2944, 94}, {0.32682, 30}, {0.60634, 15}, {-0.14819, 27}, {
     0.61448, 59}, {0.29976, 22}, {0.95585, 39}, {-0.17991, 31}, {
     0.35171, 22}, {0.03885, 82}, {-0.68555, 38}, {
     0.64351, 55}, {-0.81667, 45}, {-0.00829, 84}, {-0.50497, 37}, {-0.43907, 
      36}, {0.13255, 24}, {0.23098, 84}, {-0.72976, 76}, {0.29064, 51}, {
     0.44145, 31}, {0.96885, 80}, {0.65177, 26}, {-0.94021, 51}, {
     0.2496, 32}, {-0.78015, 16}, {
     0.96778, 61}, {-0.69993, 16}, {-0.77991, 45}, {-0.30786, 89}, {
     0.38547, 71}, {0.94887, 36}, {-0.00676, 31}, {
     0.60377, 17}, {-0.23706, 44}, {-0.40808, 45}, {0.92119, 40}, {
     0.07394, 55}, {-0.36756, 15}, {0.06616, 62}, {0.8227, 18}, {
     0.34442, 29}, {-0.49471, 28}, {-0.34719, 56}, {
     0.15563, 108}, {-0.0335, 40}, {-0.77919, 49}, {0.21664, 78}, {
     0.65165, 61}, {0.09585, 5}, {0.84499, 19}, {-0.75064, 23}, {
     0.93748, 38}, {-0.38905, 52}, {-0.11958, 52}, {
     0.94842, 51}, {-0.86547, 20}, {0.13701, 52}, {-0.98085, 66}, {
     0.46192, 44}, {0.67611, 78}, {0.2137, 94}, {-0.74693, 60}, {
     0.73399, 51}, {0.41121, 12}, {-0.93747, 94}, {
     0.05664, 92}, {-0.05882, 24}, {0.6566, 54}, {-0.73075, 57}, {
     0.78013, 13}, {-0.26634, 29}, {0.53296, 67}, {-0.44327, 24}, {
     0.05725, 34}, {-0.18153, 55}, {0.66144, 109}, {-0.28111, 39}, {
     0.23603, 109}, {-0.60414, 22}, {-0.04441, 83}, {
     0.45254, 80}, {-0.62173, 38}, {-0.20216, 54}, {-0.38369, 60}, {
     0.87642, 48}, {-0.32685, 89}, {-0.60054, 77}, {-0.74873, 56}, {
     0.35912, 33}, {-0.96412, 22}, {0.04725, 46}, {
     0.02007, 41}, {-0.37565, 46}, {-0.2978, 68}, {
     0.63068, 15}, {-0.01282, 29}, {0.54758, 46}, {0.31284, 70}, {
     0.19304, 15}, {0.64181, 77}, {0.2704, 34}, {
     0.41856, 28}, {-0.44893, 62}, {0.43624, 56}, {0.32692, 30}, {
     0.12617, 43}, {-0.43585, 116}, {-0.06752, 74}, {
     0.94294, 53}, {-0.47661, 105}, {0.378, 44}, {-0.62743, 28}, {
     0.7786, 35}, {
     0.28493, 17}, {-0.12087, 51}, {-0.07619, 72}, {-0.08312, 19}, {-0.37812, 
      15}, {0.40469, 27}, {-0.39243, 53}, {-0.46577, 23}, {-0.40691, 20}, {
     0.14021, 86}, {-0.81419, 44}, {
     0.87319, 27}, {-0.98039, 109}, {-0.51757, 26}, {0.94322, 41}, {
     0.01493, 76}, {-0.29813, 67}, {-0.64957, 51}, {-0.42129, 57}, {
     0.79609, 55}, {0.20078, 60}, {
     0.77013, 37}, {-0.49232, 63}, {-0.75984, 40}, {
     0.62624, 16}, {-0.95456, 12}, {-0.61856, 22}, {
     0.58549, 25}, {-0.61331, 25}, {
     0.40779, 22}, {-0.66554, 52}, {-0.07031, 82}, {-0.74266, 33}, {
     0.74425, 35}, {0.38274, 115}, {-0.08977, 50}, {
     0.83727, 33}, {-0.44711, 58}, {0.19088, 73}, {0.81844, 85}, {
     0.81904, 24}, {-0.24336, 54}, {0.25537, 62}, {-0.62281, 15}, {
     0.13592, 55}, {
     0.24537, 41}, {-0.57368, 64}, {-0.333, 78}, {-0.23793, 43}, {
     0.75058, 32}, {0.80087, 83}, {0.36318, 73}, {0.97828, 14}, {
     0.13169, 10}, {0.41521, 29}, {-0.13718, 114}, {-0.59733, 32}, {
     0.42847, 90}, {-0.85798, 40}, {-0.392, 62}, {-0.5864, 53}, {-0.01304, 
      16}, {-0.32776, 37}, {-0.70307, 70}, {
     0.97583, 56}, {-0.2972, 10}, {-0.14139, 77}, {
     0.23484, 58}, {-0.12266, 67}, {
     0.10123, 30}, {-0.5101, 13}, {-0.02617, 38}, {-0.47821, 42}, {
     0.89885, 76}, {-0.91425, 112}, {0.15751, 47}, {
     0.67447, 19}, {-0.12521, 84}, {-0.58954, 28}, {-0.57584, 50}, {-0.5433, 
      61}, {-0.39959, 33}, {0.22476, 125}, {
     0.77038, 66}, {-0.84178, 75}, {-0.31608, 81}, {-0.69734, 53}, {-0.76609, 
      84}, {0.37363, 55}, {0.48531, 30}, {-0.23646, 151}, {
     0.48346, 75}, {-0.78952, 50}, {-0.51321, 41}, {0.47997, 90}, {
     0.28948, 39}, {-0.33651, 54}, {0.16548, 52}, {0.16698, 84}, {
     0.22387, 28}, {0.72292, 19}, {
     0.59885, 41}, {-0.73757, 61}, {-0.11062, 70}, {
     0.3363, 46}, {-0.22915, 45}, {0.37674, 109}, {-0.27762, 52}, {
     0.2357, 53}, {-0.38458, 40}, {-0.30846, 76}, {-0.75468, 12}, {
     0.0833, 65}, {-0.66374, 29}, {-0.70718, 78}, {-0.63466, 111}, {
     0.39359, 74}, {0.47277, 49}, {0.11245, 23}, {0.51935, 42}, {
     0.39151, 31}, {0.90916, 35}, {0.72834, 55}, {0.42208, 35}, {
     0.57052, 34}, {
     0.20939, 24}, {-0.30651, 45}, {-0.56389, 40}, {-0.66387, 52}, {-0.5653, 
      73}, {0.96524, 67}, {0.61538, 67}, {
     0.84441, 19}, {-0.88283, 35}, {-0.52532, 47}, {0.23543, 13}, {
     0.8129, 19}, {0.80424, 39}, {0.61913, 26}, {0.49474, 73}, {
     0.37317, 61}, {
     0.30369, 43}, {-0.4589, 24}, {-0.80879, 33}, {-0.80409, 43}, {
     0.09175, 30}, {-0.47338, 35}, {0.54483, 66}, {0.01874, 60}, {
     0.87567, 46}, {-0.21154, 119}, {-0.83186, 103}, {-0.36297, 
      57}, {-0.96764, 72}, {-0.07661, 86}, {0.73868, 40}, {0.53471, 37}, {
     0.91737, 79}, {0.83, 64}, {0.71035, 70}, {
     0.01132, 100}, {-0.11607, 64}, {0.32865, 31}, {
     0.90437, 44}, {-0.40007, 55}, {-0.43642, 39}, {-0.74951, 102}, {-0.60379,
       33}, {-0.25156, 64}, {0.49516, 35}, {0.43385, 96}, {0.35547, 31}, {
     0.7787, 60}, {-0.52292, 39}, {-0.55211, 82}, {0.4392, 20}, {
     0.29419, 58}, {-0.22533, 95}, {
     0.40387, 69}, {-0.11879, 83}, {-0.75792, 63}, {0.94749, 65}, {
     0.00872, 50}, {-0.58182, 19}, {
     0.67557, 92}, {-0.78018, 61}, {-0.98337, 73}, {
     0.03223, 16}, {-0.47709, 22}, {0.87594, 108}, {0.18296, 78}, {
     0.12757, 22}, {0.17709, 64}, {
     0.678, 35}, {-0.25096, 49}, {-0.57394, 36}, {
     0.02131, 43}, {-0.96745, 36}, {-0.60959, 68}, {
     0.93033, 74}, {-0.25782, 73}, {0.1534, 30}, {
     0.9235, 40}, {-0.81179, 32}, {-0.88599, 56}, {-0.70371, 54}, {
     0.32627, 74}, {-0.95973, 49}, {0.84833, 40}, {
     0.37037, 44}, {-0.52515, 44}, {0.69246, 68}, {0.75945, 38}, {
     0.70508, 53}, {-0.22982, 52}, {
     0.73348, 60}, {-0.49423, 82}, {-0.96604, 59}, {0.75157, 28}, {
     0.03328, 27}, {0.10721, 68}, {0.08499, 65}, {-0.228, 70}, {
     0.22282, 70}, {0.87847, 91}, {0.33483, 69}, {
     0.51871, 30}, {-0.08061, 21}, {-0.42029, 23}, {-0.34708, 59}, {
     0.2042, 55}, {-0.23629, 71}, {0.50858, 22}, {0.51811, 54}, {
     0.59227, 14}, {-0.29251, 80}, {-0.79448, 75}, {0.54451, 49}, {
     0.37425, 51}, {0.46853, 52}, {
     0.97271, 31}, {-0.60408, 84}, {-0.36199, 23}, {-0.14701, 63}, {
     0.1712, 74}, {0.84829, 48}, {-0.83793, 49}, {0.39227, 78}, {
     0.94, 41}, {-0.27287, 27}, {
     0.72019, 32}, {-0.14342, 58}, {-0.12813, 33}, {0.24809, 24}, {
     0.09352, 75}, {-0.12846, 15}, {
     0.09545, 40}, {-0.25694, 26}, {-0.67411, 16}, {
     0.06052, 82}, {-0.45823, 47}, {-0.111, 13}, {-0.5305, 78}, {-0.09623, 
      124}, {-0.81554, 32}, {0.65384, 57}, {0.76352, 58}, {0.20849, 78}, {
     0.62299, 46}, {0.80831, 19}, {
     0.29715, 58}, {-0.74107, 49}, {-0.65566, 60}, {-0.22632, 44}, {
     0.15268, 75}, {-0.01212, 23}, {0.71707, 47}, {-0.4784, 89}, {
     0.08363, 43}, {0.70671, 30}, {-0.36451, 25}, {-0.49573, 35}, {
     0.81768, 44}, {0.27674, 23}, {0.87891, 29}, {
     0.71325, 25}, {-0.66639, 70}, {0.94282, 47}, {-0.24816, 19}, {
     0.77838, 39}, {-0.705, 32}, {0.15954, 56}, {0.21132, 54}, {
     0.35351, 15}, {0.42443, 13}, {-0.9033, 127}, {0.43268, 98}, {
     0.62366, 68}, {-0.69834, 97}, {-0.13281, 45}, {-0.60888, 34}, {-0.53318, 
      23}, {0.96425, 51}, {-0.615, 43}, {0.85075, 59}, {-0.75529, 25}, {
     0.49061, 57}, {0.70865, 86}, {-0.21744, 90}, {-0.92769, 72}, {
     0.95695, 64}, {0.84788, 35}, {
     0.38526, 88}, {-0.46953, 63}, {-0.46438, 61}, {-0.55139, 11}, {-0.39398, 
      44}, {-0.13446, 78}, {-0.16875, 57}, {0.04254, 29}, {
     0.57918, 43}, {-0.9349, 18}, {0.58609, 30}, {0.89179, 51}, {
     0.05919, 34}, {-0.52758, 26}, {-0.94713, 20}, {-0.24443, 56}, {-0.15786, 
      42}, {0.21349, 51}, {0.09822, 86}, {-0.87068, 58}, {0.56386, 27}, {
     0.24954, 17}, {-0.8253, 76}, {-0.5497, 69}, {-0.45137, 51}, {-0.11924, 
      45}, {0.26084, 53}, {
     0.4478, 49}, {-0.96922, 23}, {-0.2962, 43}, {-0.80271, 58}, {
     0.2019, 67}, {0.32266, 46}, {0.00269, 62}, {
     0.51399, 13}, {-0.56254, 68}, {0.66943, 68}, {
     0.99135, 74}, {-0.78302, 67}, {0.69061, 80}, {0.93118, 58}, {
     0.87847, 88}, {-0.76541, 58}, {-0.8447, 47}, {-0.24459, 14}, {-0.04903, 
      99}, {-0.82818, 61}, {-0.8568, 50}, {0.21303, 45}, {-0.72543, 65}, {
     0.3192, 60}, {-0.52252, 63}, {
     0.69532, 23}, {-0.31351, 73}, {-0.0746, 48}, {0.23386, 51}, {
     0.60909, 70}, {0.83461, 66}, {
     0.08275, 27}, {-0.85525, 74}, {-0.00405, 133}, {
     0.42674, 16}, {-0.67705, 46}, {0.84581, 48}, {-0.31358, 132}, {
     0.70247, 63}, {-0.21153, 42}, {-0.87144, 37}, {
     0.58537, 54}, {-0.89311, 21}, {0.65566, 87}, {
     0.71081, 35}, {-0.74244, 64}, {-0.01632, 76}, {-0.43668, 61}, {-0.46112, 
      28}, {0.62157, 54}, {0.69829, 52}, {-0.17632, 34}, {
     0.79229, 21}, {-0.79417, 38}, {
     0.66494, 52}, {-0.80146, 98}, {-0.1486, 32}, {-0.6544, 62}, {-0.56042, 
      53}, {0.09153, 19}, {0.94187, 23}, {-0.28748, 12}, {0.09521, 56}, {
     0.08527, 71}, {0.97455, 9}, {-0.4901, 41}, {
     0.63722, 72}, {-0.09129, 25}, {0.15773, 29}, {
     0.73446, 28}, {-0.9348, 48}, {-0.66153, 73}, {0.37392, 42}, {
     0.0031, 32}, {0.42834, 10}, {-0.51301, 23}, {-0.18098, 31}, {
     0.29442, 49}, {-0.98538, 7}, {-0.86786, 30}, {-0.62126, 21}, {-0.03711, 
      47}, {0.22567, 34}, {-0.0896, 34}, {-0.00828, 28}, {
     0.07823, 29}, {-0.93469, 75}, {0.60204, 101}, {-0.53983, 43}, {
     0.43762, 67}, {-0.4158, 31}, {0.83183, 40}, {0.88578, 13}, {
     0.79055, 21}, {-0.21756, 69}, {0.51307, 34}, {0.51647, 50}, {
     0.67056, 95}, {-0.13324, 63}, {0.09617, 61}, {
     0.50116, 54}, {-0.51532, 53}, {-0.32401, 22}, {-0.09044, 34}, {
     0.85776, 43}, {-0.35025, 28}, {0.92963, 92}, {0.29785, 28}, {
     0.77927, 106}, {-0.45072, 88}, {-0.26531, 28}, {-0.72739, 86}, {-0.21201,
       24}, {-0.44422, 79}, {0.64707, 24}, {0.91613, 37}, {0.05112, 25}, {
     0.94263, 92}, {-0.29313, 29}, {0.06242, 24}, {-0.10793, 113}, {
     0.39333, 71}, {-0.46417, 10}, {-0.48985, 44}, {-0.55548, 62}, {
     0.75537, 28}, {-0.23467, 87}, {0.01216, 92}, {
     0.31248, 37}, {-0.68792, 39}, {-0.67411, 21}, {-0.16051, 46}, {-0.12036, 
      35}, {-0.30385, 46}, {0.60019, 42}, {0.11078, 16}, {
     0.13576, 66}, {-0.49144, 28}, {0.96775, 23}, {0.68286, 66}, {
     0.28675, 87}, {0.02806, 25}, {0.91189, 52}, {-0.24269, 45}, {
     0.84416, 80}, {0.13887, 60}, {0.61352, 62}, {-0.09299, 84}, {
     0.75149, 41}, {-0.22245, 48}, {0.51322, 100}, {
     0.93108, 45}, {-0.48043, 72}, {-0.10021, 81}, {-0.06139, 28}, {
     0.01402, 66}, {
     0.30718, 66}, {-0.7752, 19}, {-0.80293, 63}, {-0.33611, 11}, {
     0.13834, 67}, {-0.82573, 36}, {0.49425, 42}, {-0.40913, 38}, {
     0.85349, 58}, {-0.13233, 43}, {-0.02203, 102}, {0.86468, 52}, {
     0.66268, 50}, {-0.23411, 44}, {-0.08305, 8}, {0.63223, 28}, {
     0.97904, 25}, {-0.74662, 49}, {0.59205, 55}, {-0.59748, 78}, {
     0.60199, 22}, {0.52466, 26}, {0.12933, 43}, {-0.75632, 60}, {
     0.80163, 89}, {-0.77563, 62}, {0.40616, 49}, {-0.4241, 103}, {
     0.8358, 32}, {-0.76992, 30}, {
     0.68858, 44}, {-0.93328, 48}, {-0.69838, 19}, {-0.90244, 29}, {-0.30405, 
      28}, {0.05303, 39}, {-0.03087, 30}, {
     0.48026, 21}, {-0.0754, 17}, {-0.70786, 22}, {-0.06642, 49}, {-0.06777, 
      27}, {-0.98365, 18}, {0.1002, 60}, {-0.83326, 33}, {-0.97142, 37}, {
     0.01597, 52}, {0.31844, 63}, {-0.30411, 110}, {-0.60083, 83}, {
     0.94138, 51}, {-0.75006, 30}, {-0.39359, 136}, {-0.92268, 69}, {-0.54998,
       19}, {-0.51605, 59}, {0.24834, 113}, {-0.46843, 36}, {-0.9127, 46}, {
     0.16652, 37}, {-0.73167, 28}, {-0.46731, 33}, {
     0.5565, 90}, {-0.22714, 49}, {-0.63985, 125}, {
     0.54185, 66}, {-0.72603, 82}, {
     0.17105, 98}, {-0.66715, 65}, {-0.36752, 59}, {-0.18409, 79}, {-0.0799, 
      75}, {0.15515, 56}, {-0.79718, 41}, {0.56941, 40}, {
     0.74459, 26}, {-0.45207, 31}, {-0.24552, 128}, {-0.26619, 60}, {-0.65749,
       10}, {-0.16934, 42}, {0.08729, 16}, {-0.37787, 65}, {-0.08333, 59}, {
     0.7243, 65}, {0.73641, 47}, {-0.50873, 82}, {
     0.6996, 73}, {-0.7314, 29}, {-0.42574, 73}, {-0.14572, 62}, {
     0.80147, 31}, {0.69012, 65}, {0.42539, 55}, {-0.82276, 28}, {
     0.82288, 33}, {0.32832, 46}, {0.59128, 51}, {
     0.53842, 43}, {-0.11821, 113}, {0.80303, 53}, {0.11252, 61}, {
     0.07092, 38}, {-0.85126, 55}, {0.57143, 73}, {
     0.28523, 41}, {-0.94972, 65}, {0.11113, 55}, {
     0.4999, 84}, {-0.92699, 20}, {0.49025, 54}, {-0.56132, 90}, {
     0.43702, 128}, {
     0.95246, 33}, {-0.06402, 61}, {-0.53439, 55}, {-0.36356, 14}, {-0.35043, 
      26}, {-0.58452, 42}, {-0.72316, 13}, {
     0.9628, 30}, {-0.20324, 69}, {-0.09552, 74}, {-0.02559, 53}, {-0.4801, 
      46}, {0.45097, 43}, {-0.22929, 16}, {-0.84552, 91}, {0.97329, 25}, {
     0.96654, 101}, {-0.85939, 68}, {-0.30379, 44}, {0.52928, 17}, {
     0.16157, 33}, {0.90873, 12}, {
     0.42587, 27}, {-0.69647, 66}, {-0.33471, 46}, {0.27369, 19}, {
     0.8423, 41}, {0.52336, 69}, {0.4561, 75}, {0.94214, 26}, {-0.23767, 7}, {
     0.45039, 66}, {-0.38641, 78}, {0.99392, 32}, {-0.60993, 20}, {
     0.22544, 43}, {-0.72385, 28}, {-0.33498, 77}, {-0.73214, 37}, {-0.6301, 
      16}, {0.27029, 40}, {-0.45871, 54}, {-0.79567, 40}, {0.7843, 42}, {
     0.10583, 112}, {0.3743, 65}, {-0.83595, 26}, {-0.57987, 58}, {
     0.52407, 40}, {0.29964, 20}, {0.09773, 50}, {
     0.05485, 12}, {-0.73746, 78}, {0.72607, 20}, {-0.15438, 19}, {
     0.42622, 66}, {-0.67696, 50}, {0.9965, 29}, {
     0.92167, 72}, {-0.4765, 93}, {-0.66629, 122}, {
     0.45457, 29}, {-0.62783, 54}, {0.3584, 64}, {0.1512, 32}, {
     0.20701, 67}, {0.1525, 94}, {0.59406, 47}, {-0.70109, 11}, {
     0.82444, 40}, {-0.67683, 70}, {-0.51196, 23}, {
     0.43929, 24}, {-0.68322, 50}, {-0.80125, 27}, {0.99465, 26}, {
     0.93122, 18}, {-0.02785, 27}, {0.94274, 38}, {-0.73054, 77}, {
     0.23706, 101}, {0.77784, 81}, {0.25054, 25}, {-0.57178, 62}, {
     0.93819, 49}, {-0.33347, 13}, {
     0.65035, 24}, {-0.73088, 19}, {-0.40082, 41}, {-0.86095, 69}, {
     0.10929, 27}, {-0.14528, 39}, {0.69205, 127}, {-0.51744, 41}, {
     0.12174, 115}, {0.21112, 32}, {0.03821, 24}, {-0.74398, 47}, {
     0.45949, 55}, {-0.39658, 36}, {0.57906, 38}, {
     0.55693, 24}, {-0.18475, 69}, {-0.43086, 24}, {0.06084, 52}, {
     0.58153, 75}, {-0.38007, 35}, {0.863, 124}, {0.68793, 22}, {
     0.41694, 82}, {0.38393, 61}, {-0.34657, 33}, {
     0.30517, 63}, {-0.97932, 33}, {-0.92175, 6}, {
     0.03201, 45}, {-0.6811, 14}, {0.23654, 31}, {-0.28939, 19}, {
     0.62868, 62}, {0.84545, 102}, {
     0.62606, 36}, {-0.20653, 13}, {-0.35309, 21}, {-0.29049, 80}, {
     0.98763, 69}, {-0.03806, 17}, {-0.46365, 66}, {-0.64036, 31}, {
     0.04684, 30}, {-0.54011, 14}, {0.42511, 62}, {-0.75605, 35}, {
     0.87401, 30}, {0.65454, 77}, {0.14109, 71}, {
     0.21686, 59}, {-0.23067, 91}, {0.07782, 38}, {
     0.45917, 55}, {-0.46463, 38}, {0.76749, 38}, {-0.02584, 42}, {
     0.12346, 97}, {-0.0349, 65}, {0.65558, 25}, {0.37432, 25}, {
     0.04821, 103}, {
     0.10737, 20}, {-0.88334, 38}, {-0.84617, 83}, {-0.47759, 42}, {
     0.46337, 49}, {-0.29938, 96}, {-0.17823, 34}, {
     0.28975, 75}, {-0.79068, 10}, {-0.27091, 49}, {0.18698, 58}, {
     0.63209, 26}, {-0.85931, 55}, {0.3509, 63}, {-0.94035, 39}, {
     0.67394, 88}, {-0.05474, 61}, {
     0.60276, 31}, {-0.65682, 83}, {-0.78863, 81}, {0.91531, 107}, {
     0.59195, 26}, {0.11064, 69}, {
     0.71502, 78}, {-0.47931, 27}, {-0.31678, 58}, {0.20284, 43}, {
     0.66606, 26}, {0.12914, 75}, {-0.89786, 35}, {-0.27383, 20}, {
     0.99094, 44}, {-0.81202, 41}, {-0.44918, 85}, {
     0.85409, 63}, {-0.63921, 36}, {-0.59051, 43}, {
     0.2749, 83}, {-0.93011, 23}, {-0.33378, 56}, {-0.20064, 62}, {
     0.99046, 124}, {0.83662, 27}, {-0.08403, 24}, {
     0.65038, 88}, {-0.73486, 23}, {-0.8555, 21}, {0.36699, 56}, {
     0.53125, 63}, {-0.29976, 31}, {-0.05854, 89}, {
     0.44444, 20}, {-0.43791, 56}, {-0.70325, 34}, {-0.12429, 105}, {-0.09541,
       112}, {-0.54993, 12}, {0.97021, 32}, {0.19647, 45}, {
     0.00284, 44}, {-0.67252, 14}, {-0.74258, 21}, {-0.21603, 30}, {-0.4855, 
      58}, {0.94558, 61}, {0.47471, 59}, {0.75557, 62}, {
     0.5531, 40}, {-0.76404, 57}, {0.31178, 18}, {0.11112, 7}, {
     0.13704, 103}, {-0.07228, 39}, {-0.82329, 77}, {
     0.99112, 98}, {-0.69924, 42}, {0.84484, 51}, {-0.167, 25}, {
     0.41327, 20}, {0.83234, 75}, {-0.3169, 46}, {0.42594, 43}, {
     0.79431, 44}, {0.93909, 56}, {0.92162, 56}, {
     0.70158, 16}, {-0.38703, 106}, {-0.94006, 78}, {0.03016, 40}, {
     0.31358, 41}, {-0.12265, 23}, {0.64903, 32}, {
     0.0724, 45}, {-0.57433, 25}, {-0.67813, 83}, {-0.13103, 45}, {-0.34376, 
      143}, {-0.26908, 42}, {-0.74683, 24}, {
     0.57051, 23}, {-0.39347, 51}, {-0.78253, 27}, {-0.42865, 57}, {
     0.54052, 38}, {-0.52085, 95}, {0.56814, 94}, {
     0.0065, 70}, {-0.4829, 72}, {0.40101, 27}, {0.38567, 71}, {-0.136, 52}, {
     0.23953, 13}, {-0.4378, 61}, {-0.52486, 44}, {0.54429, 45}, {
     0.04833, 32}, {0.54686, 5}, {-0.40591, 27}, {0.39841, 18}, {
     0.9049, 27}, {0.79075, 22}, {-0.69248, 22}, {0.94553, 52}, {
     0.34204, 51}, {-0.64193, 18}, {0.88723, 87}, {0.53405, 29}, {
     0.52652, 93}, {-0.89776, 104}, {-0.425, 81}, {
     0.19783, 25}, {-0.83103, 37}, {-0.24685, 34}, {
     0.37654, 54}, {-0.09116, 87}, {-0.75138, 80}, {0.79738, 11}, {
     0.17409, 57}, {-0.37603, 78}, {-0.53147, 39}, {0.57081, 34}, {
     0.12432, 15}, {-0.36363, 30}, {
     0.81431, 38}, {-0.87075, 73}, {-0.92126, 24}, {-0.06622, 58}, {
     0.78927, 84}, {0.74278, 59}, {0.37891, 119}, {-0.65222, 21}, {
     0.44738, 43}, {0.55782, 18}, {0.99203, 32}, {-0.34466, 98}, {
     0.88339, 36}, {-0.72438, 46}, {
     0.96508, 13}, {-0.45523, 29}, {-0.88793, 20}, {-0.43224, 67}, {-0.67606, 
      10}, {0.57258, 23}, {-0.52711, 47}, {-0.06787, 96}, {
     0.92822, 54}, {-0.76913, 25}, {0.56114, 124}, {-0.82038, 16}, {
     0.8843, 54}, {0.13763, 23}, {0.05155, 11}, {
     0.25106, 47}, {-0.12466, 34}, {-0.47219, 55}, {-0.98579, 44}, {-0.01471, 
      59}, {0.49483, 52}, {0.82807, 125}, {-0.30789, 77}, {
     0.96596, 82}, {-0.66923, 75}, {-0.70487, 25}, {
     0.68953, 78}, {-0.7514, 11}, {-0.11973, 28}, {
     0.84739, 68}, {-0.03028, 17}, {0.564, 49}, {-0.70714, 86}, {
     0.85125, 151}, {-0.80842, 61}, {-0.31425, 37}, {0.2102, 37}, {
     0.89446, 30}, {0.4841, 58}, {-0.0604, 22}, {-0.79305, 19}, {
     0.78471, 75}, {0.21496, 65}, {-0.52218, 69}, {-0.23068, 13}, {
     0.02018, 56}, {0.77414, 48}, {0.89999, 69}, {-0.10689, 51}, {
     0.45059, 39}, {0.43941, 57}, {0.32943, 87}, {0.52607, 67}, {
     0.23936, 57}, {0.29635, 26}, {0.40558, 65}, {0.57302, 52}, {
     0.32178, 56}, {-0.08243, 99}, {
     0.82315, 48}, {-0.01172, 71}, {-0.6105, 35}, {-0.26327, 64}, {-0.20266, 
      117}, {-0.61427, 29}, {-0.47834, 10}, {-0.20862, 22}, {
     0.87272, 56}, {-0.7224, 37}, {0.75614, 81}, {-0.35223, 56}, {
     0.17693, 83}, {-0.3333, 37}, {-0.43983, 59}, {
     0.89861, 107}, {-0.15658, 16}, {0.80184, 24}, {-0.68566, 44}, {
     0.2331, 13}, {-0.09086, 44}, {-0.12504, 11}, {0.65188, 23}, {
     0.08032, 43}, {
     0.20706, 46}, {-0.71029, 86}, {-0.51446, 87}, {-0.0411, 53}, {
     0.78515, 40}, {0.29805, 41}, {
     0.01293, 39}, {-0.59727, 14}, {-0.55127, 20}, {-0.47452, 44}, {-0.82552, 
      37}, {0.03418, 33}, {-0.37148, 100}, {-0.41763, 12}, {0.47176, 61}, {
     0.51521, 60}, {-0.19725, 30}, {0.98059, 59}, {0.21714, 44}, {
     0.25215, 30}, {-0.01055, 53}, {
     0.65173, 100}, {-0.88716, 40}, {-0.87957, 38}, {0.77801, 94}, {
     0.9979, 74}, {0.23424, 43}, {-0.64127, 29}, {
     0.23649, 44}, {-0.47695, 12}, {-0.2573, 69}, {-0.86829, 72}, {
     0.70524, 21}, {0.0018, 79}, {-0.79124, 67}, {-0.75796, 4}, {
     0.23937, 55}, {0.00235, 64}, {0.59285, 50}, {0.6195, 87}, {
     0.56948, 22}, {-0.94064, 43}, {
     0.4943, 41}, {-0.18354, 66}, {-0.30363, 46}, {
     0.24589, 74}, {-0.52511, 22}, {-0.69709, 23}, {0.30502, 107}, {
     0.17908, 37}, {0.62187, 23}, {
     0.97862, 54}, {-0.69651, 51}, {-0.2393, 28}, {-0.58586, 55}, {
     0.5248, 43}, {0.10271, 67}, {0.06483, 25}, {0.69205, 63}, {
     0.01357, 41}, {0.8865, 34}, {-0.74926, 79}, {-0.79037, 35}, {
     0.28584, 59}, {-0.72768, 18}, {-0.11125, 27}, {-0.68844, 40}, {
     0.21154, 32}, {-0.60419, 27}, {-0.311, 59}, {0.77939, 16}, {
     0.39052, 39}, {0.90104, 52}, {
     0.63885, 24}, {-0.30936, 33}, {-0.56208, 29}, {-0.368, 69}, {
     0.54336, 76}, {0.96987, 26}, {-0.90642, 79}, {
     0.94296, 52}, {-0.71922, 24}, {0.7664, 62}, {
     0.70318, 18}, {-0.40597, 52}, {0.60178, 55}, {-0.25123, 56}, {
     0.10431, 48}, {-0.84217, 25}, {0.74539, 20}, {-0.90902, 111}, {
     0.7965, 35}, {-0.75802, 12}, {-0.31771, 47}, {-0.81019, 109}, {-0.28725, 
      28}, {0.58692, 43}, {0.95391, 13}, {-0.54701, 56}, {0.0002, 28}, {
     0.13483, 19}, {0.0771, 78}, {
     0.17348, 19}, {-0.36508, 92}, {-0.44003, 73}, {-0.36687, 63}, {-0.72396, 
      101}, {-0.6723, 86}, {-0.01226, 33}, {0.06386, 30}, {
     0.99268, 36}, {-0.94085, 17}, {-0.66837, 52}, {-0.49964, 87}, {-0.0405, 
      61}, {0.37954, 15}, {-0.8872, 52}, {0.90047, 74}, {
     0.11456, 47}, {-0.29903, 45}, {-0.79353, 43}, {
     0.39091, 20}, {-0.58205, 60}, {0.2892, 46}, {0.45317, 41}, {
     0.50419, 45}, {0.23758, 45}, {0.58299, 88}, {
     0.82606, 41}, {-0.30848, 50}, {0.16887, 85}, {
     0.67323, 55}, {-0.68092, 49}, {0.25571, 50}, {
     0.92823, 86}, {-0.38475, 27}, {-0.71108, 69}, {-0.06567, 43}, {-0.15672, 
      56}, {0.6027, 37}, {0.47804, 29}, {-0.81748, 25}, {-0.63442, 65}, {
     0.09677, 9}, {0.38467, 32}, {-0.99314, 22}, {
     0.92171, 15}, {-0.41528, 24}, {0.69959, 32}, {
     0.60473, 67}, {-0.90092, 21}, {-0.79387, 29}, {0.18485, 23}, {
     0.84544, 93}, {-0.15744, 47}, {-0.34834, 85}, {-0.40482, 88}, {-0.1757, 
      52}, {-0.19697, 51}, {0.06356, 26}, {0.12448, 52}, {
     0.00196, 19}, {-0.05211, 46}, {-0.31877, 13}, {0.97956, 68}, {
     0.30208, 112}, {
     0.45606, 49}, {-0.32676, 74}, {-0.70645, 10}, {-0.1097, 41}, {
     0.17113, 81}, {0.88036, 41}, {0.20868, 49}, {
     0.76891, 38}, {-0.73674, 92}, {0.2486, 130}, {-0.7047, 88}, {
     0.90428, 58}, {
     0.35404, 26}, {-0.05548, 31}, {-0.59307, 22}, {-0.30609, 55}, {
     0.92665, 41}, {-0.17786, 44}, {-0.44285, 18}, {
     0.0553, 73}, {-0.7563, 24}, {-0.81111, 42}, {
     0.71576, 17}, {-0.66525, 16}, {0.06794, 41}, {0.78697, 76}, {
     0.64014, 94}, {-0.11774, 60}, {0.61645, 57}, {
     0.86195, 40}, {-0.60503, 72}, {-0.14882, 67}, {
     0.74832, 101}, {-0.93924, 51}, {-0.40651, 94}, {-0.23988, 46}, {-0.58809,
       27}, {0.12849, 44}, {-0.45442, 16}, {-0.49574, 47}, {-0.13276, 72}, {
     0.73135, 60}, {-0.46272, 61}, {0.00482, 48}, {0.68589, 46}, {
     0.18187, 68}, {-0.72555, 26}, {-0.23904, 59}, {
     0.35107, 52}, {-0.7945, 30}, {0.8302, 41}, {-0.41434, 67}, {
     0.95217, 51}, {-0.25099, 17}, {0.90897, 45}, {0.73457, 77}, {
     0.39217, 44}, {-0.23336, 93}, {-0.2715, 39}, {
     0.94329, 44}, {-0.94622, 67}, {-0.96299, 72}, {
     0.645, 47}, {-0.31682, 55}, {-0.62731, 59}, {-0.84798, 9}, {-0.48642, 
      88}, {0.96469, 52}, {0.84715, 21}, {-0.00519, 112}, {0.07089, 60}, {
     0.91333, 20}, {-0.1144, 37}, {-0.97671, 128}, {
     0.25117, 70}, {-0.45622, 42}, {
     0.40285, 10}, {-0.02347, 76}, {-0.69187, 105}, {-0.36495, 39}, {-0.97918,
       30}, {0.16272, 41}, {0.64025, 28}, {0.1195, 76}, {0.90167, 98}, {
     0.86502, 42}, {-0.43911, 57}, {
     0.08671, 16}, {-0.5603, 18}, {-0.53147, 49}, {
     0.66245, 59}, {-0.31273, 42}, {0.85634, 68}, {
     0.37508, 60}, {-0.06433, 62}, {-0.24279, 115}, {-0.31519, 79}, {
     0.12314, 97}, {0.87894, 36}, {
     0.20904, 29}, {-0.06382, 54}, {-0.02507, 87}, {-0.25786, 30}, {-0.53545, 
      59}, {-0.43681, 64}, {0.20595, 91}, {0.99628, 89}, {0.22849, 80}, {
     0.35096, 75}, {0.52364, 107}, {-0.15094, 39}, {
     0.03862, 62}, {-0.38509, 55}, {0.6147, 58}, {0.32484, 72}, {
     0.07069, 23}, {0.3882, 75}, {0.16572, 42}, {
     0.69638, 20}, {-0.94865, 49}, {-0.28559, 32}, {
     0.63316, 16}, {-0.29618, 76}, {-0.36964, 53}, {0.20966, 94}, {
     0.00648, 63}, {-0.84916, 30}, {-0.29798, 13}, {-0.42341, 23}, {
     0.28048, 74}, {-0.22417, 78}, {-0.20763, 28}, {-0.83893, 39}, {-0.99118, 
      26}, {-0.23942, 29}, {-0.02531, 31}, {-0.73206, 39}, {
     0.78375, 63}, {-0.11883, 41}, {-0.43645, 84}, {-0.63257, 41}, {-0.55931, 
      56}, {0.44389, 59}, {-0.05709, 27}, {0.28593, 34}, {0.72248, 16}, {
     0.5744, 83}, {0.19947, 38}, {-0.06655, 43}, {-0.75782, 79}, {
     0.85141, 32}, {-0.15844, 89}, {-0.04898, 120}, {
     0.30563, 14}, {-0.44327, 65}, {-0.27038, 45}, {-0.07022, 32}, {
     0.25377, 80}, {0.38688, 50}, {0.78201, 72}, {0.64889, 71}, {
     0.66381, 59}, {0.61059, 23}, {0.02558, 25}, {
     0.95465, 57}, {-0.79082, 69}, {0.09502, 128}, {0.60224, 15}, {
     0.01808, 27}, {0.47363, 6}, {-0.37007, 28}, {
     0.52532, 36}, {-0.52517, 32}, {
     0.4811, 96}, {-0.85184, 51}, {-0.73487, 14}, {0.54939, 54}, {
     0.01078, 38}, {-0.68219, 28}, {-0.42126, 54}, {
     0.19729, 54}, {-0.08025, 13}, {0.15697, 20}, {
     0.63941, 37}, {-0.86522, 34}, {0.37422, 46}, {0.79092, 41}, {
     0.20245, 35}, {-0.96083, 26}, {-0.38128, 86}, {-0.75692, 74}, {
     0.81106, 79}, {-0.00389, 51}, {
     0.60517, 56}, {-0.62516, 92}, {-0.5653, 28}, {0.78275, 36}, {
     0.45473, 43}, {0.12882, 8}, {
     0.3477, 39}, {-0.34346, 55}, {-0.82355, 20}, {0.49186, 44}, {
     0.90398, 43}, {-0.24169, 89}, {-0.28064, 67}, {-0.02887, 58}, {-0.43683, 
      119}, {0.12509, 22}, {0.16428, 18}, {-0.34933, 35}, {0.95451, 43}, {
     0.12668, 20}, {-0.67899, 75}, {-0.64642, 26}, {-0.63481, 55}, {-0.44049, 
      43}, {0.51891, 66}, {0.84348, 27}, {0.2238, 21}, {0.753, 60}, {
     0.27414, 52}, {-0.63296, 45}, {-0.37602, 35}, {-0.76393, 19}, {-0.38747, 
      71}, {-0.47412, 20}, {
     0.25489, 51}, {-0.75652, 75}, {-0.87045, 76}, {-0.75408, 21}, {
     0.64139, 42}, {
     0.86787, 91}, {-0.15869, 14}, {-0.57009, 30}, {-0.70278, 38}, {
     0.31799, 62}, {-0.13369, 3}, {-0.58712, 106}, {-0.9343, 34}, {-0.94606, 
      77}, {0.76399, 47}, {-0.51442, 47}, {-0.97017, 40}, {-0.458, 
      96}, {-0.70439, 54}, {0.58013, 129}, {-0.68803, 40}, {-0.51758, 45}, {
     0.63655, 85}, {-0.31836, 89}, {-0.51713, 64}, {-0.36337, 22}, {
     0.07663, 13}, {0.06292, 29}, {-0.06656, 57}, {0.43342, 31}, {
     0.36678, 17}, {-0.84023, 111}, {0.79896, 48}, {-0.88287, 31}, {
     0.9076, 86}, {0.26311, 58}, {
     0.06061, 35}, {-0.19287, 77}, {-0.82137, 41}, {-0.67149, 24}, {-0.26014, 
      50}, {-0.56599, 60}, {0.23486, 15}, {
     0.48267, 36}, {-0.40161, 38}, {-0.63474, 127}, {-0.10019, 22}, {
     0.30998, 26}, {0.70611, 30}, {0.67611, 35}, {-0.63828, 69}, {
     0.53132, 54}, {-0.3484, 31}, {-0.58129, 73}, {-0.79133, 99}, {-0.68508, 
      72}, {-0.08906, 36}, {-0.21825, 17}, {-0.18369, 41}, {0.73423, 51}, {
     0.19917, 19}, {-0.57637, 42}, {-0.51457, 53}, {-0.06487, 32}, {
     0.62856, 42}, {-0.54031, 13}, {-0.0075, 30}, {-0.13424, 40}, {-0.11654, 
      51}, {-0.46854, 26}, {0.316, 55}, {0.47786, 96}, {-0.76943, 59}, {
     0.29438, 33}, {0.33321, 58}, {0.71957, 37}, {-0.37674, 49}, {
     0.62308, 43}, {-0.74474, 30}, {-0.05803, 16}, {-0.18112, 98}, {-0.79685, 
      15}, {-0.17232, 65}, {0.68649, 67}, {
     0.28933, 88}, {-0.0018, 54}, {-0.82847, 44}, {-0.03837, 118}, {
     0.23466, 30}, {-0.20538, 49}, {-0.33741, 46}, {
     0.75482, 11}, {-0.6305, 93}, {0.44049, 124}, {-0.77903, 69}, {
     0.36994, 21}, {0.60431, 63}, {
     0.57651, 100}, {-0.48479, 35}, {-0.20835, 44}, {-0.72162, 100}, {
     0.89755, 52}, {0.46274, 81}, {-0.45713, 49}, {
     0.88372, 54}, {-0.55022, 34}, {0.53898, 20}, {
     0.90214, 88}, {-0.52223, 30}, {0.47899, 33}, {-0.5539, 23}, {
     0.30369, 66}, {0.89499, 47}, {0.52297, 63}, {
     0.07371, 55}, {-0.88114, 36}, {-0.57949, 33}, {-0.49283, 73}, {
     0.39992, 72}, {0.83224, 30}, {0.52414, 58}, {0.66545, 17}, {
     0.25538, 14}, {-0.95754, 49}, {0.70898, 53}, {0.63818, 13}, {
     0.99118, 33}, {0.26184, 39}, {0.8342, 30}, {-0.42482, 20}, {
     0.63898, 113}, {-0.86405, 37}, {0.86634, 31}, {-0.93531, 58}, {
     0.9914, 65}, {-0.86523, 106}, {-0.63134, 61}, {
     0.7232, 19}, {-0.58147, 88}, {-0.42672, 23}, {
     0.48429, 34}, {-0.90953, 30}, {-0.86094, 49}, {-0.39377, 37}, {
     0.98249, 40}, {-0.9003, 35}, {-0.72245, 37}, {-0.70454, 49}, {-0.67648, 
      37}, {0.53713, 31}, {0.33233, 41}, {-0.93559, 70}, {
     0.97804, 23}, {-0.49148, 71}, {0.86939, 32}, {-0.67527, 40}, {
     0.25602, 34}, {-0.29068, 26}, {0.28155, 84}, {
     0.32502, 63}, {-0.11188, 87}, {
     0.19422, 25}, {-0.85821, 83}, {-0.29023, 25}, {-0.78676, 52}, {
     0.3535, 78}, {-0.05586, 35}, {-0.50745, 14}, {0.01983, 71}, {
     0.28061, 71}, {-0.34156, 88}, {-0.24174, 35}, {-0.85192, 105}, {
     0.48143, 61}, {-0.21347, 106}, {-0.95605, 35}, {
     0.91902, 73}, {-0.61276, 51}, {-0.2548, 62}, {-0.85041, 37}, {
     0.81361, 81}, {0.58087, 83}, {-0.39533, 20}, {
     0.62139, 68}, {-0.29043, 76}, {
     0.19803, 50}, {-0.74007, 51}, {-0.11683, 63}, {-0.93905, 35}, {
     0.75981, 71}, {-0.25462, 91}, {0.65319, 42}, {
     0.48174, 41}, {-0.26625, 27}, {-0.02549, 45}, {-0.46092, 52}, {-0.22562, 
      87}, {0.53458, 55}, {0.82871, 65}, {-0.67369, 26}, {-0.37962, 121}, {
     0.29319, 15}, {-0.43873, 46}, {0.25934, 35}, {0.67061, 17}, {
     0.11633, 17}, {0.58257, 11}, {0.04719, 56}, {-0.47044, 19}, {
     0.9019, 44}, {
     0.72694, 22}, {-0.97848, 35}, {-0.66671, 34}, {-0.8303, 70}, {-0.44716, 
      86}, {0.15611, 13}, {0.68239, 78}, {0.89756, 18}, {-0.88085, 33}, {
     0.90002, 120}, {-0.07032, 56}, {-0.7089, 55}, {0.42395, 66}, {
     0.75563, 30}, {
     0.47749, 62}, {-0.33037, 32}, {-0.52754, 42}, {-0.26587, 51}, {
     0.00657, 41}, {-0.35445, 55}, {-0.98669, 73}, {0.83311, 19}, {
     0.36608, 36}, {0.96573, 81}, {
     0.54962, 59}, {-0.70173, 66}, {-0.54129, 40}, {0.4443, 47}, {
     0.09477, 19}, {-0.42998, 29}, {-0.17925, 17}, {-0.69347, 88}, {
     0.56666, 104}, {0.08334, 37}, {-0.62623, 83}, {-0.66305, 87}, {
     0.59066, 33}, {-0.79803, 34}, {0.34556, 29}, {-0.76608, 59}, {
     0.27112, 78}, {-0.88696, 46}, {-0.71449, 27}, {0.95735, 78}, {
     0.9186, 31}, {-0.52482, 47}, {-0.75243, 36}, {-0.984, 17}, {-0.94154, 
      79}, {-0.11035, 113}, {
     0.78862, 86}, {-0.58781, 21}, {-0.57052, 18}, {-0.06995, 56}, {-0.4051, 
      28}, {-0.66205, 14}, {-0.93781, 54}, {0.23797, 80}, {-0.4433, 25}, {
     0.3638, 85}, {0.39021, 34}, {0.05447, 69}, {-0.49697, 50}, {
     0.28926, 13}, {0.58007, 126}, {-0.3348, 33}, {-0.39112, 82}, {
     0.24755, 11}, {-0.4136, 71}, {-0.75474, 80}, {
     0.34852, 42}, {-0.55893, 43}, {-0.78812, 21}, {
     0.08028, 26}, {-0.71111, 63}, {-0.10836, 34}, {0.28677, 25}, {
     0.36286, 58}, {-0.17069, 39}, {-0.38251, 100}, {0.53139, 107}, {
     0.83087, 80}, {
     0.33929, 48}, {-0.59917, 41}, {-0.80121, 95}, {-0.10849, 52}, {
     0.38489, 37}, {0.80647, 14}, {0.27117, 45}, {-0.04243, 111}, {
     0.82486, 31}, {-0.95239, 68}, {-0.25963, 66}, {0.02466, 97}, {
     0.23725, 45}, {0.46058, 20}, {0.00708, 47}, {-0.44922, 72}, {
     0.09786, 13}, {0.79267, 21}, {0.35162, 30}, {0.628, 39}, {
     0.73731, 32}, {-0.23223, 91}, {0.60436, 48}, {-0.52368, 42}, {
     0.29232, 14}, {-0.84774, 24}, {-0.08855, 41}, {
     0.87689, 61}, {-0.84431, 59}, {0.30934, 63}, {0.40951, 53}, {
     0.97953, 29}, {0.50494, 28}, {-0.59657, 84}, {-0.55015, 60}, {
     0.58341, 104}, {-0.37568, 33}, {0.53665, 60}, {
     0.88509, 25}, {-0.46762, 99}, {-0.48739, 32}, {-0.74091, 48}, {
     0.60745, 57}, {0.48623, 18}, {-0.42892, 34}, {0.10678, 83}, {
     0.53684, 33}, {0.2624, 35}, {-0.04897, 13}, {
     0.87293, 41}, {-0.37496, 62}, {-0.04846, 53}, {
     0.1669, 72}, {-0.94489, 35}, {
     0.62973, 19}, {-0.29865, 69}, {-0.44914, 23}, {
     0.39016, 16}, {-0.66059, 65}, {0.25288, 64}, {
     0.15839, 35}, {-0.50207, 37}, {-0.51315, 49}, {-0.73446, 53}, {-0.31198, 
      48}, {-0.10204, 25}, {-0.85682, 40}, {0.6749, 28}, {
     0.66121, 98}, {-0.97134, 20}, {0.89179, 73}, {-0.89332, 33}, {
     0.79596, 41}, {
     0.26295, 15}, {-0.14845, 66}, {-0.40733, 19}, {-0.55792, 15}, {-0.81882, 
      65}, {0.72793, 45}, {
     0.52267, 65}, {-0.51182, 44}, {-0.73972, 59}, {-0.39558, 38}, {-0.20397, 
      41}, {-0.20762, 55}, {-0.48038, 41}, {0.08596, 46}, {-0.20054, 53}, {
     0.29888, 49}, {0.68644, 40}, {-0.01182, 48}, {0.07569, 18}, {
     0.67781, 26}, {-0.68027, 42}, {0.68592, 81}, {-0.8983, 46}, {
     0.10608, 37}, {-0.05969, 42}, {-0.91947, 83}, {0.34298, 16}, {
     0.67073, 89}, {0.11291, 110}, {
     0.7125, 23}, {-0.60095, 50}, {-0.52705, 20}, {
     0.06534, 58}, {-0.2086, 34}, {-0.75023, 44}, {0.05737, 8}, {
     0.99933, 31}, {-0.39605, 120}, {0.14991, 28}, {0.61499, 62}, {
     0.28066, 65}, {-0.33182, 13}, {0.03392, 92}, {-0.37587, 85}, {
     0.72125, 19}, {-0.07847, 61}, {0.5079, 31}, {0.83268, 57}, {
     0.91721, 53}, {0.8282, 68}, {-0.16065, 54}, {-0.02734, 49}, {
     0.16496, 101}, {0.08798, 21}, {0.43641, 97}, {-0.18997, 58}, {
     0.98708, 35}, {-0.20262, 83}, {-0.87708, 59}, {
     0.88574, 16}, {-0.22868, 59}, {0.16919, 34}, {
     0.87087, 98}, {-0.37862, 40}, {
     0.17655, 17}, {-0.72802, 28}, {-0.49567, 59}, {0.81303, 43}, {
     0.07268, 65}, {0.12, 30}, {
     0.97612, 41}, {-0.15065, 109}, {-0.22415, 76}, {
     0.11588, 29}, {-0.89978, 65}, {0.04651, 55}, {
     0.20173, 65}, {-0.53244, 31}, {-0.01362, 97}, {-0.67326, 75}, {-0.03092, 
      27}, {0.18291, 19}, {
     0.2668, 87}, {-0.89871, 8}, {-0.64067, 91}, {-0.11057, 100}, {
     0.54357, 65}, {0.18572, 13}, {-0.79065, 46}, {
     0.5816, 46}, {-0.83727, 51}, {0.20284, 67}, {-0.94289, 56}, {
     0.88757, 46}, {-0.88909, 48}, {
     0.2658, 43}, {-0.22885, 21}, {-0.11892, 58}, {
     0.02585, 43}, {-0.70664, 38}, {-0.58983, 25}, {-0.28972, 109}, {-0.02081,
       42}, {0.50622, 87}, {-0.49439, 93}, {-0.42968, 88}, {
     0.61859, 43}, {-0.57494, 38}, {-0.57632, 58}, {-0.55855, 61}, {
     0.80148, 76}, {0.9743, 24}, {
     0.01436, 51}, {-0.40957, 41}, {-0.23015, 40}, {-0.16973, 76}, {-0.58487, 
      53}, {0.39274, 24}, {-0.95107, 81}, {-0.85213, 18}, {-0.00796, 43}, {
     0.87425, 34}, {0.31166, 17}, {
     0.67024, 21}, {-0.65155, 30}, {-0.09199, 34}, {0.65626, 50}, {
     0.17727, 32}, {-0.07429, 38}, {0.67479, 72}, {-0.80807, 38}, {
     0.58199, 32}, {0.5225, 29}, {0.32552, 10}, {0.36435, 73}, {
     0.44536, 46}, {-0.95819, 52}, {-0.4288, 47}, {-0.56991, 24}, {
     0.2704, 42}, {0.96019, 33}, {-0.60327, 62}, {-0.03383, 12}, {
     0.84683, 35}, {-0.89902, 32}, {0.1531, 82}, {0.34922, 28}, {
     0.20972, 65}, {-0.31967, 86}, {-0.14858, 34}, {-0.675, 33}, {
     0.65301, 18}, {0.56025, 8}, {-0.63017, 19}, {-0.31429, 44}, {
     0.39729, 102}, {0.72728, 83}, {
     0.20095, 16}, {-0.56682, 23}, {-0.99095, 19}, {0.56583, 27}, {
     0.17619, 62}, {0.80872, 65}, {0.17185, 72}, {0.33098, 19}, {
     0.71347, 90}, {-0.25526, 91}, {0.39468, 104}, {0.70976, 30}, {
     0.98039, 78}, {-0.86244, 20}, {-0.35151, 97}, {0.25032, 42}, {
     0.60225, 85}, {0.33716, 22}, {0.17227, 42}, {0.06096, 33}, {
     0.34731, 117}, {-0.95828, 30}, {-0.58332, 60}, {0.11939, 26}, {
     0.09353, 43}, {-0.57607, 32}, {-0.35277, 16}, {
     0.16538, 67}, {-0.69804, 49}, {
     0.07261, 56}, {-0.08584, 13}, {-0.56938, 18}, {-0.42686, 14}, {-0.19203, 
      31}, {-0.37775, 76}, {-0.07603, 28}, {-0.37756, 11}, {0.02976, 65}, {
     0.92539, 71}, {-0.71257, 56}, {-0.69999, 49}, {
     0.83057, 33}, {-0.94837, 53}, {-0.29394, 72}, {-0.54929, 32}, {
     0.59239, 29}, {-0.21871, 47}, {-0.11195, 55}, {0.10063, 103}, {
     0.12258, 73}, {0.26, 34}, {-0.29958, 36}, {-0.70985, 60}, {
     0.39668, 34}, {0.28714, 72}, {
     0.97625, 86}, {-0.45443, 18}, {-0.64612, 61}, {-0.78503, 48}, {-0.33675, 
      78}, {0.26978, 28}, {0.65991, 41}, {0.35522, 17}, {-0.32243, 83}, {
     0.9944, 81}, {-0.53879, 14}, {0.02584, 90}, {0.62262, 55}, {
     0.31671, 43}, {-0.36975, 25}, {-0.55466, 77}, {0.79927, 83}, {
     0.4436, 84}, {-0.18395, 52}, {-0.33597, 47}, {-0.40562, 63}, {-0.09425, 
      80}, {-0.55127, 74}, {0.85651, 104}, {-0.02564, 21}, {
     0.25105, 32}, {-0.78464, 34}, {-0.11377, 66}, {-0.44964, 29}, {-0.49976, 
      25}, {-0.3528, 23}, {-0.91969, 56}, {-0.75791, 56}, {0.8175, 36}, {
     0.51161, 56}, {0.39805, 12}, {0.56698, 56}, {0.49628, 23}, {
     0.19308, 22}, {0.27141, 33}, {
     0.15359, 47}, {-0.60443, 44}, {-0.54242, 25}, {0.20835, 47}, {
     0.34615, 15}, {0.80031, 52}, {
     0.14957, 83}, {-0.71237, 78}, {-0.19701, 9}, {0.64219, 89}, {
     0.50459, 43}, {-0.56234, 67}, {-0.37041, 74}, {0.56417, 21}, {
     0.31821, 69}, {0.54387, 32}, {0.64894, 36}, {
     0.3631, 26}, {-0.05523, 69}, {0.93909, 35}, {0.95898, 29}, {
     0.82804, 54}, {0.26897, 19}, {-0.28816, 28}, {
     0.26203, 62}, {-0.08, 12}, {
     0.0115, 37}, {-0.11897, 39}, {-0.29398, 56}, {-0.91663, 44}, {-0.82748, 
      61}, {-0.89386, 73}, {
     0.07998, 23}, {-0.28926, 22}, {-0.74578, 46}, {-0.27429, 104}, {
     0.48073, 73}, {
     0.89428, 19}, {-0.12742, 65}, {-0.19659, 40}, {-0.74777, 59}, {-0.5029, 
      52}, {-0.64334, 27}, {-0.00853, 55}, {
     0.11317, 14}, {-0.35233, 34}, {-0.84706, 16}, {-0.9324, 64}, {
     0.6591, 59}, {-0.52659, 53}, {-0.58668, 72}, {-0.40177, 69}, {-0.05827, 
      142}, {0.07239, 69}, {0.28433, 72}, {0.65898, 26}, {-0.06231, 68}, {
     0.78696, 73}, {-0.90413, 47}, {0.51249, 102}, {0.2201, 33}, {
     0.97449, 39}, {-0.1594, 34}, {0.99424, 81}, {0.22664, 73}, {
     0.40863, 13}, {0.24978, 43}, {-0.18869, 32}, {
     0.28852, 58}, {-0.87668, 50}, {0.38304, 72}, {0.86937, 69}, {
     0.32459, 35}, {-0.00835, 41}, {-0.94743, 86}, {-0.82899, 18}, {
     0.63404, 25}, {0.63792, 27}, {
     0.08838, 112}, {-0.9022, 78}, {-0.49196, 62}, {-0.24578, 90}, {
     0.54197, 51}, {0.33683, 47}, {0.76333, 41}, {
     0.86787, 30}, {-0.04826, 83}, {0.5402, 37}, {-0.21596, 22}, {
     0.63565, 37}, {-0.36906, 68}, {-0.62127, 64}, {
     0.12117, 33}, {-0.50165, 58}, {-0.49744, 19}, {0.51079, 46}, {
     0.38583, 22}, {0.19192, 40}, {0.80299, 42}, {
     0.81895, 31}, {-0.48504, 44}, {-0.71334, 76}, {
     0.73874, 18}, {-0.98375, 27}, {-0.66566, 33}, {-0.71246, 35}, {
     0.42522, 82}, {0.02415, 37}, {-0.05443, 57}, {-0.50501, 10}, {
     0.93775, 17}, {0.13356, 69}, {
     0.39841, 72}, {-0.25357, 99}, {-0.73786, 47}, {-0.82835, 47}, {
     0.14072, 79}, {0.20077, 50}, {0.8042, 30}, {
     0.75021, 87}, {-0.19586, 63}, {0.77823, 25}, {-0.57407, 50}, {
     0.64387, 23}, {-0.05488, 12}, {-0.75654, 53}, {0.30591, 52}, {
     0.2492, 24}, {0.57774, 27}, {0.30697, 36}, {0.84672, 18}, {
     0.5623, 25}, {-0.18246, 65}, {
     0.3076, 78}, {-0.08798, 48}, {-0.00025, 51}, {-0.63065, 43}, {-0.43165, 
      46}, {0.87847, 81}, {-0.08422, 88}, {-0.73653, 46}, {-0.86371, 
      43}, {-0.58634, 100}, {-0.60533, 87}, {0.05985, 20}, {
     0.16744, 43}, {-0.05457, 69}, {0.20252, 29}, {-0.71203, 48}, {
     0.33407, 31}, {-0.25153, 28}, {-0.56276, 104}, {-0.68088, 41}, {-0.08428,
       60}, {0.19501, 69}, {-0.44215, 24}, {-0.83043, 48}, {0.97201, 49}, {
     0.3368, 56}, {0.53087, 39}, {0.52233, 76}, {0.40836, 50}, {
     0.66484, 29}, {
     0.91903, 88}, {-0.84754, 45}, {-0.77599, 51}, {-0.65694, 21}, {
     0.22264, 16}, {0.73467, 60}, {-0.56506, 43}, {0.74953, 32}, {
     0.9887, 20}, {-0.53685, 21}, {-0.34357, 23}, {-0.06908, 67}, {
     0.86891, 82}, {0.49375, 116}, {-0.8307, 92}, {
     0.48033, 26}, {-0.06842, 20}, {-0.53446, 135}, {-0.05225, 94}, {-0.32267,
       71}, {-0.393, 30}, {-0.27628, 39}, {
     0.80944, 68}, {-0.76902, 19}, {-0.90291, 59}, {-0.16119, 22}, {
     0.70497, 62}, {-0.64784, 49}, {0.14657, 25}, {0.66033, 11}, {
     0.13198, 16}, {0.39649, 66}, {0.83854, 79}, {0.62086, 30}, {
     0.37141, 28}, {
     0.95402, 30}, {-0.80808, 31}, {-0.10276, 80}, {-0.81896, 65}, {
     0.999, 62}, {-0.04093, 19}, {-0.70841, 21}, {0.82416, 54}, {
     0.84609, 77}, {0.09839, 30}, {0.68885, 34}, {-0.60181, 23}, {
     0.72127, 47}, {-0.7383, 22}, {-0.72245, 58}, {-0.89706, 24}, {
     0.07851, 25}, {-0.63179, 20}, {-0.91058, 62}, {-0.88549, 70}, {
     0.35572, 27}, {-0.60575, 45}, {0.5943, 31}, {
     0.63953, 68}, {-0.22719, 64}, {
     0.01881, 64}, {-0.94046, 26}, {-0.869, 63}, {-0.04108, 111}, {-0.89718, 
      65}, {-0.1577, 59}, {0.17426, 56}, {-0.21248, 53}, {-0.69587, 68}, {
     0.24792, 23}, {
     0.17619, 66}, {-0.08002, 34}, {-0.7544, 30}, {-0.01516, 40}, {
     0.29485, 29}, {0.59555, 43}, {0.48004, 17}, {
     0.46507, 65}, {-0.31296, 48}, {-0.86961, 54}, {-0.5511, 68}, {-0.93854, 
      37}, {0.66359, 30}, {0.39555, 42}, {
     0.96187, 41}, {-0.62089, 43}, {-0.74719, 22}, {
     0.02643, 5}, {-0.8265, 82}, {-0.62114, 13}, {-0.11751, 119}, {-0.5668, 
      19}, {-0.45534, 25}, {
     0.64945, 41}, {-0.29923, 51}, {-0.79544, 91}, {-0.38324, 73}, {
     0.84927, 27}, {-0.3739, 74}, {-0.59829, 58}, {0.62548, 57}, {
     0.94041, 46}, {0.66452, 31}, {-0.44846, 43}, {
     0.77756, 52}, {-0.84363, 47}, {-0.0974, 16}, {
     0.50296, 46}, {-0.68047, 45}, {-0.03157, 53}, {-0.12897, 41}, {
     0.30696, 78}, {-0.75096, 11}, {-0.67495, 35}, {
     0.68356, 28}, {-0.27726, 21}, {-0.83437, 58}, {0.18149, 11}, {
     0.37607, 22}, {0.04036, 23}, {-0.55597, 37}, {-0.12584, 14}, {
     0.7878, 54}, {-0.35058, 69}, {-0.07957, 83}, {
     0.85714, 72}, {-0.43091, 55}, {-0.72981, 23}, {-0.59138, 26}, {
     0.80836, 30}, {-0.81777, 54}, {
     0.21342, 83}, {-0.10376, 41}, {-0.86876, 27}, {-0.38565, 54}, {-0.92271, 
      78}, {-0.19847, 42}, {0.96848, 32}, {-0.61737, 46}, {-0.15145, 33}, {
     0.85859, 39}, {0.86839, 79}, {0.55653, 74}, {-0.64631, 16}, {
     0.23834, 62}, {-0.23814, 117}, {-0.54975, 19}, {-0.76697, 21}, {
     0.01601, 14}, {-0.41451, 34}, {0.29123, 12}, {0.51442, 59}, {
     0.7405, 81}, {0.63611, 47}, {0.22499, 104}, {
     0.73568, 22}, {-0.09556, 54}, {0.50047, 33}, {
     0.00973, 71}, {-0.16231, 76}, {0.69507, 29}, {-0.28866, 104}, {
     0.64547, 59}, {0.63059, 53}, {
     0.21898, 4}, {-0.7292, 19}, {-0.91819, 45}, {
     0.48089, 18}, {-0.27315, 26}, {-0.71406, 88}, {-0.42815, 35}, {
     0.89311, 44}, {0.02195, 68}, {-0.66245, 29}, {0.50289, 54}, {
     0.27229, 83}, {0.20254, 80}, {0.60259, 79}, {
     0.69641, 34}, {-0.66027, 68}, {-0.28645, 60}, {-0.48261, 29}, {-0.02897, 
      54}, {0.26077, 19}, {0.84945, 61}, {-0.37029, 91}, {-0.83393, 28}, {
     0.97422, 33}, {0.78967, 114}, {
     0.76166, 21}, {-0.51548, 62}, {-0.5922, 26}, {0.70146, 41}, {
     0.48313, 52}, {0.15111, 61}, {-0.98537, 78}, {-0.80983, 39}, {
     0.95815, 84}, {0.26547, 28}, {-0.67824, 51}, {0.75084, 28}, {
     0.84803, 25}, {
     0.02396, 72}, {-0.76575, 36}, {-0.55818, 30}, {-0.86702, 65}, {
     0.14571, 40}, {0.03283, 17}, {-0.33511, 32}, {0.64853, 13}, {
     0.74451, 55}, {-0.15226, 14}, {0.25149, 53}, {
     0.34237, 112}, {-0.64145, 62}, {-0.73506, 31}, {0.74466, 47}, {
     0.48148, 64}, {-0.31904, 45}, {
     0.7557, 41}, {-0.46974, 45}, {-0.56962, 18}, {-0.43431, 101}, {
     0.12168, 46}, {-0.85192, 83}, {-0.64442, 20}, {-0.24536, 32}, {
     0.18225, 23}, {0.4848, 71}, {-0.16601, 86}, {0.52251, 31}, {
     0.45715, 32}, {0.10398, 24}, {0.1853, 56}, {
     0.32307, 44}, {-0.93093, 78}, {-0.12852, 27}, {0.93885, 46}, {
     0.48413, 55}, {0.69504, 63}, {-0.74693, 70}, {-0.22911, 73}, {
     0.47917, 47}, {0.61961, 47}, {0.54425, 78}, {-0.07498, 47}, {
     0.80825, 23}, {-0.33255, 83}, {
     0.11908, 19}, {-0.32205, 40}, {-0.94882, 25}, {-0.49857, 76}, {-0.92034, 
      16}, {0.00079, 62}, {0.96698, 18}, {-0.17101, 52}, {
     0.03961, 81}, {-0.59585, 90}, {-0.78985, 63}, {
     0.87102, 27}, {-0.82552, 72}, {-0.78785, 71}, {-0.73059, 74}, {-0.19195, 
      48}, {-0.47026, 27}, {0.49215, 42}, {-0.08556, 100}, {-0.3001, 68}, {
     0.88406, 11}, {-0.87124, 64}, {0.42676, 71}, {-0.96448, 40}, {
     0.20012, 67}, {-0.10579, 27}, {0.68537, 36}, {-0.32205, 31}, {
     0.1316, 68}, {-0.05394, 74}, {-0.15433, 33}, {-0.12683, 15}, {
     0.22174, 15}, {0.76374, 27}, {0.11315, 37}, {-0.1661, 78}, {
     0.3147, 100}, {-0.24824, 33}, {
     0.48495, 20}, {-0.21389, 68}, {-0.33318, 58}, {-0.9186, 58}, {
     0.07455, 66}, {-0.73354, 43}, {0.34131, 74}, {
     0.23413, 21}, {-0.08787, 43}, {0.76984, 57}, {
     0.41333, 79}, {-0.46166, 50}, {0.31432, 13}, {0.62359, 52}, {
     0.82469, 88}, {0.56686, 34}, {0.26467, 13}, {-0.13476, 22}, {
     0.13017, 80}, {-0.53006, 30}, {-0.88223, 35}, {
     0.40595, 51}, {-0.017, 40}, {-0.59603, 30}, {-0.15319, 13}, {-0.30303, 
      111}, {0.66637, 59}, {0.2554, 19}, {0.1352, 136}, {0.19549, 15}, {
     0.49486, 56}, {0.60851, 52}, {-0.65245, 97}, {-0.53593, 16}, {
     0.82832, 64}, {-0.21764, 50}, {-0.3731, 61}, {-0.97386, 53}, {-0.05086, 
      33}, {0.28202, 36}, {0.26915, 45}, {0.32124, 20}, {0.01744, 15}, {
     0.24777, 58}, {-0.2394, 67}, {0.58371, 24}, {-0.94866, 124}, {
     0.77615, 20}, {-0.86836, 61}, {-0.7783, 35}, {-0.73081, 44}, {-0.08273, 
      64}, {-0.81901, 100}, {-0.91478, 24}, {-0.24442, 57}, {
     0.08411, 19}, {-0.97326, 57}, {-0.72398, 47}, {
     0.46485, 83}, {-0.68451, 63}, {-0.5731, 30}, {-0.65785, 59}, {-0.25597, 
      36}, {0.85754, 21}, {0.50749, 14}, {0.3769, 19}, {0.19125, 40}, {
     0.39288, 80}, {-0.44378, 35}, {-0.55583, 21}, {-0.8511, 35}, {
     0.85805, 68}, {0.47502, 46}, {
     0.39109, 56}, {-0.95603, 71}, {-0.003, 50}, {
     0.45117, 76}, {-0.03258, 83}, {
     0.16881, 62}, {-0.96609, 44}, {-0.6618, 51}, {-0.77918, 21}, {
     0.84898, 59}, {-0.09169, 72}, {0.70908, 88}, {
     0.37794, 22}, {-0.68772, 70}, {-0.14916, 101}, {-0.34447, 67}, {-0.3798, 
      42}, {0.14316, 44}, {0.31319, 75}, {
     0.77893, 53}, {-0.21247, 48}, {-0.27394, 15}, {0.90706, 74}, {
     0.28376, 47}, {-0.35905, 66}, {0.75241, 107}, {0.05652, 107}, {
     0.08453, 42}, {
     0.95387, 77}, {-0.00901, 35}, {-0.01132, 36}, {-0.52582, 26}, {-0.11777, 
      84}, {-0.04945, 29}, {0.09457, 57}, {0.21509, 100}, {0.44458, 42}, {
     0.12337, 16}, {-0.99709, 36}, {-0.00593, 84}, {-0.92656, 25}, {
     0.81875, 39}, {-0.63362, 73}, {
     0.63469, 39}, {-0.76007, 30}, {-0.62227, 53}, {-0.43634, 23}, {
     0.29525, 64}, {0.85046, 15}, {-0.93339, 28}, {-0.87188, 28}, {
     0.26911, 51}, {0.40515, 116}, {0.01035, 41}, {0.3482, 41}, {
     0.8193, 44}, {-0.54991, 26}, {0.98053, 107}, {0.96069, 63}, {
     0.34175, 54}, {-0.47625, 76}, {0.3528, 100}, {0.70775, 65}, {
     0.30141, 93}, {0.65515, 114}, {0.22291, 13}, {0.00399, 35}, {
     0.23354, 23}, {0.90011, 95}, {-0.94805, 91}, {0.46794, 58}, {
     0.5847, 11}, {-0.0942, 44}, {-0.27246, 29}, {-0.09106, 65}, {-0.59068, 
      13}, {0.04774, 35}, {-0.64373, 64}, {-0.10978, 23}, {0.72928, 17}, {
     0.57158, 65}, {-0.80192, 33}, {-0.96188, 43}, {-0.82995, 75}, {-0.63867, 
      39}, {0.64683, 25}, {-0.12884, 45}, {-0.44703, 61}, {-0.61967, 
      34}, {-0.76413, 71}, {-0.37691, 25}, {0.40327, 54}, {-0.44791, 15}, {
     0.75777, 73}, {-0.21776, 60}, {
     0.87157, 17}, {-0.81744, 53}, {-0.10023, 19}, {
     0.2774, 86}, {-0.64479, 23}, {-0.50953, 51}, {-0.9013, 37}, {
     0.85091, 70}, {-0.6498, 58}, {-0.60642, 30}, {0.42976, 46}, {
     0.85338, 56}, {-0.6542, 64}, {-0.63589, 22}, {0.36667, 56}, {
     0.44876, 46}, {-0.7441, 61}, {0.63048, 64}, {
     0.44411, 69}, {-0.18036, 15}, {0.69243, 45}, {0.34085, 30}, {
     0.62503, 13}, {-0.28973, 124}, {0.4693, 73}, {0.65951, 78}, {
     0.65923, 34}, {-0.51492, 74}, {0.35716, 52}, {0.18676, 17}, {
     0.06086, 48}, {0.81317, 41}, {0.72993, 62}, {
     0.41251, 72}, {-0.67225, 16}, {-0.51651, 44}, {
     0.3673, 22}, {-0.82624, 13}, {0.00735, 98}, {0.71448, 74}, {
     0.32528, 153}, {-0.46338, 129}, {-0.36314, 31}, {-0.66095, 50}, {
     0.98278, 58}, {0.55221, 51}, {-0.10526, 44}, {-0.67236, 29}, {
     0.99478, 49}, {-0.89984, 77}, {-0.62813, 78}, {-0.27627, 60}, {-0.90036, 
      64}, {0.22499, 72}, {0.17808, 36}, {0.9418, 50}, {-0.70075, 32}, {
     0.74995, 56}, {0.04231, 36}, {0.49785, 64}, {0.97137, 54}, {
     0.57895, 52}, {
     0.05592, 101}, {-0.73209, 34}, {-0.4706, 80}, {-0.93841, 71}, {-0.74258, 
      34}, {0.20996, 93}, {0.8888, 46}, {-0.6534, 27}, {-0.88882, 50}, {
     0.31926, 39}, {0.41476, 72}, {0.50941, 24}, {0.36524, 68}, {
     0.67342, 51}, {-0.41171, 70}, {-0.75369, 62}, {0.89378, 34}, {
     0.81761, 76}, {-0.93157, 69}, {0.15329, 81}, {-0.87332, 50}, {
     0.79978, 75}, {0.13002, 56}, {0.2391, 103}, {0.90258, 35}, {
     0.70568, 33}, {0.63636, 29}, {-0.1999, 62}, {
     0.46681, 13}, {-0.84023, 32}, {0.23612, 57}, {0.02109, 36}, {
     0.26816, 14}, {0.35181, 65}, {
     0.81337, 36}, {-0.94568, 37}, {-0.29579, 77}, {-0.76346, 54}, {
     0.28054, 39}, {-0.83175, 47}, {-0.73566, 36}, {0.4577, 63}, {
     0.08897, 72}, {0.19227, 48}, {0.52432, 61}, {0.33546, 32}, {
     0.19264, 27}, {0.97338, 82}, {-0.96361, 33}, {0.5339, 33}, {
     0.29697, 33}, {0.65434, 51}, {0.66628, 95}, {-0.52001, 79}, {
     0.55199, 68}, {-0.34603, 73}, {-0.02714, 68}, {0.06997, 23}, {
     0.23763, 99}, {-0.05599, 36}, {-0.23733, 8}, {
     0.3842, 20}, {-0.81537, 31}, {-0.3589, 40}, {
     0.02849, 14}, {-0.3374, 77}, {-0.97013, 89}, {
     0.49603, 36}, {-0.35664, 41}, {
     0.66268, 68}, {-0.54335, 35}, {-0.25765, 42}, {-0.32989, 56}, {
     0.74244, 59}, {0.73314, 29}, {0.64733, 17}, {
     0.37378, 66}, {-0.80376, 58}, {-0.37399, 35}, {
     0.63609, 91}, {-0.06214, 69}, {0.92144, 29}, {0.14669, 13}, {
     0.56759, 76}, {0.60891, 47}, {
     0.63849, 53}, {-0.31495, 36}, {-0.33028, 82}, {
     0.3256, 73}, {-0.25199, 90}, {0.31039, 11}, {0.58171, 36}, {
     0.68874, 36}, {0.27339, 85}, {-0.13211, 7}, {0.30351, 62}, {
     0.11404, 40}, {0.68052, 71}, {0.01224, 52}, {
     0.82214, 27}, {-0.47907, 57}, {-0.09415, 33}, {
     0.00891, 81}, {-0.21194, 78}, {-0.76628, 98}, {0.06505, 82}, {
     0.34525, 86}, {0.55772, 58}, {
     0.79437, 32}, {-0.6252, 52}, {-0.68459, 26}, {0.86873, 100}, {
     0.61583, 63}, {0.18663, 96}, {-0.83688, 28}, {-0.06359, 54}, {
     0.97345, 26}, {-0.61916, 29}, {0.22157, 76}, {
     0.25592, 40}, {-0.48608, 107}, {-0.36276, 52}, {-0.6523, 81}, {
     0.72205, 26}, {-0.07421, 50}, {-0.61771, 19}, {-0.66189, 18}, {-0.64143, 
      107}, {-0.31696, 26}, {0.26894, 31}, {-0.54586, 113}, {0.22018, 38}, {
     0.66705, 58}, {-0.18658, 27}, {0.07429, 24}, {0.47613, 63}, {
     0.93363, 65}, {-0.44347, 77}, {0.96337, 56}, {
     0.49463, 24}, {-0.92352, 53}, {-0.83408, 54}, {-0.18949, 18}, {-0.63532, 
      71}, {0.55845, 40}, {-0.83429, 67}, {-0.25168, 63}, {-0.90731, 
      13}, {-0.12914, 41}, {0.10738, 60}, {0.22373, 37}, {0.40971, 74}, {
     0.35836, 16}, {-0.90971, 26}, {-0.74945, 47}, {-0.85578, 51}, {-0.97505, 
      28}, {0.68969, 91}, {-0.66728, 25}, {0.17473, 48}, {0.18963, 26}, {
     0.80553, 48}, {-0.62372, 43}, {
     0.57914, 62}, {-0.86832, 19}, {-0.175, 20}, {-0.19736, 39}, {
     0.94899, 43}, {0.24566, 7}, {
     0.91692, 50}, {-0.00599, 19}, {-0.01821, 79}, {-0.53657, 75}, {
     0.60569, 49}, {-0.33672, 74}, {-0.1076, 61}, {0.76993, 77}, {
     0.78699, 37}, {-0.10851, 25}, {-0.96029, 15}, {-0.32059, 41}, {
     0.43116, 68}, {0.995, 50}, {-0.0415, 66}, {-0.64914, 63}, {
     0.73051, 18}, {
     0.78492, 19}, {-0.94986, 33}, {-0.69028, 38}, {-0.50632, 17}, {-0.63277, 
      67}, {-0.10169, 13}, {0.62695, 19}, {-0.47218, 25}, {-0.42136, 44}, {
     0.24168, 16}, {
     0.03642, 71}, {-0.0415, 42}, {-0.2869, 44}, {-0.9991, 45}, {-0.30383, 
      76}, {-0.41649, 47}, {0.49665, 48}, {-0.58432, 22}, {0.85348, 22}, {
     0.37, 45}, {-0.37398, 26}, {-0.36813, 85}, {-0.24136, 49}, {
     0.12388, 25}, {0.43933, 18}, {0.04922, 49}, {-0.92599, 65}, {
     0.02943, 63}, {-0.10205, 80}, {0.85968, 44}, {0.29066, 65}, {
     0.68822, 77}, {0.65221, 47}, {0.50272, 37}, {0.60921, 11}, {
     0.73249, 25}, {0.23621, 37}, {-0.38668, 51}, {-0.06847, 103}, {
     0.42171, 37}, {-0.36289, 85}, {-0.83537, 74}, {-0.98423, 57}, {-0.53643, 
      61}, {-0.93259, 29}, {-0.01424, 20}, {0.20929, 50}, {0.67128, 32}, {
     0.93603, 83}, {-0.28177, 38}, {-0.0632, 105}, {-0.91389, 11}, {
     0.73812, 12}, {-0.70545, 35}, {
     0.09354, 23}, {-0.57063, 11}, {-0.9349, 91}, {0.07235, 72}, {
     0.75814, 38}, {-0.11781, 32}, {0.73979, 35}, {0.38108, 63}, {
     0.66158, 51}, {-0.95579, 28}, {-0.04485, 9}, {
     0.14668, 56}, {-0.74667, 36}, {-0.20643, 27}, {-0.78377, 96}, {
     0.34997, 18}, {0.33491, 58}, {-0.28471, 32}, {-0.47901, 96}, {
     0.62461, 22}, {-0.89051, 67}, {0.6903, 24}, {-0.77586, 60}, {
     0.0479, 32}, {-0.22864, 77}, {
     0.231, 55}, {-0.1363, 29}, {-0.60311, 72}, {-0.86368, 28}, {-0.53711, 
      56}, {0.79323, 56}, {-0.87734, 70}, {
     0.75375, 77}, {-0.9691, 74}, {-0.96842, 42}, {0.24531, 27}, {
     0.36336, 55}, {0.20332, 46}, {0.87732, 45}, {0.31385, 10}, {
     0.6259, 38}, {-0.47999, 68}, {-0.1538, 32}, {-0.30088, 45}, {
     0.67252, 20}, {-0.08385, 35}, {-0.01758, 59}, {-0.30404, 30}, {
     0.56566, 96}, {-0.84334, 56}, {
     0.12011, 27}, {-0.48809, 28}, {-0.90887, 32}, {-0.2701, 30}, {
     0.64127, 35}, {0.86116, 65}, {-0.49036, 58}, {-0.42853, 14}, {
     0.74127, 72}, {0.84777, 28}, {0.8818, 70}, {0.60439, 69}, {
     0.87154, 41}, {-0.45252, 103}, {-0.22297, 49}, {-0.86478, 28}, {-0.29523,
       18}, {-0.48824, 58}, {0.18394, 67}, {0.84227, 30}, {0.9191, 37}, {
     0.08631, 47}, {0.92964, 36}, {0.0101, 95}, {-0.03149, 100}, {
     0.89299, 69}, {0.53036, 61}, {-0.5995, 59}, {0.02963, 34}, {
     0.30201, 44}, {0.18771, 23}, {0.53483, 71}, {-0.313, 48}, {
     0.33435, 32}, {-0.45953, 28}, {0.10684, 72}, {-0.6358, 34}, {
     0.88867, 39}, {-0.30549, 40}, {0.36129, 24}, {-0.65327, 20}, {
     0.00398, 50}, {-0.52904, 78}, {
     0.85568, 111}, {-0.3604, 65}, {-0.60944, 73}, {0.60449, 43}, {
     0.55613, 28}, {-0.03546, 29}, {-0.34321, 29}, {-0.51289, 47}, {-0.38527, 
      50}, {-0.78197, 64}, {-0.18526, 16}, {-0.69607, 123}, {-0.04028, 92}, {
     0.35746, 76}, {-0.96393, 99}, {-0.45792, 49}, {0.56501, 38}, {
     0.5459, 72}, {
     0.10183, 53}, {-0.07993, 46}, {-0.77003, 10}, {-0.34115, 79}, {
     0.15861, 53}, {-0.45952, 76}, {-0.8679, 56}, {0.24127, 27}, {
     0.51014, 35}, {-0.06651, 64}, {-0.49688, 18}, {-0.56957, 88}, {-0.57851, 
      105}, {0.38762, 23}, {-0.9371, 63}, {-0.5138, 27}, {-0.66067, 40}, {
     0.09939, 28}, {-0.60264, 34}, {-0.69636, 22}, {-0.12266, 40}, {-0.34922, 
      90}, {0.96367, 41}, {0.63803, 59}, {-0.0085, 50}, {
     0.00474, 70}, {-0.76833, 68}, {0.37646, 30}, {
     0.57695, 33}, {-0.4405, 88}, {-0.48387, 23}, {-0.8075, 124}, {-0.71709, 
      52}, {0.21385, 14}, {0.26693, 65}, {0.94622, 25}, {
     0.71669, 35}, {-0.67386, 38}, {0.01821, 24}, {0.43888, 63}, {
     0.6731, 34}, {0.69849, 48}, {-0.71125, 70}, {0.23944, 61}, {
     0.2545, 102}, {0.64793, 26}, {
     0.09268, 64}, {-0.44381, 17}, {-0.80224, 22}, {-0.5043, 57}, {-0.45554, 
      56}, {0.2738, 103}, {0.14676, 49}, {0.9462, 54}, {
     0.36378, 28}, {-0.65668, 39}, {0.65025, 14}, {0.14963, 48}, {
     0.38648, 37}, {-0.10601, 11}, {0.02272, 119}, {-0.383, 48}, {
     0.57283, 46}, {-0.16964, 81}, {-0.89442, 107}, {-0.25703, 43}, {-0.66698,
       59}, {0.11896, 16}, {-0.65534, 53}, {
     0.54201, 32}, {-0.03382, 54}, {-0.9003, 44}, {-0.46468, 27}, {-0.12923, 
      54}, {-0.95526, 10}, {-0.11255, 23}, {
     0.70351, 26}, {-0.87513, 25}, {-0.51229, 82}, {-0.82281, 20}, {-0.08461, 
      75}, {0.93509, 28}, {0.06611, 30}, {0.29709, 45}, {0.80789, 20}, {
     0.75181, 48}, {-0.54875, 22}, {-0.15564, 18}, {
     0.75886, 87}, {-0.5786, 76}, {0.44996, 40}, {
     0.56257, 60}, {-0.2034, 38}, {
     0.63265, 64}, {-0.77007, 90}, {-0.09999, 17}, {-0.11013, 18}, {-0.24983, 
      82}, {-0.98499, 25}, {0.82244, 29}, {-0.96746, 53}, {0.96016, 32}, {
     0.25032, 20}, {0.14668, 39}, {
     0.41234, 26}, {-0.53572, 120}, {-0.65659, 46}, {
     0.60257, 80}, {-0.81784, 24}, {
     0.42602, 68}, {-0.29668, 16}, {-0.53338, 45}, {-0.35586, 19}, {
     0.71582, 41}, {0.85058, 77}, {-0.18315, 62}, {-0.25294, 69}, {
     0.52362, 24}, {0.76063, 12}, {-0.78531, 11}, {0.06595, 48}, {
     0.03977, 71}, {0.5443, 41}, {0.04643, 45}, {
     0.95437, 29}, {-0.18423, 50}, {-0.80557, 47}, {-0.54738, 66}, {
     0.53453, 65}, {0.44298, 33}, {-0.55038, 36}, {0.14804, 23}, {
     0.44792, 50}, {0.70384, 35}, {-0.70103, 51}, {-0.33805, 14}, {
     0.67886, 29}, {0.61775, 31}, {
     0.25002, 37}, {-0.98531, 44}, {-0.48698, 34}, {0.99284, 27}, {
     0.27253, 84}, {-0.37638, 49}, {
     0.43035, 20}, {-0.37275, 37}, {-0.36154, 33}, {-0.33106, 32}, {
     0.40546, 16}, {0.35234, 68}, {-0.67814, 12}, {
     0.12916, 37}, {-0.18555, 14}, {-0.93947, 85}, {
     0.26674, 68}}, CompressedData["
1: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
dispscDNcw4UlQ8fa0H21o9cGsUIIC7qGX5Yo42O3+mdqhN39jMIj/Gq8SqR
EJP9lt0pb9KB4YLsvQuPiSCHm47zvYzN396Orb5WeT4K+h3Tt5y9ekGQuiKd
n1SPmAqorj9Wh1Fzn/Kpf4+x/Damesvh7sY47JN0f96sNwzXfb87icjVw3sz
zl86Lp3o2sMV7of22Pvv+DoXedmwAzTI4QZmijh0rPrFPavePiTaQXmj964b
PBP7/kyZYvFb2DKr42BIgX/V0vynfUfBUYx6J0OhHQYfdO2/cbEBZclmHNLN
wd5HfvXsTmZoocI8P1m/gGUS9oVGZ/w6RQWJyWMr/P+R4I79vG5c2Gc6f1Ll
aqjIv1rY6cAaKFVJRN6L76PFEkoQh1nKcpEXCaJreY7glLPo+Ip+luc6IVRg
f/jhWMeWCfhD3rtlK8s4qEmRuin6vXCzRv/vUBj2ex/JmoOpN56PgFP9bLVI
YTuM7LpzMyWqHeFKI3LfaY+if5fCpJSPYfvGGqz8YXvFJiDtxouRE51zcP7G
PtNPhCX4bPJn69rsCniebmjeFoDl27yJT/diKprgjlHOh2ehm/q50cLLnK8F
Lex9dVz3MAHUi1Zm+v5g87HXnFV+PD0UCAhe36ksTwHJqLPPlh/hwR0fxf92
4xE6VvtXw0Yamx9ueSXfyahFhbWTlg+cBqmQY1DWuP/IEDTfqF6I+1kHTa+/
u6jYYvtjKywX1y3LaGCxL5MpaccsnFzd9j3dcx5SPQZPvY6cB9dmgu6VzTr7
f3iuH/WSnnk0SEwRD7YemAEP/L2ZPOZ5sMHX4QfQHNxTtKPJGmDv4xO51rbu
3RTgHnG1bN/Ufc8e1kq63sHD7v27xTWlvZHKdHwpkwpmP4vUDz+LqXFg+rOR
czZyCNIFGf5pWiFgS2c+JCHcg9IiPzNLbcXyybMqHY2EKhrsoh6zFBGchbWg
lJ1OmfMw2i2TajkxDxzrMTz+PFg+DNeRedyhNgYuXsKGD7M2+2cbt5HZo+Xo
fWkoY5LzEEJL8Uv57zH/3//fHd9MzgkI/xdUURkzBzykc01Z+pv1lEXiiLT9
CvwUHHMzeovpGTUn9hSNIyQY6dHTIlTkoi+jfGxVj8nIUtjbd3iyHykuutVc
qcTeO8w+6HdP8LRCW3LPLDkbj5ykxl54v+1E/fvYSWa8OGBkeie/OwvT55kq
whza7l3gNtMSWLWtH01ff8M0tYRD9kaPbRwCWyHtV8W9v2+x+Vv5mFPjvvw2
4LVR+WDyG4ee7tp91kagF8nG+PhetugD35z8lNuSWD2quMBlrtLdDaM8cun3
VftQV5INb8QBAtqpLcRWb9gIsbvYc6JyMD32ZXuOeuzfBLjJIPvKVZCIfn3q
U9p/uRmKngh5C3zoAdlgBXab/dg8zfaUSFR/9WY/+HMhfNsrIlra/vIZ0bEC
/X5d7mauT4Ivq+5qMkaYHjY/ID/ZVE6D4sLvl3rYZyHCKYeQ/nQerg1tPWSc
Nw+X/r5/PlGD+adT00mrmh00EFLfYtHCOwXuHVoH1xMn4FuYLPPD5VFwlbL3
MGXA9HB3dD5zz+I4aAtk0z53D8HWvIC7zwNrIS6/6FmiWjfqtUor/orD/MF7
9LXKkVtUGBdMCWpJoEHsKa7PaWajECsaXN2u1wGmB5Y9UlrKsX6QUPj9MbUQ
CIF6ErGCJBR/PJlPXu8TKDm/3VHpSgAR+bPyDy2wfYb67+ieRAwN5CsGNDOd
Z6DiYuHTUcY5YH2nVFI7PgO3IkOuaDli9YscbXyTs38EeJp3RL6z6gRZYhPL
4Wet6PvZb1ZxjKPol+IF7R0+2H5RPWOj/ZvgCGAQSzgavll3BRdrFU8MtcJd
txd5X151wv7ms7DAjcVjbwnV8Z1UPHr83/6ku+04dNm1uWkLdx+4r7okjjyt
gJIm/kN31DF9uzCSoS15qxee2HUSzGp70FNBJmfzPiK6yfD9CttoBRxc+9f/
32usni6Wdl4wEKEBwwz12NrdKYjC39ltvXk+vZ1qe+t7xmEHUjIRVML8c2cQ
9/64WhxUP+Nhz5dsQrWWTlcm7pCRP0egWIZLKSph2xhu68Dmb50hKerFOjRw
jsoSldo+Dd1eq3pW1VNw2Dls2IefBkhp3eBKJmYPw2jCvWyNQdC5dLzTQD0G
uD7+fP3BagA9eUsev6g6iBSCa9iTNQPo51XSU1CQcm8CiQUBZ5EUAiLt/5nS
cKcZbRQ//dNwlQDRhZcKy3600PmXgn3jPmwnANuv9dcnzWqR9uejC12b+rD0
q0e4d1ET2pAflIz6n/3wnjcKn+UfpcCFGzvi7+sRUYT6KyJxrBFuOPnOX8zu
hV0Z9RnzPpi+bZJGdZMvaGC3x9Cf58IMEBUatUU2dSVhRVc/0ncG5uT47vf0
Y/OxoxGishW+/nBu14JduCsBLV4tcKjsa4cH10Pvvphrg4OaR+LxOZg/7Gkr
F7dWTYaZ8MtOtipEVLxap/3Vpwk+Pq918jPtBa+mdWlyI2aP6rdEey/GNAjw
V2TucSIi/513z/klN0DFy8K1VtM+yGYttL4+ic0bHW9eL+eppkEW19sSTeFZ
cNjJxR2WO79Z158qEL/Mw6+LZtNu+7F8numPp7BUFIBTbqtp6///Pe4lJVM3
kc9QckcumrR5z/FCAgyXj3XQ+XeV+g1StXGgx93Q92StGeF3zXnP8pBRvZef
tTX+I1KpzrOuImD58y+76HGDTCqsqu1Z/RK62fc7fNBokqHAy/d3xtw6cCAT
cLSs2e8FNu9izgoZzibB03Niu2LY3yGq4Jb5GanN+Fsz4lQJxKNVvwMlJv8Q
ln+q96XqK1PhqEwYEVdBhSfLBC78JzI0+lBqhcJqobHynZ34ErYfrt5x9eBH
uU0dc21OM3PPPExd35CX0l2GwMupZQ4xXyG0dPr3Yio2f7jNOhF3hIkC4Uea
X8vbD8Owy0y+xst6ENdmqM7c2onE2pQfnjqD5TcR6fAhWaV+qHHe0x5+vx05
hzp9/CA+iKal81W2BjlCpLNWi/9JLF4e7Q2PfdtAgI0dS7dHiyqQ0IB82sO/
ZKR990Ji8dUONKQVdmL7a6x+Xd+X9XuQeQwCiuedTFj74T23POdYXhUSCuvQ
MpweQuQ/6l+viGD2VB90ehB9oAgWGhtZnkiREH+GR4iW3kfwE9nNkjZOgB13
m88vHsb0zO6MHoGzbCQwjA+SzD6fj8j8T32aYsjoL+nck75r/ShHpYm8JILt
86jsc9p5/ONzsC/ZqJ/8REDZhw2uZ59tgwILwljm9k6IzjIoUlTH/N+Ns7vm
Odc78Nwrfrg3hIj63IhVa/frobQgWWRsug+kf7ZE6Rhj/pwiGDvVRRmHy0ks
ki53hyB+ov+XwGb/lN8cWeMW04PERYIG/fZgekZaYsdWLp8hWJO9sCtRqBre
/XM43VuHQ3Nm2SYCOSPonl9s+s4NzJ8rEkOTva9Hoo3Km2c5ZfGoStVX09Ch
FyKUKTP5W2rBJ1KuiNMGy8+7vicLas83gff57eZXHxFQ2doeFr1nLegiw1uW
+c14KfN59Yf7E9aPTP544sZYgoNMpdPHxw2akEOJ4YKNExkVxK1XqraWIIUe
o15nGpZvOSb3EDM6R8EosLM1Ta8PFJJLJ6dca1HuAWMlL9dh1O95XO/fZay/
LsyrCpThHwDTlkvRa8Lx6NhJxqSIhkGknD4V1zdJQBm7SCGHOEoxPck+sT3P
bxx48ttNd1cOwBuZ+hdcR7JAxTJR4LIxHtmO9IkpNWH3qVfpap90igatPzq2
zAhOg4j2O4rxlyl41Syp8+gmDSoGHu/qjiXT+Zn2xDx8INQNi3kl6RXpfWjs
3qzpfCge1Vuc8QgJaoa6cJxQwSFM/xwtzFzQulADBsHbHEY2iGjG+dMBe59s
VPX+tFdcHgnKBwqnNu6H0u2ReflxydRlGCL1VJcq1hrA61GWOgdvH7o6rtr9
23kUTUs0RFxxxvInpW12KIOHDGJqhz8tFOVA1tK117ZTm7pJnu2M4pkhZBuq
+jXiTgk2rzaoyopa6wOu6fEHr1U70IHm5tbB4QF0R0G6Sz4+EvSnOB58eojF
b6r9m+/fpmvA9zq319B3IlqJkO2j3s9Di+EmOTa5JKi4GvHhhIcDnd8g6bas
RFQD6ByYeaZ7iIieu2a/NOuqQwr7b8g+DieCgczakbFE7P3Rrnu9R0H6Ezjp
KzQ8ECGhHaYVzqwJheD8bLTk4jMC8Nxp9Mgcx/Kb2cZt48txNbA2Nbc8t05E
MVUvDob05qBU4e31Fzfv87nrk9lQnC8df4sgeeHS3x44+cLtDM21F3GSi/pH
JYnINC73lqBtLWgeiU7YfQ47r6lt2A37GjxcCrr4u+BOHaq9aOXRSCEjYeIo
8wW/BiQQafEIHcDeB4/lQe4z9lEY1u3xVO/qgksGJUl8Fc3IgnmXP0f1CFqR
EPe9EYD9HnypvIbJIKEfpAY4/cQk25Dj9ROfmEIH0RntDinFxFjElqViyoDH
/Gf+6s63uL31EPJK/6toABHdt5MLU3esQsBUxx0nTQJBDYdpgedY/6vfZztw
3i4TSnQ9zJ8VENFhwtM15+e1cCT5D/lSSz8gCz4lM33svfLWzF+x0D80YFfo
IeUrzkEZzT/9k/kihO1veJf5aBlwklZJE0LYfoiklZta41wZyP77kEZQJCEw
5+//kWsP+SlL3Xt1SHBXt+sc0xL2+7LFodfu5x+0AceLByP83HgkWOmbfa2k
B32K0nplndAHCf2NZp/6sH2tdl1ezrHwSigt3fY3TYKEPql9Z2S8E49m11sv
eUSQwFLkRJXORC6dn+Bgzjz+Hw0k41ZGVXSngd/h3zm7M9OgdlKUlLtzAlgt
nZV2XR2m8/s/yKf5WeEgjzaR9S2mGX3izvdOkyEjt7Mz/9iECtG7m6qxOmlY
fX/2fnVv154x6PgoGBd5cLPeNFYGSLBUoY/FyxUzvUPIfmNlK5saVo8MCIfq
x1RGgbiLwVyuoxvcjpkMsrg3IcrCC+O04BEUq1xjuP8QNt8YCyi1/Xl9CO4Z
ap2m7quCxh+eHi83+7Ap6nSccMQIOtDGz9/+C9sPed55kBpe5wyPjBuDjY8S
0NQ5WYvVvZ3wdocI5/CvFrDotcsSW8fqkSfPB6E/N0ogo9tLfl6FhFiYX3Z0
zSfBubp3GU6NxM3vxrZy9Aw2Tx6ZtiiKW6sDZcvH+9+FExHNP8LAPqAS2TKG
nMerkeD12uWqRX7sfUSK79WejoebdWG/0LiSRDU6xRVJkt0gowfvrTokRNoQ
CmMOGSzD9iGN9/xwb7QYh9zjBdTK1yQo+pjYYH8iGhxfjTKjRQIqkIpOQANY
ft7rsXy31Gqzfgze1Z1q+IwUX//0ydqMx1/30rn663sQm77YkxIX7L3D8vTd
PQXLvfBJaJzgrN+NHJrGP7hFkVC2cNFvVf8iOHLU2/1ACxbvZ0k9xsf1hsGP
t7cncU8DRKR6npl/1oeccXnfT1iNIgkh0ab5l1i9vn6oKtZWlAZlEfatQe5T
MOp1SqL63iR8Zv8deGGzjuu8Fvy17Rqmz8/+E7x9aVOPsamdalffPQ/4jTsH
rXSW4XZQhPFoxFdoFtveuJKE6bE+pcvVdbOjkDu47fu2933A8FNjYXa8Bgny
BM+vHhlGSbkdQdzVWH3c/nbvk4K2QUBFUxpLgRngd5nvJcc9EurvcmrzfE1G
dwUYd4nUfaTj5cZzRGo1RsCrXt7FpqwVHuyv5lSZ7kTSG0+H+26OojA98eOp
Wdi+E36LXa1twQBUCwur9jqbIrmgJocd/IMoTvpqxXoxCR30dZN+xvmObr94
KUGDK2IcTvQXs5YfGISDfy2rbvTkgd197UCFLBxS/nSJ/81n7PsKy1m7HCqm
guh95lu+1RMQ/FiAwppMgfSjOnpdSgQ40jckv1KUQedn9d5JfKQwAM2uxaM3
/WNQXFvJWnv2IDqsPMp+VpGIDsw1xndsw/LhZxPRx+JkCuCvpx4ataKAX+jh
YyoSBPh57YjDPWtfyDQW+Ndsgc0ftBypV5RSRiDfwDXkg2gHBNXE2J7d1Y4+
fvPQYVQYRTpTyfqeUdh8z8PUZuo/+xZ4aaNMPLGCRw1ELzPa1g7Ey7mSqNuI
A2/RleTwtW5M34perfy20g/eX8SzuNdbULNc6zGTgUG0tOPvNdGXGejk2MKA
ujmW/+N5mAlvpkbA53aPRvJgJ4SslzOtLLSgkKGL/TnzI2ht0XpkdQDr37e1
GPfNRH+E4XvHl9t+EJGKvPrHyISyTT0XV3TIFQ+nXgp7sPph+7cMKW/Lm/1p
8Ed05U+y0Axci77lxHd6Ft5o9SV6vJgGB5rPeUEH7P/zsN4jNGWr18DvuDsP
nRhJyHs/0xuBtQ8IX0e7F7ZZf1nZpE9eHg+n8z84K9dOGm+DWCW/gHs0HDok
KVzhaNyLND8oJ6cI98GeAnyE2W0sXgy3G71Z+m8YzG6LTpgea4Amuefs3e59
yIRVRfvwpi4siL6vyVeJxWPhx28s00tUwN3Q63tZNAk7Tyb+lKuiQTHzm+we
9mGwOctBfaaC9ddff9xR+DzaALaGRdcY+YiocDo3LSG8HpHaHJUodkT4Exp3
LqGzjo5XXN3iVbNEg5ReDbLW71n4+rRlQ6zjC7hUbt9iMr0E4PmCiU8X+73e
4ivjEKIIDdb32R7Xdp0CvWNWfs9uTcLEacd34QPjcMvy8LOXBth5ee7d61+K
pwGc+9HkuNl/A/ONP/ZKc2BYkaLwRGMWorRZxMnL2DwnIGyFe8SpD74ORRqz
TnaiYf4bTg7KA0g19UZJ6MEPkLjn4OH31Vh+q2iWXpabosA2ZZ7PcaEUQHay
2d5kAqyu6jYJ+L+Cs+c1b606YXpSatgsUrlyFAIOjl47w9EHZfiw0x7sdejg
aJVlbfwwyiIWGHTsxfLP+1+KhU8IFDjam434zlCAeEVq+R8ZD948/wg+wlfh
75Cfwu98LL5STJ4u3K8Zh8YPG+2Ee2QQknRZ04gvBeO8W9Sdm3mXutG7Z8IJ
yw/Tip9Z+TJKQDZs4J6cKglxOx/58yM8Af78yx760keE0mvVF0VJ2P8HE68f
VOTg6YNqb74/xeNdaGv7V6mIRhISYd5QqbxXCJk+5z5otWH3s+fGzc+y/Ajq
NBKjGleJiFkzW4jH+SMy0408eu///1779n9XM3o1sXhUmcr85N4IehcGM6cW
CCjkyx4jX4ZG1Cd6IX8fKxFshxef3BbH5reytu0yGofHITp6VefTHSKotQ9G
35YKRtyU167a3iTUV5/rlt2JnfeL1Fjp+hgNbta+k50ongV28Yqc5+JfgLOU
aSb+3SKoGu3gTnyE7SuqunvO3D5EA1XOSZdLuVMwY+iz8XVxEqwXx8bFSygw
zS0hIlyGvb9IRdSQA7OpgG+5G7k7bgImTELFT+pRQDT7at42STyYSgi9fa8a
R8druJwbPhkxBnwGT70OtePAKyW2TjX/Exq7LDh36QYZjU1+/8Nx7H/e70aE
1Os5BiHp9jrXBFM4vDmptP9c/ADqtAzOz60fQDcet/ULXPSg81v3al3fOD0K
7dmS/UFHeyBiWOR+60wjWldWIQ7fHEFXyJ5Hku5iemlGNtiUb/N+risFKPwq
mIXdNJu9X3m/gOCDnqO+UYuQK2Oqet0aux/9edzS7oEPwCtmZD/fQUTH9Wxz
OzVrwFM3pafPDgfb1es/az/C9oFDloYE80Pq4LzI2au0VCIixXJ9YzhXjtb6
9pgdv0gC07fbT2UEF9D5bX+EnTpqZooMCjna3jESkH+A1qle1S7ozUoTDDNo
BtfF/P9H2ZXHQ/1971JJKiQhEclSyRIVSo5QREqikqWIkEiIZK8sLUrIvu9l
J/ty7fs2ZsbYlxnZ96Ws+fn+83n79/f/fd25c9/nnud5zjn3XE4xQUxfk3yL
3Bc4Y4DztufNcrt21KxduJSxXg5ehv6R32NxUM7O8fPTd8y/3ea9nWSBo4CD
Veoq56sxMM28H+H7fhK46nJ3VDlPwUu/fRpq0Vi9t8RUj//94jq4+nr/KdwC
Ht0cu2baeaoVvX8/L5xyHQdT+5ut2C5h/kf/9GTfS/YheL6H6bpi6Th8XO03
is2dgZMK5H7UOAdMVKKFf1Sx/FSj3IAZNfMQWNEm3MmNGYdavyNm7BYzwEQ+
+OmJxxxk4hToGnqwfIekovrb6MNDAF8enmAJGofOvtGMTxozQGJPsU4zmwNv
75tFPRnYeG9R8sJlVA9vRfY1yNjht3SCKaFXCods2U6G6NG2Qt2AVphIBKa/
+L90env7UeBspmK9+/NRyBR0/KtBPQ4WIhe4SaOjcF7r264wK8x/3swOfSPk
TgZ5SBV6SzUEI3Cuw2jfABx4IGBGdaMVpLJUmepDsXzfpYv3iiy3/q9osf50
YNw4PHh0mR1nPQPnle4szH2ag8qAh3+Mh7D1R8dYDt1cx8Pv3PaBPTcrUUzr
XfxBny50nPGN5zm2QjTxPUToE2DxELFLKbVrWR4gs5hUaOxHRF6Zr5JD9teD
n5PSzts7GkC0a/5MmTXG56EZ5NGrQQjT3Gzjy+6HnJ4WqfNZzSCUtLho3l6I
aH5yrnlmY3xA+u57GpG/g0A1/DKksH4QemLrGAPJ7XBgF6212cEEoJEt1L9B
i9kb63411pnHAxB4TMI8qIcE+tKmHIqZQVD2KVNZ5jsRfXnG6HiQhJ13ryPE
coaXAzDaziBrpNIBocGPvxb5RAM/MWSsdJ6ACqTvWtxrxcbbn0b+anREuDKQ
/IFavBTxlfw2F13sQhplN7lWpqtQT53bSYlTmH1q5KA2npUcOLXk7K215f9V
9ftbZyX8QY/ztduZoXZgnvnlwiyB+f87RszOVllV8JJWemnoIxHZ5dzKFKCu
Qay66vmx54iQKjyezUPG8qfm7u+ZfF/VQFLpOWcYJyCeAqKgqnADKolMnmHM
wgOv1oiJ9nksHxSgGShYtKcDjJ0sB5nbg9GbR8drM4idiOJZYymVRESPnlxP
8AjA7rvpr/I5FSaRgen8MDNNyBA8vW0meFBtEEJLpn8vXyfAHkbel23dgZh9
ejqa3PIagNNP/jjyMXXCnyZTfZ2GZLDnjE5Pr8ajRDznQPm2/g/0Tqo3uebf
QbYI3/cEFyKaH5jZWHtXDyInxwZLH9TDNLnwwow/Zj/GSzY1rb/SQPJ8xqcP
O0hItGthuFkqF0L9F2JKU7fOVczdK7ujsH4pBNfEsGP7KDAWYaFsxz4MF8SU
B4kJQ6BOnvlpcqwfjieX0ce9wvYnnZ4DpOUGgHFkB+NDOhIcbaxZCRCzhged
5dRlae3omPX5XM5t9mM6LWYe+6gZPPA+Fm5vcGi55DbuTDUBRaZLeJxKrYLr
nxjEjz3C+DBb4eLSAepmsBmLTfmcjkOaHm/nnV8REG1C6sb1mmogO90xH2DD
xq/N5wuUZ/eBZ069ee5GKyxyRrLzXClD0S5Se5lje5CJ7ZDECj3GZ+5p+Enw
n4sChuOS9k067cicI2B/9KFKqPdZjR1hwUHJhbinHzgwvtRZEy4t49sNV0+M
0nEdKYHmkBb2YQ880lONH02s7EXURqoPZXdjfNuL3znlMOMQpPz4sX7GZxy0
D6vfkpGfgThtvsG/2nPw/J5a/sp3zJ9k0VGHGz5ug4PJB2jFBuoQUwyhsv12
J5qgpDwjf3NGapZqPQvMGJ9hZGDcU/xiAE7s23zJJt8BGvfmXHWPRsOXf1yK
OjuIqOZLlRPjtvuSx4lyX8LPUMClnSF6IXEYzP7IveQd+Q19L6YicImDcCDz
ckSUD8Yf2tKNFdricLB4Oju5UKgR8XgkHeNx7kD7h9ze0QlHgxjjnSLzbfky
KwbrIy9GByHxadaHu98GoTbjkMDVDSLss7lSy2ETDIbiK+KuUth+cpZU0aIX
g5D17czsX49+2MjNtXiwrxkc+d/WjtoUI+m4Jj7h3Vg87dC3WR+tHBIE2TEQ
P0rEoMv9GU/0/td/r75WWvkHAbG0DS8YMGL5lHJOe1eRlHxQ2fOVoCG8Zf9m
VoZ+Z18hIQOKvK82CS7ddzF2n83+b/5jmi91Jqop8HjKboxLYQxK9mvt9mea
hBG+v3cGUyeBc6DfIVMD6wf13CVa3rlsADZGXoWneXSBx+7VF96CeVDgfqjs
21McCslU77v/BNv/r53nJj0PU4D5+cdiesVhEO2e/2JF+xuIXBZU+8UGoKv7
d0OvCxY/oUQl7CavUGC5nrCyyjcOC0VsnFmS05BA7bi0oD0LMh4PHj+exvQI
dbvxX0n+IVhJFWR4ODsOQ5FCdSKss1Bb7IDuyM6DwFOd3FnmbfWoar7CmYJD
IECgSpM5OAHWd3p4gqRmt3jCDW+3D/NwOFal/c22/nJyfnHLC1vz7xoPsQhc
GIeSOtWaa+yzcJb2tb+S0jyQop99NeHBxidPD370/hCCpE2CVUv88SjN5h0t
wQgHQ6W6GdolueAz+exNJOu2/mD9dGbfgxoA1/fKfIIWj6o+ahFaj7chb0/a
hY32JqCi/S5CSMfs039/xtoZwy2cLBG+EdNah15EESrT1DuR2B3V3O7Db9GN
S5XXSg9h9nnrH13b4v5BCDbK05GP6YExA4V7+6wqgH9z3pd/fwM6e5OxToQa
i+99EnZ8Ji2UAYK9TKlujCQUyUm/8XXnL/hgKrU7WJQICUx1QkWuWLzORyhr
Q9KgGeL341GBLQ51mpo1ydQTUNNVglNcRBUwquv6Wupj/op0g0mV0boNvhU8
6BqIqENlLmKSSU86UUSwmeA9+ICkmH/z7t6JrT/vh8/0BKc9sk0Lf3yriIB+
vpbOxzs2g/WBz3+nhCrBPePospoGtp+6367S92n0gBStwHDR0wqQ5iy5QnqM
Q7+ZWEzdHvehxWuT+ouDGB8Ylx9zLwtrAzWqXofbzHVI2ucuQf5zJ5JVPXny
Sao/UpFMclZuxtb/NoG4GMc5BJn73r3yah6Hk10Hx150z8BM7tSdjzNzcM/D
fcz4E8Ynh7x3Hgg71QxEoWhvfAgO6Sjo2Df5ERCVwEl9A61qiKBRv9R9AZv/
/abYNz9OAvxMcc4trKtA0s/VaXliu1Bbxprs5WvFaDKKf0BsBLOHqkPvvjwX
bQKRauU53rNtaLcKrmwhHY/kE4eII8p1sC+8cXS3ARbvVWlLZdFUJ4OAcvF9
5UsUqIx6dP50ZQ9cJ50rWguohr6HwVMGMth9VcYPL2ac7/eBDU2pwfnIFmC0
6Tj08HElmvQr4Su904uco+ePXM/E9Eu6yNJ3zfcNEPo3unXsCB5FTMh9FtjX
hhrbTa4pMjTDlwPCJWYB2PoVpj795Y3sBQ+uHGdXngbwq90YF91bjz45huVc
Ee5DB6s7rs74Y/GoXfsUeJ0+5IPMnn7hQyIkVBlPeRu7YI5eH6psSbpPgtTT
DS+6HbF8UGqVJmXfvVSg1kp6SlhqRy6i+7ioh/Igjb689ORTAljvnX98Ng3D
ryBjYSnllVZg5+WzcD/XjKZCh06bhZMQS0SiXO3uLHAYSOulrsXsE1evlMgi
lg62ymtU3/eQENFvp3abYQ4UfJssUWojgEzkffPcIxjfWKXufiMe1gGtzHKu
ap8t0EqMLbleuBNxvqA91bSll7uX3BdETBP+m79zkjPSoLUDyh2u1E58NYOZ
pYndU9MdqKm98LjuoQ40SKfOZ0UJ/W+8ss9Dh8TXPsi1kpEex0FA4VRvZlJc
W2EH9xoMnkKgf+Nunuq2fil0o64kplUC5EtdUmhxL0VvFWNOPZjtQpXhoXsy
71Sh2vrDR1ufYXzVi0XvZ7xaGWjaxprVJ7UjT0GHWx8U8pDR1eC5HcYk6APB
y3yp2P2Oa2wqL34wDIGt9a0/g5/GIZRh7vuX8zNw4To3b4vKHJh/a+HKccD4
wMXwsePuJ+sgxEr87qQEAZH4VR7FbzYj12h7iet/cXB+tYZAUt92/93tZ7gS
uQVWidfNC91aUU5Ba88cfTuScfilnFlUCgdPUZ/g2pavD4v2f9gwRIGU/LP2
NPVjcPqQfIKV+hQU/nDpekc9AwbDiymDzFi9scv7V1415EGYXI7m1LcfhN25
Vjt3xRPhmNbMwPmDvlBYP7t5MBXD9/ii8Xp6Q0s0P5J1a5ZEQPx3aK+JbDbB
pXcXjz7dXQX1YYNBxorY/jN03FLWFxoC2ogmanWGLTxyVrn6RmYWBvQfn+b8
Ng+dC4dwj0IxfPFkm5LccWoI7JTf8bds4dH0/rbYj1t4RBfbxYbbwiNtw/6Z
m7zYeNq26AK53QFwjIr3gdGOdtQpxXPO6VQNPDO30o/LawZNn496tjZY/Irl
dMoOGqFECBuijyjJb0cGcYH5x1hKIb3rsHnSahtcf3yOSNiL5dfWFD7rUf2l
gLsT0+gNtnGwf71vVoltGsLT9PEb0rPwM0b/llQxhtfZZwOO2e0agHwqubEn
mkSQI6dYncyLRt5ZNPsO1Hagb94auyixGH+4evPQ8ZoEf+SR+967cQCPfiRM
uApMt8IjuqgG94pCKHpY8YThGraf+gRGQZFPXXBw5jiHQ0EmhDRvHPBbJSLt
fwL66hd7UIx8d9GLXExPNV537YqlpsDtr+djRBiHgbmuhynKewgUvO09R5r6
wCGSQkUdjcW3w1IEn5Bfbfm3R7F1uls8+VAn1YbeKg5R9h45f0K8Ge78C9ix
4ob5t10mpiK+noNg5LTXKuPEAERO3RCKetoKzMTPdPcictDFVZ5Yz4xt/dXV
S/f5SA3A3z23f0kPtMOkwfDZWC6A1evyfOqT7Ygf/5l3NxHbn+YpM6fKgVpo
iBxWW9cgoFR1PxYq02YkHbu+d//VLTwXUPlUM4Xxq7n0Vy13rlKgVPrzTCnN
CJia9lZoVwzDyCbHyCA3BfjKpR+frcLOy+bO4Ou9fa2wzKVyo9CxGX0s1kq3
sCMhjot6r/jf/oLa5YXCoEps/M13X2rCWPvh68jzql7pLb6S2XV67nMh0jux
meOPupF72vsV2psY31hN2plKI72lQ6+Y0O1eqkYuH0UcqZm7UGjW05frHalI
3Mvhq+22eqRHnWkF2uwEsB0OdEkiVqCbTxJ0v0R3oS8fuRpCGYsRY/Jqk9kM
tv8vmy4PfLzdB2eHH06lm7UATiH4hHJ0JZqavpDmrNuLBiO4DCt9MPxiVHxK
e+19Jeh3HH2ZNkpER7L+yNzhqUQbP6K6uKnawW4lo9pQE4t/Us0+cCGGf4BD
Sel2quFEtIerLSivqQ74v3zO2avRAPMdvnL39TF9ahvf0xj6rxduTm5y+bxo
Ag3161bRIjXofBHjieKWXsQvdsnhhCzG/z2nZSMPTxYC1w6LFqrjJBTmwmOi
fSMUcShJ8dQEkIAH+TUskH78N96cRjBNfL4XntawlFJzN0GUnUTPFZ8axETm
c3Po60Vvxy8LMh/A5r9p0vf1fF0MYiW89KTBt6Hg+l8xE/ZtoPhLIHReMgky
k32KlLWw9V8Qk30o+wAHHQmPr5KPNiGV9/YhFRwdaPnGpxW6c0lAxXPcZKkM
s4dS5hw1Lh8K7L4+8GKn/igkN11yk50ag3zusNRXhaNQNmH9+KIQFr9ykzj+
0yzHAi4dqid3yBBRYaB+bdhMA7w/rfzVSaEWutN/cCrNYuvpjOSzLLvaDfND
R40OuhVANYd8x8j9LX6VcUxK/VEv6rVQl7wog9WXSlk0NbPq9IOz1cMwSS48
sFrc1Q76mIPIp/7Oq27prsu/2ZKjqLDzZXHSVe3J+UC0b7ExP6oOjzL2CAtr
H8HBxE0b5OtUAMYlk3NrEtv6XxFtnr2v6AA/kaNN1q+14MdxkeGkzQ70aROt
m02SUFVcRVxhTuR///edbP/gsa3zlY43kx12bkbPvlF9efSahOTplt7t8foF
AsWHHrzedr6ajwVfMuMaAtyRtU972sbBjzPmJO/QDHhfOMi1a3kOZusf9ScG
YfxTsIeeISu/FHYujqKJ6nYU+GEqVVAqGwnPM1TIfCCB5Ez3+VtVMf+N71ZN
9qC1aQeqxysacq2/0LpEHlV6Rxc6FCoa9fJGKxr6ZOlqaofdbzVKqV8ZanOD
DhXGse8fiUj4uMbpvwr1cLeTzrEsuR5CXlO5n3HHvpdo2ds/RffrQHKcLaPx
BAEl7s73OGbVgpz3sNzVKsLB8SLXoOUYDN9VPzaJyTdkQbvKcJqCAAnlyxqJ
4FiTAKk7kmUOt0OE/as9++mwfiapaee9bcU7wEFKU6PUxhexOw6y28d0ouXe
n/c5t3A3dp2hdtocy+/vq6igc+N0RM57zXuHsgnoRoxplVdwM6jycl4t26iA
NakIk6r72PdVfV6mMPwzADXz6mRm4vAoMsGCSNyLgyDHbG6jmQKQCLz4XP8K
Nj5Pldj1aO8QmJ6+vJaiPw7SP8/u6m+aBmNPyx2U8Vn4HLiT37gDqz/hKf2w
7LGFF/5aG3/dt/DC6PiVgk3DVmAqWjR3is5BVlXJgaczMbywtpneMxpNAYtz
T4rcf45CtkKyml/wOAxTvJgf/BkDt4e2HKqM2H3VXyJBusYlFFjVWbu7eWIM
uJ3eJDgXTMA5N+3olL2T0BlHdVVUBasv1a81+OHcTwHyTSqtiswxWI409dI4
NgXHhJ5aVARPw4GTQmOFxlg+IlmDTeLH3loI8dp7JSydgD6x4EbmnRuRaVbM
nhQePNQURvd5emP1kKbcsTpBc12g8jQrZv+hXLhsYVCVwUJEhNw8guloD1qS
NE5wfIfdX54/Qqhdf4yDPV/uRuRvNqIE8a/7qU93IKvgn5piwj9BXPSc3fy2
91BY9h04biWeBYmnlV2o+UkoN+qLs9FyCrSpHP/48zcR8k4cYlI/hNVPxs7z
y5w5GQAPZV5m2O9sRxdx/HeVuGrg6cnoV+/Lm0HS9M0gWGF86e97C9d/+Hbg
GHZ89T40A505Y6Ann9mFFHcmfNcMwyG6Je1fqoJYPNZ/o/p8oAwJhJtaT7rH
JaHu6JenZq27kE6xgfzhY3jUscZGu8qL4YsTb51MlDQZvio2RLdRyOAafjjl
inY3FOjOfOSwKQdcttzdJRJm/5aBg1/3Cg+BkPT0LvHDE/ApzjrwuPwsaFhf
UZYNnAebwuOMjtv6QX0UrXo92UyEDNyOljv3ClCAZhnPu/UutCu3hv9OdgOS
e5yxxmuBfS9O6vJzwlIUsBNyE9m3MAxKGlU68t+G4dRrbmqLRjIMdXwyS2nC
9Ox39pzjSWyd4KTGwG1i+gVC5daX0z070OtjSNF8oAO1JahWrzx68t/4015N
POEuBDhtdaCdol2O8v65Xcts6kISr0+ZNoWWIeljuAdG/Vh+pPm0TnOhbzpY
iphRNdKSUEPo3rO4N9lgEHiawr5MgLTAqn8j9li9KFXxEx+320T4fi/2pcXT
EnTk2+MDTVv/991zbguzkRpUrx3DxHkD8z/nUgHPfb4Ppq78/ipW2gyh1yav
nN+yR9LwwfKznr3o2eO7j3bzYPwBdrC3aE7hwUWh527X20rEqGK8Of6hC+WO
ShKXhApQhV7rndInWH7k4k6dU/5y9QDu9G8ZsvEo4TXXqbz8VkTerJo9GdcK
5/bR3TRcxvTX607qGJpUCtxIf8xW3TUKH4+k0TjTTcCjjUFl9/px4JfYnGzT
wu4fCfew3C4UG4D5Nkv+2zHtUNScOzDCYIM2LvL1zV4ioda+eD+6bfFSATX+
ksJZCig9jFAP+jcG1do2oWTiFChpRs9VrM0Ai4KbeKUaxufrPka0Pp6NRvgm
rk85M23I/l2ytuD9Nkg49O/eFfZU0Gx99LXJAfP/wsrlRSt5ldDU+DPpYicR
WfbnvQqPq0R95fi8ugEiLIeKBIfxYf11V/svK/j9psAzh7YN+6YxyE6WzZzW
noKBzou9H7Z02uDGzyqCCKbXNH4U/nz/ngLR6xVHjfhHIUZJQZ5KfwwSdBse
eZWOgOXj9IDKdKze48nv4ZwdCyQ47VEZ3xQQhrIOO+t+GulEWoSUXMEXRGTO
VP0j4GQBFu+Nv/WRmqUHDGsjQnlWy+CDorOD3LE2xOpgW0on1Yc2x5j8nJww
fZTGc3s8oLkT5unw553G4kBW92asmTEJ7RGEnr8JXUiqkkzy+pGG4ZeUr6pv
qAq6fo/bn24PEZk+edY/xNsEde7tT/2fVkP2/dKqD2cwfDn8Z4aNcXIAZgM1
NggF3SDp4zA5eKUUvg07NoW8bUY6HJdMpH5jfNv13D3f8GutwNtsPdHB1Iro
fGHmnH878r0A4ux/iqBi3x/jKDfMfyr8DGCTe9ML0ap25/wv14Pkq7YpO84G
JMDaRUVS6kORLOOq18lYPxZ97wc0mccpIBmEM2i3GYbPZ+T+Flv/htSlabFn
wwMgIHXghIglZs+rrnpS2orp0GYbpFBGTUIHDhwUExDNAfO9tzQyuwgwFKGE
37+Ind8dM+d5S64TYK+nnHy0eAWKuKNlopvThf4FGa6uJCMUNDwn/NQF4/8J
NsF8Ng/6Qeo1evKbAQ+WLZ9nm8g5qP5u3JfyQ91I3f5LdvwKtj+3dp3KKb5f
sMVjBUIVt/gGb0Ga7dmLnijQxDB+ryUJ2NkYCeU3sv4b/3I48VpIexm02Fbw
7/JpR/SyNFGvfxcgjYUZKJQlgTNV34+Io1n/rUd0z+qpxi383Um9diXz5BhU
5ZRIh5VMgGKAx/RN+knwvVlyX0ITw185oXRnaQMitKXU7nJCxSjRc9f3W/+6
0LJSucO6ey0SqqAnO21i+o6h/eemcScZ6vrv4+3v/Qb6ofuveafI8Lo1TULB
pBPk1U//6JfE6pOLHwzls/k9AQth6yfzZ4kI9yD287hmIyCHv2+G42pgvIsB
f4EaszcPDlJPxlQfcHgUyeIzcbCv4WLVseASFM4VvFJxqgetXxSP8KvD8k1H
v48Jvzs7BFcHSu/+2TsBz5y+PZ26MAv41QtWrxzmYeNyzj11OwyPeGhEVzpz
KRD8LOO25Z4xOHJZQ/75qwmg1Fv/XfWYgETbRSp4j91321t1813VFh9mVxE6
8BU/Dj1y9Uw7R2egvtvNq3JtDh5qJfisbuvXJP+wKm+erg+CzZR0d7Y3AdN4
2ehsajWa9zEolC3sRZ+Ux8cee2L6yHmS40ZuXz/siqgTk8MR4Mr1gj8Sp38g
o4crJ4Z0OpE2kZa23APzn5XxBi73SGSodQ1jnVH5Dc/f/E6W7CLDKVGi3bRA
JzDE7VrWF8PyNes2hGRmXBcw97eHiKVmA2OTbNKoHhFFKWUcW8/sQWrqGhU7
/2H3nUnNG4axRT1g/Q1CQiqqoED2NUH4eCuSsSusmHLsQ0lkuq48ZszfPs5+
8vhpHR6mmeNGa/dUocN857QuvupCdDP895RXctEl+tA7+FwMj0TiFBOM+zuh
sSum2e56ApxdvsTmpERCHgrPHs43dyFG3z8aTU+w/n4cnSzXtLf4BklcFJ/B
NAEXu/uD1q/Ngpedy/WJkHl4FjE6npWKfd+6q/tO7vMhgQCFqbSRFIdirz68
Un6pC9lmbjJpixCQqZrGjj9rmH2e8HWIOzZMAI8k6R3cxFI07Urp3JzoQnG5
x4IlcypRSBLfretJmD+JaZbxEPRsgyWRhZVinTq09x2XmJNtJ5rS8TcSeP0N
7do9+ubaGMZPZFt11EocyBC3WzrUsIcCl5ztFyUt+mF/bpWKT2QzXPQzn0+e
xv6v0FyL6LgOEVgp1Mq+88Wo8pMI7dhGF6KWZzFSvleLTGw46TmZMf4QdtBr
88NyK9A8eXA8R6wZnZErZNMLI6GNZL2oX/RZcD0cpSxtq9dlFYqfs5AtAme9
kCFXNhJaJJPDj6EIZGgS8d0ijAS8N3e/vnw0AYsPeJTOtvhTAH/GL/GSzSj8
vv9G355jHB5L5wjWMo4BWbnYuzcL09c1jQ8WjZ+TIXkz3SwhmAIbFod5NTT7
wPiWVcSMWgM8yui3QynY/c1iZnMlpq35o0eMLBisRoHQ8G3H9JFxYDxV9oRl
63zSRTZYDIZj80f/rVejSqRAfO7TmujSUUjvDjeJaRkHT1sb8dv3x0Enr0jJ
JxHTI+EtHfwnMzqhxOCi54RnDOSM5OLDQ0jIz23yEa9+Fxr5NqzkKI7Vq6z3
/ub8KhEATLi+4ktU7Wii8GJbCFsNSNKvpjyoawafiquyu19i/HyZQ5eiFZsB
fHeErSdYSOgNdZHUQn8m0KSJRyVufcdq9QyqgwiLDwyvGhIPkYhQ5KV8P4ux
AMHNidLstS5UVHhmeGG+AUVSNz5RUMX4sMaNzbSjEVEo4Z28lf8Wfxej6vsa
zt4Gm+evdo7eyIAf9n+YbZOx86iokG8a2dgDCxYbx2K5qyGNy8R8B6EFUeeb
7t/l3IeaeMM5zJ9j4zff+WSPJVaBoCWTluYXIuoLsMdVT1ajfHaFs96SRCDw
Si7GF2D6Qn/0gGP/YB+UDr7vffYZB7auOvmXzBGSNF0+xyHfgzxxF2rqt/Wj
ZnGRYB6dJMPBuykvuRN+w58zzJzmkRQ4Q6OOvDO74fiT8dnzsth9MQqD225h
oSHQNnSsNKefAHHO03SaMAtNF63cR7/MQ16JjXJ4IHbe38rseM/IPQTE2VF/
rc5xkGmNvfftzww8dhi6ML9vHi7tqF/uyMX88yeLunj1rfldJXX2sjBMwHpa
5C1BmVnoox564uk9DymaCn8ebasn76irXCVu9MCGEFUEXrEG9HmvVpA+NSNx
BwZOWYc+pNy+j1PKAsMvTqr3D5gUB6Bh8JUtXpgETAWlzx+XuoDJpRxv4Xft
6E8dZV5gW33+dEkMisVRYLPMbWGXzRhc2R9ei9wn4b18lxzx3RTcOG3Y25qI
1aeJel3JajpGgVvrRha/ng2DXv8Dey7N3xA0EaqbmTsATfd8gkVmMf+g37Jb
l4inbOlp4ZRg5zEQcL+8zhc+CSdCWjSj06agsU3x8MA0Nv9XsegTQ9/J8GXl
LoVHdghO3O7TG/w2AJ38bfUS0zhQio6IOP/i+3/r3yNx/edt70H4Nfq2bDcM
gH5l4p+b7a2gZ3MgWsD8F+qwc86ul8HiCcryvdeujVDgSYHC20nCGPDuZKiW
eDEFssO2PRySM9DxwIFvwBjj21Iuq6+kz9fAAdVYT75dRMTDe+4kBNSjyZSN
XSMzeFDqf7HqoobFzw+tpT78GjUIb8/248JdBsD5LbXaDxwO6PayVsUPpKLz
J/zzqiUwPgk2bkv7F7phha1XQ1SgDLjSm3PU37Yh9jLcDo4TfYguv/AsSzpW
37goNUj9hnUIcv4RC8NTx2FoxFDJ8NPMln2ad+Gi5sA95VXizn2YvUEHDctL
pkG41Lew8/VgDyROSfWL3KmEGrWWTssj9Wh4rXB/cjl2Xg5/PeTSWUSGQOr2
8r2DQ9Bdc0AxdnwQIhTi5aXOtEM6z4qqtUUaZp9pKi/593VCFoVBVGLJE4b0
BHmTojqQwc8Fi8/pHci39my5u7ErFq+w1nS87lcHx1KGz32lJqADTRk9DMst
yFRLzz7PBgc394620/7D7Mf6e4LJCN0QvDs6VXb4/TjoH7aYPnxiBg6d4VKi
ujwHleDEZaKD5dfSWbMcDkdQ4OaOvND5oFE47uWi1mM5DhP8MR+mU8Yg9KJo
iE308H/jbagcpT9mDEJr+e6LP4sHoEAuyNSuuA3I8YK6QbpxSGOilPfWeew+
RR9vXrB8lx9yfkye1lnDozbbN1d+o1ZoVoiYC71cDDtpsjbKVLHzePlrj1gf
Pgw4s/TGdC+1I594+bp1tSqwbxe20TRtBfvkq89IGVh+rad/rktenwyZ7a9z
l19S4FSK8z2U0gvcQlYan2/XQdxZRweJu9j7Du+5F8zWjnuhWDujX03qBERs
GHjXzdoKNrOjL4d5yuCI9SBT/rb3buTcp/hoGgeAfUF05QG+C3zkvYJjzheA
6O68JUFKK4r83OlwVhnzD1XerDE974nwaSXcczGnCKmPLyTZbHahTibPg0qu
dehmjlbImifGz/U72IIijwyA5uEejgUCEZ5TaxkLBwWh2yy6tktbdv+a9f7+
vm39fvVG2bKo2Hvg3gWyxgRzORgg+z3VB9rQnYGBa5bQh+ZJ3I4zwZjeVBU3
b6HioUCZzp6VU17DEJDyRzt6y6+/4NZWzZcahCG+AO6LT7D4ya1HabrZZDLU
kzNeDjv8hv2O/SY6shQo/N6X6+fUBRqhFX6Lh7B+Vo96X3Lz7x+EO/ULHvph
PTCq/TyKSbcCXtCr9F7gbkCK0/LCRgcwPWXcbed4mSsaeXbFK/ymxaOlgIOq
V8TaoNS9b/zhi3Qos33S3R2M4R1vycbdPyM5sNdEZ+3eRRJK8+V9/W/YHz43
GWq5DLTDtRnLiykPsPzd0OmruxMEh4DbPb6U7uAEZBasCzyUmgWOWR9x2g/z
ICi9O/THFwwvLiaUKNL9GYSeU+Ln1aoH4dvD87/GWtuBXVenzVkpHrxN2EKV
uLH6kPiI7NvZbH0QsK6uMc7ZDMtMmVoE1Wp07c+d+JqkXkQsP+EDBZheODIY
9vOjehD0UB2Xq2RqR4lFpE/vP1bDntibzhesW2DsZPBTdnGMn6yZDY82rXTD
70vXbv29UwbiuaKNZ1+0oWF+FWlXvj6k+TWAfScJ82/9Pm42RqVdYPav/fvk
8i+ITovIF/MgIs5Ya28z/x7EUuZeP3MB0wv8fioxQY4UkG7d5Zm6bxQCR2dS
fxwbg+ySqgfvZEeA7xm7aOQ81r+6oDEkVyCTAtmfcA9LJkfB0XrwYIPkBPxu
sCk8yjYBFc4+uMMdWHxpLtVMrrCmAQh366MI823ohsDKcIhKG0q8O6dtoNkE
f5gv7WTfVq/Ck1U9fBC1AdXb+29OJdQigb13b99K6kT0L02utpSEI5rJN2JR
URg/9xjbPabHVA+xWbQ/nzTg0d4vIaaHPFpR4q+s/ty+VmiUaVn3ysH4f3dH
uLgWFEFMdfHf6C3+zC/TL2sbEYGq+rk+y2zx57f/lo7pimL8md3h5oFnH9oh
u7AtL/3UL8R7SGFXD64LnbhId03MuxVZ7Dr/4XQL9h63vU/5gjTzEKhdFkrM
jB2HKSAzf7OcgaFcL7HKD3Mg1SLvXDmA+VvByWk/l+oisJ9wGMlgIm3pkGuf
5t5HIynSIclXsSTw+ntHfJYc/d960kMJkY+MyaBVbtxv+ZECf21GXw0x9QHj
yZ3C4+/rQXPZ4M+/j4X/jT9j5Oc+RLOFd9FiVcYm4+AeruAW3jcN3orfjDZW
Z6ExnkeGeQHLL/yUvDcvs0zZMtnDcbWc43BFvHIfhX8aOHd+NlhUnoXoJkc1
hzYsvmcYVl3/b68TOqVzTnw5k4BClPTP+iY0w8PNe1cfjVSAiN/+Vdy2fpvK
Z/bx2vhWwuVZlZ1yQ0Q00kO9EXmjErFdwD2MXyYCtZGdVZofFt9+Qm0R+bWi
BQwTf5QOBLWiHpmuS71/iOieEZlPcss/J942Gh29gOmjwmM7dlP2kCEk4bMi
724ynOwzcf9YRwIYGJj765EOQTup69LrsfOyMtcj1EOzhcuiT/69scxDhTUH
5PMXt/Tvc4O2WpMm5PItx/cHI1bf+//tz7av3M422pEM5/YLUzb6KRCn1Bjk
6dwP3/yb2eRbmqEswM+O3gXTj68fTQ2obullm7zWQactvey3FqpatKWXzx0f
lzHb0sue2rtmelMwf9VQ3uti1F4NcVxzkqu8RMS293kxFNYhYTx/Hb88AbpP
0AWb02DveWVc8zoWl90HXAauJZobrRAmcJqJW7oMDVrZcKjF9iBX6Xldv231
wOSL3vTMLGS4IqvZE6RAhsHueovfXR0w+6a4ZdYjBy5YmcrMv8P6y036i5Rq
iYXDgmjMjUdX2lHdvXKPIYkq8AoR/lpi1wrP6K99E43H8DqTlkT+SN8Dx3Ba
z/41l8Gxw+oSEyJtSLBUfb3lYh9SzDsiW3AXw68dNyU5uK91wiJ/Udlm33d4
L8l9m3yjA1G5xUnuUetEQ5llT7xbP/w3nrja/+xiJwW4pJodBQPGoFvhb3gl
aRKOJ5pmpRybhr/EiGruUKwf5kqfHUHnWBbU0ySHn+QjoUN3OHw636XCJufo
3ZIeIlhf2n/6hCyWD4oeWKv+sDMerhRI7+uMaEdphE/vFh6UQYzn+Vqp522A
mBM+cBRg66fIF3KfXmyFrxs84XoyzWiEIdxROYCEqujdovbezoJPhYpdntv0
fmvfWcHR6g5I6VmLav+tByp8K9ZKax2oUuJDr9AfEjqiEn/1LweWL2YRENf7
y7Glv375M9DXjMOrSja/6NoZ6D0cfk22dw7CQZs27TnGbx/58yzpbtmbRtuV
juIte/uVNF65//osvOaPotoXOg+Oe62Nh7fFZ76f+9Ig/6oBlvyODqRx4FGx
VUdW6QoOadT1+dZIbNnzeSfuS9vqWxzjwjfWdxDgF13n89pLlag7M/XcZ78u
5H5n5cPik0Lk4CZOQ3seiy99bT4nKGHiDY2B2ivW5UTk0np8yIdcCyMzI8WG
XxrB8PsO28csGB84YOPWmnXSFUkSbZFYHGGLL+8OvDDUDIGr/i66ThXgwkZ8
fl4H8z8arsr7X50aArrsoKKOpXG4+v6D0DHOWbifP5aFvz0P7Uc3r1UJYv+X
Pk/b6beSAtDP3r/fwEpE5sKCeebljdDooS9B3FUDPdpHjtYfxebH6Qhlj38i
w0/uS+I5R7d0LTd1DP3lAaB+yzBQNNgKzK3xg0mDWL9u1YaQF4eupsNQQW3R
Q2oSkhKw5yLL5YBH7sEZHIkANPTjQsHb+pl0e0jMMf/vPrUj84ldW/ra9cFR
RZz0LChwL77v85oHWqHkhS5/bP3CtyQN/EgUeCvBWLTbewyq0+mPyVZPQqxw
cm7L6hSYv8/6q22E2f+8i8bzowJD4MK5XBW3cwI4cQ/W/wrOwlHds4rk5/Og
voOXMKuLzU8Kfx/Ke/UDEnv88NXVFwRkoHBUK6umBSR3K5TFjJbBDW/WoX/b
+PPG438dHbsGoC7yRvOUFhFMQ5IrBYOi0TS41Z6t6kCa/KPtunEYv12o3LWq
HtAJLMYHCPE2URA4N28iUENCvy6E7jY82YUkZA+S8m3i/hvvlLLafTr9HZxx
OeWk6ExEO14JsYp+rgeIktATUamHyw9jPISDtr0XKf6z/4V/HRB/sm767iEg
I2WLkIb1FvQj3lT8gjUOmOY0/SV3bntP+WygieKWP7ynWFXzSJEMplZ/Mmn7
OiDmjZl3UVAO7PF/x1vwBvOHfzot6b2/fEUtagkcQ3IExGb7zLtTshW+TyiE
4RJLIedg4CyDAbY/glZNIfl7huAsq8n+R1rjYP93zTajcBquKdwVft659R18
6m+6FGJ4fZtDMzXTdhDkGthPdlf0wxfGhfGA8WaIfpVyiO1WIZLRzZrzCMHu
Q1m3px3k2TsEo+VVf2L1xkFFZChJuWEazobV3zUZnYWk1/ZdtwjY/Efo65L/
UXqAfGe3177Uamj7OGj8SrIFXWUvbep26kPS0XZu/qPYfhJeqMiNqbVDpZHq
yrl/2ehce2dwNKULfTltdSTKuwU5cAiUbCZi/QpEXjr/pZbtg2Rup2+0rC2w
TmY/En2oCrG3Ft+2t+pFzodkAvy0sfypTiMn/mJHN1yuno3K/lYKyg+dz9k1
tSH+k4eaL9L2oYNenSPzTBi+l9v6nGI3aAWzZHPOF+0t6N3asj97VTsKmsn3
Ur1VCMB6QXQxYFs9Gxf++4l8HzT0KuvCBTYCKlWRVL/j2QozEZ6dI4slENrk
f1tFC/te597Ysy7c74ZIVsEEdodCCL+vJvGNi4Cq659pTjr0Ivo3oo1NClg9
vFrYqsTKjiFY4vp9TeP6OOB9OvaYeUzDxwKjqBsJs1BFqW5LN8b23/26JoHa
bhAMoJFjoKkf3E9YEnUYWuDwycbwtdkC9Na+xCDzA/Z98U/980YsByH65FnX
koh+SDAttvuh3wwGcWwa4qFFaECrupWmGxt/2jxtafJxKxSRO5+f7W9Btuwh
Z2RK25FkK/W/ojeFgAv7++ysP7Y/Hy2sY37Sk8FZn32P7RkyMF4IV/lq0AFG
QdUVlpNZcFY74FddN/Y+1xfVybAv77uh/luedNqLYvgp8bNdLxWPov1FF4ay
epGiwNdrivex+mfpsp8NhAUKGJlOHpA7MA42bviC8L9TsM9vnvYvxyz06wzE
nPXA+CejVYWLayQZVM5bGyiaDcHyaF/JxPQAlOe19S3T46Hf4Snr4fOK/41/
nqbaOKLTA8p95kd+fK+AzUCG90aKOKR6m+PMOYM+tNf1y59ROoyfPLawvfNV
CQcybnCuTrYJPfSndZ7d34EUl64tDFcmA6dpb2H4tvqrIx87f/0NI0N3cMXc
ov4QjN197xfaMQDmhEXFW/VtEPtWJIvDxPK/+Ruc9w6EHCKBqNqHT07zqejg
YIFCwbcutCbDluVq24asdt+vkpnA8t0xjq9/HGcJRaan4tROf8Gj2HWxeblX
ONBj+szep5gLofuEPz5jxOwz5hbDXlf1DnDKNDzHDl8Q71MHDZn3nehtfIPH
XFQ7srOSr6YsZ/w3P6dg8A43xW/ojPsqoUCIgO77JcgJ6bfCQB7X4Ry6Ujh7
yXTTbFu/rCAHwxHOLTy9w6bkr704DrPV3D+ktr5Tx9OcjrM356HLlbsikB/D
i8XngeFlfA3wMjJYJ+MaHvG9pdiMJeLQpxtnjTdpWqC807FSnQfjD2xGrB/c
LuNB3GPsUcVGNfrzVuszK1MXEl1LE1f6mIqidxQkUHdh9Z+Jz+RVzyx3QR7L
rcMrD3KB6olOtTUNEf1IPDDUNd+DNpM+CzC1YfVCguVsI3bmZKj4/iJxMZoC
N5jyUy0c+oDtVwF3Z1EDKJW6/HLKxfr5UFpfsD1f6Ibwi3fCNQXLwFa0u1He
tQ0963YsfHaiD7kF18lezcT8j7ZokOrdbBcQU594IP+CiMK8Zp+UjNcDlUoj
V1V1HUi5Ls9pZmL+80mXxzXpn3g4MR6nJ2ZThU5rPF1f0etC5ITNXZfpc9D1
9c9OMhsYX1KhSXZRMsHDPrv8XUY61YhwmoAYL27p0/oZRcSYiU64nbFKe4ft
z/3DRuFnj/ohdpYv6VrUBNQ1/txRLbkV+O3vByp3FEOwWEXKb/VteG3pm8x6
rQ0ErIK7miTqkbL+b7YIsU70wezfAeSuge7SpHLIi2H2f+nO1AmuiSaoW/6Y
61+KQ7/OXx9d1CagojXepTa2GtAzPmOstAfT77ox72Iyt/jMqtGNa4WHJoDC
Z2gLsrNQSUyXDfCbh8U8HQa5aMx+djqyEi+4t8Ih58i751+3ID3qkLGA5Xak
9DVl6KpFPvBbsFrQ/8DWQyZUXpoNIcPG/s+dvx4OwSHuyc6m6gHQL+99VevT
BoN2NJ6D+a4YXjeH9n3Ct8Fho1lfUf1a5HouMqy2uBP90t2jLdQThaqmXVRv
v8fWn3zD3v6HNA5apVWq+J82oRqZ+JVb6ySUzJXdWsadCv46f4YtqrH1uARw
3BW6XAx+XqO72ehJ6NbSxKWP3bGoIj0+aecPEmhGTfTHqYT/t57p79HJRnX1
cFJMUQ2s8aipuT3fSwGHBqsrVhtXW0BQofrNh2QsXldNTJJ33eIBBoKRBfGv
CND2+EhUuWUKOq5VV8dd0okE/Td2Jllg/Oq+8e29zlkUiGCg4nadH93y502H
0xUmIMfj1K9ksQkIfuStzbwDy6cLhvmWBpd3Abnbzb2RIRuyKMJuqm+JyPfT
ZJtUcA96oCPXfFcViy+JLNi/RZJ46NsfcHlmVw26wnL7VwFjF/q64ZtYrJaK
8tzpNC73YvYZ5tXg0CzrCymm1jsGeomo2G2V15W3FphEj1/tdWmCEF/L3xFE
LD4mp+0d7cnYBCOOr70UpdtQmsaD/AgfPOIB5XshP+vg2m+hhcFr2Pzrke45
1yrIwE5vx/ZobcseGKNZNXnIcKhH9/Qzcjuwds6/mNTH6jGGZR89GA8OhFzW
aI9XdO1IP8NxQ7SoGm7E+qU0SrYA6R79nofK2/KJN9u8SOMU6FBn148dGoO4
EPHw4e9T8OWnpOf9tzMgqDzxpLIfy4/MWj5pjVehAFVW963dV0bgzbfmbHWp
ERDJq5VLX6TAQtd9czFurH/XVKplhuz1AUhfHWW8fJIEH0yXnG85OUDOrVKX
XX7t6JvmThn8tvvFS4F/rC6nUkDMwLkgunsU7h//LOnDMAHPnl38otE8Dty0
2SEVeli8DnCJTpPsQ+BXX6b5rHwcDIIOOG8UzYDiWkLSHG4Obry6WZ+qienH
pC+Sd5u3+MwTzZcvA66Nw7uwXvx3t2mwnW+/6B43C22Tvo9rDTE+Y6w3XMfm
RQG5geA8rZuj4Gi2NlCUPwbOnEqmxrqjwLl8w/tmJNZ/la37aBbTphXy3eGr
NN5GQNo3y0u+MjeDirei29PeSvgmK+JxQBnzV8kihpRvwr1gar5+I9q6Fpoa
DtqFXWhC+mov6mZe9KHRz4+M2SywfMRz+RsfsjIogK7qsf8aHwVDYaaB/vNb
fqjkncTB//UP7ejZOV2H7Q9rrV448+1I0GyRYX+i2o6O9K2+6PlSCQPP1D/3
E1sh7HaYwPcHGH+oNn9TskuEAgOVT0OT0TBEOEVWix4bhrMfjbPyd5Kh5t/C
LTsvzJ/jU8uGLTaK4P6leAMORhJ6O/++tC48BomsXF2pjycBOXP6I+eJKCxe
9P/sL9qo91pWw3YAEvIKXz6y64ClqV+BnbhYKE8v2xzMICAr56J20239WFK8
LL01+F7BcItGk6EKES36eFBP/myAjum7Q5KptXBcAn1lGsTwK3haYFUXPwi8
b2eNS2EQCjwuEY4WEODU/QOOXcM3UE9FxbmZDuy88KhnXxmVo8CU9GO67MMj
IOPsUPqzZxj4/Khd425RgE3FQ69fFus/6fjhcAvpUissjJT3Wp5sRVWXb+k+
c2tH+8vUaw98KoakmKOBdk7b+Nj+laAmjXxYgS9X6M6R0GyypqPdmDYS/6G+
/44qCV4d1Izbp5T733qSJAyGm+/1wbxT1UhLSAvsYLnAwvq0Ek3LspX1qfUi
8VXNE5/TMD2yb5k1rnyJCAEtrqpFjPko9vC3fYS/XYhTdFHasKsRPX8Z/HIl
GYsf/nP5NZwZ/xNiE633SxDa0XLZyEs9xWJwfuyYU+OLhw/WSMlSBOMPhJ/I
6q59JPjZzt3Yf7cdVVzm6DK1qYSzBbm6g+RWkJX+XCykgtmboMn4xln6bjDt
upSQp5EHt+KfGhpsnZvUlmFha+ZeVGKQ1CPxG6sHzqu5GPi2nQIz5/Qz1T+N
QVaY0cfGgklwFHlx8M7vKWjhWSodlMfiA1WxK5Mrh7d4dkRxdEjwONBfsIm5
pzkDrWaPnz98OQdyJsl71nOx+PZUsIGH1TkyGLjusv2eRoZ6gvNnl/ddkE4r
6C21uxS8PnUkmztj9RUv1Wsvx+5qANrScDON+3i0b0OF3/I9DtU+FUMZBi3Q
ZNA90/EXw7u4v0x1R4cHQHgm1P7j1254o8zTsk8FAV7ff68Xdws6xd6W3ret
Hz7Z8CNeX7QGPrvr4zp3EVG773jYqE89+vXugkTIHB6MQo3u09zE8tHOiaQx
Y4s8oKnL6nx+noT6pRMTzdUcwXnxuynjWRKYt3J5MDYV/Dd/895Zs5sPHKDR
O+uaiR4RcTfMGAZdagD5D7+ije7WwcMDynYu1dh58Xv49LD1RzzYP/zMODRS
hV52NplwqXSh9DoWLfdjv9APySW9ehkMvxw6AitpCgZByCe/R7xvAM7sSxFc
3eLHhn4Oax8uRqLGlxHP3sdg/pCny0nJgdgIO9zu3o193IbOPiNH0W/5J3cn
8RgG3XowtBqj0aTF5g+W6bHIiqgDq5CRMp2dW/6A+sE9d5pWFNA+IWVqgoMA
HtyrdjosHtIs2ew3vpsCDkNPo9Zoh+F1YPpFPZcheBwr5ZAV0AcZmw//3KbD
9jOQrTm7NqoKLktLBKV4E9Eqe8dt/+5qZNvMnDckTQR6E+1bwxFYvcr9J98/
+pV1w67IsJUmhlIY4StkyNuPR8HOfBcPLfUiIQVvy1/cmN6s1up07qEahDx7
/RPlj3ugJlapNNy9HF568i/R0DUi03jHxF9KWP5x+EoYq6jhALxx5rPXXN36
ng9ef/D5FQo9eQ1hc8+IyITv+c+SbffpqD4/uSH/shtmnhuL8AcUgc7BMUsY
wKPFDR6HvtBe5OS/bu9vhcXrWK/HXWOf7YWFw8cO9zA1gaFp1t7K6BoUJ36R
dmqgF4n+OybcToXlB3dwVc1p2lJAN7wjeWB6BA7P6Zjp9YyCIPDUfcQNg0H0
JPWBG1g+zk7gY+edqEww/ZkZunmChE7Oews/sEiHy8xOe3dkE6FIKYLFlgnr
H+sTILL+tJgCst1XysM4xmDHtxPqlLQJKG3IzaNZnICnrnnikkJYfWn32N38
CoV+GKEY01V1toHHj3tkwvE8pNTieefq1W5Uljq2mN6M7ef48NJh4nEfVG85
mUHgJiD1iIdWxq9bgffHTXTxJQInp1W6uG3x2Art2ZpAviGgG1wK/Dg1Dq4N
of4JTLPQ7t3l+uzyPNwsDrRX2I/x/0MUvYxfhY0QVHHyDdWLNuQ5ICrPDXgU
oKsrdfxHPXD22Ls7zGJ4epj8VE3cuh9a/77QIj3Hg2W+S0dIyy90jPlKsy/q
Qr6XJMW9jm+rz7xqxhn2IQ94PIjd3Fvnnb42TcLrth2cEbpveF+EBOq/FM6R
n2Hn3f+GudWtf93wJKWDt820DG6vPTHQ1m9D+kWiZ3ad6UNNPPSxQ7OYP+cK
EVcLV2qDV1LPdeb46pFpf9+agWQnqpmXfzdy3xC5X6ncWSyI4Vf5A279wetE
6P86drApqQTNMXwV31zrQsxcDBzVsTXIrI9VxcIIq/fwzz16QPLhIJxNKV11
He4DPveSVZ/UBtjz93rMZ78yBJEHFHsOYvh1vPZvw++5OJg/JZp8JKIdqV2b
FJ3RK4P2n+GBJ4zb4IPCT7vlEix/sZS6JFDCVQfKb+p5eS8RkIMwzdqblWZE
PM0+rreKA9O8o3YBqth6kognXv09Tgbzgd9fQp6SQcElpfaaZic4u9POMmzh
8h36i+N36bD79d8t8h7hDqSDmlOb+YtdJJSe4G+VVp4D2qUkroMVBDiQdmDh
oBoWL2KJY8Bt/K2D9a6j+qkdeER4IxVjZdyK9t/4Hj23AwcRRzmOG3zB/FVa
9phZ4ZbeTNw74Eve4neVVES6l1t6k7PkkeXylt4UFMrdM7pNb/pJ6uiO8HaA
nGL64tfD/sjn7aUbadmd6OXTaTG+Q+2ogdfqF80Y1m+zVKPN3LyZAmFE5uAl
ozHonDh6/I3BJODFaJ1r5Kbg97ozrZcsVq/le1PPv+JzCzgb7bzrWtyKpi/I
m8XVEVHp2wPTId1lsDegVQnPhtmD2/021ZLzUXBX54/ILt125NBifj6GvhIs
HDg651hxQMf47tZ3dowPLD7vZS5064Eev0CuY86VQC7omLzX1IqEcLto1i37
UHN81uvKCWy8ctuLkelTgQglVZy4VY9HztxBD6WYcCAURFlb8yiAR7GMO7W3
vWex3qogNOTRAseTjOMTSlvR5bRAucCqLT04ZbTWPlEGoZ6BN2+zYuv3onta
4xrdAMSL+bqK1Hj0cPTeGoW/DXH4p+m3lTTBh2AweV6IxX/sfk4R6M4NwL11
KalR73Z4I1XN9VXJESlJtodoqZEQkYs+KqgFO79NrGlglvAUfNveODw9R0Q7
870fP5VtBPN0PYOpuhrwfHlcx3Mntn6bo0IB3CxEUKljojnNVIpyjd8rZS11
IUKF2/xDsWpEyJa9SqDF7CeRwezRdxc8rOPyRNdoqxHHWI6+0fUupD2TnGnr
koUcTwl8Z9LA8JS0+k1l04ICZia2vj/wI1D2afytYugoeB2N43//aBguhT/j
zw7H3jMV6Ofjq3bxR4E1NJ70FDy6sfeGzY3xVvBgqfcxpBRCbDjzZ77r2Pq1
FHzLkgprYZ3T1nXIkIBU0IDQBEszenpt0vK6ydb3tIvdDM7C6ouyE0pO/r5J
Ab1TjvrNkiMQb826NHh+BKZUWAQKRigw36SeH7fe/d949le6K6n6lK3fNTvo
6j8CheFju3EHRuHMizjNSr3fcPDOnu4EPuy9aa3f6rwufwbhwazB2sHaLR0Q
m7rcTWqHS8JJ7PQB8cByeEG7jxWrn1m0SGFbeNYM7vH/R9l1x1P9f/9QRknS
MNIkpTIqOzkfkZmVhERSCBVCyYhIIZlly94jO/tl7+26l2u79siu7J/fP739
+/3/9Tj3fV+v1znneZ5nvFYfRVq0oXqFqGnRVhw603ncVN29Cip1JIXvGmJ8
y8jF/nO/d+zMoeqnWmHnG9DXc3yGC8Nd6HGZ0eV7Kt7gbSCyP89i1/zP//G9
HoYF2e+Z4tUgnSBxZuRBJ/qx5KdIplWLzh131qUrx8FxDcV+23ms3uOOZL0B
A9cI/OlwePF6/zQcUfzv5VHhefhV2Oge6bQI0d/3nGtwxuyJTbmsBn6iHgwO
Cg9kPO1AJxqK022ftaF2r+zh40ktELTxtN2kE8O35FmGDRxtJBA55/m912IS
TJgOdbx7PwONBocayWxmoaJii+FkEGZPfs5M4t889kDPI1gaxzVx6KzR855K
ulao3rxz/51cGVg7FmRv78rH9fXQByc8a4XvvGvVv+pa0NjAAvP+Rjx6vbdP
rIGuEL7NyuubB2P7uSal1TfQNAS3zfkS3S4NQRPjTHqAAQ6GpAYu2LA6oMj2
gOO9gOHbMkXW5tC4Vkju1vrv68kWdI93rejTRQIymE7KPR33E3qdzCdWczD5
SfZ9e50/t0LJY/c9FkYtiDB587vjHgLKTiGd9jyfD18vXQzQT971nuO1AoqY
EyMQJ9CSklU0BQ/wHiNJaXMgmy1CRlO5AFEf3uer38L4CgYfoTdv3OoAqLj/
Wh7Aod6/jvQGgy2IezWX/JZzG/Dcs1tn/IX5Lz8ePXnOkkagcTKgj33Rjth+
1j10Fu9AJYTWtY3IejghvtT8ZxHDG9InC0oU7w0C1UA0b8oHAuw/s6qo0O0N
lm4U77YO4ZHh6c35rV31w0L485l7vvfAVssyk5VnCfS3dnC8MelAlxRuTDq0
9qFXBWjT0wnzj99T5lKD6bugdmmAQ+lGEDL5L+AGQ0M32mIwftzV1IkYPSmT
Xqdj70HYD64vkwcNwtRKXNW2QTcIGl6jdPiSDjX9iW+NJTuQqXcXp2kS9j2M
dF16LUok2LchwsEtNQ7Hbdh6g1TGQa+3uKKQeQTIRCjIEr9gfBT6j0K7vacW
IuJ9mk9q4NCJU8IqS4+a0R2NPDCTaoeYujqrQ2OY/aGJ7iv46DUEhy43Pdov
OghbR4Rb5utbISTRfN0sPhuF14dGPLmD1Ru/sypnTzg8AhKZ32UUvKeA71H0
7QCYA5oS8ZtvNBaAz7SKzdoTizeHv/1qZfYngZy6qvxFiwmITxWY5jg+BVxB
fz+/2zcJFl3hHxzCsX4E43Hl/quqeFhloHtfuZ6DpPY/7PtCIiI9sqLlPN8W
5H5X46pfHJav1GkxdqjzJAGrNFlOiOoEGLO8M1uvn4Tw23GsH+0ngGGQjSyz
BeOvlDssi7N27GMfFd1KpSwe4EXFxe4vHsgp/sT+t8kE9GP8PD++Ftv///V9
AS/c2wqV3E6gND1TVHK2EDX0m2ZpbRFRcYnJjbi1elRDWPhPtAXjf+6tthmy
fhyGGxQ+J4XJR0CDnTa1gXoQgoXbDrJJt0IlJ0fuzzSsn+LE7QnygtM4GGHp
qeCtq0Df22kMBGKIiEh9V8hVuhgFSCgvd4xh/rph2c+P6VofHJOty591rgXX
HAmbRbYmZF+pg6c17UdWAS7aE3YY//Zpwq15Ii4Q6S2mGw+Xd6DQG672fmfa
gDV8Od3yTAFkqEs47ezQv/X/63siXqMxchMz/ZApbd8qkd4GvXxu5NIJJegL
x2JbyKVedGzzmM/xGqzeSZrze55myxdQEdBT+JzVicytfGTNbteBipOB/W3a
RmjmP3mCIIjZt7bEwfPR50bgdyrJcbBnCp6N6Lwf3ZiDN7f8gZV+EQIuqB27
UY7Zn3XSVvw8Wzvgh5ZJBtH1yP9vOJUkfTeqC0sJH1SwgSVzmR61u5h9o3Uo
Ys28PAI43nAy5b3T0I1LyVG9Og/KM0uGlhaLcDuI5yKDMeZfUl+3lTKvD0E8
/mPBVveOnbb1uNN5mgDroiT25YxEyHDV+BKVi+H51Xzmjxk7eNirj0E2dwcP
N32U4hLewcPe8spz7jt4OE0jhZ17Fx6mqr3ysm+UBOvDPpnFzZOQQe6su093
FlAg43Vd1jlokVNPlhXB+G0pr3qp83IkYBS+4MHOPQ4vLzKtEpjH4VIMf2te
3o5fG/71Is4Swxs9PaLlbk9SYWGk82TvLB4d451UpaIqAE+PKAqOazgIjrLP
z9DH6iteXLEd9eUmQWD2inlw/hhcYqktkT44BpNBVu0zk0Nw+cr1Pn45zD6v
hEQmdH0agMM//uicSOsAyZKvh61Us9CFbG7NTSciQmo0A4N8mD5eSfLiqluu
AZb4AS2BPBxKX06pzr/XiM7RnDniI9gB4P3hwHVzTL8yTnx6Zec7DHL5Cw73
+EagVOsbPZflILDFL69e8G0DKUWHKfmXof/kO42FihSpdYHfSHay7+AXFMBC
rjTq1I36qeWm82LxqNo96fX+fiw/S/2Wr1Fu5389eRo+lvB1CLhGE8U+7ceD
gtcRh/cBIWBzderg8csYnleI8snU3tMFh73eNcdFhKDhpKL0fmI34jmre+tI
cCdqFjw+eY8m/5/8xP5VYs5dHCT/TcxM3V+BfCkPXfEoJKIy6TE3J75SlLsU
x7b1CNP3EWJn+KW1ftii62wx6WmD2djfchN5xciFZ+TbxQO9aN/tRi//eUy/
jvunxFql+sLVaosjml2dqOi/M3rGd2rhB92+F9FKTaBuqeXpTsL4YbGlWCbq
HXxFq+KlLbODr1qJFZpEoXmQyVtr4dnBV6O/A+X278JX6zb8ujanhsA13mFL
+HIffG/MOzSrWQXuz28+DZytReFCxWdvv8S+ZyWkwPgdhQXiCrDYuwePQ8/b
W7hFqJvBYpgx9/5KJXAyOL4xl8Xsz16pLHbVoyPghBPnuhg6BdRMXnX82nNA
R6JmYrZagNU8s8+iJZg/cnade4Q/GYkmOYRFLl3pQLTXJrIL9u34zacTvALs
mUAR0uEqV4zZE0mO+y/F+QaBrg+fNhWHh/N8CpVzsZaohI5wUU2AgCRviB++
t6sfX7jl++P1m0Sg/L1vzIHyB4SdDdd7GohHdA9HphrDelDoOfz7nusYX5H4
2731wbF+eFG+FPjfVhM8kirNRrbV6N5/yebjmX1IReO/vO/RGB9F6pj5abPx
A/S+524FkxOQ3eeIc5RjufBsq52RvxgH/Ob6q4vPsHh8QfTnvq95fkjXqVoI
t4OvvmcojNpGtQKdutCdjxwlILeUd77pPraf8SvWJ/ANg9A1vrVvoY0ILcpN
G78vFUC9y/E9saOtCE8Sn4rZ1U/xomzwWtyNNrh1ldB63LQJSX/eT33vLwFl
jWyXC9qmgYZilCVuV76Vltmm4cLfRnj3dGqYR6EdRbwc/GjwtgPZW5j+Mf9b
B58oN8Qtr2Dxmh4uPpByfhg2tn+WMmSPgnuNtK9qMQl4zQODfA/3glBlYVYg
YO8piHRTLTgPDQB7NpN+DhEHXrwO9O9+JiAXva/NZardaC7GamnNDft+c+UM
HXbNUkhWFjv6Cb9zTntywycUs9Abn498hYEESJTVoXOlCPkn/xbzx2WfjQEQ
81buvi7QCeyt2tb2T2NQyEHm/7znutCvy9bTy2GYfNJMxIWjyTi49EaGQryg
DB2Xr8ui7iWi97xinNqT5Wg8Vlf+tR4WX3SwG1Fn/KqH81Lvm2ofdyD9k37u
QS/bUPKfx6JrwS3wNoPFZbUXW88jHhhodrsNlg+wXKS824SqBDeGRfZ1oaBe
2QRPrVQY+3QzymrXfLAqutN/5+8SwfjInlefH6eDXklsauJLPBKiZ6jNqu1B
W9yF4d2cRf++n+FM1IhfSBSaS2e6iFtrR4aK+sJhMv//Lltx0H3RH7BQTHft
jtuueUF40zG3Xz3Qmh48pnW4DFL7I7vpvNrRuTemUS9P9iPT9EIJJn+Mf7tf
yiUhseO/uH9cLmBsnATqm9RczpqzkMK9YHaEfg5yklYOaXNg/kt/oR6lO7RD
CfXe7Jy3dShmPX+Iy7QbUViWlut1eaJt5coHVktY/Phy0NrglEI/GG+mqKno
tIDLrWXlu7mV6OK++q67en2I5Hv2O6sbxr+9Oqgr0aTYCRQluUrCz0tQ+wzl
ZNEGET2NffZ6cKgGCW7Gz8bLY/HI0lvTIIbtYZi1pY2MWBwFZWHxNQ/ZEbjr
dt/9xlAf4AJXuypPYXg1hPdlKgvLCNznqSnvzZmC62fR0qewOTjo/qHcMGsB
Gu+8oX3NsSufezD3ozg5CZj/ylGMbI+C/4S+61PDEfBYMGx5LdkP+A9E71+X
sXryixmHHhFu94AP/tJDq8wCeCd1IrVeAYcsXBt4SE/7EN3BPfZ1Zlh+57n+
1OqK9A5+SHqsOcQ+Dg595wWe7h0H7XGCrq3fTtzBL/TsNA2GB/7qXt0v1YeH
L596r/jLZSAZ5unx4lQiusMZ8tyqpA0FsXVbWhMwfezRm906PT4Ev49avhTz
GAJ+0d4OyslO0LguF+tUHAgn8t7Tr93f9R6o6+UCHor3iPq7nh9VHA7laci5
BA42g2pnXXbihwo4pnjC8c+ueZibiVxy5u7DYOvjaVNyZASEtE6JSXMPgsR7
ht8PC1phpvbzx/aHcf/Wl8QJdgtd80I6XU3qz6RwyOay28Q6XysU24i2iBSW
wo8WI2W9XfWf2j+uKrafI0HohIkvp+sY2LdfYL0ROgrrRoNPH3IOQbCz++h+
LkwfT2QVUFJpdIB5HdvWueBqpD6Q2u7BSUSlJy3KxigykOrqRZ3DsZh9QzTn
cp+pdsKEWjkHr3QJ+ustR3Z2k4hSHytEP9lXi6IZ8bXPbmD3LX+qMU/lZC2o
jOxjI8TjUFahl7V5RiPqV6+70E7XAXkjUkMK2Rj+SS4bCKTnGYHQbG6TR0em
IdDpk5+K5DzoSW4KxgUuQq2nRC5HIuav08oXWR1pRoD8SdBXludTsEw8P6k6
+gvoBUJdzckWgNv3vEHdJlY/YCSSF+dG3QakLneu//Y1o9617XzLLALyueTx
qfFCJsQwcZZs7Zq/Or3yoLeacxjKa9MfivkMQ6PTKcN6KiIEZ4cE+IkUw2cy
iS73baw+M1oN7y42S4IQLothoblJULn7cPz3j1nI13uvVZ41B35x3tlHmbD6
Q6o9C5btpS0g+/bAXFJIK7r7cM3m+3In+rnVfPMFVxmULSrjQ/iw75nkFh6q
vZgNeyOsw8O4CIi+a2nyuFQifJEQ7BzhxkPvzMTeZUOsPi1xq9Z2AfXA+DmS
nSNVKRgpKvBx03cgvltJIm+X+pDNgXma8ENY/svwpqRe+W0C+NTIGjPLJCO3
g9/qvMyJqPteofbYDv5A5Q1HnJewfj237Npblc2DoH2NO5xynAiz3IXa54sK
4HyBq6d/aSt68u6P+nvJXXi4bDr+tw4J7IZ1KmM+jsPh4NnPxePjwL+vjf7j
mVFQfZlz7M6XgX/yeYUCh7hbh8El9G/uK95RYC9zDmIKGgbLJxJtTzS74Ckp
QnxoBpufM9gY8bnUAA/K8S1aq6o5yKFDKj+1j4gG9OddHx1uRcb+/FsPt7D5
ciraXD0nd/C9adDG/aeyucj66/yX42NElKkxUBiv1IIchTpvLi5h9pAfZbnp
/uoApdAOXyaHSjT+V/+2nTsRsfxY+H0CChDhV+Ga7GMsXuCaSt0MHtuJE3Kq
Gj+EVCLThH2NFz7u+NOVN1Vtlflo0WXwXrcFtn7i2KnnZ3IS4Jvb7cxEhEdc
TwJpf3gjCOu+1HqRtQNYGHpll4mYP7I2OvA2ML8SyAMvuVN1d6Kqu2P/scVX
Ir1PrCZPBjtBKTU7bB8nVv9510fm7NsKBN62PILXJ/DoVW5XRf90Otre/DP4
Z0fPiQ6/h9oPfsLuZ7SrvvmHRtDsasV9/NKOhhrhkhJNB1rY+F33SaYBGIh/
Hobvmu/B3vpr+O7rIXDxor/jkD8AZY1f7vlUNIPOO8P9PGmFqN+h/29/KlY/
zKPw+1hdEA7Wil9Q5W6UoeHL8XS2eCLibzsvRqFXjtjifOz3+2P2am9bt7w6
TzNIXPezrA5oQwuGe2z7g3FIjU9VSkmqGu5cmj1OcQPzp4aqtKR3p8IgcH9/
43c+PCK50jSZf6iCXnON4kGlVngzMzCbU4PZ8wOFZ9ifhAxD+osD+m80RiB+
c7z+b9kgtAbfqihwbocx29QNC+oP/9YfWThgI1taCIyWfZ6Zpwmo+LDQaS3X
YCT8y8Pg21cCuItP0lrdSMbiZQubTc0IEmxk44zfhE8ARwPjmyOOUyCeIHON
vHoS1inPqnyvwfqjp59E5g3QjQDZYmXogvMUOLYqoJIzc2Adoc6aLrIAM6kC
eoMPsXhBuQB5+c6QYPgynaLEzCRQuP09kJIwC9CYeHU2dg76P+/1b6fF7I8m
9/DoO1wdOLy127ww2YHErSL7KW61omJPxn6Fy23w4xxnu7/WrvwFPkryhRcJ
wp07QrTvT8CkWRLf57ZJCCR/R/nIbQK8fKZKy4Yw/uruWnl0nV87tGVPsukI
1qGb346oFu3Ep7SqwYWJt7+iV5anKZeI2Hm9TqZIe7cwCJQycqdEhntgZSFb
iK62FPzukl8JnmtCQscsxuLKsXzxlkwzv+O9UugLY3MDAh5lX5Z35BLMQpnr
gew6QQSwzZDg1zEK/ie/W7qZu6isBd4vP7jBsGNvZ/YYseqsdKI7Ji1rWpfK
QITIte/Arn5A+eu+/q812yBw2zpa+ngT4r78S+/u6S50P4r3ofPBZIi/3nkq
c9c80s0H5m6Txj3AoBYhtalUBBqMZGtO8x1ILlg0j/pbH8o19Goyu4jl9+18
zRhJi13w9j8N/+r9TmB6ZNsytrQLRY0u1Le/6kLax4/KFMR7/5M/ZKpG8+D6
AJxlctrr498O714LJgSE5aOLaw2xD972IKYwe7rGAGx/ctQ/aWiq66NbY6q9
A3M4xGirFRX0pQn4DF/xPUNV0HVy+cjqrnxcslsS2YlnARDUgnMcpsAjqYEG
/dWDNfBwyK/tfVczFB7s8KN5jsXXW/pfk65fsAeV53KMUU860adle5jkaoCz
tmm3uvXrwPLIB3OdCgxvf16hXvteOQT7ZCu+jlAOgQfLKakqYgdI14S+vvLI
D/0nqX+8ZVc/iNeZyYSmYyNQRewfLYiaAvbccJbYF3MgCSG6e1wWgN01zrup
C7v/CUS2kZtsQ4AnK/+qqNgHdO69FWpdVeA38IDn8qNaZC5fRfNGEovfu8nd
mhSCh6CGVzZ14+kgyGiWi7sY7tz7C1mrjz0zUM5jYaaNRGxehN/n+4r94Xhw
yfSf+6CfhdRcOUtF64jI26o/sG6oFQk8+xamRoXld+LpIyb+020GNxolHg6b
NsRm8lkjtxqHYko8HgqnVMHxL8G2X3a9z9JF3nugaiAaDW3P76NqbUd8qW+o
s3fih4tLVZc2ZpKAZ9rjbJo6tj9JRoyvKWwS4NV3ZVnGYjxKOhcXm9KJoC7m
76jnwQ4gRdJHJP3C/EWrWGrVUlAniNQ+9azYX4Q67SafGW8TkaJoxbL7uXqU
46o3nCCC8e1BAfzyovUkuNLmejdMbRLcph+ytAjOAE+5b73l/Axkhlwv7CnG
3u+waAppEV8YBgq2rk3u/FGgyn84impJQHriZMct2At+tPZPTsRgeDsm4KJk
fmIs3M/MKXcLwaMvZHtC1D+XQfZvrQesau1QR8x7IdGJ8Y0KKt5lVXcq4a/f
9J/Av52o44VKXWFIBSrg23t0hg0PkpkeZyccMHxyJi+6nIJ7BKi+9uqk0k3D
5OkzrPpi83DE3zJo/5dFaKnJ07f4huHJcW7c2V8LFVBh/PZo82E8spTIlRcr
LEcG58m2b2vgwXKoS3GDqfzfeiKfuufmYB9oeRa+dMpthE2eJtcyplq08YRt
oWehD70dlJ/9hTB/hwz6KO1WSOB8vTjb88gUUDV9ZYyj+QVHHy99O8szD69S
Xjvcisbsc6qph6fXMwTxEj4vLX/hUQEtWRgFRToSvUWWIpdIAP8xW486j9f/
1oul3H79qKMLgthvzniFmcEXeTAjn+5CGcEP3AeYu5DbqoLzaifGD/yv7+nc
t0kXr+EYgQ+Xl6gf/JqCsbBrninH5oFBon3B8OYiGB61n4imw/bzpEn9Gx9G
EqR+ngle0hiDqScTxdU7OI5z2Vrnq8Ug3Brw8hG9jsULHcdlyxaKiaBn7jsn
1p8NhxQOR8d7dKKuilGVC7696LSRSvFLJqw+fHaK+GZToA6WRo2y1HlxaKNk
irbmUgs6t498/eVQG/B4h8g4vMLk296c2kaUI9Ajwxo4+WgKhL4kF2xU/4JL
PXR2t0fmIe/XQUHLJixe+Lwu3q9pNwxOg13WrUQSHFh2UbI3GgCnX81xVB7N
IMNKSbpzOvPf97BSK0wlTO7YHyddp+P+Q9Dxt9tJkB4PIRsPI/2PhEIJ2X3W
UDYMb1B84DKnsiqDTiR5TzYWj2zv//6k9DsPlSxH7N2JjKFx7Z292Dg27+Xm
hinh9k58MUOmvl9zJ74IOCx/QSp9FtxbU3M0sudA2smfxWtXfOGhRc4X0DAM
ZFqF7h4nRyGsXpHc0nQYLk5Wpkh3EMBq7vrJckHsvS07itNv4wcH4EZch3YT
AQcPyk5vvCMmoPH0QOah+93o/E+LvDu7+KjnDVXOpc0DUEufmWodggPDx+v2
vWnJ6ORbGVy3fzcy/Onzxs0GWy96X0MnaDAXaj5WyN4TICBKCd9Gn6sBcFZ6
qmK6Hw8/1bMEIw2w+Rv8MXwqvWXDoBk7Q/51ZQT6PxIiYxiHQankrF5jPh5O
yKuyPfHLxOxJmyL9S892WGeS22KUrUM9X8RHvO27kZtyK9urNV+kvDYtGTaE
2VsOe/Fwpa0c0PTcXrnMT0DHjwlLfqCPgBWTB/IWyXhgezD6PerQrvdKnK1H
g7V3zlehx6Btux/eT8tYRNA2QiKZ7fsWtjI0E8swWD+K8Z+LzaLns1xIIEZL
3WF7ZQIYej0zD76chPz1Njlu/DgY/bGjdWjD5oVKf2q/OHWzFPgU+G/+JOLR
Ew464eSKTNR0SHWvaigB2PfMr3LbBvxbT6FWq29c0g1KBJf1tuAYmLd99Kr4
AwExlRE8e9/vxG2C+g8lkrH3vg/2ha03eXfDoJILy9J8BLgwOT/baiMg0fzS
JLkjROSWInUvVQLrL/5f5+FE1g1JgVoruNX9x8a23YKOaB4y00jDox+uWR5q
J4vAQMo0XdcLw0v/HUj5fCunERT7WRv9X7Wj5SnRA8NCHSjKQ2estbAe7sMc
x/IkFl80ft12tt30gtEjJad1SjrR1VvPbZY2a0Fd+Vh0oHEjCM/cl3E8g/nH
A/nba1X8bXAl5IS5nWMTmrwQDe7zBGT5/dFV/ws/II2Lke39rn75Gaa0D3Z9
RKgEF7wkfy4I+Vbe7b7dia6ExPjk1PSi/GKx48G+lf/kn9ThV/xR3AWVGc43
s1XkIOEjKYSTqhtdV7BUD+ohINprMy63iyMx/iSAeXvuLxGKDPy3TR//hKvq
+4MSKDtRp/p/fxiWexHHzFi0Sg8Wvwe2GIcZdQzByoepd5MwBNt+s9WFBThw
o3t6/Cm/DDpLaXCKY1c9PHP9Q/mQZgTf7ii5GY/j0eZV92Fd6gwkMJi732En
vgtamvt7y8EV4/c01dNHng/BI5s5VedXA3BmOWe7L68JaqT2jOndKEF/EjgC
+y9i9/n0zWeVBLFSqBWLOea3cz9VR5z8jWszkeDpQEb+nfu5kPErgDwYu58f
l/eHW1v0wYWD8a82D9eDcNdrNlqVBiRzJjfwglI/GvUW4NQpw/DV/9r/a/iq
98XhITwY0AqmUHNmIPpbysbEZCIq2nhF+NvQhh7RN/69mY3hjSN2a2HaP4bg
I/u7TfWcQSjsJUdCYTv24vDtEz6pccjXa/xAggaWX34pbbtRvCcebm2ZLFOm
4NHkvhhuUlUpuBPcZ8zTds5zc+tvmhGGT9R63J36blfAEPfF85lieGRV1nKW
/VAZ4mOX9FLNwMOQ/GTdt9aSf98jdTuf8eQaCaxFrq1vX5iC05yKj4RFf8Go
47vFh4/mYUr9r7raImbPXVnU7+qqvgKxZLrwFzv3MmsyLz0D3wDxEdkDU89r
Qcfk8su+Kez+R5fwen2MGAKzQyXeqXaDMHLwdsu78jb4wzxRvWX7Ay3R2505
IYvtP4+AlG16IgnIcAZHZmomoPTA8PvzQ1PwW3/4jPabKfD15/5Pm4jNV0z4
NlUe6zQEb44z9kscGASGW5S2zodb4U6cR8tdmTw015pT4LsPwz+GGhLast3F
oKQfK4WnJKDJrjcm6ZQJ6Jvp43cZKQT4EbZm+OX813/rQ+K/XHk3kwYTLR89
3dfwSG3kXGU7dx7Yf17US3TBwTAXXphLdNf7SrlNx5RIZfBdpo7P2AuPqCxV
V9vPF6ID5AS7fLGd+89tpXbfCevP2nhUebdvoQFIx77cDO5tR2PKhh+orNtR
VMPM6vPRRgghzoR9YcTsz8MkXdYUWn0kcW1A9+48Dgl3KVGbf26CZaa1uuny
Kkh9cF8nZVc8Ja5bKkh1vBco0wadnyyXwYObexgunmpHv3+rB+jc6Eevww4l
NVpj94cr5aH+KE8mzLg4RhacJKC7BmmPnVwzwJWhNzPRsxM8hRRPqHVi9djf
Td7mMzi1w5ve4sA+8zq0lqZq5mLejURmrNrttryQ8MJl4/B5zN+Z8b5PW3tU
AnEWL7yubOMRV1T915D8JGTJqCb0LZUAs6ufsq/Mffwnn50sKVGYuQJMT1xR
K5TFo2SZQf734aXoklnNvlvVeJh1LJYcMSzG7ueA+sBv6IT7Jm2RfKQSVHbi
ipn0OhGpKOXoPTatQQ2uZ9fcHDA89vzRcMfJV+ZwncTg++tWJ3K5PY6TH2mA
/eU9kc4ataD96AHCz+6ql5j9sPqupwvoZO/bXQq3gtBT6hrig10oayGJaY23
C63AGz7139h7oMkvaffDDv5fFpc2yD00DdXnBo2yYB66hN95BXktgomYYEZ9
0C4+mePA27rTQ6DHeMqxl68PvAQuFoXaVcEFo43P/tW1aHJrj+CoHhY/ciqY
s1Mb5gMrgVK+iHcHz1wqmNi//ARp5pidaLpLAPrcAOcDlFh/kJshMfF6dSeI
FShd9f1egBL8a6gkN4mIwYd47IZFA3LT0yig88X4cE1RiTtMV3PAQpjcP/8a
Ad1bJN/3kzkGhoVURBbe4KFnSERDwx3Dww3sChxSsoNQV2A2wyxEADPpE+10
Bk6gdX6PEaM1HvEtx3Dp7KofK5PXK0JfSkEzbSLlcvOOvhj4DZVrZaPfjzKJ
Hd4EeP9H/d7baWw+zGJinRozRQ9oFWn7zrX+hKOL/2mO/sKhi6/4lFYo+lDn
7f1+/few/qAzg5G9OMVmSBW59rboQxvaK7zvHMdPHCo8yTQnSaqCDtVQ/YK7
2P3ceyLzqYEbCUpf0rkaik6AbmyaLs5vEs7UnRU9wTIBzbUlV6yFMH4pnF2A
2uZFJjSIZPxiOkNAr+n45Jzm0+Hpk5HpmOhOGHVODJ97jumLqfeGgWLfENRT
0fleMRiCO3PpzyZUOqGS2eQT5fAnsO9eMFtjxvzp53BhFq4/URA9ySP46Q0e
2UuK3ks8UgHhb+ncrwa1gXvk+TPMkVg9qgP7x7R4zgoI4Q4lz7qNR6ec0Z3v
taVoZPSFd0IJHqq1T0XVz2D6Enlij2uPIwn6zRcckxknoCitxgaJTsJSmpFO
of041K8fGsLLY/gwMLGTgoanGe4sWEasBLQhi4cl8wHBOBRqerpYUroaPF/7
3q4RwfYzlJQwVKIagRZ/ahm23e5AU52erhY7cdF4kqjKB+sskNubOrLViemX
2l/5M+XvqkDmqQkfVWgnyr9PUCP7VI2cXylTV2h0goN0mgklK9Zf42pgN/D9
IRE4FyhqHWvTgT7fooNVC48erwamsff2IEa6hEf4w8X/5BvYnWLoHRqGc4Oy
RU/ejsJ66WkNbxESCMlV153RJ0JyXEwEsRmLr3lCb93JZB0ByY/aXIZlU8D1
ei7NomAOMiuOWtu0LICtRJzoZzUs/xgbcOyhuH0xpFxceVxygIAcFfvPuXHH
oVNGFyZHkghQ/1M95Tp9MOaPguucxdN27sFPk2vMGYNwX2ChoMajHbJVajcY
NOLRd5Wku8wmGB4IMx/OesMyAmoUHE02P6fgK7fxqW+RO3GXjsKq2s8FkO89
Z07LhX1Pb2aN2ouBCER2LOzkab4OBKXWi/5rbcA/3l5n+iUTSrZv7T1bhe3/
w5Mdl1g/46HivcTrDeZs9G1E77RoGxGJ3Tct1vVvRVyMzn85SzF+ifR07tqP
9W54K79yetAvEboz1h+tHyegDFTbvvdQD5JQcPHX35uN8UV112VLV0iQ5Sm7
WXh0CnT8MoY9aX8B7tD34+NX5+GkJYm6MR7DGxvnnzgr7+x/kv54YRbawSd/
H9Lw5s5BSygP3G9YgJtPD/UEKGL/VyTyyvztiVj4TcrkD/uORzWrggNWhmXw
o+Q6TbB+O5iIUwsvl2H+jpKdQ+3bPjxMXezOofTMQ3ll7rflV4hIJOGkp5BK
EyrukAqT4cL6H1l+qsxpzQzCt5WgjpmiHkDMNAkCt0sh+LmacKdNM1Jr1TZ8
ScL4z9e93mrHTvfAHe2n7kf25cMwr4uaUQoO0SZQynBx9yFpvz8GnNHYPK6D
Af6eZDl14BnP5BT9pwN53jFWqDrditJJYny2ym1QyMe8d50L48NVIpyHzJb7
QG6fY90MTxNw3fT2r3WsQR/L6I+N9PQh9lC+4Y5jGH7elFrYHr+bB2eomBaL
+AiIk47Ljpb8PThs0GyucxBAnpk9eedX/q1PubQR5ZiWB5bArJx6nYACumdT
D5pZAOndE+PXAgTwkTnwcpyIzdP+8zP4UUVyF1DZu1DPZOugD3xL0HqyGzFy
5xc4xhNQke7RC0ZDMdh+Np9imlELhFvqxnNMtHh0KejuoYjmarh/6UHkHvYW
ULd6zFB3F7OH7ktKF+2Inuj4ZpBlgwwOVQxG5D/gbYW/W0SK3MZSGHvPHJe4
Kx9dd+OrySTNMPyZ1Y4ePzIM5CfVA/lpuuCTVxht93QG9JWQC4eZYfzk8fMT
rc1zOKDaOmp1/kcpGi51E+X6RUQRvCxB5WRVKMLUleKMB7b/D/9kQe9GGIqN
yXUxMutAtHcaljqj2uDE9vq2RnYOfO0w+Cu9junXFbbzX23+dEG6z5A1/xtn
eKq1pXCvoAtVKi/ui3ToQg9F6/bn0Hj+k396OOPT9YYh+FvmLH/jzBCY6oXt
ZRHDwR1/Qedzch9RI8ulHiHz3fM3DjkFvE0HQljjPWMaApoI/zxlVZADB7ak
W1ZncZAf+iHyZyzG/7exm/NfkXOBTRlmUtWnTqSi6GxKr1kPUX9OM0x/rQfl
KajYdsfkr3z98eJV14693Ow7077jF4uK7N96tszAYMLk4q0dPSbeTup75Iz1
2wbtdTagHS4Hho0lfUp1PHJ/IO8heKwUOfIsGZP68SDCz26mm1D4bz1/+MMD
5cb1IKRvfUM1qmPH7vfxO5Fa0SbxwL4Cy1awS1EhP8eN5ePaeJVdQHoQeiz1
PA9fIoBIuTjfAwEHeH5rkJzkjkcsfm6i+3bhjb0jE5KXNLphjVVseM9gIDg/
eMaTeaULGcUwqJc6d6Njd41qm9v8/q2XXU3m75TFA48BK65VPheZJVSpXhrb
sQ+xqvaeCi1I8WLcR63fWDz4hUrYwsMOD0FmYlyHArOR9+nbvy3xRGRg2ekE
j1sRT3Moo+V/WP43XpruI9toB5yp7xAcjKhEjqUO5vdciCjvc0JmcWo+CqVn
Ur33BsP///N8/j+d3160kGB7qgKn8nwS1suexbKYzoB16WmuSPVZ0IytPSCk
h/VfqC7eEzM6NQIcVt4K++um4KVqylpw0xyw9TrSMw4vQNTng4uNlpi9la8T
/8to1Ad2IoMJzu110PNj5tuz0AZ0+WOn6WO1fnSDdFa71hOL79IsfoU/T6iH
h82Nfi8/dKADNKfTCextSMXpE5nWhVYgPj6qSfseO9/2VysLq3078XX18Mwj
yQz0KFyg/mkqEZFV33/2u7QNyX05ErTUisXXo0tHZqP4CsCyj1Lx6hUC0k8s
OjRo6IK0cUKRQy8IoGMtzv+rE3vfJFFAzPkgcxmsvt8OfZCLRzSDCxE6534i
9YmyyhorAlgkrhSHLiX+k3+nOTFElq8THlOIu336DyFxCYOOqVUi0rPNSWI7
VoMudsnmjsZj++/0PDjuN0s1vN+UuSr4rBMJu72S9NqqQdE/ZFIVhnbiR5kO
o5d6mD8tfWX9qTJ/GC4vxFYZ4kZAJOYG+f6WITDSWpM2au+EtHvyNkEryf/W
j4yS0xwCAtT0mHfJlCWjhbh+1jkrIjJxiWyuPNaB3j7I+bDCh80jFUn7EPj5
nifak3/Q6eUdHFr5zKctxdkKYsJCvLrjpQCGnEoHdvXXKM3aRdsaBwD/Qmzi
Hwo8qmLtC1Q/WAOuXotFEt3NQFyk+VFngtln7cdHWvadVUcXLy1RVm/hEOsn
ZZ01ySaoUS3Y7uCrBnT853c9Hkz+L5eo4ecmeHgU95ys8nIOaj7B+4O3l4iy
6W4YuZ5rRcfMHeJ6OzF9MVqbP2afT4LexnRDX9pJODTfbBz7cRra+tTMauKn
YUKh4OD1XGzei6Pe89W/UyR4LWflKjg6Cd8qzv1RDpiFyWH8BUqXObCmvOJ/
ZgSrl7to/z4/JoIEp3ybegoiJoDO9o4gi/MUPLXkkPvYMAnCb4J/nGvF8uP6
d/h+S3wfhPoP/RFSHt1wqozJkexTBiwO3Ixpou5A4TRti6zRmP2JTmJqlN7R
rxkWJQWr2ikY3z/Fe75xDopZrHOSBxdgCuWaGL/C9Mu2WoZ7z/MhoFkyzWoy
GQDp0h9P8sObYJMvVTHBugT9SBBmFefD/PtYgWDsG1t94P2pm5XN04lWC5pC
tOUbwbi4dpy/qAboeaaGVCmw/X+kJl5d3DUMIYK0kvmqo7CvK/MBzfgwvHpg
kmOl1g0ysXJSjJTYeyWKVz+NSF0agUWVFFjdnIJbMnIM6pzzYHFCMwP3ZBGG
Bfe0hCrt6he7Y9RzTS4UbI2+BDRz4dFBKfHaCyVVwCfBlfOepxXEyXCKo4NY
PsIoyu4nVd8wkDlTL73QH4ULdgJTt+hIMKScc4qA64aY89Lz71XL/slvKW3+
cmCxB+575Ctani+DhNAeZ06XdrTKp3xa4Uw/+lt/REwlCfPvj01t7MukewB3
PUAe1RQA731Z+/2yOCQtnBv81rAP9aSzJ7t/wur9HL24jldLDgCuN//gZMsO
XvE+HHpRPQ/5XbBaDZHtQV+pFBxbqjG8F5v8Y4sY1g1BiTHfXm1EQkBrpaJU
EQGVX6+6o3+diH66dm6PJGL1dZnldBSaR2t27CF+kvVQJ/qtuM8x5U49yt6k
uLNMiwMKG9z0ARJWr2h1U4j75o9h+Kl2eVwjcQSugdaZy+ZD0Js1+v1IIg4+
fKg2rbyFxcu0/IMhW9dIQEgayhRtHIMIyvNalEJjMCD2yvLY9WGI2Ho8LcKM
1df1lmftHWUbAu+UWZFTqn1wrlxVKnOyCph0H0R4yNeinFzm9lgxjH8gSVIH
/+EJBQldM4eVK3i0J0Cz5XZVFXBZUcXaX26FthklsjUSdr5Pv73R5TsVjNLy
0t8FpHSgI2uKLRS328A8TFnp9HQexDTmllpfwO6nNa2VsQUZHhzZYxiK0vPQ
xTmmrM0dfE7LI+UrdK0JNXnNc1QpYvj8N84iSSj7OfrsmN76cQSHoh3fvZ6q
aILI1bplB4OdeD99/Q6fOCbf4MLz1hsRkUh37wEm8xMdyJA9KaGNdUeO4n9q
W9IZcNP8o4nyrvdNAgtPeFuJ46GJ5qSJhF8uEr+wQPV0goi+Lh5O8z3UgvYT
z4oq3cTOazI5TUDlxo59GJ4zCyTgobBIjyfXVRBR0F/Q8f+DR8cXfOjccJh9
mKzusKLN2rFvHKWnveYnwLaConDr1jQkKw7vpbk8DfXbdFd8FrF5PprbA5Xk
24NgmRiQGSfZCx2Pz5XTsZWDQPZ1a7BpREEaSgIfDbD7+fkvdfKpHdy+OnHz
XbJeCtoX6n46wZaIRPeZ8OJ+t6MU+urg+c+Yv7j1+3t3bvggmKrnBXv7d4P3
3BdW8sYMENBUdrz5tx1JOt6k2o7Avj9KmbKqXrcTbPBjh7V7ilHBB4O/TFtE
FCulz2r6vBa1PpMldB/A/GPe86XCMuMKeDjgU6bHj0ch0foRIiZl6PpJt0XN
cDyMCY6+Tl/F3pPS7c1R0zk6DG9GSzlnRIdh/Euls82PLiAx3sN/880BK7lU
7hpyrJ5QdDKJJBn+GT2gzn978hEOjV55VmqwtxWEzpu6rpiVwZ7mkZnLBth9
yD2UR85L2Q2Oqk/dSNSu8ERI531XbBcSKbsq+jihC43N/nf2uKvzv+959nxt
Q8acBLRCM0sjuHEYDZcx4Q6fAK/Lv4oSn45B1f3Wbt04rD/6j1DIDQPSMKxq
th0sd9ixbxSn037K7OjnXSkDFT8iiL1rFU6SweoHpJxC3CSdAtGpo+KNB6o6
0KHwXLot1jawom0P+SZWAHF5j/mfCmDfr9Cexqh5bwc/yBery4uQoDLyER9n
ZS9IEa4WrQdUQ/+D4Nmn/2H5xD7muUS/8CFg627cR/92EERhYQe2tkHbUTXC
mX3p6M3yUSMqDQy/fXJRrFMW7AST8cXRBxcR4ukX75JdIyIlyiSJL1dqUP9c
f5F1GHa+rsYpPRFOFaDxVozx9o7fF5Kq0C6MK0Okmo9zT/3woGGXFpH3EPMv
FArVe4z4SXBjWtjoBX4MGKMEUl8qjcG14yeuiGgNgz2HzYMLnzF7JT7bbiot
kgMZ9A2k3msEdH3yxl3v6Wg4TaOopWGDB0OvrxzubzF+0uWyzLzwwQLYtEtO
vcRFQOdyn2bniDshLtkK6kNGBJjF1YhSWGB8xQRXHN40qBCUtkWi2c8S0Mvz
X+jo1wKR/JcxGR8fArAEh95/+hrLb66+9y1xuDgM358dD7/mMQwmPm+9GZe6
IbJC/XFnRRE4xB67liqGxV99r2gOnJ8bBK7fV4I52npASmQHYnmUgtP1Kf93
PM0oR/f+l6Y2TH/PPk4lLD8bBr7iv8l1HiQ4v4/7TcWpfjj7+V16QFQ9XMmv
UH4qhcXvponSZN+5cJBaMRLy+VsF6vU+wjGWRETwut9782wJUrIb0Z0tx/qh
onM8ZPxzSKCvO28TuD4BZ/ZqkUVqT4OBRNUrpofTEBmrm2gAGL7inSxP378w
DLm9fNfk8kYBP838sLSaBJotdxuDeHvhw+T3YSdfDJ8nX7kautJWBp2F506v
+OJRvhj7/HRTAVqJC2/jkiSAy5UELoUlLJ/ev0ijbFXeCCsTUuziJu2Ie/hl
UMrtDiRAc8Dc8Vs9rLe5nFf4g8VHj+8cnqGRI0KD9hTTXop0kLjPT2bviEc3
fu09FJbbgy75XA/yvoftzz2DfTGTo11wr17+W+lBOxg1vbEk396FIntuHHih
2IXGmY8lNUt++ydf1nqym+56D0xoRf/aGMqHAm8Xpb12OHT0Bl3SjFwfqgmh
ipHzwfjevga8vhbPCLz/XT2TenQaYs7Npf65PQ/CX79FDIUsQsHBFdfoXfPJ
DdZeRfWTDQLVMx89J8VOGJiwOlIqGo3UDkVcUsV1oUPydVN1UZi9XWZ+cPHs
bRLYtTDfGmYah5rOUbuoiTG47/TikM4TEnAcXz5g+w6bP3b6cfeyZMYgzLgm
MPkdIULXeqz55vEccOQxO3vjcjvKX61/+csZkz9bVXRD8A4JXP1nbWYExuHD
nErQNe5xeEJGpcrcS4LBEyeqV4lYv8PK+H/fNHoHIMNTs1WyDgfblYd19NwS
UYRsb46pQTcKc+qKJbpg8rfvmezvtCVBi2YQMxP5BNw8yN9RSDMJZwsaDd6c
Gwe23x+MzcqxeUEKv6jGGJO64b+oCreJP1GQy9ibHxG/g6+Cbn/mVCGi73oX
nk9NJfyTL+KWNE3R0AE/fDt/z25XInyLkRrXayJqf1NpmsOQh/KZKV3Ysne9
V+v35lZ2Xx/ETpXaUEc1QjjUU0peq0Xt8QuCz1b6kBnLOfnbGVg+UdbOvo/+
Pg7Y666K026Vo/5O1ed/ioho3uBoSJ9iKXIcnG5vv4/pl9j+85wqVTFgfWry
2gFvPFqzKntPOli+o6fftNmYdvybQ1RsAAvG51drhpVPF3aBsVcYtUeyOERl
BQUZ03Qj+Tg2cMATUMHBdg9/2qh/8is1vh0qerJjd6yWpbrekMDT82ildXUf
7J9Qq/saVAd/DkklSSZifLhIe7LBZks8yB+h5XPPwaOrTi+fNiiUQvtcfSUL
qR1qSfUL2RwYX9oZlz++t64ZPFR9H6YKtyHdOWL5AbZO1PWb9YqjdiU86nz2
misB4//TGxjxm3JVoFn5YY/LDo7KLbl15jtNNYpte+a8910naDZ7sOHUMfuQ
/orW5cATHJy1/TN4rKkchWbcfK1STkTCKg+pa7NL0cOK1QmK69h+tv8iveH+
Dw9y6c8vXPiei6hjy8LzdvCYWlTVLxbKFpQdksrEIoPhMa25mHfU97PBv/eb
byw3ATk/1n8//iQBXInz/r9u4OEy4xw/DSNW/1B2XHOdhWEE0OdgU3nfKXBk
on/gIzkHnGMRvFLaC8B95KO8nT9Wn3aPpPlu0pcE/WlDovr6E3CKmlr4/sok
KBjj1g7XTwAtz+cld0msf58B/ZCWax8CuVumQ343hkDgk9q5+B0cL8nv3jH+
9jHqarWxVJ3F4utbJ8Zt2tuHQYmLw0Tlxijo/IlWP5YxDOyHqQ+0x3VBBaum
7ft3Rf/ke19M2Fv/5zGciFTTDbnUid4zNlXwGzSCmfbZ5D1+NRAm44LCqDH8
oHKvqMdpkQQBjllyZpRTEOI8g0QnZ0G4apooTT8PyernM5rNMH6+4iZjfGn+
ADB4hKVM3MOB5rcDzd//pqFxvwrl6IFuNGpe61BiiOk709zv9Fdlg5BxrfG5
2iciLIycdLpwOQ/Ewx93XzFsQ1zBMbIWT7D1xyI/bnt7DgFLrLiYgdAg+N2V
SqErbgXeH3r2urPZqGvNftblATZvYUmsP1GVcQQmXJik3ydOQaAu5XTAuzmQ
0mWjMP62AEf/w6+KLWPnle/cI5H2sA7k3QaqA07j0IPz2aPb9i1Iw03ENj+3
DQadZ1yfJmN4Jmj100T/3hHYXHok7a8+BcW+kn9kMn/Bw7DQzCet87CDBvq9
UrD6PemEaOId7noQ+UEWeQl1oP+y1f9MRbWig61MWvyoFaJNDrV3EzE+udLL
uvbJl2jkcXTRdJ3YjkR/GywTzdvhb06+Wve+FHB/Z6NT8RSLR57NUFuGF5Lg
oMjPJ33HJqHM/9zw6bBpKCL9lb/bNg3zTZD1+Q/mr2X63p73UmmAB7rVKWs8
Hej9281vLJ1t6JVoyn6qwGY43O6pEqSJ6ZfS1+AnqfJ4IFGpsBwSzUV7nbwk
EkeJyCQ6vfWqVgsqKu/TSB3D+M8ODlvuU8qD8MPKXtPHkABj5vH4xv7PYEuR
wtsvuGPvBotiyLux8w21VKMeLSTA4uENddQWhYw5WbtymYjowvIpom8hDrEM
K5zRjsDqVRzM6HidREkQmKG0brg8Bh0BdaXPv44Bk+szyqG2YXgfeyRDuA+z
Pz9caVWWtJsg56WAMu+RdsQc/I7sILEDzTZSugTX1cK79dQlBg8MTz7ncbc7
uIP/fTKUKDi2PkGS9DNKmrgupNCQSU++g/+fqXnW1UVg+D/xmxVHhH058KgK
htx4uYNnfMS+WV4tQRxP5dh4qAkwPE7x9qsVVt84/+nlacLZEXj4e2/t3a4p
+Bp6guvv0hwo48ysjakWoX3TldM/C+N/DAl7lf0v4QH/MvtZptpPlEZn/Hd+
loioq7koc/SbkauGqNq5Tcy+RQrUxnPm4OHEN7Ij9smZqI0Ln/eglIjKbDTE
CrjbUHfS/q960nUYfovP2Bs3OQw0/UYqkUGjIJuupankRAKN33PahUo9kJ7y
PN3wBta/Y77xSEopgADGh/f2Jb6ORXWXO+gjBIgoSuMhM9UtHJK3yFm0qcbw
vMvkhyIO3noIcupXlivpQIk5+26Ox7SiN6MipYtFrSDHubT1og+7/39563x4
xElQxdBKw0v9//nn4/x05WPwIZ8ThZ8hgSmuISGjBKuXU7Codg3UGQJTVgo/
UaoBEFCtiBW+2AiZHpEMCeRliLNean2uG+PH7Pyjs6J27mckWbg5pwkBlgYS
DVv9PYBtQrH39zU8eh5xz4Fy1/3UNlGl9F0Zgte9L1deVA5Bm/nXLLU6PGyM
TdOR/4mFjsKl215XMH8tSNZokPbAB+JYrPNiGzqR1LbQhExMLdhzE+avDjSC
ic4Y+01yTH9v/nf909zBERiR+/GyxmEKbr63Vtc6PgezqknsybwLMBamn8h/
B7NXtom1M2Lv8EChQzr1xG0nTolpeNDXSUQpt7PELAxbke323CWvqxhfarbn
YVjUr1J45Vri3leMR1/GRyoF5HLRJ9YrTcvvCGDLGKmyfj3+33pVc2WBm86F
QLOnKWxxJ96JvYindjkeiMYJ25aVXgTweu25cPZS6r/v96t/RLWfuh7e/vl6
g7utAzXFvX1R9bYVRa99K4qabYX7Pm8Pno/FzpeZShtdXu8FfgIHVadQDdin
myoPhTUjSjf2W7F2/Uivjmf/PT3MH9Vco0ojlAyC9DRnbbwlEYLILtjbJ/8E
nDDNhMCnNkTPE+dIZ4Sd1/24CqeVaBI87s8mHPsxATYfPKidY3f2tVaTR2H/
FAxFaydfvYrVj2UtLbIkWgwBZenlupexAyAl8TD4oHUzEOLuvC02LEIko5s2
rG0Y3uMg52XpWSsD2gaG6s/ueFRaejKFNqwQCUi63mARJMDpe90dCpLZGF9H
kLG5Y90FxW9jY8usnVHiPW26Rq1u9P2l89F6uh389ubgLdbW1H/rr9RHM8Vo
uiIJvrvGj6xw6G2uQHhaWgvoLP5euna8HJop/guJ2cXPl2bbPojcHATWFPLq
ryK9oFpidMhsuwwqrjQYdkU0Im8pkwpVMyx+7HSY7++6MAJpRsGvTi9NQfy1
rw6pJ+ZBizjCflZ2EU6432p5dQ6LRxYP1+vECWdCTqZzNuspAkpbynxvYZYB
R5WPCVD4doJwoMJKVyUW75CNg5TWYBq0p3CuXFrDo/Ezh8HqZh4Q9wq3sTnj
IE8r55PjbaxezjwQxyZ4qhke+DfEHInaOU++uIZnn3EIv23vPWNbDUOtju87
uDB7Hnij8c3plhxQUuCiLeAjIAkPBhaLrQig8HfZRxGBhw6pyek7hhi/sXzk
at76px08Q/SLURSYAKYbXee1XCbh/dHv8fR7JkDzYzj/Cj1Wz3P8ipttqQoJ
+A2ZnV4ojgNJqyGp/Ok43Nu6B+w3RoDf9gt94S9sfpSZXYJ2SKAzuE9ardW/
60RjYY9enfGqh6fqqu50svXgatkavLHrvZ4xhe2Bi/ze0GrX02NV2on4cjTv
/5mrBc57Uwcm7Bqh+nCXNvEEtr5cU+MSv8cQ2D7/WmLJMwhWzmRXN4Jb4e7C
sfWSwBx0qmysjNJ+17wp3oFX+4EEESlsy6zbY/C8bLmGNXUMrlZMZFhuDEP3
fzQJlOq75nNeK39FpToEMqo43dL0fiD3ua2qNV4PFm28UUedytE3OFdP+Rjr
9xfKcbjnlUyCVpujOjStEzCX+1ItYXkKXqRMvTwVMgUeYgYrq4cxfpLNQ+F1
ROgwSLoJ33qvPQJZ7eeyCI2D4Pkz4kxwbDuwBvWpc6bZ/5P/qyJM5kdXL3Tc
IZdzNK6GZfGPtzw+tCBO5+QjVx36kanjofPJu/jYwTCpVyKXekA56oWmqGM+
3ACvb+99cMj81oLMQ7E+JFbyec+xi9j9RMGJQc4xLcBrfkKANa0VXbtw0upu
Xyc6v3qhSsWjDBYeULDjObD96bNg49kbMwDnHvyYZ6HFwQycl3x9OQPdr+j+
YXaRiDpPneiIvYvZn4hFhoF8jWGILNz4VCtPglV3vi3dg33Qc60m/D/zGsgW
ifvRL1f2b33rU6Whi4GDIGHmTFzR7QZBlnbief10yHwpU02h2IECy7UTfJIx
+cQXqj9kcTjgPHqCMYWlDAkccbNLHicivlN/QhUuV6J4ytb4QhJmb/FJ1m+5
o8sgLUllRCUUj7rm+inTB/NRoKfj9+t3CZAD4n+5zLH5PHckyD8fHuyE54mV
jl01+ahCyMwid42IZMw7zRYEGtHr8YkdoI7VB0oZpvsxyOZB55bmUfyOPg5H
/B9n3x1P9fv+rxSVItkqZaeE7IgrEmUlZBVlpkhLymhoSEiE7GRv2TNue49j
nHM49jn2JgqJn88/71f//r7/34/73Od+XeP5vNatS1JudId8ba2bKvxE8DSO
+brLBou3bBxzMTj1rgUWlAlhLzba0Z7JA7YNm53onIznWWG9enjNUczG9h3D
Y6wJptXv931FEgZvnvnf70Sn1gVPHI5rBy8Bea75pDxY5azEf1n/p74iqPHa
mu727/x4ndJL14j2cDAxMCr3ILubr5pIGY9QNbtrtAj/P+/RX8DZlimSoVko
87bqCBlq73DIHDXrhbt+vJkBrpXAGn+zdq0dqyeUrW2YuWWwLf83tWXYLbbt
wuh0pPvncZA6vLSPwXsEND/tivxI7P9vfyamB47faEZA0FG+3fTmFBS1n94f
XTMHRyDC4Td5AZha05U1mjC+sKCPS4z1HgbafUcUtU4PQQ7rta/1n3FAduby
WqjIQ99/RpLV32H6/q1arQhPXwHHtRn5RAsJKMAw7MfVuXxEspAgH3xGBFrf
j6JC6lj++rPoTes1thJQNwgeiOQnok5Gvzs6TQFI8aCv5iUPIixnnR9UUs3E
+CYue+4bcQic/hg4jQr0Ql1g2LTVkx/wVfDX7mNXcIjvT9v56tOYfA4r75hV
XabAKK7tqxz9FASfzhx22ZiFAdZO7WCeBZCbq7xf6ovxR6/6W2uXDmWCFn4u
qYyaiFSW/H3v5eXDhWtiVedquiCaQ+GH42VsPo918YUvUn8oADUjT4jCU1Bj
WcAoc2kOdkuhKNzd7f21Bb7x7cbu89uZyI7HEX1Q1dw/vXN3DTw4K1Qa8w6H
ZibUv/Y+G0C2nKrv1W0xfk3Nl+RlR7ftxxQHmd8tNqIBZinzGyvdiNPhx6Wu
Dk8QG/QeXLPB5OfHe/0DNaEU2NWixrjjzQSkiE4SN+SnYGOHGC+v+iSkfP0r
0LUHyxfvnWF4lcnZCW1wTvPF/TpkTk1dKb7eg2LGO2lIHimIw3EjN50J83f1
G0ECuZeGoUPLpKTWcgBWXh+ruNnUANQ9tvXp7VVIWHqV4tuJ2ee8RK1VPWEy
pPfqp+qGk8F2wPSC8BkSWCcLGeqdKIOgZ9frG19h8yIcT1L57xXHwafpokMG
oji0UWI+8e0pAdH54/XsdpXBybcaMabPsP/rfKXLJImlH8TkVQS5uuugSMO6
+vxkC5pSuZfi/3QAsSXh+dKmMXwiFZq2K/4hBTqPPBlyIIzDqRxX2ZaYCeAa
TVhnsxuDzWNHN359x/IjGmelEthKhqFu47GGGnkIOvYY1zdqdMLT880e0dxR
6Gv3w1un/LH993UPrzXbRYPC/oJgGXMCGjivFrtzsQru5rlq9p5oh2I10pWx
A1j+0b/uxVOVkGGoLCvPUzAdgtKpFirC5XaI93l11YA/G7mtlB0Rb8DyHb2n
XcUTf1GgLeieXgH7FJw+469+m3UOOCLyai/JL0DzgM1NoQJMnl/w6p0MzemD
RWLB358fa0D23TijszwOCbq9cRjZxrentbiPrYz+E88JEQ3szKHAziLWrIWf
E6B9/v6AgMY0ONMGfTsgNw2HfSPfHtqH8fcOh/wx75RB4F//0fKTuwtOmo/d
vpOSiTz8qSIJh0ho685mzQljTB8HO48lnW0vh/0aTSkLlQQkjDd5dzY3DwVn
07fh3xJhK/9+/4BGPMbfDwa2bbRWw2WW4tn4Djw6cf3Ss5e91ejNXIbtyw48
JKzh+GdcMT7YyBIfKy7WDmu18RK//FrQWWWvG1yTRPT8jUj/cuN3ELNvrtz3
zzwTzs2yD3R7R6BhY7CI5e4UyHrNsGgNzYFGa9Kn8I0FUKxUa6lewfQ3KVbx
5fv92+vPO/344DwFYsQNQhPNPFxv9NBP5V4EA8/cfWoSGD9yt2rbWizshNwD
0KSqVINSmx4USNiR0GBIlOzjX/lI07+5kNKHxXuTI5l3i/GMgIyBBt9gz/Z5
Uiebe3/Pg7SrDp0k3RJsrr/a8bsI4+PlTB423sIU0EhisafPGoOEZAJ1ztoo
DB/VznWuH4YF6+AG3DQWP9l8hM9P8RyCuGS2NMuf3VB9VJa8lyMVuCui/W6s
daJlpo8LmaXY9+q6ylVJHU+GlRU8X9zLEbC6sL8jjnUY3j+rptbx6YSgepdT
wgVv/9v/6KQrLzUHGRzr1B2Fr5ChI4R1pWCtG2Ru26bcly4AAwn1CQchbN6g
ZOXz8Fg/MggwVm/bzxHYGtN6zmY1BLWsDGSrW+1grTzpX8fxDbMnD0QyX7Ti
gdh77uSQcTHqGKhQ+7hBQqGMkxTG7CZE70d/vOOf+YGi+idYoCUbbnDZb3jx
EtGhd89UI6gz4fOf8pNuVXhgY3RPY2vA6l13fOgI23xHgTFL5ZvlpydA787D
iwwPJ6G2frg2sHccHjY8EknrwerPw5761g48SIeC3aw3r8wREMtV1QcHfxdB
oougA51UF1B/SrlVfv2f/6vbltasNAzerLr77okNgNAedsMa+gY4c2s6ITij
GlVEnuLcOtL/3/qbcrtbPz4bgj1KzPeX3LuB1cm5BZTjofnFp9/c8V1IrIjh
4ecm7Ht1jzAo743uBTV5du2SzDLoYRAvs7HsRJOeN87WdvYjtcWSIwIJGN85
XBJmFTVIhnxhT16+B6PQ9PvuexoBChAyYmNEeEhwtYTO6hsXVn/eupSweNu2
Ew6+uzj/7lYtyit7+vWBFAmd7dgf27srG1Em3mTZvcPwUtwFyXj90X54NVCZ
6d/eDAdbunr+/qpDqiwdAxyz/agwduy2fCfGZ6Nv1Z88GEQBKvEpj3SHbTwf
1GL0lG4KilU3KdxLE2AycKGJ4I7Fq3FBDw+JC43AeKFtN9/aFNDgdWeUeBfA
SeGI44LhEgTIibo9l/9nnifPBXPGex0gX2/X257fgMr/9H9NutGDaNdK/WyH
3iEu6prB1T2YfaiwVlJw0umHwjxfqcvnGoCjVMfDWqsZpXsbqltZDKDVx+p+
WiyYfX5Kpg4XvD0ABX6BseQdONgX0hNc21+FjFzv9LXJ9CNyeoyI5TzmH7Ms
m4TKRklQr4DIlp/yoY1GSGlLHI+cB9dVVPF9aHIz4cHbFay/smll29N9awd1
p9zMWmhGMkW3P5s960Y0Pc7jKvgYuJ6Bd/3zz3ttRamwh/EeBVwoeR3dleMg
7Fq8t9JxAtaDOj1vc4xBUaT6EwtpzN/V25BzfQ9SoG5LNDRMfgy+C0XcODs3
Aqzrv25F/O+dWcvDOqc3Mf1aom3sY66rhMpLPThzUwIqimS5SBuLUMhQMO29
KQLMxJ0+Q9OCzSMSKfzz+JVaNQxqjKewbuPkWAd3xVLfKmRp88GAQZAA/lbX
G07bYfUGbC8sjufL90PfV97XkmX1kHjb2+ThUDPqrrTXemg3gMIDBF4/S8f6
EQK19bgkLgeDy89UkbadBGT8d+qoGGsdHPjlmZbY2gp3/k62qd7H/B0P5Z53
bFAzHEja6XzobQcyCimWOcrZieh16Rv42JrgDI3acY8GzD6/oHgW3fMgQ5p7
0rA79QiQS39Ye9ENQfEGv5bfFRzsSlesojHD5v2q5Z5uqk1vh6uvrF5fZG1G
Fj/DYuo9u9HQoV2i5eejIfzzNfrwWOx7LY366koa9cL9r4fkll+UwCbhN/fs
sS5UflyXW+l5P/oreuZ+pzqGl2IuhdZViSM4S33Hbc8SAT2+mGdqvJSBSHfG
DuFSiGDoGtBwScH8v/3f89Oee31yBB4OZl/buTUFrzuHqeJPLsC5b3ml5jZL
8CjbXWdOD9OXS2y9LkH823pgYhnD97URmVozjNMd6kG3P3LRev94Bizh9x8M
62Dn75T27u8r8UOGkp6Oz6W7EPGOCvG1Hg7qXqafY1YrB1EhdtZf5hheijM8
MJmi0wUBEf4FNw5VoT7TYzLpxSQkPrtU5MRXjg7vYg/wtcb8l9NbmsRAGgKw
lQ6sxb0rRCJznkrHVkjoy8Pz09lGLWiFk/+PKD9WfzUU9PztcF4hyLxxcQ2U
IKKdVOzlcOEREOmoxFJliCCvEgyMZVi/wOVAgw8CcZngfOCHRiIdERnqX9fp
0M0Dmc80zg83uyC78/uDz+ZYvUS4QsJtLrI7ul0j9cXoWxdi0pUJN1hrBXfu
fX+djavgbV6L0Qezf+adbkVU6n0dgOCIBwK62ThoLkEHovdUIrZrhOtS27hZ
wCBKU74Us//5NnV8Lob1sPTTuH7jUxfiuzH0okWqBSnPqLw907ltx0TUL1xn
wuaTXJktUJQNz4bdTR+c67iJyG5ykev+y0yI1l7+s5qNB2HVIapxLiz+8JfT
9fGu4iBQqr9ei5bxyC5CQYv8sg6CT5UsfdJuhVSaYQf5EExfCkKSPwjiOqF4
baTn0mw1Sgvq8j3rTEJ0WZLcfpaF6HHGaUuTJExfcmpCFO4ntoKUtdP0C+12
5F1TU5GxG48ebeY/fN5QDVHfvz0r9cf4xXTKsjRX1Dafor9Ewx02AVsrzfc1
Hk9BUN2picKMSVDJGqrMiMX4izg/Nct3ZjIMeQ4bCm3z5tI7+fZvcruhKy82
eef3PPD7XaN+ZBnzvzyt3/88zqdA4djlhhtbE/AX9QUX2UyD2aRUdL/9NDgE
MxtnG2P4diidXyNSuRMUrDl3HRitRVwH95/w4CChqmmN/he239FoOU8PRwvm
7+a69xznyKXADuV6umMrE/Dhjtg9Ku1p2LyRdU4LpmHCcU5e/RC2/wX7ZREf
536wUKYWk5JphEzFuYgcviZU3VzvqaUxgCbvLrW3D2D+Zb9jj6WvVT9cWj72
oCm/Ab552f+WKm1CRyeIOb8MB5CPv4vfx2fY+gf7UyWMcXmQe6VOvlSSiKIS
KaSLq9+Aiu5Z75VvBDiveU6E1hqLT+ba6Xm2xhEgJZZP/4lcDqJnHWBVqCMh
0bEv0qk/cUj8flY6bS+Wr/nxkqi5mkqEUR+7ewxrsciazo6FSoCEOih4UYpH
FxL12fEtahyrlxP/KCnDp9cO7hEboaJCLUj6q86b42zdiLV7X9X++lTQ//iZ
gaYKsyf1J5uHPtoNA+HR4fRHtoPw7balhWBAC6g1v+C/GFy2/X83fsydxfIp
zEtxw/d/kqE26yrXucpRsFmp3L3VRwFxgZkrk8590HLbJKjYAOvXm+2ZESFE
48FSR/SyUGMJWuoQen1ui4R0O5Mu5Jg1oheijVf2HcX06/KTFHDOJ0Olhd3u
mdoRaA+SsgjNGoYnQ3x7FhzxILr1rv+TShKGh+UW6I2MOmDilPf0nfUGFOb9
OCxUrQelXnbh2kd4imKSSHGfjmH/V/VP4QW93zUwXC7dpO2IRycJI4bKyXWo
+Nyxg25/u8BpMZ5/eAC7//UXHG9/vxmC/XnfyhQ7uoE76tUJgkUyuB7vKeMV
7kJdNZ96lCoxfDhUHtFwXHMIygYYbMkaRPgcVE26begBIZUlnI+2/Xc6bYPx
j3/6U1wCC5TjKD3wulIY9+prItBmxNAPKRPRwPomTVI3CdEvRaub1mf9tz50
gWXuTCEFRiPrDy7STEJG3H65vc7TMB5qczjBdxoSDR8GFPj+8/5pGpvhRs4P
WAiPoPVmISK2C8h9mT8GKaWnzQXHEkEuh3bRwiX2v/1fSb8v4RQng+Gwm9ip
bDIkXcUl8H8iwev2iOlVnnKQvMM+bGyG1Uv/2skTMnGIDPRCIvZiMmR4+kX3
k1jINo7mX609w5AHAloXv7mpYvWZMsRTCqm/emD8AOsQ26lkKIrK+HX2OBH9
DOuTaqTuRVe9TVyWfbB+jfWvdR7FmSTwP7HYx3UlF36vfnxUnoxHEam9zhMu
fQh+KLKPOGP6xek1Tu9/tgLEDitpPMwkoC4GO8vJugKkeyQ9XMyBCP2cnw8F
06f9dz8TzAVSbsf8QVO1J+F2Ax6Jjf4eDcyph1hzmfH7Tc0wqPLH3oUWizcG
s5Tb6/8aAte3r8KsdvcBa94aQ9mFCqBYSq5I2LWg2oea59NjsPxLi8P4vFhe
EYxr5didFCWixxrlpTGPnZBB8ueURFMiRFrVrrbi8v5bH9Cz5fXItgPOPtl0
mq1pQEFbsVw7jHrQvYjuUbfENyjawreUmx6T5wCuxr4/pv2giis4luHbAGHS
/h/8ZppQ/pvH532vDyDiNcEl+X/qOdsvHrx+VIIAF911hfQPFCC6i/SXf02T
EHuvHPDEtyJt13S75Twsv9xv+FVQqn8I8g+O4ESv9EJANn1an08p1E+UyoXT
4NATxoB+33/eI6vs2H+2ZYAM71an/JD9KFRtxAy+4KLA7Md1++S9JHjHfaVM
eACr5z8/vC5+n3kEPjVHDsdFTIGkTNjre2bzcOR3T4yq0yK0twbvlyz/h+//
6VjktckEZjvJLzf3EFHpoFdv3WQeJL7L1bcc64JHg8V1xdUYfrCX39mgfnQE
4tPeqNNXT8H+DHl3zop5QA/lUhfwi3Bh6aqR1S2M709mVsZpne+Bw9K/h7SO
BAHhYaah2NVuVGe8T/XSxR4kffGlmJMONq9gM0JrviGmATxjUenKVidauv+o
Y5QOhzIhuARn3Q78IsnBpkxYfP6D5NWQCt0CKNurjdOUJiK/p6MrNmmf4Y/h
34zyXwQ4yvVqc4oTYfahuPSY+okRCHR/xM6xMgVFGcqLQlwLkG/XZrmhtQQ3
tjptk05iePILQcDftzIT7nYlZckcIKKbMk4SmXvyYEt6zp59Hx72WesLx4lh
9xPlVJpf55UFLiL36hpYiWjMU8KqgisHTgQ+GHLUx0OIxdm0J5OYvr/Z1NJ7
dIEAzu5uOVdf5yPHqLGzg+Mk5BxUpqTB1YZOMfzSdBfG5EcXcvLfiw1DsmFx
++3MfmDPGbJ+K18Hh/wSTXY31aLNxnl/fAOGx0B5bd8l6x44W7Mz5vvPMFDW
zJaVZO9G2seSrgfH9yAzXfblpZCQ/9a7V6eX5a9TIOkj9XTCySlQo7NNb1Se
gwA865MY6wWY+/FtNXoDi9fJjtDqWCxSwFG1o+bpjilI1LI+87tvFtLSFbIj
di3Aqfi/nOWm2Ho5dU4t/Daef3570/4J1TTgjjx6+0x4AajYLAWW7yyByLGf
HuvG2P03K8jJXPwSjHg+cuWNd3Qi4wfe48272+Hp5nC+DlUJ0CxnO9Io/jM/
mSZm0IW7H24ZOns8PLbtN3sCniYGtyBKvPn7u44DqMjiMLvBCYx/7ZLu872b
lQy5cX9u6zcSUIZ7VqvUnTJ4jlOx9jHuBK7n0htv3mH9L4MuXUynL5AhseLc
dfIKGYhW2Vzcib1QQHjv36FTBfmM8ZWp41j9G/Gg70P9IyPATatyrgZNQbdE
88T1/Hlw2alPetW0rS8z70wG/+m/pnO/Tmch3QsxD5xbCDTFYByw7kF+3IXI
n30SQ670o4RULgq5EMPDbq07TqRJDIA1Ewetamkr3P/8OmjdowYd3rcZ1+PZ
jyQfEXSP8mD8faLjbt3LUTJ8InjYPfIc3cZV2n/23aCAqaahzpMOEuh3rAw+
ncf4rIi5Asfg4QG4ku/WJi/YCk7pRaFuarUoTV5ph0xKPxL9VnBIAGF4Jobx
5krShT6QZpATztqoBMkCZp7s4HY0qMIQbbqN9zgXtPzTXbF6D63HPUefbQxD
u5rPWYPBYdgyesKhIUUE/fXy5A9RKeB7zPQMTyhWP1mb/+FLE/sIOCwcjtyb
OQWbbt5Vi77z8Hrh4Cvl+EUQ9PNjqqbH7vPhlRm/yGESqOCC7upa5MOIRCnV
g3N4pCvBcuNtax/6mj3Ix1SNxSue05x8n1NEhvjYN4I8XSMg0usz9rB1GCR/
huDe4fCwnDRk4kzG+gdLOGcvzmoPgbnN42HNm0Q49TrqbKmMF+jqfT97/AIB
WTtShFf+wSeOseIsjBmdoH8Vd/6JbQ1KPZmaZ2NFQskW71Sua+SjKK01p/Fl
jI/susAhPqoVgXKGHZ51eXUiOr7jYo9c2uF69M5Ck8MF4KXHgl9iwOS/Qlh2
SPFMCdisF/ys5yMiscYoPvnWQJQ0zGwV40mEtshKy+Ly7/+tryG95mXx6gde
dIU/LaIRhLT1uaVSG9GTZMV4uvMDaF3GX0xPBMuXSbFUeF8TGIG8koC3ZjNT
cHufNKcI0wIcY6PP+iC7BNku1mfsaP55PzHBh5FeFMFjg6Ym1W2+72BsN3Zt
MANZBzxoGd/m++lq9cfFYs3+W2/b8+zKgVYK3DfVqte0mQSOFee/Drdm4LBM
eKrcuVlQV7VYfy2N9dt265fHR5sHQHHv/tidg3gEV/c1PjlaDzwDwy+2vFrA
2b7sSFEHxgfdc8OZntA3Q8dTkVHLlg7U9dIoNSGwA3lEf86i/dIMfH+5VnEy
2P1zEr7nqT0ZADv7G8yTIjiQGDGv3bSpQsq0Se32x/pR6N9Lbu/4MXu77KyZ
baRJgegrz564yIzD4LMkoqvoONSUNSxcG6DAqlLa68fDWL332KoplRt7LfxW
YOhjuINHvPhBgZjVOrSzvGT/JUoX0FB9eaBtjPW3qs4ufbayaAW1T7053c/a
0eGbtl5f67uQ0F/W/sfxNeA/AJQj5v/MC5I7EG9wtxVOaFh1UTm2o+4goR9Z
bV1o+AbfOzWfGpiuzuEdtsHWe3RlnCIcJkPvVv7gJRMycKcVb/0V6AH6eI9Y
WZlCuB7fWF4di8VjhQs/mqoHtUEh97zHRgEOxZU2QREOj9oO+j09jSrgWWLz
PdF/+MLps+QEXe4hsKt04hnnI8DijyP4333+yPeJ7YPabiJ6yrUx/q36n3yo
oa7OtMgAvDiofP9CVCvM1Zw9EZ1eg/T4dv8t+NSPdhaYkn3oMfv2UmKSa1Kz
B0TuGEmNsQeDFodb4x7FbrSWmpPqYNODnPR3Kig/+fTfet27Kw5e8YNgXfCd
XpKxC8Y5S57fPJCF2OZ0aO14SSjJTMhERB87z9vjgbqn+EnQtWK96bSeBhZ6
q5HF9QTUMWP8NPxOL2JPf8N5jYzNC0r+a0LmPFEF/s5VNcyqBJREuPW9tLoc
Za/ROZgjAjTsim9UHsLmyXzIr0vISCCDIC1v/H2PEfi60RZhyj8MaVYR/s+L
O8H9547MpQFvzP54MmoPXt7mDU7uadeFGtHeofD6SNke9IzJndg2aYkEPx4u
eS6C3f9jOQqV9Uoz6JfNT5dqd6CB0IaecqdO9PH8jiU/qkZYU7p3rloIiw9c
1oF+QeOPoEQv7CafhUfBv44JvtdvAC+80hvJ1SY4fvzl37RzGJ7XkdOWPmnd
BrdfT89QE3FolZO8EpCERzqv0R3+m5Vgsi77eWg3dp5AZWFalcghmJMOST39
rgcc2ZnbHhhmQee7uLcSzJ1IbSb7k08cdv/GPHjlrKEhMH5dHWZh2ws9a6PH
WM+VQUw/i1xNVhsqZ5K0zWXG1rfPHrW9FEoGM/Oz96aujMCqmti9D9+H4NSB
HlET9e3v75ZILYzz+W+9uPc+PiXDQJTOn3MEv7MLuRlnzH/LxsFXPJfA7/hS
KAZti0g9zN6K500SrTZcwGnzbnWyKR5NeU2Rxq40wZdBspmhZAPsXJCfyWnC
7udjTNK+t659oO/Feo3pQjWMPhzByc7ikEO+VkLJ/QEkosKz+14Olm9lIt8W
NLxFgbGOlfNvfMZhPVtGxnFlHP6aVpTGyo6Cy8XJTMkubN6++XMhKrfdJRD0
atlcWoCIBA5YPRo7EID8z2oefPuWCO3hzd9L/bD6hHJJB8Y+OjK4q/e++rCt
96VCSsB6ohsUuy/P9YRkQ5OEanmUCoZ/VN/FvKxmwEMRzy97nTPlqH4u1Orx
Mgk9fpH7Rmy9BkWw8mfe5cXw+VEd1W+Zh4kw655S9lMhA2nbPflG9CYhz0nO
mrawDtQUFf55xAvLh4r/Phosx9ANL5PvKRjeD0VPdusfv9fcg2y/mNU6b/PJ
SrgdWd6CvW+YKNbLbdUwBHcTq/RulJPglKY8H1t2EYRYX5C32tWO7grbKD25
isnDGTPqwFNdZLD9sekxeH4UnoX4iZmUkqFsj1GCc2s35DIUzYdoYvp4wO5x
g6cFBYzuWp4aCBqHhd8Om3p0E/AQKZ/mvzkK2sb67Y082PunPB8CGKRD08BF
8scKaYyAXCvK4lpWiyGQhUJI2t0F7H5075X+YPG9yrrcQzWhg6DrdEd2YLIT
UucpacdXslD7R775gcskdGv+9GGeS9j51cxOeiQ4vQeb1I9IKACPhDQe1l1l
aoQ4mh6j7yuNwG1ffnvnU0ze7Pb2BAdcocCZXrPzYhfHIWk4U13zyjjc2bxi
XsgyAgm7fZ12vsbq8TIDM9ti73TAC5NWPG1lA+q2nBCXMu5B3utD7y7LvUXL
fnlBrfsx/fUJ/+hZ3jEAi5RGvNX1drhrwR/UoVCOWkvdd7Ha9KHgaCUl3UdY
v/PVs1W83SsUgKI4NX6WKXAyZhULODAHzxRUmAfFF8DN5cYhi2SML3RVoQG1
D3ng0W90f0GCiMaZ6DLPmsXAk4VNhlhfAry4fFDabgKLV7QLv470Tq2A+Hqy
V0oYAQ22lFJx0xUjF6rAt9VXiMDCfnr4Qj5Wr9UiOjGf51UBNAGm3oejCShU
isXU0aoIPY/NrOY1JsJRlWsuCwmZ/623dqNa/DNMAevbbaYZpZNA1jV5zyU9
CwcSfX8otWzzpL/86ReK5zD/e6XLKpdtBE439H4QTd3mm31V8c2v5+GETr/o
89BFmOYpUT34B+PjYfYpNtFB35Dlyq1nzxU60czXqoNGs+2w3PXCJm9vDtRn
le460Yp9X+frkaWpSd9hRfBEkwgVEclYyEi4axRAupDfefW0Loi+ri31PAWr
/zka0M7V79MAxbf36k3v7UKsJ9dPEsfbkFTk6jvdl+2woS7bcuQn1q/BV6dR
riKOh6+n6OVjdRCKnjdIT14joXd6HBoeu+tQazxFFZ+BrQ+LUm3ptKUAXvJq
VXHmOAgVJWorqE/AHQYKSbB1FD7TXiqoqcX0hd3Z6Os+dwoYxkU3PmGfAGmz
M+e/Kk6CUlIaN4v7OHQzSDWM6GD56zZlqedKZ4chgXakm3qxH1z1CMMtAvXw
sKT9BtePGsSbvRR4zxHDY94M4c+Siylw7p3KmQzGSbCIe3yWKmAaSIXuJ8LL
piGhtIiHnYTF9zSUDEsSn+EhMZQUIclZiiJ2s3+Q3CIhlR0T+mW8DWj3rVW9
vDwsvmo+oNOgTTsCxw3qDSwspqDEJgLHsy0HakUOx0SmFmA2KOrrOSJWjzEX
MHhNgCofyt8d3ismRUSEoWNVCrTfwEI0jHcklQDbpO2m9H5MnrVitQ4tsQxB
w/U8gWNEPOAzlZaDLENR76neIxbS3cjzpsQdsWLMPoTcshG0lqaAQ0OwTxBp
DPqFh7M2jMbASLFEIdqODByXEFVNEebfxWxoyW8GhiC2o94t1qgXVF2D7vq0
loKk98Ga9ak2dFieJmyEE9v/Watf8DliJjTV6JRdoCeijwmJJnKEXAi/Y3n9
NyMeelynrgMDFg9J5TmmpeKPgzbjQwY2xm1olwA3C8NeIkoRLtc27iqE73F+
Mfh0zJ6Ij1t+Q8+I0PvJxm89MRE9LHTpX9YiocxajzH+3k50/W42d8Y6Fu8q
MKYeG75UtO1nC46pnyGiP9nKw8sp+sg2uf2BgzYRvFPWGzfcMDzGFLi+f+rG
AEzuGl+OqGyDqwoBzFclqtGO4AGPiUv96ECjWZ9XHYYnh3QyBWlih2GS375L
wmMITvbL/+Ifb4dP7GJ+OrsykNI0Z+hHbiweeITn7N6UhG9IVb2qV1++E139
G+Zru9AOoQbtc3tns2EsKPsNezOmv6r9aQfYJSlwyGh30yBuDCZfzD1KUx4D
WttKosFFMhxZOSO/Uwv7Xo4vb48YTA1BYPWI0MWMXiBQua5MMJZDQ4vVyTNZ
rWgZka3/zmPxUuNFfk7zsQGYWs3M3x/eDoKC9hEeRxESqLO1qDnbh/4Wp9Op
Z2P2mX/vXfWiX0SQ/1Ng3E0XidL0TznRjfSgQ4R8FQFXPLJ0OPiAF4+9F5n0
MVaeZu8wDJmyjbV+7INPsj8fRQtUAR8X55OjN5vQ1tu1nflHsPPc8oh26x7v
glrPgPxrreUIr6XIajNDQs4Q31JZVY08VUavFPzT76BXd/PATvshoM03Ef4j
1A1hPE8sN6q/wZ6fMZGWAngUWMNO+6sDk09Vp5Jmx0AK7NdSX6G3n4C5T2Zy
srunQELlbnb72AQ8uim4690DrB7D6ILhs8KcPqBPd/uc7lsDJvXvN5nkcaio
nttrwm0Add/7o/h1DOOPEq74ktP4ZpBamZbH3epAo1FMPVWGnYi1InNrxawR
psu/D+zbh30v0pPKZynzvcDjXmLYzlYBxQ+pBYe9O1D+yYMj17kGUM+R7B2h
ERi+0i4Xpz6q2A9ebzlHa5vrIYrZ5+Pbtmb0/qI5zvXuACrbfFrrW4TFr9QK
u7kCbmz/30x33adu47D28cyZ9bZx2LivEVX3awTupeJUSg9h+PBw2tKXoQdF
0LW5x9JHjIioKWUFpuy3UUtAVrWkPhFwmsJmQoP5/+1fp2k9n/Z3GFwrxFfp
Roah2V/iz9lLRLhzgkxv+jAVGEe9PGleYvEZtf6Ts37fXyG67pp8waRtnhkd
FadBbIU/hsasxMAqkFvlFTf85z010YM0Je9DKBBPlmdPeD4BjV/Xd4qLTgGe
s3xsUnwS2NdfnRcaxb7XgZFprW7vIfjU6ezXubcHLNoaDMyU06C5NCc7j9CJ
DmfN0t/4xx6y1x8+/ql+CAhyC57mxSSQbrvFuetDERSKWpq207ej1qo4Lls9
bP3Vo4eVfpFboXTMyPulUDs6udI28vksHs2UpyrE760GGdoC3EohxpdDVw9H
fjxEhgjqHqkmKTJc4S0+5fG5G+KuPSCcn8+F51eHUmcMsHzN6fcbJcc7smH4
0sRKHi8REdMPkPfOf4dbL07vZanBw7PlojdZ5Vh91/S3nK+3Cymg9edAIYl2
EhblZmcVXKeBpX/gReHnabAPYkw+EoT5LxEe86TvIiPQ6bm6kM44DdN+6gki
ygvwumlGyylwCS7zux2n++c9X9yQ4oE+x2EINIkjOWUMgpRK9KE9Ya0gsTzk
qs38A23t//tWowKrd5qZoIudftsK7jEfqcos29GFqAke1fEutGVt4twkUwMH
FZcTepyx+5lXVZd6cK0CxB5Y9KikEpB1+C7L/GuFiMVH3EHzNhGiNKOOX+nD
+ndE9RJ6uNIoUCgwxP+sYwLIfeFur9enQCWSP6Unfgqypx5GZPBg/RHO+5LJ
svt7Iey0g6ysVCG0sBrnWvZ0Ibbxe0yrjP1Ie9FEcK4Cqz/39YikZqsbgvWI
7487v5NgQMPoyafzRWBJ/wwnwt2Oeh+9CW4zwOThvQ/nPqPTI8BilpibTjcN
nvq+ixFyC6B4Mk8i5t0SVEYeDCd7YvfpGKBDk6WbCbicMx1XaYlInTn98UGO
fHhu/eBC1UAXzL4bNkmkYP5xPPHOD+dyPyTKF+h0TroL1Wi6KG/q4aBolMdZ
/mI5FJFPikz9U3+ClA2eNb4ZBg/bEzlfGIaAMnhmbYwbB04/nSjpvwrQRLDI
+tsVLF7X+Z0qxDLgM+wPs529RcQjisFVR3G9esjIj2WkUWsBlo+WOkv/1NPS
FHGTDo7iwYeY2Cr5tQip4G7VHF4nobZ8KY/EG82Ip0P9xyEOrJ4qxbS/tIuj
GUIvJD6+UteBzk1Fx21FdaBEm4Q6dadmGG/+OvJaBYunfVEpT/5ykwx/nry6
de42BQh6zndDXvXDiZGAGJ/6ejiVf+fLNU8sXxPemeV0do4Caqc/2Hr9nIRM
zbat8OJZuKWxELdSNw935bj73p/A+IK+daGi1D0yGJOzOfsiKXBaaqGJbDMA
3gOMR1pdm8BQ2YKzWRurn7lH+/y8QXMntG1QeHj/bPsfA6O6X04kdHDhkv4r
wUJ0bVK79GjWP/MN2meTb/0aghFb14zS3X0Q5d/X8FulAk5e6xei3GlBtj8D
p03+yVeKX33zhKGvH/A+taFNwc2wX669fQfUo5WK25tCv/uRvkVj+nQypl8G
p552PVp4DBzrBXp/L+PRoWqWitzSJpgwuEW+8LkeakQ6c6+OYvjB1Np1qmSB
DDZzfeeoC0bBG91xGK2iwHOLuyvign3QGaPKbO6MzQcYHpeWUGzyQC4vpBwI
L7vQQcLx6w5v2qAyVXXTxqoSMmRYW1L+mf+5uaCawrzUCDY7fJfZb3Ui2/iH
j3gftaMPu+4nynxugy9/b/4wGMbmDV4UGVLXYB+Gsvws/4q/fTBS0lP9Mb8a
ylX44z7FNaCT4g1mfTEY3nCpYHslIrCNy97vnZeLaESHrva6Zh3qQRFPo+58
OfkMjmwKOxr/U6/FxeE0mj42BPfJ57NKAnrh3RXGB1fuItDeM4J4mNpQ107Z
DR5qTH/Rp1hzFptP8JX+rfWjkm2+XL3XzZyxAWj/PvVmvtoMUxqNzFMC//SX
aXrXmx0cgsjfav0cWXhgNbzzVGl/JJJSKJg8admNNrUmJXRzsf19qat2VVEo
0Nfw1fxFzSSE7z2xoXl5FmZXnDMdF+cgeHPHseZljA82RvzA3WnthTfdAnRd
xuXwV+na+MeJDlSts2dUeccA2s3Ok8VaiPmL/Tvf73Te0QZ+aXcibrC2Iw6e
IyKjeni0J4E6ySuhCvpW3/xmbsbs7cUrOgHerJ0g3u/2ruZ5HQJZu5+EXz1I
9fLsS+3dKSjdaeFFDuc/76doFvrEdVOAJ/IgOT1wEjbPRK4lts/AZvvtnxIH
54DuYhFX7gdsHunJUuMHd/3C0cAhJhn9L53IJ2l+0cW2HUZf3F9PLyyApoao
BX12TH6CN5UPnrP5jIp3sKR2c3Uh2XcXM+pe4oB7zIivSAYBlY6uR8g/eMBX
QKTlkE8n7L3UK3GMXINGqi/tktUmoTOkgL51yVwUl9u5eE8Bw1extGKBbsrD
oNCIl/OUGgBaDd+SF9wNoGp+TbIkpBqZqcr8aGbB+CD/zK6D/aV9EG3tLtzX
WAP27NQ/ZThxiNyuHk73YgA1OibMqB/F5OErLdu8bwwZrA4NHYt9MgJtKb1b
G1TbfEBWCedyqRPom+hXih0d/zsPfag3FTpMARcZkWanu2OQeJ7rQqDRKMBC
5Y2a/G2/g/NejpzF+DJl9Xwbrq8NODIN4vQ/4BDHApP3czoCUlW7MXW6rRxq
eVc64pQw+W90Hnl77/cg7A8eiK7nw4OQBG5wSyYeuUk7qM/s7EF9uQELZmGY
fKY41B8RYN3GA2LREipxU+DLzd3q9nAeJjTv5hR6LoKCtLPu7kEs/qBbarFH
2qsRthgL9XgDOlHujajVsV3tqFxo0OqBFg4Wqx/0ZBhh+l7dt3Ap4M0gbBl+
nqNEdYLG4xp714QctCf2SZGRHwm5HQjT4Bb7p56nsZFVLK8PiuB41K3gGpCf
+hBgII1DZxYXC9ifD6DVgKt4rznMH23VLwU0tfVBW1i+32upWvDYSO4TQW3o
wK9bdUdeDqCBEtoXRs+x71VhZXTkyN5WYDbiSC/MaEcxfNVBas+60BOxX90V
pbUQos6rqHn0n/kqtmc+//jUBEs2abdpDnai6m96Zg3MHUj9xefXoYstcI5A
d4olHqvnfHaVdVpiG1/Nh3xJf8swDbwtH7McYQFoWglpXJ+WwHXsxOn1EAwP
OJf91O02qoDNVg3F6BQCMlH/FLn3diHiWpf2d7AhgsA3+51FzBnYeX7OWYWY
kSFUU+KxsiUFlMJIOeT7/XBw82dV4pd6WKKhBF5dx/zjl1mlLZreVmBs+PHN
UaQdySGzjGxxPAofWJO+xlsNnw8c6xrKwf6vs2a3o6zoCJTZ6qcwMk9DxGD6
C/GLC9CxIsJ2M2wJcEy0skxp2Pl9+SI5GtSbgP0Po7qDRCf6+maZh7u1HU0+
kTm4mdwKJ130rilcxe5HeH36pcv5XmgNIMT0OxXDc85TTgzXu9BrI/2uQNN+
5JtmP7v7DFb/0JmWarPc0AOR/jyK9h/iYX5h1DTkARHxR90T5IwkIdb3Njrp
LRn/rW9Om9oKPjUCHjfM9Xqpp4H8aE9yudgCOJw5nqT/aAl0PKhST9pi5z9W
2HFT6sMAfOd3igtzwEGaCJNRX2klku5aWLL704dqJHY7yj/A7EPTji7Viat9
kH6eQB1/pQqAe8/nLvt25PH9/cY3swGEYvv/VjZh+eszF6IjmP2iwFKY7qzI
JQLyVdO0uthTDY01N0om0nEwXKzYMOWCxfPLtIvnD5RRQPnZvNyT45PQf3n0
UE3+NHTmlh6opZqB0dDnWdrKU/+df2qtnZNmtBSC2ANOnKEhIq5j3Ezjyklo
5bnQA1IaETRM0zyErLB5yy7GVBNm611Q/EeUNe1dOXK9PKR0e4GEbgXw71nS
q0G0Z9iLBu5g/JotySta5AQFwqzprLO/jgFhQZE6q20UbhiGJ/W8GgbC22OW
CjzY902hlr2z5xMZQE2a4X95YFap1UkugyEIZDmdICvVDo/buJ5mlUT/d559
Fff8lrb1xSZZlavn0DSMvXjGlXRhAZI+JjGbBC/B7NfV3qUE7HsdPtKmpLBG
AQcXXnZevinQj9l/Kll8Di420K3LGyzA5WvNusYUDO+daMLtuEvTBPfT3mgt
XetEKUYZVNfet6Mfw/n+bqZt8JyJPsLiD2avXvfqXbnB3gK5W/nF63LbeLXB
DHc6pBPd5nHlMwltgI9ZxeoPNDD/sq9LppJtgwKHPzlzIbEpEL08nE+5OgcG
b+dZGRwXwIT7BZ0BMxbfw8tw/NTgqQbds01ub3YRkN3pgr5x8SokmHfXq/cc
AZgHR0hvu7H+lKu+ZZ1Wqv2QX6fQSr9VD40Z/PvWA5tRjdjC5pbNAFIqs7Fk
o2B8H/V7lrpUDoGQsa1miS8JIt26FGtMC2FpUFv2oUk7WmvPIIqZY/a2bm0P
dczbAWhknVL7dRMHCoUfTvSOVKKukPoiEnU/cg08n3L+Jib/VnFx/jQbJIjP
d6XRelMAvHJtl59sdaHl/jfZc6t96Ogbh1cqVBifGnVxfBjANQRyiqbPOQ4R
wOsMEw1VZgD6bCqvnTBPRJ6HGG5r/lPPeWhNL2Bhm0+57S8LNaSfhrd6CrOr
CgtgZSubIu2zBF+3kvF0gf/3+p/iPtNwrm29e5iY63yerg3NpBCN94lv2xOB
pR3plwtgPv/lrHAh5k/PMVuUnwomQvfRqleyzvHIWYRy4Ic0CXW3fJP2U+pC
FxzPf6bUYfNYZo7f8ftJ/IK01FftqAY60et8foeVJRzs5thhyhdRAhy799hn
X/hnPnP7gDSdPwF+X/JheD6Wg/rDwseo20hIdoF0ZS0Vh84J9+3188by+z/K
9AUtIslwJPxkfeCtERAu93rn2jkE5R/mQbt427+9/9Sqpff0v/2DyjtmdHRz
YJrhcHCPIBEl5M+qTzxKh2HD5eZjc3iIUSoofkXGvtfI+v71KlEKXHzzkBxV
NgaOlx/4NrKPwbDAn4Dwv8NwBn/we5c7xneyG3SEjuYNgz0L60WTpiHwydxF
G7bUAf4VK3g7qVjE23DLcPb3//3+fbh/3JwfLgVB2z2FN7btW3vpkU/0EknI
MKLgAG7bvrmYlwJDMGbfbIJcsgMMKgH3Nwo36URA82tzaZ/tS1Gx47n1HWxE
KIQma5IUlh9UjKQ1KrtNgNPXzCIeaeQhjTuHvpj2k5DL8S991Cw4pELtMV23
gs178Wfb//Y7Szas2EuqfT9CRHvMkoSON2SB+iu+loh3eGAwI577sAPzX9bS
J/V6L5KhLHBNzpuKAl0+hYo2nb3Q5q374klHFVxXSir1NcLqwRjqPlzKPT4C
xzaJoNw5BV0jgsrnx+dB95X9yJ4/ixB9K7yh7CtWv/Seatn1VUEv7PF9dY7/
O4LjYL3MIdiJOo96GXJN96PMp8uyR9KxfCL9fnffscxWWDuY5hB3qR0x7GNR
/3Ngm/fjK5m4UqvhJ22IGH8IhgcoLRfIRR/64ZfhzXuuYY0wXSIxQkhvRJV1
Pj2a5wcQbaf2yldhLJ7w8fXpvMVmCjy7vfOVo/kkJL+Oyo/WnwFNoZt3JQRm
oWLMSvk2E1afs3TtIJ/idwIYJ1Xe0hzMRjdy6GNHKknIO8vP1ZyjHX3kSJTf
cMPqw5vpORSH77dDP62M4FRHMzrjQ63GcK4beRZv/gGnJAh7rXt1qQSTn1vK
N9982UcGl49blR9ZydCQKaYww9QNbxtJO7sFs2FzJiDxpjkWX1Xszd4IZB2C
hZYtoae9eBD9qXDgxmoIytM6NXj2TDdq52Yc7vwnfmgaWHGNCVHA1F/s6QTf
JEzZr/X5VEzD6nSHZCnzDMytxR1uMcf8tYKQkBzjNs5fCWnU7ZEiganuAxSy
lQevrDVFWxfbURZzj+DQP+9puprcbHl/iwiLJS/zjlgkI1WzBC6LmyS03l6n
X+/ZibZeW+kuTmP+Qq5QsinTeRheyzhxkTsGYYeZ4i0l3jbIeCXsfbOyGG3j
xbfoFRZPoBxNrGne2Q9thDn3WJs6cHxMjRe624qYODiSnVwHUJhyzHlWL0x/
V4T3qun54OExY8XzYy4/0OFfFZlvt0io3Oy9t21xA0roz+m8ew/Lf+Vn2Q1O
b/vrb1K1bwQEpyDczm+aS24OVFrZB01MF2BzV6be3nnMXyem4T4nMZEhvDn5
Mo8cGdqrypUE4rohsXDWIkE3D6hYPO+X8WL8N+hBSlfM22DgaPc6N7TtT6nr
92pY0tTBq4sOG8HDrSAaHtez9w7GFySXrK6pqRGgzcu0O8o8H9FuHJ8hjZFQ
XfbWzWS5NjRsL+e8bz9WT2s/t5nofqAX3vte8zO+UAiSA7WGxoQu9GVlgGWG
qR+FCBkOqf4zv6Lm2uaRq9p9cM7ph22hXBXcOC4qlfa0HekdkPPvvzGAug6v
WUUWYPjQhXLhcaEoGRIsOp79SCJD1vXf6ldtSbAe9LKszxrBouEV2WYCZk/w
P/rjKpsoUMMY8ETtxiSwX7tqQHtpBjwCamcy6WeBnVSe8GsWe6+5sr1Gkd6Y
AiovFPGu98ZBcOwL/970cfjFKPniVdEILJ+miz5/c+C/9S0fknfI0o6A7E4a
y7/bcisyaZko2DwHjXdXf5ybXID+m/STaXgMz+j82DngeX4Icj8yi337Q4C1
42d8FHzvgHV3DjyrJ6DV18aXbxAwebYt30wrFybDlVNkbaptP5a83+M2oywJ
1Kwqlv9cKYONiamuMDusHzD0fAe7mUAF7DsavftnDgEFZTfJnrYpQH34jvXi
R0RgIdqa38Sl/HceryOe+yaPkUDgYVFXgXcaWHx1fdzZQUCXjMxETMx6EVe5
d0KyFZbv8z7xm+2TySB48dpldbF1wu2q82zTxflozXl3byZdLzKpjeKb2cTi
dSvHnt5w6KSA4474T8Tnk6A30h/cEzoD3+Pe7QtMnIXFntB7f4Yx+3aCpmI8
j3sEFvaIfS8jTsHovInE26V5GHlz6CIVzRKU7UOqklmYPV8LznhsstYHT4Z/
us2eroNOiSH2kymtiCUjAf+/+QZ8tN4n8UaYPrYxPhNa1i0H0c9x/W5EAtpB
n2WhIpqDzjY2jgSEEsEcvyjxRyrsv/37B0pobuv2wfoHvfn3ulXwW65W7Zpd
O9Ixua83sM1fdspvFn1oxeQzMSgJ7RcfAJGC6TSanFYoXb17XTSwBqUylA1I
evej8yOfHzw6jOVDMzbU+dTEWiB9z707N093oNhzNwqnMjoRx6pOmKZuA/il
OdBTW2D4Obdq85X9xy5QdL38l1a4EkXn+TNd7CAhE9ZeUZEdlWjVSrZRrxjD
5zE0o+Qdas1Q+vHP+lZGBzLPOhrZ29yBmnapdV//3QTMh+MjBJwwfCIbGPKI
+m09GHJplDs870JF1dlakWEtyMKPcT48ruN/72tX8l3H7BVPr4JB2506WOA9
+b1mrgsd+mSkvMXUhGxMYhJOlHXCna0HzPN0WD9m9BoDrltoBN6ObHgf2JiC
n0z9pdMCC2CUn53LcXMJQP6GbLgahlfpXqyGuu0fAib6pvDEL3gI0DfmaQ2K
QsEJ3mKL7t3oqSfVxuJ3TF/C9fw487+RwfCnz2MuhxFwzfJ5XrwwBEtvKBDF
0gkVIkdNBg/qYfHtu2f3L3D2wJrk98jFV77wRelLiJZnN/o73+wpNNyN1Fk2
aJtDLf5bf6Gl7DPfjA/KkGLyEDboQrjO17aCrDioyhXw+itSAXkprFmt/8xD
U1Ryu6w3RALGHK4KBf18kNjKzjcHPNL80cZl3dyHck7u4fuai9VL/32qtsSw
zQNDw9zHBaenwOEOze1ExgX4ebRJ5JPUEgjysRRb7sDuh8NG86Da+XpYFZsq
+xjahQRvBfhy7GhB4mUeaXzTHXC3f84/chbLLygqU8R0yinA6ydZqXVyEiqS
LB9+a52GCYvr0avC23bxztcz9J6Y//0xOPGB8c0XZC9t9GKW3IkEWevX3kzh
oLTjddG74RIoyd+tw6r6T3+rlnWN6LE66GaI/clAh0dbGuY/99o0IuZWV3Fu
6i6wPJf3a8fe1v/2V4tZGD45OwwnKhdfFcYOw7feSHV/VQJYCPSee3P9G4hr
fg7s6sX0i6mHVmomOgvGK+6y4diISOxK8PH50WxIHi+mariBhxKNXb7sVZj9
Z/07/qlmkwKNhpVeweemwKTxppnS/TlYakwo4vNbgDBGORUfZcw+m0kH1tuy
jwBXR9Yu3YwpWLy6B+K95oHq4cM8tuhF4DQ2p2ukxexPtm531aRnKOjbtH/3
ZCWgdMddR5zdakFYgUrh29s20IdKXYMzmD/doxvnJfE6Dd4HNTbtHSOgvYa8
KgrMJZDFraj1gaoLVFh/cB/ej/lr3msHgq6cLgCLndP9JtJEtHHC/dOZE4Fw
I72Win2eAMTlyav1yVj8SnvfVQfR2m3/tUhnMHNhEuaEeVSa98/AsqiCtfW3
Gcjx7NxbpIj5u5yyKM6A6yQYxhdKmJVmAs5qmChvSkCXj9vVHyD1ooyq4YCq
1R//7S+Fl24qejAMZuZdGQafBiE5SenGLv5WWJ5Q3ScnUYoqetQ2XX9jeOlh
zUu9Wu5e8PUZdW3iKYKrxxbK5uO7UFj9hAKXeD9CPYvoYhWWn+UInxtqe0UE
RfUTGorMiYj/0Fu5JTUSuuDDm2r7qxNVmLUVVyVj9SpPFj1E5hm/AtWDE326
5wgo+bPJFK1yDcyfCGPId8TB8yenfS6lYPGi26znVk7sIYNM814lugNkoKpe
+ek8S4R26SHaLJ0sGDmScG05GMO378f+viV4D8C5G8lzu5/ioLtP/JZtYiVK
8dnoef+rD5U8nVNZdMb4vuJz18Hc+2TYlI3MGEukQMZJrfdm/gOgelEokGGj
CeZe/U2W4yv8b72h+T6FihMjYF0f9Vv49xTYHHv5qu74Ajyno0Sw6y3BJO/3
p5oSmL7/0ZS99uHYCAjoi08caJ0CyXHPBlHSPNDRMS/qzi0CrWiIjukHTD6d
Bb8wN3QNQEAub/26eTv8PPjhYM2pcjSQUqcTZN6HUlqUePc7Y/mj/WUxCdwO
FGBPnUq1qRsHv756iuPLCViwclgwFR6DVskEP39dbF7E0TPuHh2J3fDoe9Rh
o5NWKJxtj1EhTw+yrzUNWw0nojnziKBcf2yez8Nf7PCOuwkSnA6oXLvUiYIO
3glxi21HJDt6qmLWNngUNCtadhSLj4nVsl+W56aAFsFml5v7GNTc2/We6uMo
7JBgofdgGIZlkYsiPSNY/C1twnlHVE42qGV8kU/gIaKDH3aX0l/IBLZjbaoM
JXiYlx2KPLyCydtOUpz9808EoBpq4P7zMwedtmqnDmsjIY1304a6CTj0Jtr0
p0koFk8Y96m7FVjRAWdHtJszvtajJ9c3O8PTexDXesGL6OtRCNfn5cX2FeOD
d1dX1Zcvd8H7p9mfg05VoWTRi621BSRk//tQ68NBhPaP7f6MnmL/lzGHmXRr
sw6MLU1Vr+d2ITb0pzbnbjMKUnDcuXG6E/LP6gbzuWP2vHq040htAAnSDr9I
r2XNgamyl4H6E3gUsPGu2VC1D+krpes84cLm+9Wml4wHxeKgfeDGfjaBNmQ3
39HAxkdES+L8gsztBdDPdPLpRC7GBxWUjV5LtlHgU5bpUSO7SQjQ5F4osp8B
c/mpBVG9WUgXu6jOfR3Db/+/80LHCV0txG151h/aG2rXNgX8T8ceR/bPw64e
ybSkxUWA9sy/q76YPFt4dzrb91CgQ2LDhzNkEh50Z0XsIc2As6b72NyxOfhM
CC1ajcHya6ftBh1jqwthQ5L80lyCiG7y+xAPdf4/yq47Hsvv/SMhKyJFJWSV
iiiyuiohs1IaKJUVKUVGKg2SMioiZMsImdnj2Hs9PIPHfJ7H3nuk+Pn987n7
9/v/eZ3Xuc99rff7us512cF+eYfdXEoksP+Q5m3kgeWvA2PIfX/29ILT/RrJ
ZYlmcNOLMfHVqEZvB+q6OJN60MiRggex/7zPetjcp8/TR4NRhUTv4fRR6KtY
7qvmm4QfAviiI/5T0Dx9uoFqhOUrs9xa9k6TKMAdolN+9xIFbG1X5NI28FBT
9yPdiu8JbP0h+WXrG8xfWJRe4HaQLoZtp+YXU7eTEC37ELtR5Hd0jP+tT0Qi
CRofg+dRzsj/1k/i7n3mD6cBSBzWtvw8Ak3ZAgZWt8bgiN6zwgyvUWDgNKDj
tsb6J8iw30pl3IwH9J/y+jAeHIXP/l5P3jSMwzPb5dfHJCZA5ger5ZQbFg84
OTgnCG/6l4deR2TSN/3LOTN7MaVN/7LfMDjLMHICTI9syLKqYv5FgK0S55dD
gSDpe8vU1n7IkRRx2cPSDhrMvpJ0hjFoLzfv1Qt9mDzkHvygOC84ALpRl9gf
N4xB0ZeUK9Ht00DR1w6fG56Fvw/9eeLcMHkoVPokjF+gwQflPfk/uMYg57Vp
rBvDFPjkWl66JDkD8ctj9XuCMbzs/9uliK60EVy+ZlMibNuQhFDqho5aOzpp
omwZG1YPsWZq4e3/vBfTP+r6vX+JBs+Mts/94h8Du8IfHuTdU7BiMRcVoToD
v9P7uv4UYPuPWJf6iwtQoev4Wk78ZSo8C/5UvcDWCWyOyzwt4bngVds1mz6P
vffxpHuJb4jKgSwD/2+HNv17Qc0nE+vcEFBlrGD+3UqEj/drjir0lf63XoaV
UMi9mwomdfSKzjpUEJb1fRk51gErn5POzvbnwNGtEiMthhh/dVHL7uF3PyLI
JOyuv7qWhdL3C7wZ37Rv7Opv61ViWxGr/WhyXxRm36iqIYr2v+oh4uSv2z5u
7ejI/rAA92M4pLR3d+2e3a2b/yPWaOUThi9eG+dcqBmlQfJCRvdi3yio7uT5
bfphEhzkF5Ze207DxHSglVYRNs+OfGsq8ocXBT7Evr/HJNIPzJ8m+AasWjfj
rFfHtobkoF96vYka6Rg/dv28pZegeDXkuSghC3MCeqVZGyLPX4t+Nyql3urA
w60vSV8f/8P3Lup1xI/3lYB3Y5zTzWUiajdLuZWm9RMldL9eeJ1CAkjrfXEj
2vq//UkOowvqD36ByY49OeLSJMRrOdv1fToBzhzcx+V9dhOflwVYXJ3E4vOY
ZxzHl3/UQ1Oob8FP93Z0Z3/HgLM4Dk1WBhhaibUCs4Pxjt3u2P1k5+4Tymci
QpcdWNt75KHEiP0zuxfJyKn1mknljSZETb1byyyK4aM7dw58kNGlwUjRe95W
+WHw3MlVMnNkGNxCZ+rju2hQ3nVSMbUTe+9WRuf7raimCJ5f8rsSy0tC/irk
Ug3vGFTyZzzC/TsJdp14lkbsiPnv/G8ibD8s+FLgr50YhVe+HwpMO/Yo/mqF
NQWRlx382WjZeM7LzQy7/77s/Kb1+ih0bUJONU++HXlLCktNLeHgIEOFQHda
Jvz2+P0uoeaf/v+XOQX/9tCA99o3MZGUUfD6+LSLl20SVjI+MUg+n4L15O+H
7ihg9vCQs+ngtmdVELRn+rFiOAEdNBD5xeBWjQINEnRcjQmglZf99DcH1q+j
UWX+jVYRFQZP4QvzeweAKlsVFDJIgRfPLykfFSCCdU3se7MmLP+7Lr69trwH
B3ZeAmy3Xjegvfw+Bp/KOpCOdHr4Q8Wv8D51TFrEC/N3Q5nKjjBSDvPvqHM+
hkQkn/lZrUq0FFEeM3jIdBNBsP8TOyJj82HviZhFSQt2gQtv5IjUWh7cYpyQ
/JyKRxeGLLO6DvcgL+r41SfBWLyBXztMFzBOBfzdn9fDogfBcH69V+ALDVxY
Pkvyf+gCx5+hhq+J2PudG2e54p/MtgM+PXMB51CJXHSuMB/1ISMpAxDztStA
GQP2HZQbmL3iXcUZq3xPhA3bsPNTJUTEIdbKce87AtYwp8H1Xe0QfHdNM6Qf
i28btO1KfOUyoS79zcu+fSSUcVaJ7cXLDPC8UO83/pGwKS/yEhIt2PvohzyP
Dl2w64QE8Y/ue73D4EAezuAKSwfqmRrJOIk6UWCvqvrGmTCM/8kxrfgxjYcA
odHinLRS5MHzUFJsiozOTxgfjqGrQh4ZVn5f/5lfvOPc/SUTvi7omSjcQ/ue
B3cKeph0yvDo9rFSLTXhHjSz0ntwhzJ2n88k+7nObsajwQ6/NtaTemF2b7fy
jrZ6mKZYvzf+Vo44Q6ufVFtjfEtsU4J0q2E7OO5+GzwcXY325F1mH5fY1Md0
FZsjlHSUOPr7oOYPjG+5PLatgi+OCIzK8iIbClmoXXiL//4aMpqbEvdPX2hF
3udy0t06ML69Wout6UkcCfb49Nn7Pf6OKIbkhYtSZFR794WY6mM8oqUoUR/I
Y/kvHvpdSrZrFOigigWd7qJAaY3hVqooCcy/8xcQRn/AxaczKVlpWD2wIN1T
LYcTtcAz51CwHo5HVu8jYh1HGpHTZXMWWGqDs8Y8o+NdWHyY/mkq/VN2JURM
iScrkglIreMQXi28Eok2dYSvUTf1S56QeJsfk7cIhw7Wb42d0F+U9+JiaRws
6zI1TN0noQ2pEtNLsWSUCArnL+lg751Tze7KtTsUwuHUx/ovN+Ntpu3p854u
X9GDJ37sz/1IwGbzd2dXPNafv3zibeIFj2+wK2dF87YEEYknD4tUz1dBQN3e
rv3crUDXaEFbXsbwGjdhg7+GfQA4Q/UWYl3HQMvO4Zr3tmmg3zFy9pLoLGxL
jXj5UwGrt6HPvaUN12gw3lDEWm+xiV9S+hn2fhsGHfP+qL2hA/CT9S3D6y0Y
f9vFJxAhs+mvO9k4lZo3/bXkFSgLZO+EV3+N5kyjc4E/UmiOMIv56ynWo3Ib
on1w5un1+YdWbWDu/PaRRWIBOuQ+0+cR2YUK/nINJ9ph/GcF7pS7rnkXvMi6
eXkLUxGUCM+qGdHj0ZYE9Qrk04O4C3ZpHiRj/C39Pi/DD2tUkFZ9sHOCNghC
N8LuvNnEhxolpLkghx7QWZGy1VzC/N2YMG3+wkEqaLOllN/7SIU4zZxMNToy
nFuc22m2vRgu1Q3gPfiw+tgVw0B6IUF3yLuHVFWfE9DckdYBo4h6eGI5aOEr
Vw/BTKIhQhH/9HtPPzo6SjcADKRGd26NMQjsCMBXek7BHnMrt8T4GaDsX+FJ
sML4k7+LGrK76DqgzaqIdVvyNzSWQbkk0tWJ0gjboo6FEJC4/rm0g9ux9w56
u3QUJcr6wXEhQ/XkWzIwsDJIZu7NgyGJGokWGxx6s9r/fpf5P/Xn2j+r3U3f
IU6zlrz5Z3iUWLrdxy+gBcoEegsva5aD25/J3J3/4Iua83FCJoVUQHd5jkyS
B8DBglKl3UMBjUa+P0UbBLhDxTswlWH10o89zt422vUNceR1+sSGtyPV8uKn
0yY4EFFV1mDelwcXUo39nPZh+zvx5P960dsLV6bOXn/8Ggf5zOaSKUkI9VlG
Pm7R6UZ/HMwsicEYvjaayCLY/e6Hj5UlF/QOdIPjfftzsj/LwPg5wSJ/tRHJ
+TQVJHpi8nMz7Zh+mwgNwkbu+x/0GoIXbRJ7lcMGYc2639zkIAVC3T8Msh7B
4o0gntlHTzeeovD7VjCC8OiFjIdm0INm+OHG2RuqXQmmB2sudP/z3vYII517
UlAn5FUV8NNbR8OrCv8NjdpNPKiy41OZMBk1CVR5mV2L+2/9uO/06q59eHCT
3yK32FaBOsygdyyGjMTXY4QFBYvRqAl+9OMkhmfZ+dUiy3No4N0bSMmkG4V9
u1u75q3HYcMm/CnOfhxyI0NzWcywevu++Ym16cPdcGbO4CnOpRzMjhdYynTh
kH9DxMIl7V5EtffdeWINs4dIPnxudfsAiJnl/yB6jcEN4VabxcPTkDw6q/5U
YxaGO2c+uT3C7IOJR1CZnSMFqhqksloyN/X4QkymeVIzWFx78H73RCH6kf25
IiEf469Q8hWTlJ8xqOzBbXGnlTYUPSK6q1CnDQ7Gmz4YWE8FH8o8ww9PTF8u
jVuf+3Z0AFpabSoNuMchINwpsvDMDKzIUGlfAubA1+fne58ojM/p+enC3hLU
DfpD08tZtEqwOTPC4/O1FdEyKo8FOPeis+tRLs5aGB4kPna3SXtEAymB3z8v
tw2DgIX7BdGQEaC6/jg6c2MIHjs7P7AIwviZm/dx4Qv1NHiaRaGUXx8Fete7
+s4wAcWK7YwF6xMgvFUy0A+P4bXpKNxykn4/CKy7Fr66SYIbOk3sTV3vQf7p
i/rP6kSkrcVoOftP/41TdPyv9a8RIfruxTLfjmyUwp5YeJNKRop3DwBnRgvi
PJTcdMcdm8fUttoadO7IAAzyMFRcZRuHiKN6+tJKM3Clped5g8ccpMuIujq9
w+5Hy/7rtZD3VFhNbgq9wjUANMXiGyvi/SBSyZLWG9sKXU/+DAmfSPjvPKpH
rlrzzvWCc9ePYb4yHITtsXu9W6cEqfBcbXws2I3crQiuFiRMH0c4dHcWHEJw
fDDoxsc5IrrmckxMoi4V7SwbXGVIJoH2Tq2mVQkjjF9a2Spx/20FLNWK03yO
EtFX2rGs1J9lqHHEv//3ZyKcktE5MGaF+XeOO141TiUVEGAnUhS5n4gcXPwT
A5TLkaTE5SbdJ0SoNBU/JKqL8Zn0z01XolJpsCge9ca4ZwRO8VoH5/KOQ8ue
QM85whj8frIoF/sAe6/x6hrJV1icAhZb75z8ZtYDIUqahapi1dDXy2ArwVKL
2GLKSv0OYd/LZ1CDL80PhY2LpNgcISIai1VWenaoGlJj8FtjaS1wWHbnyaPb
/3m/wHRsiSWoC8I776u+PV4CD+67MXx81Y7W5JWTymt6kAyjuN4fUcw/Glzf
cuHY5n+aqOh0a3w/BqriWatG0tPQxLvzfd35WZhov952/Qmmj4wBVbU2lT1g
XHximMjYCPY5aWyzC7WoMVRg64HtvUj1iLIXM2D6GBAXnnfhaRoUlW3jqF8n
oo1dN3fXeeQCY2zRaHwMHkz0I6eut2Dvcxe19hzdot4PXRmJ374KkOD9HbXB
T9ufwsvcyFz3SCJSnfOi+JL+mYd+23et9Eo3pFx6tf3U7QrI4zWWVjDHoe17
siPXTXuR3CdOr9x/8hGn9fW2RldRYE3f/XUVKwXMbfSdFkbbwTWcLLuxzx9F
K5tVJxEx+1As5eVXVUeFQLmJFm6+QQgKfJi8fosK7VvOEO5GkKCsn41OTQKr
t2F9mPd026a+BGnlvNNnHYdZgfj91JMzsOO4Awu8mYOd6bb8ou6YvpgM5m1L
FhiAZiSsZ5o3Bu2BS59wsdOgsLDD5nX+LJRFX3RPk8H4E2PrkE+OFBooepbP
mxaOgsSOLB9HmUkYEm/o/FI+BVnVPdsZf2B4Te7oIdUb0gMwXCqh/n1TLuOb
Rt3G1WeAr/ZUSd23Oeigq/rt+s/80G2lsdzWXTXglMx/3Lgcj5CM69pzgUZ0
8bAorfBiO9jEH7ciavzTr/uVFchl90Dn5coHfvENwFgtI5N3rw6pG7lc0d7X
iwrJ21z5VzF8mpl2dgeekwZ97F/iTI8PgXCo8qWungEYen5PTae1D4wbQvmT
MrH9XacTy22Zk8GV4rz2h0RE0lRZH25iEdz9KVpxPakd3k3E+9zkxPCRa233
fvksPDCKRN8eDC1D4+1qF9/0klEgNZ9xRbICJQo5+/ZrYf5XKDf/9PdN+387
8Pes66b9V/zYcGFq0/6/ujh5cmXT/n9q2yF8Ihq7H3NFV+SmWgEzkhq1taeJ
qP97EEnxdykKEzpQfymbCDj52HV2X2ze3N1MnipBlU391jms3WZCQG5SGVPZ
erWIS8roVnA1HrbpuAzzdWPx4cVcRil8VDtkZZf2r36tQoZb2vmnjMmobt/U
yePPspEz20hHCDeGd6z45h0PXgiEpc5X4VMzBMS9X8iOI6wGPr2yDWc43Axx
Y9uCx2Iw+5C9M0+o4VEbBD5o0I1MqkPlH2//Nr/diXxrdwQZJ79Dg9XBUeWM
GL62a9X4XjhFg7gyU47axVEI+RhhJVI6CVyBT7Lt26Zh2LnQhecYxqfd8eA0
1bpEA9Pbom8cdIfhrJhN96Hbw6AgRiciLDcAAnWxTXYkrN9CpEdTw4BVM6Su
E7zcHHEotpyn0aMJjx6e2nmN+UsVJKYeE9prgfHzzRe3c9nWPoG0Pubcm7oE
FO7lLB+R3gDpPUsLZXG1EHt6n4opFdNf0U+1XxuZmyBS5duQ8bk2NOeHbzX1
akfaRKrG1fo60N7viQtSxu7T7EbEec1n7XDpfPHhpn3VKJEheLj4LBnRtFhV
xI5kIZv0ncZkU2z9StvWHBaNHrByMdjV96cWmMpyuz2/NqKsIJqCpFUvun+r
x1WbgtWv3jrzwfN3LR4UWLLPxmqUoeOEc1FZA5v771ntYW2vQGVoWxobMyaf
t0vK3qd8okKr1HDi2uEBMPxzTt7CvB8KogqOGd7BwfCJrBNpXFi//cscYu1e
npv4KOKMw/SWAfjVSAt/wt4PTMQkW1ODVlBiWObYr4b1u27qj36Y+60bpIvU
g5LoqsCfdzR89V0rOniZ80WmSy/irD4dqmGOyU+Yf/E91qvJkPX8m+EGmYis
6B7f/+tSBMZwJfRtUTv0lazTDwxg+dDo2mDZgzE0iPEMf6qbMAK/ddmjSf5j
INV4hlVpZBT04qV8n/3B+O2rN+P2/TbqBP2kppjeSyHQuZPhyBXJDnST9OjE
Nu9O9G3wnVst6ct/+2vJTB1yZGyFEyNfBE/ZtiIdj3ceR6WJqJWt1m1AsRR8
HL2D1q9g8uz8TlvlsnMn5NDLBN/GhYMza6HfmzUSUk6pKfZr70QGjP535WQw
fn7fmLqyBBMRDIQTI1Xe5yHkqXhIdpGM2nt437sZNiEmRRabREmMD3zI3e6r
6kMEv9i9xke5fqGjpuwTra1kZNdx7KtbaCtycDtmIJmD6XvKlZ3Mff7F8Cvn
xqtwVhJqefLgjV14PMq8ePyy1WY8U6Ch21eQgvUnnJc1S/DeNwCTr60VpKvG
gKX7+I7pimk4MX4hI71jFrqOzwUxWGD+wkVcPcsklAQ+PmNW5qfikBKeeFv+
OBmx/boQr6KLR6qsxGyXBCz+EVdujA+sfgzi/G1mvWoEFHm4IVy2rwGGpv4w
St2uBYfpScOCCUy/LOTwn09nN8HiSNlfq34cGuwtu/dICo+i6C5fTSqtAVn7
SqaIDkxfXFOgx17oIQRosuqJqhBQUvfne9u2NULFR0qaqHAtRH2fOpuziO2/
oMaXCoNUyPQzF7R+Nwi2VW/Si27QoCyR5j9eT4aBkwTz911Yv74ffTvuPlAM
Qf5vtnfJF7Sjq1I5h7qP4uDcnW5CZ0I+PDw0xcsgg+EpYROKq8loFGy1LKYL
ukFE74dtpl4oVsKTorMxHFtwMGi/uu2VDMZv/O4nN8R2xCA8d3Ygfq4N8Z4V
89x7eTNOS/YnTNimwnXH/a2Gr7DzB/S/LHTm6IRCXweh/XofQHlvl/Dnbx3I
0UTzvUVRB6qnO/F8Jeb5f+cPp78Tmv6TCuP25s+2xm7+Z162OGszCshf79r4
+QIP4qGEoW6h8P/W/6/1bPysIkPO+6PQ/rykGkvddjSt4qq/QsJBrIPJxLXW
LIi33/+Iuxs7f8/NKK1zUxRomNEmrydQIFY5YCJqEz988LCUVeWLhvsZFSek
qrD4amnxqGfJbAKc/nA0gjOXiIIPfFs7olQKvLhzh4LG2+D+nuqyxD0YHnTv
0MzY8yEfrsvrsnHKkNAOBQ/ylJgdStHnqSy7RoLPRjWqts+w9/hvuji/xpyi
gPNTMaWJ3b0QKox2p+TVQn+oz+jojioU80X+fJsqlt9PesgcSb9GgyojvuZZ
qTEI0VGWX1efAiH15pMZ92ZgNo0Xn0CP3c+hUyMG/fbtMO21zOWrXI1WFvRN
+lTI6FL5jaITPzJR2PO5W/mPMHlefP9dst29HbyTzLucN6pQg1bWcOT5TftQ
RTW8m5WFio6v9DjoY+s/Kw4opK8TQSr7605BkXSkz+z99noYGfWVlMTMHm9D
YwqutyojqjE8Lmd1lo3UC6Z0t7boWuNgKDZqd+auUsQdMk/xM+lGrgfn8S9e
/VMP8EXKe0yRDP010Sed0lOBPn3ihHkUEc3vDuI0CuxCQr3JtR/asPwp50Gx
Z8I78iHx75uxk7IkFHHi6+X0N7rwXDr5oooGCXrz5F2eX8HqH4J6s3WbLHCw
wKp+WW22EZnyVmbISXcgtxtmOrVRP8BKu9a58J/5qg2vp1x12AZg1+udtduf
jMFWjuht4qtTwOXQV/aWdxYIT8atH+/D8IVRqu2WqehM0DUIO7FVhIQ+x7t3
Eh6mQ7m2CkUumwC9bQIN93kwfju1fG7vq20DwGAW8kXAdgwWyGKjlwc395cP
83q8+V+P+otZ1v3F/q+FiMCCtc5mfNjHmCcgXoGcyFeeWeeR0UyI4t07SwgN
irqcbHbA+JDd0Qup3737QYrr77IlSydwz/QGu0qngDAL1/OxjnZ08LzUz4B/
6qWdgqulL7p0g3nSh24NmUrYMa0udni5Fam939YZ87AXMfQbx+VGY/bE930M
fNrEC/mbSDWRfRPXazi0dCrPQF3fwUZOrzm4ftNOYsMHiz/PmS42f9tPgxxD
o/Bk1yHQt3ZkefpiEDLN9v2SW+yHr7emD1l9w/h5zQzVAv+kfphqLtTG0TpB
iINUPtueBWaXiLdNXdvQUsr67cqP2PklD6hIVK92QDjlssyrIx5ws+qlrWRu
B6rtWiVt8exAqilqw2GWPv/tX5+4TjXePH/20RPDJWzjoOR7NTpTaQZOS3mn
NL6dA804v5hD77HzG1X03x8wCoMdd9M+X9/E4ynN6eTI/Cp48E7ObbtsKzxa
YXw61Yvdj4HnxHnKQxqItUbdDK0fht3rVIU1zxE4oOMwm604BL/pO67ZWGL8
icHe6M9HjlEgzVnLW3YTl3x+UaYxpVsDikzW1Zy51YhVLsA1qgKzD5/LtlzZ
f2AA4n6Ga7H2joERm8bLQ/Qz4Gw7NmS1cw6iX6DrEg2YP31k/WMoZ/0nLFSs
394yT0SfPkQoLOvmg4zUlcnAy5t4dpI8qPcP/6w9X68ndOcJ9EuIjSvpEJA7
qlOg5DTAwbPPuR6F1UKQqppQHQ2ztx3ilVuktlKhNztCz5CeCobv4+ZkSkig
sr07M+58OjStDWYnkjG80z7U+9JjoRQq7PDXiUVExMtxuFLuXg6qxc9EFr4g
gQUr492gQGw+r3fXj/x39/vgWoLcVaZNPHcxk1QT65SNxhw48wo7yUjWs2jP
uX/6B6Zl8f/+Y0cDpiaD3ddbhuE2cVuAkP8IbHks//K53hBs49B72+mO3b9d
QeTQ+EUqSHV0JkccpkGl+NQyg3c36JxxEqdMVcFkVtybD+tYf6dvOay4V+dI
0F/3CuFvJaMTylvpzezJiPjQ6OJnyXbkqHafvXED8++yzbjSpREqVJgJyDcE
DUL5bmmJv89o8KtpSJxRuQt21oZH2DJi+ZHvnleEGFQ6IYP1Da+h3RcYmaky
jL/WgaT8xM3GFDvRo8rw1MvH3f87T8Hh/YZdhVSoPMGkv9Q9ACyBZK0SCgVu
iJVeGeYggsDVwB3lF7F8ZUDgpw+W3pWwZnUZFzZEQHJyRo2EE5VI/FG0bOZf
AhTb6bioOlb+t36JhbCVuKUCOE9lyE3pE9Gw263saetSZP06mn2lhQg0iYAX
UQVF/62PKg96OqlEhPnWrVqD9Tnoxh2fFY4xMmrgNP0l1teMjkqe8b77BKvn
v6zkUi+3Kc9sVfw+FpvynMkccjB8U56DJNyNNfnmIOcXeSqyEZNnZRuRlAt6
eOD6STD8LViBuiRPDSrnkxH1QlLObtZS9CBnz4fkh5g9PHXsp/m7wC7IrnzV
1nK0BK6+GR4beN2OCi/4tsvW9KDFA7Lvtu3H5L9GjvFL8fUmuFlx8IYMXxuK
kpzTFie0I9cV/4dqnbXAW7jX8fo7zD/aKZ05+aG2CeJVg0M4CThE/LK3S0kV
j8R3pOa6va0Bg8VkK+IItj6u89XFrL214IGr8tiViEf6+ze6mNMbUdBX6k/7
7e1wUoJ99XwWxics+ku90tjEUWIH/PcOM42DVBD366/HZ+DTkMqRjqdzsD5g
vjL4BLNXhfE2woH8eDA65NW60leB5lr91Y5Ek5Eee6EmbagI5fnn9r9ewu6H
n94wpJapH0Sp63p9dgTosXQLyoqLRqu3QizdUzvQ+tE01t0/MP2yGsgmmCbS
4Jju4omT5SPwurnq9uP2MbgusFGifmsMrk4vzd7JwuZNnyxk0NKNqAWOkiu6
N+3x6Oejs+FUQhPijG/mK/Ha3E/Zz2T3W6ze+9L3wY3yU0QoPLUwDEk5yB5J
DO0cJaMraQGUL2vNiDnt54udVzD58TnP40HQo8Heyx8961WH4cqZfTFCp4bh
4ON0fOvyJq4fnCaqSWH4/bLlE335Pzkw0lcmbCJPQjkGL+3J/EGQKUkvjRsg
wlVP5Ksmi9XDNDgvbRdVp8AjY715Na1eOK4zIztuXQcuVjnjTOcqkUmI5ZfK
VSz/S1bhRgzxJEgz57uob/Ud9fGwNfYcIiNbX9LTnQ54tE6+/rtCBsMvg2fk
dnEU9oP6YXaRVzfIkPTTNFNxLgcSj3bu8sjGIallwdSFR//0c1vqvfRbCgfR
ox+OWIc3od/OhfLPaCSUYXiaqnogHW4V1C7c+Wf+ILHtnvbZTfzhddf9yo2H
w/CkXPsuR9owSF6LXGUpHoBETpxNkDWWr2xe6eYgHu2Clyqy/kpZ+eBil/Tt
gicevaUJ88yd60EG0f2mG7eweOZWVtaTXfJU+KUxL7NYRoWdF/GtKq1k2PVg
4typvlIQfF/PyhWArX/WUvfrojoNHjNv+5HMPwwfvPhUn4wNQWiwU72HJQ34
zlkL+r4jY/wGK98a4S0NWrwT47iPjEBF2Zb5R3ajUOu7YJ/SMQxWFFFpdQLW
b7B65CR3xjECJOyVElI1RMjr1t3GoFUyOs6uPredvgbxC79jbk3H+jmwlaUS
Y32CwbBOPXqFg4hGZTIctpRWg24ki4DOiRYIDn3cOKCL8Qk5+TYKFYtUYPlY
ZjDYMAgbzPR3ouZo8OL123N6Zd1wQF/+mxIflq8Xbwx97iA2AI+eMec+GBmD
MzPlhoqcM6A7adLXc3QO3Nv2/di1hNk3S7vlXcs4GkThVh7YOo/CfO+qtvSH
CagNUvI9+2ESTn+Sb+HLwuohz12P6Hb+QoU/tWKZt1QGwNH1r5Pj235w2fVM
K7MGB+8/tDJ43sTw+NbgLpaQq0QAh13PonqzUSL4RPpTyejAjRcc+OQWVPF2
Z/KT91g+hUn39KC1RDtMPtJv8FarQRxS7J/uMpKRAqHiZDNvCrptLv21/C9m
32atHeuDGvAgT6959pVKGZpmMRuyHCSjUoWK7vvDFSjEfEhuah2L974k1i8a
7/OGJQ0Nz/k4AmK59zNLM7wOVt3D01KDGkBvdhvu/WUs3mhmsy4WKQoFhhXL
tnohIlpqGagkHqyGrnc2UrcHWoA/afvMCCf2v9KsHryokqTBhUQiw5HoIXDq
W1s2JgyC8/4p/KsPFAjVMGoxUcXsIfUJWmLqpkDJlDjp5B0K1E7qX9Y7RYAw
fspaY4AH5DQrKo7LYvtf5A8Mjm+hbeI+GQ2dB6MgoDlT5Pp4Aiotlc25TSah
YY++g5419r/Egl0+2/fUwfEgxsOMg+3ofsyX6HydVtRh+DkoSQgHitUJ15zu
Yffzv86rKpSSfZSr9g5dcTpim/ocj1y2MJ19/6kF3uVtDNToloNCXfYUwz/5
67mAF7EE/ULYe/eUQN0BEvJ7+Ubkwd9A1FM0QNDxJoHTlcCebhzWz0HNYLt7
w3kKyHz+GffEvBfu5d5K7Wuqg5yX7u7FzRXo5NNvAv5tmD2cWCMvFt8gQPeF
E99O8Jag85ylWhF/ycg37hP7YflaVBv4vmZFFNPHQvPYwL+0Pqj9k2LARcMD
OShoT4tBIpo5fy+zXLsTZdX3NI17//Pe84mhi28pDfrkL85elxoF3vB1UUnc
OPBeFDX+cWwCPvFI/3L6iNWXUrfVUtiKu6DmqJ75rikEHrx4Zq7d7ejW8i1c
9EwPei5sYk6YxOob/dzX+S4l+6OLTkevrgng0TkRoVeDnq0QnThQzkaHoAZ0
F98aY/eZ0c1TbJDRBbdE2LN2WCN4QX/meZ1CO2K7OVfcNdCDEqdL3g2ZY/t3
K+57e1WtBbz+XHKKn2hFZyylfHb4EJDx0r1xUnM5XPzBdYBnHuOTne5djJTk
rIWkPMvff37i0RG5M8Itfo3o8M23sQcE20H6ROt9rW9Y/GBA5CxfMWiFwTaH
9BSGVpRRsS+LlERE5heWvRZUiuC0p+hZej/MX4h2nMu2aWuEFut0TeO7bWjd
9lMQv2E72ljh8N9qVQ9zfaU/tZkxfdeuDlLkKyfD4cSxS0fZsiHJz2KvszsB
ddYHp1wL6UbPo/kuC2pXYPhd56utGtUXDAb9iKNZBBSS71i+Va0Obj+czXfd
3gj7elpEuBQwfXfTvHXzfSgNGKW4HlzaxFHZOwJ5R9TGQIFZ0/7t9VFQlEvM
nRbE5N/w76mlPC4K0BdOTUpXd4Ok0sCZ6OkK+BHz/e731/WItyJPPbMf4x/m
6397Xtw3AP3DIT0SlWMg8MIg1qhsGsZXpn8fJc6CkmbgauM/83GmwlIkKlvC
gMx3N1JAlohEdWwcekOq4EW1oOOQWivwOtJUBXAYHrxzXo6d+SsNJNXMIiWd
R6BnnHQ5a/8YyDgzbTTxbfoxqlo4SwHWL5Ff/dn3ZdQL7hRF3gRBHFAzE3vS
aKXoQ+k25Xy/bmSdom4hKIed316lr1wH8NCwv6TU63IFEjVh+MWRRUbGzaEq
0woIXf/+wufKF8y+/a/zkv7sPYQED7bAhqxk/qW/rejGm5yDOEcCii3+vPJH
tAJwgavjkzRMPtf+Bp3Yc74ZUm+ycLd64ZDn4LiQUAYe1R3I1XJZqYKK3Xlf
8/Sw9VtPiS5G0OqA9UlJnQS1HTWqhsnbGLSiymv6Gxf4cZAHzn0XH2P2UC/q
qTBNZAAOcvDg/3aPQWtg7r3MjWmw7YF44o45yJClNLRXY/9L/InN9ONDOdDO
oaboeYKE9lz13wg2i4BOTUr1ZDYRTk3+1b1ajL1fIPYYzRX6NEKZYDLjqlcb
KrrNzHufux2trlF3lcg0gObPR0sapVg9pO85ZVz5AgVsrYuDNcooMD7789iv
IiIwsd1mnbgfB0fkyzLjVDG+MSbMS1pVsQ/KzOHq5I82ePN0aSRUOh8Z1dso
Wlh3IX6Qog0kYPU5A/1THRMKtfDyA+ORtTA8Gn01w797qhHdUJ2+lzPfBseH
jj1Y6cP0/XkhT8iSWzeU3BfFGVyrhJx4No/n1FYUtHjSuO9RL3qjh2d1rsbk
MyteZ0PBmQRVAYeVflckoF+h1pU7L5BRnFyX+/Im7kl8NRC/sQ17z85JHu6w
mKXBatio8Tv6Tbv6d0vSvp5JMOKSPVfGOAMkn5Mta//MD2oJf8DSxlQNg9lX
B7ntCKi4+Kvw7eYaZPXgqavuLB541Lv3H9mN5Rf8PGer0jhIsDUt+UfUyTQU
VSP+ejWAjE7yRjsWW7chXz73q2FcGN8YixTe7S6kATfT9/rPPKNgph4i7P91
HERNdsRy1IyD00Ll87vDWP1PbxPVM7+OBreeCQ3fuTwK0V8GF2/LTkB1w6/W
q0MTwOAbRKz6idWrPFA/5T7AQQE2+7Fc+4xuYN9lcy84rgKah5qvP26vRzz7
XWHXMqaPuj63pJc0qkDp5y6m+p8E5GKa5kXcqEKzPbvtel8R4GP+yy1u57H+
fvrXDRuc+oqBnzDx5iUTCW3kapjcEU9EgTH+3jUpJNhL13utGmH9NGIvDLI+
3DoAF6artbmMxkAyQePA47wp4N3+dEKXOAP1oQeUr+Zg/OGP+eD1V5d6QVo/
fkTEtQV2LhjMc/lXIqYhmvxd4x6En5Lz+xiK+evbxXWVF1JpcG/v1enfXSMw
GXb1myX3OCRNVrt3tYzBF7druQfMsfqQt6ys1a8KiWD/tn9p3CETDenfdwso
3oz3mvB2vuo4lPP8uWQNBxYPy2jmbNFJrAJK/5dzvn4EVDZVeOb8eDUSO2bO
waxEgI2NxILLeVg9Nu9yUHWCbyMMcXAYOW/q45mPy+8v7WhHnM3bK3cfbYDm
psnHKmWYPpa+KfSgExqAcgY2NuHWMbCauk4z75sG7Y+sxWbzs1Aldego9TNm
H7rtbZ6flx6A5cfeN27wjsO1pM55H/UZ4Crvv8f1bQ4cXrFrn/75z3xnlxda
mi828VreBF4itgO0JCN5jZbigd1ucPfjTXz3hRpcx1iLxSd7Nce8+4eKoXP8
6B++zf9rOXx+/Z5uIno5s+zVv/l/ccLtKpHq2P+9xahRcuQZDajDHvraG8NQ
4lP8eu+WUZgesTsRyzcMz1PGtZPTqf+dR5V6ppT+QyckzlxfoVlEAc3hwFnp
HhKq9zRztmUgI7m6OlFlRmy+odCrYLqLiVTI/qq0yOs7AJfLLp+ulqPAtHvf
m6Lhdrjm/pfmZP/5v/2DGZSVz/L0Qp+26kfe2SY47zf3ysOnGhE3kt4lZveg
s4F8PAWh2HulBqPHVa5HBsDBQG/pPPs4xJXeKLytPAPaJgcShN/NwXG9zilb
b+w+GZL55h6pUqDh8PTD7Vy9cHFcTf9UcC18IWWyhZ+sQiEDxwV3aGP8J5+w
5G7cnWAoEVq5+pqdiFJvh510aKiGl84LryokWmCAwtb7+hIWn5+m6Et1LpIh
8Nz8nkDIhZyK7yUkDgLS3qo6KT3djQoVApdu5GD9Xhi2DmllOlEhi8KYwlRJ
A81j9L3fWPrgmOMVoTMWTSAn2vnuG/HXf+tfD6dw3PKiwjJXLecNtgGIsn5b
qL+3HwYOK93ncW8F9eGpHcKPEv9bf9JW4OPwcjvcKXurIGVSiYJFf7amfyQj
WsxBTyZCAUro+yR2Tvuf9/JhSu78IwkQbnuwLzKHiJxs74vWQSk8cDF8eGi0
DS6Ex3bjBLH8FH5jx1sdwQHgiMuhvq0dg7g6Qr1+4zS0B5LF8P2zUMP/5Waq
PSb/EaI6bH9upENA64WrucwkdGyt5fJV5hyYxOlZR1HwwDCrps3dgdX35l6m
OWdfJsHnop1RSjpJ6N3DLyeV75ER8yOwopq0o/316eVBNhj/udT06cVFUxrY
bvGPPuA1DDb2covK48OQ+KvbJUl8EBSuDH29EYn1u5Zif/rc37scfJaPr+28
T0RvbdRtfjmXoMoi8e48BhIECAfiQobz/ltfc07Ssv9dK6yk2NA+O7Qgh0sS
f3nXiKhZJWxb/fV8UKIrJzX9M698OQVuHpb8BRXXns6GHCGhE4UzVFGtH+Dr
9OJG7lEihF9rP89mjcnD0QDiOHMTDYxsQ2MId0bh9fMjWn6GE5CmrdwzITEJ
Ie0hgeJ8GL5zNePcafa0ETo2uiYDA9oQPcu3a67rbUi5Xq7jyL0G8P+zVrgl
Bfu/fj1qJJtcIiT2SC4Xfc1E+crC30wRGVlsyKl2yuPQwhsX+wlZzH6mDu+x
mBagwrtKveqiq1Swsm067LW7E5zzmrNFB3PhGHD4+DZjfGbHk4ZX8TQqeFmU
zza8GoQAHQ4Ckw4NNCK/ZXSFkiHk80ORzybY/6I7m7ab2bkfNlzropScO2A7
fot1efZ3eLr/dBNXNh5VKEXyRDdi9m0hdWYLZYMGdjpOD1+cGQM1/Cr9vWdT
YKZc4Fj9bQaCFHrWsw0xf7Qif5Bb8fF3YJVr0cz2JiKFM86F5arlYPclKdyc
vg14OAs84uSweMnYIynC1aoLnq8eoAs4WAS1VXQTaqvt6GLXwiD61IOMaTIl
LRtYfftrSlZ1IXsvJMyvKgrUNgE0hu8MLq1GCdutdfeU9CD9X/l1426YvTLl
f9Of3F8DV347vz1bikceuaHsAeKN6LLqoeT3Ou2wHilq8/0CFl9ldSCXA8kk
sC2/9Nue5Tua3GNelipORsVBUXFCHni09S+vePwKNo84tGXeKwDq4aYgF2kl
px2lkq0KHmS3ohrPN6+5klrBbssab+ccFt9+bbDqFzQ4C5UJu24s8BHQfF5r
cltDIxRy+Bzdt1gNRZYBmg57MLw54qv/QLqPBkJcdYxmGaNQPuYZtrhrEsyK
FpesvkzB/ZPiXq63sPo6djUHfYdN/z6RaKYS2D0CN8tAjLxjHGYU4kveto2B
VJznT517mH/PujTIy9FRDOjp06/Dm/4r99k90g26RPTXmG8+ZdN/KXY4LA4r
YvUt4ZwnWe7guoEk84Jp7lQ1ZKk41pf/akG7ribSib/sRYKaVZH1bzF8F99c
YKF/lgpKjoVqD+aocOt5v0JtcBcwuCWZ9ohXQPY1oRzKTqyfz+u2jEUViRqo
CZ2TY2MhIE3T7Ec9LvUIJxuJGtfa4fE0v5K4GNb/gcwWHRe0hQiZ33O21kXk
oU+HSmVjFsnI4au31dmzTeiJ1OcxR1WsHqb8x2t1vwMDUPy0dtdq3xgUco2e
Ct4yAz6dXnEHBObAvPzPL+F2zH6yg+WUzVg5NPPv82ExJKJnBI5o+UOlSH0X
fbxqFxGOlJr03JrA3nNZrK3J2XASoXxvlkqRWh7iP8MWmjdPRkWavmVmAU2o
/Lr5AYtB7PwXowraYr3LIOgsk/FkFBF9+1rreNg6H22zcgqhXCdBLIecSmQq
Nu+mYekgujXaDLLD0/teiOGQkEGNoCAQ0NJLj9y+hQqI0/Xcy1KM4S+eVuOw
3gIaEJfvBgbuGIWnY49XpQPHYfV4J4orHwdW1to6h34sfqacpZ/UWKDBYGtL
hBLnGHw9kk5x/TMJvXzt+l9FZkBpqtyu2A+L/3fuELytvbMNKnQj/cTa6tEJ
x8Hcc3SdiHdZYEJd2AM+BZn0D9/C7LOwocYdEcN+YD5t+ej+BxIc2kfn0Gr7
Ge4q0l7ysBCRvEhgzcI/9eFSZ++xrosNANfYjg3S2BhcssMNnuWeAdOuMPaG
43MwcEU0ZDcdFm84C4VO8rBkQ8KlwBAeWRJye1rsmz/8HU76y73hf0AE6QNd
Z5UJGF+RK/QUx1T0E3x+xt5umyGiIDL79fWwfJD/FTmvpY6HIkqx/KsDGJ+T
kc+aIiU6AMMWbEdzqWOwvvohgpV5Bpa/X6vqEpqD2bbwXsdeTH4UFbLSRNkI
oDV3MC1QrRR9Ox0/G7UpD40PU0a0iFXo5swruwpZzD4cHLnkPHyACK5djfsu
+OWin7d1xm2myejbvstSE3LNaDzlk0LMcUx+knDvIwZveCO/yojildt49C5F
ti6drhUedTN9SnMrg89LWrjjlpg9uV4avd/rSw38Sch4ebYXj86xZp9md25A
UzFrhdGB7RD2mzteIQLTl+/1H0VUI3sh8iStHLJbIVlpzqWcrhxtm9VMtcV1
o+vC8dyvS7H4rXS7jU9nei3c6KP/+9IGj3ZyNxLCN5oQjnfZduRJG+ioCal5
xGD5oIBHgRVXbndCuNGte12HQqF9vtBsdX8H0o1zdO8O7kT3phPXVuuD/tvf
O7XxJM9NHPhvPVPuyNaEhE4s2fw50IGO2OtzEGOSQCpvgYdSislbT3Own3xg
N+hOB/trkyvhN7/6vf+f7xEWc2hCxrkXbTT93Vt8GosnjWq9RHxjsyBdaeLu
8UMkFJCp0J/Tmwx71UdTlZmJUOk8uEvgCmavmhnQpyi5TTvh1yi853E90rx7
+4CocCeKF/KZb0q0BImz6zl857DzJMco+UFhP7xY220xakSG+9cPDpPWcmC1
zlRaMAuHyI65zr7/5IPqLOiPsmh1QWnGH4ZZQgGIaUc096rj0SMkH3TMugfl
tgihX0FYv5pBroW3Tsf7oOK268mToW0w3n9Io8srHz3KvP/XyKkLVQ7a8JBD
Mf6Bldmv/TN9H5TP4s/5zeNgT5Hu4Q+yxYj88aScwmoXOtjIIGDAjK3vS7zN
aMGIQJs8eIVtcVOu2MLTkhlT0VKYYGbXpt/cVTu2rZpN57/1tQMyM/5ym/v3
Gm/X/bopH58OHbAPyUfunH+Vy1y60Iuhwqh7wdj+KSqldsRDJcD8PHvbOQYS
UjpVEMny4wd6rKiLXH9u+qP0uAlSnS/mL7R8C50v+kDqzfxy5hQCMjr+LvCM
Ux0cWKuQlWhoADMHJr1bmpg/yqQ+SpF2KAIZVheuB7tJyFVFTe5TZxRScYW+
s1EkoFanmRd6Y++VLAzJpJtbi+D2ebZ7DPtIqLn4zY5s3XD0ZUWPxTOEBNa7
Q1+asf7A+AGpsBvH92/GE7l7t0Wfb0X8fW+GR28Q0fR1/jNrTAj0s6OL39j8
0z/c2teRm3cAXtzhVWb8Nga/uxy3mxhNA3VCW+2a/Szs+b6xJyYfq0f6mHis
qGqqDLytuWM5fIkIJ8Lc229aiNaoopFsyiQ4Sc/4tr4/C7P/HFsytpxvALeM
UCPS8XYUcllNSqMBh5aKK0QMM5qh0SRxoEUP4w8ZTnF7NHv2gvZER9mYZSvc
bDj8/FpbOUqrm9Ts3uhG+H4DIUMrTN9dE8zwBvt/wMNQk2b5SiL6zOHT+oYX
gfiDbUzS8u3QQOg2h1ysPqR74Gm85B8ciG6X+0AQbkADb3ko2gMdKBq97U5i
+QRplS0P2uyx+2Fonoz9NloNjAUqHTOCBKSRMDViM1KH+BcPD8vL4cF7/xu6
N7pYvtjYRE0gaTOe3h6W039aFo80aW865YRb0MGMR9m6QzgAs6MWE/exfMQE
u+ueKzpdIF3I+NFtugD+vP25JrFpD/4Q8s5p2PYgHZXezL8ZmH71ftZld1Vs
hbm/jzJ1xFrRy0u/BzTdN/22MXPEUHgxiDF/pX14gZ3/qXHUvgMXmsF/SJze
1wOHRvfTS9nm4lHLF7Od+tQqqBX1d14wwPz1Bpf+TZk3NLC8pTVptm8EYjtW
T2hrj4Jra64eXdAwfGFQnnN6hOVDGVybzt3RpICqQeOtiRub+LqMhV0koQ7c
QunOn/5Tgd4NnzhBoGD8z6THXx4rznbQ1pO4UR1Sg6qs/qQfnelEx/1X8/qZ
fqBAR2d5Q0nsPI1UWVyKOw0a5RoEaw6MQMrzEzr3b4zC0hfufpGMYfihsarj
GIKdx9G+/UGm2w/Y1r63XLGWiKQ/RumVfC+Bj1yI8YpeO1R5vbLsDvpnfvdK
RnqyUCq8iXrwZd8CEQmqWjQeEc2H/tuZyW1GeGg8/TDsOwnDO7IFt7YIRNMg
OlrTPSdmBLwNuc3J78aAi2JgJo0fhYsc7ctverB8AXn2TqzdWwLEWh6z0Mws
Qu05nk4uG2QU6P03PO1tHXq2Le5oryfmj2Y1js1JcdOAiemr/uFTQ1AZ3z3N
ujAAy14RYXc4+sGu8GImNz+2Phe35axTQyxSLTkZWdjWhvJGnAN0n7cB3/t7
z07LJsO5+ij7aSPM/uz7Prp/TmgAtvVfHDbEj4HKi/d3F0anYZbi75H0dxb2
mnGbH47F4gcc54bI60ddsEuAMyzMrwg8G4Poj1Pbkdd+3vfT33qQ9ijf1wAb
DL/bfvn1IJ2rHy4taB3XyCKALak6vZkYhpYFEX3U7Q7ExX3FPfmfeRkmthzV
qpv/1zLjVMOo8AhMp2k+ozMchS2n9ATlfwzDNTX+Y898sf+72ll7bXjLANwr
aevXuzwGuGIh1u8JU1Dogws6XD0DWV58z39+w/CgulxX0MeX/cAivo1OIasD
aBe9xdLqEiBWROieijEeaQj2K4hX/zMvj5+wf1tTBbD+0msq2cRBV1efDpWZ
lqNdCVViz22JINXp63DKE3vv1mizD2f7lALmcXeMKa19EKPTsTdrTwvYGuZY
biUUIO7bCh5XPLD3X9+9cnd2yNBgWVnxs1TFEJyvV3FQODAEPvcSj9pvp8K3
d4uZWr8w/H6Yw1TNEVHhiA1eNH98AISk3hiyM1Ah1qyXofMJEVia6PzK5LD5
ldZDDFRpu0o4eA2+V08RUDPDNd9nMxXIP/dygfB2IvCWq2yZZcLqr/yz+9Lv
mhJB5piJxbmAbCT78dL9xT4yei59w85/ogUNn55KXlbF8vUFxHoR5bI+sGAo
lN3yEA9LNuF/25t+oq8t2m7rVZ2ISq7dGfEQu8/BXf0hkbtwoJBUcPF4ZxM6
VDgrzl5LQoluk2FmuhnQOMLko1iH2atgqdpMuQ4afBWrFED+o9BieadjsnEC
6oVrba8wT4Hfk+nmJ8+w/khH0yJGO3gG4Jf/81GW0DGYLkqdHr42Dbppj2qW
7WbBM1iHKSUb81+qdBO2vqwDUG7r1F75aAx2XErbPjczBWvWCR2R7LPARKQ8
N+TC1j/p1G2u3k2Fle2+sqBPBRmJ/oHZxQ5g/k0mcQrngo7NX/X3x7H4XHT1
w+LHFziYOr8o5vOjETnPyLgY6XUgvt/tYuz98ZDd+V43Nhf73rX7yuV0cT0w
Fb+If3K2AT6dcMpsp9YhkppV8TmpXsTy4Lxq7k/svVj4gaay3YM0eGxi1GbS
MAoEEY3B3GuT0OSGT05jnwZ6GYPiPiGsX41FwMVi0tEB6Lw6c+jOJg7PCzhU
zaU2A44Dbo7HgubA+WWR4dp3DL84/rCbDvlMg3wLxZZi0xE4YXquvmd4FFKq
O+d+ZYwAue+m5sX9WD4xSXif+GWKG3D1vWW/eY+AGNtYDpfuaIBt9y1spH3r
II57UDygCLM/338Rmd0PUWELNSVM7AsVYkzpfv7iIcNf88bmNbdiYHdm8Rfs
wvgWh/rc6JHBQmCbCfp4WpCElL2mGveyhqHfl19fufaVBKviowbbWbH3O6N3
rtukzXXDs09lj+a31sD3Q3JX9pKaUdN4zO7MF73IZV7s+fgJDI+QmD5FWO6i
gl2ewVvieSp4j9eRJvs64N7v31o233NA60Fi2DFH7P9aGyxm3dAth7x2rQSJ
p0RUe3j199LJYuT5R+9DtQAJxOGcNz0157/7eStp83Pl+CbOriqg1trWo798
3IcCRDqRz/uJS/t2mQOk/XbHn8Xk4TruukFyAQVIgYcCE/r74XrUkyvO6u1A
0rM3h/hI5MrgR3MPxs7vhq+n8+ZNBeGVGM78eSJKlK6rQrL5wGCHq1e9joca
Pt7B1n7Mf7ULv19SDyXDu9sZTsUmWaCpK69vSyag0Z8DzFcNutHDla/D9rZY
vhL4dK6/i4tCpKO7cp8qtyPZm/d0js/gQOWlqfr8VCb4H5SuV/5nfmW2UOpz
DzIZaAMJLwZ5cyDAx+1hsC4BRWZKrNeWd6OlwUoTJjusH9EKR0B9z5cYCL4F
7rvtiWiYsid6UrsC4ouvXP6yqUcX9lzLySzC+LpQERL5yysasFOCB57xjcD6
7wdLM4qjcOUU36lfLsNQzrQSdeYc5i924rJfZN3vh28s200IEh3A3nywhOVH
FBzfOvLy1UECevVsgyzQjtmrJd7qBPU8Kni45Cidbx4AiS3ye5LKKJDGQika
TyDAd89nxWGaWP/h+t78WUp9J5xhVd8VExYHodcPLi49JCHG0LAgzUgykk4r
ux+/itW3mJ/+pfCXKwvovV2kmsVISEpM9rZRbiocPi3YbdtJAHux3X/3X/mn
v9/Y6ao52Tz4nXu3iu0ECZ2dvKwV4eMOIw9TVW8Kk2DN8mtBX2Hhf+sNDp6U
Dlknw+RsOskzMhe4zHCM9qt4lLvb2HfxTzcqNxU9xLYfw4+01QmG831loLBH
PUz1ExFR6c9x2HIXol08+6voTpMgSfAFu+gdLJ6Xiaa1LCxlw+lHyGzP5nm8
3jBphJ+IgjK7m2upP4igxm0pb7APq2deCRoV5btLg1c3nE4sBgyDkpeqQTfT
CNS/3DGncW0QpHgDjOR2YfN/nymU5YxRKFDYKdexzYUCL4xyqwuDCVDDnH3m
/ORnKJmiLziGsPzy4pZEXR3mdqD/tFpxKLMGtS4nFOqPdaKHIv5H+iQTUeSJ
jUiO41g8mT+YKMhyqh++s7F/MhwjQkzQhqB20TV4t1/5gUQfEb1gJDJ4EzB5
4Eyp+nVfpxw+3mFJMN7U9+sxzBnqx4uReFJe5L49JLDXLYq9Q8b0PTFAKOLS
MxrsPvxDYWBjGOzaOf+8YxyFHUb7bx7mHwZKQ6mu6y8sv7YqONnZ21APJqW7
DrM4tKM/z52ui2rj0B2y4KTbQgs0jwb7VaRh7x8/nU3gL5WlgLFAUg6+tAeI
yWOSys418KwHYl57ViPlrr3zLr8wfPS/9u8SKSiSjCLSYGG7jBrRexT+j7Kr
jMuqedqSChIGoZKChJSiKCUOIV1KiIIYKKkibRICImEgKIKAlJSENEgt3X0X
3HR3ihjUy//Lc/z6ft/fnjm7s9dcEzvL16sjTVc6BypphOn4yXmwVv12+JMG
Zn+H30ZmVwQ1AcXaveXbIThUqt1NG0Dbia7dO0D9XLsD6JkOSFeaYvLTaXp8
5HasheHxe1PWsQR0A7XepLKqQ96pNp1ZFgQwvu+j+HQKy1/HND5o+CI8DE02
24+PufUDw/TNPRds6oBZJCzpUGk9Ypq4Qpt1EMuPq4SwDipRdcN0R+rJiNOR
SG7bopituwclHf9jZZBAQAvvWB4fbMHyOzLppw+G1A6BqpOhxcwXMhS74M2L
fxZBoYiYBJdUJ9K6VHFGwxTThytejwscCkZgkiL0UGPdGAQFqEroZv8vvylz
dcuZAO2uD2L2yKf8N79dJWksSKAVJOy7Y56d7kLi+hsni7/g0E3RqiRZp0aQ
VjxGt2CC1Tu1fdj7Lt+0B75WvD5Aqx4Bo/hdLeXC3ejNIrSaBPYgz+Hx5/hy
LB5+1Uez75fgGAy186yfWpwB3YOlXmVsSyBXJdT5DFYg4scnauEDmH2vjzDn
3eVLAL24tK1fZaVoF+PBaucdf+TcnZBH2U8a0YV3w7pCrzD/4v0jSoZHu3f8
08gX0j92FUGSV9rN6DE8yqtnXcqh70fnzH+wcAdgePI0plrPkn0MFExRZXvq
DJDLJHSveS6CPvOgsnDYMmzNuJ93/4nxq80RYVWz3u9QEK2vZCRBQnWPl5Un
gp4h4gnd1DwLEjTtcjMylc3/b36OptNpS4E9YHEhKuT3o1i4LtolldxLQrd/
FHeVU5MRvlbm/v6TWD5abX4l5I5FG6i/7c3tftSJOG7YBH5uwKPjm2z9zom1
8G4ARjlvYfhgqfRz/9VGAvjdtGv38y1GpqpraRSbZNQ/M/+YJagZ0X7K2ux5
geVr5L1a963290CEcPMXWeFkMJB8lnJEl4RmCxfORTST0fVNK5VzStn/ybP/
SDtdO/MYiLy+fvSQ/wyMZhpPHxZdBPqbBRczLyyD6tc/Ft73sfXpkMw9khre
DHPH69is9uKQa2eW3hBXF+rf0FV072mF29bnZoq/YfGTn1qUe01S+kCK1/m7
mnYthJm8ocu60YEYfz03F386gDzffdHeSMHijb0vNcd0Jkeh5Fc/LRNhGtQO
qp0OejAPB31P1XyXXYSQxsyNPluMT1Ku0jKlFo7CwNqcU/QOrp2p7p6xdZ6F
Dn6VFlXfWcgh3Jm454HF83Nm2Y49HiFCnCsF3SfObPRhWGJRII2MQF90/ndH
J2psVEwRT8bO++0gUlxtYB8IBWmL1UbVALpKo+tX1oEYHI6fcHYZQAYGKu3u
uzH5H09zlEbW9kJbDF4wX6gCjoQEJxTuwqFEFfnSH7/7UQbnu+MJl7D716b7
rFjdFUegdmLBSmp2BNTFzQLwT3rh95FjvNfaq+BJVpEfqxumz352GvF3HPNB
uzvyQfzpHT1jfNNjT4wHAeYPn0P8iZAxLOVozYLF80Vd6WN8s8qAatJCaC8d
CSWFacoFnElGLgeebVGlk+AU/9jpyRosnpwa7LqjN8OQmc3bw+jcD+lKx+PY
zetA9UQMNDXUI34OsQFfdgzfpHQOKtBdqAf5yFJhiU082lezt5SttAklZdg8
vzaMg9jGpzVWAVh83ktkej/OrgA2rhllzO/Ya0+XG+ZneiLhL/NDZkINEbx/
NhRXX8D4nlvDdyML5hp4djJks5yOiMKSUzoEqatRXxJbQa46EULZv94ve43V
a93YLeI7NVoFey10tD9cJiItmRaRkcMVKLRZP5plgAj9hk6W7oVYfqoGzycT
MzQKffhKg5zCaSjxKZF6IDQPoTqXRoKzF8Dxd9mJgNdYPvGz+dNUn/QOyO9b
MPnJ0I7sHG0vCUuS0ICJ1091g0KQWy/a+POPP2WWRuHqn9cBFLxvmi6ttSFl
heBB3DkSEpn9UyI6VAC9F70PvCj+Z7zFnggdchUU57937btCRO8zX1PWUlSg
s4JMjed29JZ1bq+vhS0mv+3fJVb37zvyt2RZhzBMA/NSm12i3yx09hs71CfP
wpRuMePpAkz/E6IknjHQjkLAHYq5POYJuM+RcH930BhMbwsmSpcMQMeL558O
PMD2K/HckvMIyxDkTSvGDbcT4LUMO5M02ydU4Mf6++f5bnSy0FSa8ztmj27y
cj08+IMHQia7Y+P3E5D7yQ4VwkQLCC6Z2MU11cEplu5yPl7MX2DEbYbkDtUC
RcOXLxNPCei9mPzFTad65NX0QY+dmQBFTIwDPwKxeoB51svUGzPF8PfluCCD
EAndiqX65rb1DgWmB6XMPCdBIr/r8zvrWf/Nv3fD/BRHxGM0zXG5QaISj3Ie
DE12WLcBw8tmmrtGNfD2lUOc4T/9u2SjxZd5RMZADBegrL05Aw9HeKefCi+B
WJwHn7DFCrTac9rV62D2y/xYxl0uuyG4pa9wrpSzGyx7HjlmHIoFjp7U9dey
BOTsksba9Q+fN5qRWEKXHRFnTKO8Qi8e3dw07S9fbAVBi6Yb+7lr4elP0nrE
P/3/nyr9MJIoaYTDr6Ko2ldx6EWfL5enYAd6rCoWKqPZCSqR/GVrZ7F8Wavl
chzPm519fNDIesWjA+xzi937Q6uQq8qJVMWVPpR3bV+NqTfGxzQergmIMvXD
XqFzhyjT6oHA6xYdx9mGlOr/nNZ4PICS0zg86Gr/6S/NzSK/oNUBculVQnGM
HWjeVOnS/c9EFKx0cmcPSoHFLWSQNgDT57Wm2mPscjv8Q872mnoxEVnSiFxi
21cBpy31JDI2uyDyr05RDxVWz2Oj3dsre2MYlCppm1f3DoKQ6KBSk2wLDAa2
zgTMV6AkiaSA611YPYOoueKGKcUYuDh6z9JozIDRoXt7Y4IW4DJDd75e2s6+
3aCRNniAxd+Qd6gK/GgBuyoHkx/6XeiVQaxvtgsOHWINZx+mbQJF1p8y6UL/
1Htf4+K+dngMykbkC1/lzED6ZPHucx8W4YRLeINZ2jK80HSs/XsIi0+6jM/F
HBg3QMbHFV3+UBBQ8Xejp+JnWmE7bSxEWK8O7PQ1+pfFsPVUbPkr8HpuCHo0
U3YblPfCcfOJicNaFfDuuVl24o6fHxOzf1x2BMsHWcaM2wo1/u8ec5uk7IsG
1HYiff5RXg/ijg76dCQiFg1+PvnaNBTjDxS5Gid8+ofh1JnTv35bDQNfetzM
fmMCrIXnqoXb+cMRE56sFVbMfvl/0nrMuoCDeXZRC1GvGvRG82uLQSAZ6Qhv
tHrIFaN9KiPHt25h8cAXStSWezmHAedu0GNwuB9o3DIyAg7XQsfLyp/kM43o
S1v07EkfzF6c9XrxO1F0DB6HjlQcpp6F2cZpY2bJJTCVqI1ccFqBlCympyds
sfM13Xj+ldfWKBQz0+pYyc/AHs9OPZ17CwCCMcoXXy9B7YCxyqgCtr/754Xi
J2urgW+3VHAiFxFFtuwRYdKrQibGS3IGDkQIOHX5WJctFi9VuaqmdSG1Ddgy
bY6Y63Yi1it3jbR2ExBv0n6P6OoayLPh594IwdbzckyrmlguCewexWRGOScg
l6lDOfS8ZDSz51RD1Wc8SuT69KTfEKuHefpg8myYUyfwXmAbKW9qQf13A9Y8
oBv5eZv//iWQAgvh7+8d++e9MG/6gxN3eYZA+0lSzQg7Ebbrlz5e5w1FV0yv
h8ROkZC7/4fLu6sxPNFU6PJY3+4GddI9NioOP/gqmOvnn9mN1i7XsCh87EYl
98Fm4NfL/+bv1bLQ83g+CF1Nejlr4ThQedU6MtqWi1b6rjzvCiOjaytVB5vF
sflN82gu7qmqB9H1DM+7LXik4FkicXioGe2rXMcn2OJg4APeRIoT45/lvG6y
uZ4kYPey/xgnnIzeF+Zs1GuQEadeZkjyCg7JhXN+WsrD1v/BrwS98+V1kPfe
LbtagoAYSrr9Lno3Iplx6jS4it/5vkW2dQ4W710pLwxtTBiBfU9O3/ryZAxs
un1bOvcOA77nddQdux0c/G0c573o8d/4bHnXi7unhsDS8JqyT3QvDFdyVcRl
Injut6XKtdiG2DtZ5Y7+876SkkaZFvv+EXjWkz3IeHIEij5fKJR72g0mrbtu
U9/Lg3bf2YTrnzD+Nm8z9TRQdBSMgknF+PQJWKe4fJ12aRx4D0bkrxUOQ7JZ
f5x6GcaH6zYWoxWODUCor7LNvFkbNEjEn2ejrkOSbkx2dZ/7UdJbM3/5EQzf
rG0nmbX6RoHj5KHE9C/T4IQXedb2ew7YoqiWa64ugE/y2o3Nbcz/7W9lUZx4
PwQDh96W9mn2QN5DJf1dYd9gpNgr4L0TDhnwCnDX//O+D21Vp2qC2DAkkYqu
xof2gyn1rCMbrg7CE6ZZnJXrEXHTNzpjAbMX/vWfwpcYh0F7n6ZCc3YfnNL/
KoZPqoaHNS8pWLua0KsJG4eiNey8L95aJWfb9oCNfEf+eFIkxOaKmyrs70YG
lm+zxrN6EIcFh6/gmU//jefrZcg+JkWASZm//JlKCGWuX5WZ+ENG8XcoTtCy
7MjzTjHhTgqWr1w97t1wb6IP+EW2UoNL6wCfv2dc8Xg7cuzbJ/7dYwAJc3Bc
u/tPvxqViSadyJc94HHqMpEgFQsRi5bZXMMktF6/mu240YNy7bw4XoRi/b1H
Dh0+xztBhPbfXk0qG1lIUO4Vl24qGeUbuAiu9XcidvnXlGIvMH+hPSLhrpOT
OxhYlnx2uENAkk/zDmofb4b6IY+1V/cawU0rc1imCpOHI9A1UunBMKjxzepp
+A6CmvkRvPd6K5h+K+f8Hl6GdsUZX/Wlx/ThmsoNet7+EWhaDrjbZTkO9AP6
OUeZR4Ex/m9EGqkHPuXn6y6YYufriv2hoYN/iOC87izNZJSFXIN+nL4dQ0Z8
G3cDjx7tQuxhh+xTcdj9giudeJspgWD08qG1ddF5PGKVCKVvVekA6tWVyr0+
FSDlFPHH+DZmvy610xlE8tWAesdn+/vURNT6/OyftNPVaJdkalbGOSKYT3Fd
K+/B+Hm3woa1lMQY7H2+q8+PeRZCnq44PoQleNQ5u+/Y2xVQbxs3oIrA8P9K
QTV9UFs/fLft8M1XaQEhYYU6w+QG1JryPVCEZgDdYbwmefA+ls9SzV7ZzXK+
D7xTONqhrwoM94QN3UjpRL3PefIMjQZQwOXrlFLXsPitG4/8B0nRLIiJuhF8
jIaEPqt9Xdx6VACOp0fThdvxQHUilvkUH9b/8M7FYDlQ74RDuPi9STqtqNym
ezRidzdicE46byWYAS88hkCs9h/+kxiw+oJrFFha9kjNOk6AMfWfuUDbcVgL
1r/hihuC4QPtT6wUMP72/70PIsPjNa1UMwp0RCtBb/lp4K9Yxl/7PQvHFq4N
2T2Zg18W1T4BlNj9DnOTg5Ic596A97d0na/5BBTcHrkRIN0IYcaee/K5W4Cp
8Uuk2WlMP0UbmFrXr3XD7c/FMYG5QehwhjRP/5MexL5HkXe2hIh4LS/Y1gCW
7+tUZC/VEBiDrU8XVjMnZ8CT55erJuMSHKK8P00nvgJFxrSLFD8wvtTW8WmM
41kFiHRT0VB1EpFj4fLZBIo8FELoe/g5lAQP3i08oX4dg513r7WR+HsV8Jer
u+gRjoia2jjNgnNykb78G6UfH0jwZ0DTcF8Q1n8pxF2mSo6rA96ZuVuqaneg
VEO99/U7fqGazyEKaj4ElmNsw1s22H6FzQzKzz0dgbrNM6ZsPaPAZH4klN9i
cIen0aXEuLYB7PFQvGiU89/6GKbF6ka0kqFuxUxYwT8fMoO5ZipsCeirjpbI
wYw+9HkJxyaKx/xxjdJ0dp9H2SAh6ZL6i5WEPtTMZL/XzgX2njc4ki4ByifP
/krdjeWboguU/fXXR4EYo82rJT4DEVfSOQ01F6Ce+fjfwbtLwK/J7zlCi/Gf
OheSe4VpLzhlquXejCwBpmKFHO/DePRbho3pjVc/Grxookhni80f8zrakI9h
DF75yAw0PJyB7+uxDPcpF+HirTc3XbmW4cjNeFUNMSz+4zNmqeG5M7+Jo+iW
f3gJ0G1d3S90BI8m5O1bZHfmN78oykJthc3/LV1N1+8LEaZcn3jMnstFF0uW
Qk3rycjPZwafuNKB5i7cCwnux/w784ljHDc74uBFgZcDpTURlaTv371UVA2K
8iNnKlU7wXZrV1b9CnZ+L22ag1wdGT56+hUelcmHjJUVbnhCQLQjSOdpbB+i
32KRq3+KrT/b0JqPSmcHCOQYiaZ/aUMMox+lBa1I6ABjsI6vaj4sHnCn+lv5
T72NoulFUh8ZyK5x++UlCsCqv4TjkjoBmVx4eOhLXR9Sf0p4MhCI5Y/2K2y3
JzePQEnTILmDaxyuvB+5Te8wAoZHiCqiBBLYRO5r81TC4r20GYcyjY6Ogew1
BwVG4gwsPGuOVllYBDTrfq+PYgVELsiuyn/FzotwyvKt5d42OBa0pTUi3onu
DFWsuu+cV3yA5vB13hp4+Ewv4GEexleN9IJsz5mRYOD4OyuXqlR0a5b0dv9t
MtLr+LmZ4YZDH/v6S414sXp461DcLdtTI0BPm+ZukTsCnnvF54XekyFy63qq
g2QFEKTiyDV6WP1PmKa9s95WL9zO6BboulsJ+uu371yz6EIWpadEqEQGUOsx
5i9jS1h9y+f2biH+7B4ov3PWf9Y/AQomC3GfI0no/Yu5GwIWZDT5bkLLXRrL
nx75IJyZu9UFr66b8X9or0chv7WIvKM9SLCW7lsaZ/IO/maObylh/1t8k1Xy
nvYIkDzOiOayjQK7+S2vDyf6YKwtSkN+uAbuPl0hUIhh+2XKniT8iRAPpvqE
h5muROR17pzza8FqICp8udv4thM6Qk86BX/F9G06gJ44Kd8B5yQMVin5OtDV
HuHDB18SkR4uV8riWRloe/OeP+WJ6c/vYpRyffIT0iJRn3kZi0OmkRsPrlzp
BKW9d0urLxQB6YlFoxMPZk8rVE34vh0Zg5SJen/HohnQbNwF2wmL8GhNuyzj
+zJoxad1/vmn36zOfZ32rx3D8EygnOrimWFINIpa+huMh8Lkr+GFfx1Q7kWq
jda9GJ4/6Rlnlawehn772zyWFMNAFfXMVbkWBz6fb45mCXxARsE/n96jxOR5
9DMdH/5lFJorlLV7sqegN2U/3bH0Gfgq5+NpwzYD4k869JdUsP4n1XKEA10a
gRD05GJgYRwBBXHvLpYuagRVshk679QMmUc62tvNMHkeM5gbLJDMkW4tW3fG
Hzz6sz+q5a95K/gb6zeEMdRBopxVtcBpTJ7XguNVCetkcA2rUN/vWQg52b/n
zXYRUBnfszjD331ISK7NJmkdu89SGbZ9g19qBLgP3LgtUzwCX988P22YRQZl
fbfRfu8KcHTydFxZw/p1XLGafem+UglxFbyJGq+IiGXProFcpxKUEHSslyhL
gk3Pb5Z221j+0TrmxFo23xCsd5GtdCWIoCmlZ376RzDK7F4Q12gloSoqWUlU
i/HtfXit5ONmHVCzqlW0ttCOjvP3CNkXEpGNheIXuuYScI7YrzcYgumPZ3bM
X84iZ2CXZbhzXZOAYonNjNyVzRA97KYo/roB5Cwyj7JOYOu5v0fjL8+Ov1NS
X8949nMvvIntMPbJRbB/u38wYK4NrREd3wZtYv5O+Jlz0bKF0bD2bFfAQ1ki
ososSmgzrQW5/VwlNNYd0Nm6ve9SPpbfTK1YZdOJGoXrtOeb519Pgd6oHu+R
yzOw+PKTRPjjafBIOVzTcQmrNyPWKL/wyX0OhEG3kniXHTkvfJwyaG6CrWDh
vpwfjbC7OQR37CsmfyP7SRWavFH4sVmf1bA6BUx5lQwndWehUMHGpVVhFlLy
eHWWmbF45sjak8FPzmSofGadWF6WDSp6Z4f+ihKRhZRykSldH7oX+CeURhZ7
z5HQT6eZ9y0LJLIuXFJkICEjA6oLqWfzoUPetHaYkgAMkyW9u/Sx+jFu39S7
0r6NEKcaEYVnxCNvOUHxMXw7utqPxxsFdAK/bJ2N4QTmjwS6Cdcff7fD9y6Y
cpPNp0Dc50ir+eg03PrNfzskdQrs/lJRjx3A6lXWaP3Fb4jg4N5NY1U92Xrk
lWQ29J2WjISzFj6ZO6Yj+QeHLcJ+Y/EoSFbDT1cNQFiGRpWIcCfUnIy/1tBY
gVSudk24+fchae4D54QVMP8rs8/zuK3NKIhqxSv9yJyEztNiavvVpmD7hSpf
Q904lB+NI5FLsHx3uZTK7fcvCJCrzMLOmV2K9v60G/tffaDS6MHNBr9G9JGD
venyP/WB5IyfZh1K7cCWLHg0Zn4HD42TTBoCCejgetPzPlwVpH40gjMrGD4T
CYM3VPaOQZ1YHW7WeQZCjXpdWn4vgM3rQvcTLMuQVNV0aoQT4xszkSFnSgv6
Yd5X7AlTVjNYOwlospk3or4OZtMpjgHk8ETYTXIXxv/ZTtJvqzYWwt1vIpmE
MyQkEPl96sdyEHhtFW/83uHV2TksHRpGZf+NfxVUGfJpYAAMh3W22553wqtK
loyUFIQ2TWk3Xmv3oRutyyJSEdh6pi3x37QjjUJaTdNbnbfTwFtP3e5ZMwfu
1L8GvH/NQ+lRBbX9Fpg/PhftvZ96GQcs97Vc7F1rELNyruJSEBnFzh9NjbMp
RmsVP04um2LxtGiqb5sbrng4uxUZdulFFZJyMukqbSQj32RfFwfNSuSe4vW5
fhPLX68EWNz4PdsD00lnpme0U+DVPSX3ptM7vHLX68mEWTJ6JMJNa/4G46s3
lqsYhWnGwIZO9gL5ygwET/81t89fgC+ipcM2uCW4/ljS5E02xidn/7RqKyM8
5HaG0xvcq0QtH73SqEbIyEJQzPnoy2rkajEQc0AAk+d83VmK4YhB6KW3fyI/
g4NZXWm9jZVs9Pav5jtfTTLqbbukBBoYHv4vfavFOQZHY6keRaAZyCQtSi7k
L0LilY96bM3L8Er09xsxPczerVgntZcRPsOwaJDpA2UismIqobZnqIXrS4/O
coV0QEjqVSbJEAyv5Erv7+/Y8Td/XVHuP39gFs6pmXiMKy+BwkJzfN+HFZD6
PHH17j/1ZhsVb3+9pB+DkN3wOd1hBm7bqFTnLy1AAG60xZJhGf78+SnykxnT
z/v7p8vfcQ7Afe+NyRjRNpgY194eUqpD4ue0J1VT+xHbhagV1irMfz9C98xO
ak8wUHslW5aUE5Czprbgi/UGmIz+rtVwvwU4CikXs3kwPHx/x3SK4sTOeRmc
KuY6OAuSx6eytlSWYL0mtYoqfAUK7WimD6Rg8ov7n7sQLEAGZ6eH07WUGfCZ
rK72u56Ivj5fb3ey60W/vj9vrpzF3h/Xg8eKxtuj8PRO8NGDMAOjPwT/2rou
gNvhXTV0YUtQd9JoXkkH0wd88N0pW+IQHLG1eHCUuxd4m/wo8mVKIcZ0/Gzr
9Q60eyjsw8ZJbH/PCDy9Sc/ZCi/7922MynShG1ct+b5F4tAAA0uY45tG6CQV
Ji3+03/VVCS/e9h3FG7LS1f+Ep4CkeT3o4WW0+BfekfubP0k7FmV+UAqxuqp
gj586H80nwRlD0e4eNN2/IU7oQdpOysgL77S1zO1C2ooHmwQHmD5BfLi289S
ycXw9trPw6zHSaiHV2mgI/gN+iC8y2TqCQlOC+BGYvdi58VThTbxg+oQGLlQ
nH/NTQJ3eulwpfgnENgYqwafiOjmzdyAzH/eO9hDMakqwbMj/0l/4uCjCcgQ
wsXdejwO+4duPVFdGAJv0ZyfLP6Yvy8hFWr+Wn0ExhyKhLV2j8JR3WZVx8Ve
EHolx11wrAbOBKSR3Tcxvtp8TFdQTXMIGosd5g7LkMBBnaOLycobzAR22bI/
IiKp1S/i1/+5L+bk1dGt3rHDQw8rKEvfb0AHDORWB4p7kOQDc7tYtziUzpL5
4GAAhs94nW7Dmcsk+Prz0oGtfV+Rmsonmr1WZPTmgEvUsDUORY9x921oYf7C
pQRz3wneIZjP8E2j5COCo277WN+xEMSfI4vX7SOhT/x3zqrX/HN/NvDggBPf
MNAYC2S5afQD01h3nVJ1LUSpxgv+dmtAUiGxjV7aGN768Ce91Z4eBYdU9uOE
/mlg20gx5X8xD1993a58tFiEU3EkTYl0rB5A/sLg68IAHBwX5z7pM1OL9G6G
743TISOf0EtKq8x5KKZnre6iMqZvGRprWvwplZAt2KJlEklEhoIMXcQ/3xEB
Qq5VXyQBnYzpAZ5PWHxjoNJF4e0XAhgeumTSlVuCUvJn7IR27GNTmNR7V+cm
1JG6WFZzALOPbbsnO8Z27J1QNsV6odsM9D8OWKvZXoC7RkPSE0eWwf4C+dAe
YQxPDIMqhClz+uA14z2/l7610Bzj5vpJsQMtdBkVZzwbQGs/Z53M+7F8zfql
vdpfdAhwnfJvSoh7OVro/XA7aIOMPqTXP5bprEeiDyKkFA0xfvL/7a/46Wj6
sIvRKMR/3Es9d3US2jnYPZ95TkLZgwNn2mzHgHlpWS3Erf+/8du5SStwugr6
lg2aIjyI6KVKtbh0cSkydhF36+InwZXpXe+oWbD6tIdXGMPUzIgw2m1b/bIg
H8m/K2c8NUxGGw6fufTb2lHjj/l+g1tY/F/e98+1aZtcOJveHOknTEK21yR4
g3dwru/3nlzxnwRY3qbRoS7B6iX2mKaf5vs7DIW7iG0yxGG4ZJY4mbmPBBsS
n5Vv06fC88Wn56ybMXz47kTF8v1ZDjAVput/5SWhx5JxPMSmLIj/JcJcn0KA
1+fKWf4YYP5CVpAdjWJqDhwqWTmmwUdCpZGXz36/lgUGD2QM4goJkHyIMnOE
FhuPv78epzH6FN356evT9x2P/MINfrX5twGCEydEOGug+Mb+RfXL/+SjH707
LCAyBpLrPjoWmzMQXn5qIVx4CRqipIZvWqzA9UsfXYV0sf06doC6yZoWBzT+
QS/P5tejtd6ypHfTPcj+3ekiHsYUpOG3UPD8DHbeGZ5pUDQ2R6KZWwxtJTt2
s52Sx4vHvhMuv5l2vvuyEDwqA4wrWDF5NvXKhse6v0Pm1cT7FhIkxM2csXZW
6Bna2yDkZWFBApZPo7J8Klh9FB1hlvdwHRk4zEgMxTs8+0Jd/br/EwKqyuW+
pRzbh05d5maUe4LFZ9ocsu/EvY9CnU4zI75+OHT9rQORe4eXtWfGOgcOFUC1
8ezDfAZMnhjhvJpuTxxsxQYXhzPWIaV+q4JxVTK6szfozLhLLlp6pLD1/jJ2
3oV0LAJf8ozBytm3szRtM2DbwlPOQV6EJy0bjrCwDLZXBf3P/fPe902fjV2h
6f2QPWM4ctaxGa6cTS0cS21E6r9DogePDSBX3XLygU6sHt7w0KCB4A6f3nuX
sUbKlAz8iTL1e34VQBkDi8ilvE7ENGN6uPKf+4yd1voWPusDYGHOJdM+2Ak+
c4xfvWLLEJm1SX5mdx/ScluVRasYHubQe1jfTyHDFM3rY1Y/c0HqB86qt4SA
DCx+rO+714f85pRYtNiweteHV/BxshOjIJyYdsawYxouCA0Jztyeh4pfcVdL
+ReBRnmp7Kwahp8EJRO9uL4e0KK+4lHMkAy8b/mSHuuT0NcCk75XDWQUfam+
p/0oVj92WuVkgsueMXBSu1r9yHoGHMTj+pt7FoAsnfjn6toSuDw2PWM1i/EH
4YBNH40b9cDNUy/VtoJHzRdcsl6uN6E7a++1dzfg4DJeTzVtEqs/kTpevOX1
vgQ0bgZWGhwlobHcRB+P+nB0rNWFU+wdCTRAT/Lq5/T/5GF5tG++XLoQlH0a
2K6cJSFhgXutN8tDAd+55/r5ZSLEqSBRSm/MHzyR4f32tVUfyIS5Fp5tqIav
8WZLa+KdqJQyrGbEegDNPmTM4AOMT9JZi1ZbUo6Bs+qJ4nidGTir/5jt4McF
+CCptk+zYAmm3qh2PHiO/e9yT+Jj3T19MINTmtJJrASTM48bqlS7kNQH/tI3
kgNoafKSzwURDH9kcOvgs9kAAoZMRoGaeHSwUZdHKK0NSU+v3/Q42gXOQ4Lh
dkcwPD/hOXf+tTUBVFcMa6q/lKHq/YfX3LfIaNnwcpJdbAOijHFMjPmB2aM+
ZcqrVyua4aDw58bctS60r6LikYBaF/rgZJ714X4r7N9zb8h7AMtXXisSHHrc
PwDvmD0eCnp0QhjXgeCmUoRSvuZPcej1Ic7P18MDPmD6eToMsS7v8O27agte
XTt8u89yrDZmh6/ycuz/rvlxBZaOS7KTkjC8UruaOmw8PAoPuIQq8cXTwJUb
9ofnxDwk+6OifRUL4HRy16sfX7D6q1ozuqbR4lp4XB/r5+RPQPH7i5+zHqpH
9suMp2jFCPBjajPp7ybWT6mQnZj5To0Ik0VNCpnWBeiQSlvg3kky4lDd4rY9
045mCCXzTAew+5LbIym2Dj/a4GR9b7w4Tyd690SL1K5OQDOMv16cxFeDR1pj
wvVqDD9d26hfmBxtAmF/52bNWhyamH17h+JDB+rjcA/aauuAF6NHbVADxves
LdT4GxWqgOVBOavhMyJ69cfcx36xFHkXMGsy85LgmchzbR87zD4KWiU88bk1
Ct4XBsp93k3CKjt/qgDFFPRN26ZI647DVg6RaLEH89/9h/PMXuT3QM2T560q
owkQEW545sh7EhLLFJpKuUdGGr67FqNp0zB/dv5mQ5xvAzAX+RuLueMRN6Ml
iTKqFWWv4YZXE3bw3ijKgu8apj9yPN8vq25kQsvgR0vadSIy2b4/1sRRBNy0
rUqL/njg8NfRoj+J3e84u+tKX/zSKIS2iMSJbk2DXWbVFA4/D68ecj+p/LMI
/UZuLryXsP4JnjwafCoKI/C3BfLuDIxArx/v2SrVXmBoZZL6JFUF6t7biUk8
2H2EEg7dzkCWBHQ9+s2H1ZkudPWXeI+peRdYNVGmqsRlgJHuRMX1h5g/hU7b
jfq3jYKnwSNDW5tpeMEayf3ecg78ozV4iarzoPiXbQmvivW3SSy4tPH60A6/
8eQS+TBdD11lgUoXCa3oWSPDTLfbANI+unEi9C9mj0wImfUlH/vh68fy5sSl
Jkgz8dPZVm1CIhEt7GNnBlBcccjE+QeYvQiP4InffXAMyuTwo1ZhM/Arj2IV
p7cIR/wpyk5aL8OhbVtZ2mSMHzq9+HKz7/gQnM7gHXe8QQTR45RdNob+iNG1
+9WbYBKiD6K8wdaM2ZeJTMreG9dHYEF6gv+mxSjQUeyfFb3XD+GXyxlDghog
9PBkZTsd1v9ZpfGwca1sI9hYZs5wnsAj5Q9pRxdOtiPxTh8J3YFOyE+EiUI3
DH8e66ZdD2QdhcXbuRddL06Ag/ltbk+ucRjau8R6yHDHLwjOPn6jB9Mf6Yul
Y9Ox9ZBq+NzQvgePyljenMwMbUYeW4L55Tu8/eKcY7ZJA1b/39DY0DUW7ACx
IQq09ooE1NRlsDq03AwBFXfT2C40gFKXMr5u6Z/4521zs/K5IXhRekW6EPVC
lZO6zKZeBRDyb9a7OrShtTa/dephLP4pPaY19+N4H7g+CtgbYF0FKqHaH/6M
dqJbm+s3HmsMIA3OaZ0LMxg+7/jOJn+aRmDA5L0hFcc4ULFeZB60HQGxH3g/
40oSfN4rPAu92HtzQ+u3oudacHBYT6KK4k8N6sdP8l58uIM/fef/lp0sQnQT
Trdqv2Hxn2xDyvH4r6PwQmc9ZHfLFFjyZFnQzM7AHb6ahy4BM5Bz5pmGxxoW
bxeXJAzwzScAl4jF4UZfIuoan/9e5l8FOPXXa1f6O0Gh0N/xqSmWv7i9VTSc
7dQA1n+fP8vwxSPH8DrBR86tSOPIekxnwQ5eWlVKGAO2X1vpwS5RcUMgeWx2
hv5LD9DFOHc/FcyBvFndn49GupDONRzF8c+Yvk3rJU6fUxsGjdAwuvuXBmA5
YnN4/GXjDh81sxznrUFDS/y4AwvY/etHi6v6zwfqQczJLZqnEo88yj7KRhxt
QVKHFioydHFg5eiYTK2D1RelKBDoRUKToN3I9mJfEhHVpz+hE6CpBJmDGaan
Q7pA+Y+RqucrbL+W7q4oTKX3gp8SdR+dNIIei5BLX1VwaE0yVF5/qB/xVLlQ
KUhi9+mWwrb35udagjZssNKeJCDf2KR73zRboJ+o59lQXg9R2ufptv7Jj3C0
9Yg9jSLCnKNGEa1PLvr09LlsWBMZMSYcdPUmdCBCbwpHkgDW71HmlyLl6sIg
hJRYy3DsIUDkxLCXY2gS8r61RvucrwfNfDz9/Px7bD1xpAF3v31jkFQgWK8W
NAPUWoqn955ehAwWB86rOssgeuzrAfUnGD406HMVenrjgOmoVr84dR16GHyq
pFB9x38PomB48zkXXWRjohW9hPHhQqljfuEa3fApapObbSoYfecxmpB714NS
+3ezqboTUceSXxHFRs5/4+d7dffZ0/QB1QnVwNr3lZDv+fHcLr0utJQTYX/v
xAAqWLNzaD6Mrb+aAaMGXUcz0J8Kf/VwoQv1cm1pbhl3odEX15PjlFuB03uR
q3wJ4xsK6yu8tX3DUHZuiP7wnWH4w74n9ZsmAZq2TA4wevoB5bbaQ6djmP8b
87Jni92kB/4sFSXE54VD9erAWTOJbpTEaZDz26sHlXh3FtDaY/0GG4/J7WqU
7IPgO2/zpt5XQXbCWcHhlk4k+qWuQ1F3AC3LxhGz2LDzEjqlJqVQNwqtJ2Qf
CV+YBkamCNPrjHPgGvaKzjVuDlqeRrVbK2L1FSPZog/nzfqAJb23gSOwGk5J
plHZ63Wi2ouuV/VvDyCxlS+MfVQYnxQ7vJ0edLEPDrMeYM1Xrwa558b7Vhw6
UeEHO4Ff5gOofqoskacGk6cy+lC7nSQe7jxm32vxshpR9h96+i2djFQeHTQo
Ny9Hi1ZMJ7eLsPWcolE8PqLeCyFH25JEGoth3Nje9LsGHr2m1EhNtO5Hf433
zjMFYPncuhzxrKP0BJD2/KL4Xr0CmVsmTTn+ICOW3OJY+7ZaJH3rRSHnP/XG
jQUrrSviI+CQceZxcdwIJP+R4fTUJsPfaquDragcvPpffm85gdUDUKUJLPM2
N0D8Pa+DmjfwyOeWlcYHuTYklxrZGHqlCwLpT12da8bwZ8VS2bHb2hyNq93e
R/UXj6h4S9auXmsFx59UYtLMdbDrZv7m5CnsPBYJZE6KiY4BgVzYsUExC/xn
PqdaSixBh0R3d9H9FUgNOiNz7SbGPwPYO9lZ4tvB/OT1s9nfOlA1fYyufi8B
sRnI9bjt6PfJPVoFMQJYPu49lbOlgUgjbL92j144g0dBCvHdRUztSEtb60/q
YicI0T87LXMDs4/MEyozTcf7IebY4ETGpQaQ42xZnDFvRVGHc24OOA4gy0eD
dsgAe39Qy2Pc54vFMBjDh803AoNwZLueUyyiBe43FJXFPalAOKe12J8pWDy5
vJ9RW+xTLHL1URaeOYdD256ct44vdEJgw7rxPspcOKBHkx3ZitnH8cN6uOed
9fAsz2yPdh0enTUu0y+iakHtjCm7n5niIFjA+JH8WQxvC9q73O7qfQefUerY
k5IkZN0+/NPu9BXk3POOrKBPAk0eQxZhayyerPzuXN5DsTFY3pdFUb17FvZ/
YsxLP7ME39P2tqw9XYG6ougU90fY+u/N0n8sJz0M5z9mqG8O94NzteOVzcV6
2LU/zt5lvRbZSN0c+eyP1R8qlFzs4qPNAtJIihoTFQlxF9r7jnQVwIXWnxw3
K/DAvm3a+/oaVq9VHyPUQr+7AfRHrCT7s/CohNnMzd+jBal+ExLREcDBuFL6
E++32P8ux/nQJu4jQ7ra6t1BrTQYJ6yzdi8SETEt/o2uQi/iGfClFfiNxTc8
5BlTOHGjwCxeU+34bBr4vr8Wcgibg6jPwQMn4+ZhKMaGvpqE8cmH2m2rZ+oG
ge3btE+5Bx7SB4bVL9BmoPy3ZW9R3g4vzCp1ZnXG8P+vGKmI9sgQ5NXtVtpc
IcA+Eft7szlhaLW8gkGItRvxdIhtipZj4w8XOJAXXTogSefnSdaUdqRoYx2X
OEBELB0nXVcsiuFN8JtNUiymz28/Vnp+E4tHUYa/rNXpcAg2nlrbnOmCpwL5
VEqmWbB6L8CGOwLTnzytB/H1sSPg0fGu2dJ+DHIJJsVGy0NAKKa4/ZwdB1GX
+ZMVbxv/Nz+Or+Lqdb92kCyqf5JQ2YF4Jl4PGdYQUN8wATe1VAnBbwJ5X7Bj
8gS/EA9vHYyGlPr7p5EcEdE0xd0s1q8FRxOXQsH7O/+l7HP4ThaGn0k43ZcL
hBE4IuL5ik9jHCoLLyRZtY4Ab4rZqiVlD2yrBbL0m2LvvfLpEBXr2jrhAROF
DU9WM7qlV8fDltWNrMc1qDsqP4HhlZcUfu8weaq3FeYvBAyCam6sTXcODsJ/
VNFUSeciMeXCSF8PMvo6/+S601ls/S+6WawpTQ6BuPvxirmPvcB2TdMq7CWC
70FL23lU7ciHe8HNkgIbvyt1UJ2Rrg8qg170RqVWgpjY6fFIlS4UJdvKwHlq
APV/6Ot9K4HZU0t70xOujg1w65TYJ8kXeKRu7BKV5tCKlD3XHnAV7fj3PG76
JgoYft59pt1BwzsGbWZqX2Q6ZsB9JJQndnARnMOYr0f/WAZv2becKiFYvMva
KKW8ZW8F5L/r3SsxQkQSSczXz1Vno5vkGAJDPAncFfoGadeD/xt/wwl+c0gR
IWN2aWWIuhDdcr1q/X2WjGrFe8X80tuQqMCcdWwG5l/zZ94OTilqhsXar/bF
f7tQcHXA9LXzXcieTs/6vXcrvHltRP2CgNmvar+3RiYnd/7Dz+5N6tMmpEhT
0hjL1YOS52qWBZbugXIa3TK/OrZfE9ET5LUDY+CkzXqZc8efqlWQ+nZ4x5/a
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
dK5NzTaE4a+/2Bhs9YF65FR57OCGUCxe2n/ZjXogrw+27ZL9TVvtgItWhyl7
jlWiKXNNg2MJPShPN7qWaRuG96aNj04fWKuD7NBhIx5eEvopbM2/jbsJrZIa
TNNEiRDAuzNNOLD17/dfmJMPfqknQKPi20f7ttYiqJpakrrH8Keku+bvegvQ
e2Ulb3IJpl+VGdmuLfdp0JZjI+hYQQf9QNn4Yyt9oOsSbZqs2grbrF837zqO
9V+taAzLXQ4dhKJBk/c+xgPQlsLMfkkaBzxn7/AptWejb7GRvJKTmPxrKysw
U/1KIXxXxsvs3RRkvGnFhnV/LCKPtAzJxFIgWe2ORdGGhL/r+VZXTquYtsLE
p2HuHbvxSGDlK3MegYDGpG4W9/Y2AJWf+GrhGeaPNALZHGY+tIIj7qun5DwO
bb+7q9xkOxHZz36RVRFogDVKx8Xo8n/qtzcMnGl8WAiKrhNFpsoUxFxqRJ2U
8ISA/UHyxvIU2FbYSTDPxOpFD2f10cr1+mFcOvnCwXE8EHHuqcSKAvTV+csf
jYPdaDq0e3dWN4b30p5Xq7+/QQLvYO8Us4Ay9AEn25qw3oXUa1x1Pxc0IJMD
D9oq/5kvrPs6xJ/fqAjw+mOeQgz+4uk4dvxmoAUSv54bX3+eAt8PJelEmGH9
CcOeo/EkThoY3N3YYqZAA8dfXu/073WCiIimK+uJXOj5InjSJh3Lp4tR41NP
5Q2Ccj/bb6aWAYDKnnyRRTxkPxRF7HxfUOYpvrObFv+ZV+h7PCLNYhD0mG+a
0cb6gNNpawB/STOcbLHieP2sEvlKJr0LYMfik3nNP7cn1tBgQEr43UbmYUgY
UeFBBxj4PshNj2czBSxn38RPymP9/dj7todMbafAGcG554GcGSj8RPPLrPdd
KDv5/Y+o23i0LuvvcWK19u96eXvaNs6rFAiUIj5VOZmMWO2O/Dh3qQs5mk8N
bQgkoCTVaz2VPdj7qbbbTgbDvOHoRHG2PTQTkPCex/LJO3DAr/tFSCq0GPad
aMYNqmO/N9tPLqdBuwugfrcGi2kGJIjsUae9JaPCsqE/yQndaOIx9eBgICYP
dQIq4hanqGAWkjHedeUD9D0bklo/3omoHD2FHhZUxMdVHakuGfB3PS5ErsVP
luE39JJkLQKbkMGu998v7aYiQZP4TTLs9+Dy+ePRD/QwvJGvs/UgYV814FPF
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
Tsw/f3G4E+ktnjvNOtcGrzVaU6mLiyDz1dNLLRcxe+J0kDl0KLAHNKi90hhf
J4BWdl0dVy8BfXpb+YWJphfxXL9hPmGIzRf+9mPtmsQZnx0c3nXK+zUO2YZR
XBI637CDW+99EilpAApiycvmV5h8uu/jwyWJkuHzSNxzOsZpyKxhfKl9fh5a
cuX5/votwlr1CcvwN5i/WPRLz3ofRoTcBHOeOtVh2J6xoihfbQOmzgsKKtXZ
iLNJNNSBC7Mn6VSJ71/JdICPc7rY+wcNyNfJmVqVvwdR3xNzPeV4B0RaUb2V
AoYnH5SPPNKWHwSeN0L98btaQZ32B/0fsWrUScxdYHEcQJye+Rwx1zD7bExz
0mtipAL23lO/GnkTj67INp0kHSlD4Y3X41kG8TCg/czUNR+bJ5igYU/P9ocE
DLdfiNKSRmGq2GZNmY8MqGDuqo/pAMRbb7/TbMPeT00ef0mXQVsDwy/OOFhb
4lCCg3l4Z0ctOr7abdg11wUzagc/03Nj6zMcz7NfIfTCbZ/9zfkLuVBdkWs0
qY1De40EVB6V9CNb/RNKNy//M7+YrvWUjWot9Dlnvxj504WITpZCNFUNyON1
C7/0YCf89ChzkInE5vOejb4V6h26gz+Pyxpmt+zgr+4Ik8EbvchHna0+JiAH
KTkITO4Xx+xbc/rD5UfcKhCmQBN1+zAORTxRj0qsagJbBfmBO7tqwX5SKfgU
OyZvFjhLBw3KLgizvnN1VqoKCSiTrOQje1Ec37TfD4ciZLhE9mz4px7muDO7
dt0wDl5l3FcbKy9AWq+eTCVs9CIbmczLuuebEK0prdj/6r7//3oewsrm/utd
MI4Xjjc9XIlmKNYY/xb0ooM3rTN7D5WhNye07abNsfxO94X53g/dg0ATag1P
LNuh7c1x/U90ZUjIjYyn1u9HHLp4jkxvTN+/WO/a3FZtB2vrCmuzK82Iz2k6
KIq2G1kdjh+SZ0qHvI0LRIZ/6k+C3s5RcdORQcKakuXp4yng39Jj4iPOwiPJ
OsPHf+eheoP6M8cqZm+rosm1nQb1YNc0k/uEpwslJpi/mHJsRZV/F2zxP9th
KeXl07hkrJ/Az0ihMzkn6kGdWUBNUroLtViZSxkwtqIm2WgVw/l26Ct6s6Ry
B1tPOeUqGT3z/zj77nisv/d/I2UVLWUUsrIrW+OSGUJSaaCJomSUmZTMNKTs
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
01k/3NLB8qGEKcHbboNUsDD5pZrmNAL2ejVsZGkaPI7bFvLpOAXq6F8kRd3E
+nW43JA5kftgCB5p5+e/ch0Ase2C8V7trTAxZ/jlyJZyFCFHOx1+ELN/qd/J
oka7yGDIMqCzOpKFXLptZs+/o6Bf1pfdVtw60U0p3ZPvh7F6gI1L+QZCN3Fw
sZ5Gr/23BYmLfQpWEu9CBS+ybCsk0qGCR49t4h977p/8de7VBgkKdBrx5kI5
iOigIHT/IwVdunhkxVG+E53Peme8Lx7LL4SJn3j5mtMbfdqWWHY4joD6vIdd
PTbaIK6S4ut6rhr6585e7/rnPgUfrneHiUcIMKSSxRQcWI0upws/vJdJQV+k
XE+8vlCOTPaasfmXYN/rjp6sID1fCQg1GCS1SZFR1X5N+58PXyDqixJVmg0Z
uiyfMogoY/VLZ1lSw42mcqDpb06SJgcZRe7HpSgm58H4X+OQYG4i3FdtFyif
xerhs6xzU7mEu2Hh7I6071nBkD3HkcPs0YXSH70YmVvvQprnQlKTFwwx/XZ+
1+XEQCq8NLHa5sY5DOERjsbaYoNw7pR5WNunDigPFRnml0r9b7znQmySYE8F
HBrikT9VSULKec7vKkfzkcy2hSOj3mRgqr1AZzCf/N/7PrDSlbw0Vgkln8K0
w96Q0C2+h7oqqqXohu9zI/uTZGDwUzX0T/r233hGQbPypXU8nOSTIideqEFs
Pxrnm4MpqMWtU89wuQT9+TXKo6WF6Tl+P2eCfhdSoCqHl/olJg/euecadkQS
kcZOgdel/r1o5OrTiZUOrB7PUYNOQ1p8EKSyzVrQVRIwPHl1jutUIPr9eKPR
OoyM+p3zDsc0/ZPPOnSzQNl9CPpQyhMaaQCi7phwWRxrByNXh2KOmBLEw75v
LsQN4+/TjK9MNp70gsfrb0UV+jXQsUfvY9x4BxKR8Nyqat+PSvl3T4aVYvGI
s1G3/M7VSrhYllJxKZ2E7vgHvZiwK0LbvM20WKzI4BzRdchcJuu/99XH44d/
TVWCSMVRroTXJJQsdVGryrgULbn8OrR4nAwUveVuXCO2nmqkxaNGszT48Oah
xOSPCbjM07M3oHQGxiqu1+U3zsHwC7fJJXEsXpR/1dpa2dADzLniLVEqFUAJ
DrjKs9aJbH5YcPz41YeG97s3qztj/nZ34uzfOp4ueJNbKLhWHI7me9Nv/Kjo
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
a7ZzFOaPrsbJ4vRDhiDqh/VB8S0vE3sqzG+W0A5OoTI1fyxyUdCtwNeCF7H6
XFVrfubLy73QH3NNzIy1DmwT68Tcm1vRvVzZVz5b/rpxTcJV/AJmr4zjeg2U
Pw5A9aALGyzi4CLLQiCxKgvlRvxtLblERjtF60tL/+GzK8R3wrZhHRCwM+8K
s0UzatKtajM270av9nzXp3n2DaYm71lSMjC+L/D+h4C46jDoXP/8sJqdAtNJ
qXbbuXshjTPhfNO3ajhkbvBX2QrLj5K6u7shwJICh74v6Qs3jEHKEbcPEV7j
ILldJSnj9Cgc4d7DbncXe68pPlTKE3qbDO01fzXvfMqET2tj97WMCahakZS9
Dd+DPu210krNLPlv/aL9Z/rjakkg++H7HfyVeNjGSnPooT0RBVlF9l6PICO8
/8x8nAQ2b1RI9jJu4VYjXE8odtBLxaG4lTEph7Z2NMAWMLozsB0MH7Qcf7oX
u+95/lf28OgOwZr7jJxmeT8IjBKDV480wTvJUYtQ+UpU7174U1oF698lN3dY
aKmfAo+ic3X1MyfAfqg3+cm+GSiuskqODZ79P8quNJzK72uTjGkgs5SKDCUi
QrFEVIrmzEKSRJQIUVIkYzJUZkKZZZ63eZ4P53DM55jnKRHynvfL7+nr//NZ
17n2s5/1rHXf91p7bTg69+hQ7V3sPGn9SeIWw+E8UIxW2mEgQ0D6w7Xu3+OC
QOlQUoTPDB50NsyXPbuxeeP7nMyOFBe2QXT24EblSAsiH66hb6PE5YS7Tq8r
3+dCX+2Hyzr/6KtZn7u9jnygxL3XwaaPPJqQ3SGG61163cifWen5z/fxMMp1
YutdFmZ/+5O/pj6PL3pze3f47O1OpMNLigznaoPCiCGNdsFyWDG04y96gPmb
SxGL0LOQVKDfqX/x0zwetZR4KDI3FIB8BR2tuEInSFR8TUkGrJ5iJnTfjqk/
BYKEym4qTOLRSId1PPF7IVwS/VmUTtl3acITlgf1mH11chvPwngFCHS09ETd
wSOlFz+k/h4tQ99YI0Vv9eFBe3jimXw3dr/5xPb5c+lHScB7Rc5UypEEHE6G
ZarxPRDM2BL9lK4IEF2sv70opq8yatOKtbmTIZzzZNraiQmwvuWLpK0n4cnv
IG7l7nE4cTL6eFwnNo/aOO+LS1v/AIy7GljB63Z4knU0oiwXoZ55VbKWRh8y
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
QTi42N/W4j6VhaA0vVAhjIiuesa5ip/A8OH50qUf+mzWMKQy1Omq0IUUM3MU
s6ibIP8CO83ZE3VQu1QSJLyCxTf3+v1K7OfzQVOjbGbyNAEFWRV2TFi6QfJc
8fH+owR4H5BxmdEdO38qefi0MenkCDwnH0YfWadhyZ295arKAkhczTzwPWQJ
dvVvM1fGY/sfWxZHf2Q1E/pYvm7NCBCQyb3yH4Hn0oHGjGatrq0LBMzFxr66
YfXEsDzjEf+7wzAvmxpxtHEAhmfLru653Ah9NCJZLbsr0Jwabd17WaweYetg
GyNA3Q6Kjsst5TwtyHxl8O6lRALi5HF4wBGYCZ8HH/FH/qP/uDJITMxwdwBy
vOlsXNmA8pZkK3Rpe9DadOdpl5k3IHJrUJf6H/1w2VNPfG2WDGxPY2ssliaB
jiZsFJ83C4HqElVZFfMwevNrKAhg/MuBQa3xMa4dPHm/WyfENKLTx1Nr3+d0
o+9TMSoxiV+hUIimN8MP+/+OnT8dtBTJMDaSzCi8OQZx+0qG1RPGoLCQniVj
gQRH2O2a7khj9gkZrvSpO0dgwLNFr+DuFEzEL+KOZszB6QMdIbdbFkB6X9Vj
4UQMP49GbO8yK24DKRrOWuahFvSYmPf2zCUCkowdMKezyYVhjslv7f/UU5II
b0x+2pTDXtnw53wJFLwQxXBPbSgfVeXO258xIkDjHX3OV1Hp/9kvbNqWpLPi
4QR113TpoXzEZ37HZHqJEs/PWsbqZjWjNxm/ZV5UYPmdcTONZfVyD1xIVdjb
HBMCAkuZNl7K3cj24/eCbMMeZKNq0Hj4hi/GdwxSwxM4hoHplEN0+mIfuPp0
rah5V8H4ya/q7Z31aIHGavldBvb9ZrUqzAhqDYHxgM+w5RcCPOj7IxPR+QnM
Soy38yh+L/+Cf7Xln/5YY9UojdXD/XD1pM0v3SN1UMQTpXI9qBkVHqqMUHs+
gFo1pZWaRbH+E7aea3lUf0xR/x1jKuuFTtRrtN475tUMjv1NiU2V1UCT9/nY
13/6i9QGtnuJY/3gdpk5c39vE6jnz7PyTdciahqm/Y+m+xGdrO/UVg8W/5Oi
nfPLS/DwtKjS75hRJhKrvjD2qZiIVpO4GH5otKP5smINpXUMz2xzMJjfoiNB
2ZnpQ/20JFgQkGJyaiPAMvcBwbS0DBh8V2w4XYbhz7OtmUfCa54iYuRs/2BP
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
H1p0/IJL8DiU53J4WoutF/lfPeGlj8PqB1IVUuqZfONg7KRQYF8YASWF23VE
h5fB8Hiv4Okr7bDLd8dMWD+WDzJ9H5P3ascA3Dpx5ti7XQMgT44cNqcSIaZp
6tC1QxlgpUXsPhuPxa8mPkbViGRt8owQ4bfLzbVoLqrH2ySyC13Udi8+2PsV
nZu0sfuXgeUTFQNGBXHsuTD5fjuT6Sb/5aXbR40QjgBDXJP0lQwCrB6a65mn
YPwX6RoGf5ghwbkYY75K+jzgHRb6y3oYj9CsCalquAdZNk6TBZ2w/MXHThoG
+rFeMKadPdwx1QgaY38uW7fXIJVrTKJ9v3vR0/AikX+/se/7zfBRUfmrOqA4
DK7x7MGhzkd/21Q7W5B7oVDLW5820Ah8nfBtBMvvfJS9Yy+hWQDiz7i0ZU4R
0fawsHBrKz2kt92KwKxFBO2X3KI0Nlh8sveKVuOacAZw0VoVX2MhomuhIQLr
u7PBynHjA/0pPKR9fZOZ5YvN5x8rfMrU0oqDgfKbO2WEytAbhgHz6mES4vEK
qhPaV4m2/xX9FjOF+Rcvb9Z/X79mAbGXo3lNmIjcOyV3qDCkwE41GdEWOgJk
MPI0spph8jB2rWJSuKEH0nSKyFMc1UBh0FMN621B+7lhcN69D6l0nyz5tgWf
TEj61ZlkD0CktofttV+DYKKGS8OHU8C4uJHPSRYPK9RsysoE1s/+s3l2do9s
DiiQms92niYiWbqpqrzZGGiVZXRheEYA98j89RpXzN/JaN9WlIjYxEvOby8F
O5Gh33Tq4khaG/AXOGpL86ajt8+zabhNsPjP2FmiAmH3Jl5i+86+JpEPVOcA
Fk0SDrXHjrff2d+LNH/YGV0vwd73RqobH4soFdpL4onMP4ch6VddL8/iEAyq
LC+kllKAP6ytkYDH6lWc+/W3tUYUAmstY9rlzfskiD3StVv1R7Zn74RwPSPC
PEnitKowNs/87mW/CY6SSIhefqm9rEtAPgQ6egadShg1Yv1xfKkVosOorQfl
sfz+HhHbwzWLVPgak8ZGYhsDa9xOtS6mKTCRHVsUOz0DampmLIqJmH2L5KPq
aSaGwAXV4i4uBgI6/NSRd/hvNbT/cWGcnWiGw8r3j6jdw/jRnN9YRrD4Jr/+
xkSS3T8OQRX+Et+UZiDAcl1D79MchLpYb/BFYvbwrxg3V4bgIBR65E0/nBsD
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
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`\[Theta]}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8852257482442904`*^9, 3.885225754182253*^9}, 
   3.8852284235000467`*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"d471c016-532e-461d-acb7-fb5cb1a6509e"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["\[Pi]"]}]], 
      RowBox[{"-", "0.01606170395913843`"}], "100.51925830608036`", 
      RowBox[{"-", "0.00015978733060515295`"}], "0.9998725140594036`"},
     {
      RowBox[{
       FractionBox["1", "4"], " ", 
       SqrtBox[
        FractionBox["5", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], 
      "176.71164661998768`", "98.47818998461157`", "1.7944241932919465`", 
      "0.07277569976768114`"},
     {
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"30", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{"35", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}]}], 
       RowBox[{"16", " ", 
        SqrtBox["\[Pi]"]}]], 
      RowBox[{"-", "131.01188981806513`"}], "72.08373780364167`", 
      RowBox[{"-", "1.8174957876760716`"}], "0.06917116359292254`"},
     {
      RowBox[{
       FractionBox["1", "32"], " ", 
       SqrtBox[
        FractionBox["13", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"105", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"315", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
         RowBox[{"231", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}]}], ")"}]}], 
      "80.56039298953237`", "42.22580324374725`", "1.9078474961032663`", 
      "0.05643955939374573`"},
     {
      RowBox[{
       FractionBox["1", "256"], " ", 
       SqrtBox[
        FractionBox["17", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{"35", "-", 
         RowBox[{"1260", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"6930", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "-", 
         RowBox[{"12012", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "+", 
         RowBox[{"6435", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "8"]}]}], ")"}]}], 
      RowBox[{"-", "36.88665689538956`"}], "18.66726009200401`", 
      RowBox[{"-", "1.9760080865423684`"}], "0.04818131985629979`"},
     {
      RowBox[{
       FractionBox["1", "512"], " ", 
       SqrtBox[
        FractionBox["21", "\[Pi]"]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "63"}], "+", 
         RowBox[{"3465", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "-", 
         RowBox[{"30030", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}], "+", 
         RowBox[{"90090", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "6"]}], "-", 
         RowBox[{"109395", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "8"]}], "+", 
         RowBox[{"46189", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "10"]}]}], ")"}]}], 
      "9.021706502464614`", "4.924762234037005`", "1.831907018802245`", 
      "0.06699501911616744`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.8852257482442904`*^9, 3.885225754182253*^9}, 
   3.885228423506316*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"4f305105-2873-4615-8c3a-880247206811"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "SHtestdata", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fit2", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Orange"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellLabel->
  "In[417]:=",ExpressionUUID->"b750d690-b959-46f9-a7f6-9808119b2572"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1: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
qOcfr3fkOcfrY9k/YnZzykFfVKdTE8bTvg339f2dPqRD7T/HQV74UOWz2/6p
UQP604vchPi5x+fBWs9Czwr2ntIN3yfRXI+LuX9J5vOc2oCaPdj9tdMpvj+W
vtg4reWo3xvt4/c1oLErtk49FL1F35fCpU898Vo2Ud/XN5s/Lc7z4oiWN/8s
u7UyvQ7sGy+S6nj5NS0/Qk/m8Jgbz/YJJdCrMGFgX+a/T6CVG/rNeHrovt5v
N2s1Xnhiv6JpQMzrK+9nPeHnxdBwn6ylfKbf0uM5M89u7Ohzxl57P3/W5+a2
sEccSb5+YYY+bytnrP/s78P2nrW+c0teKTij11F9P09uX9x83sHdvD6BtCNk
k/O877hfkXRqbVdLYxp9N+D48CzlkyH//Ojg1Qtzx8Q91vKlRNF8w1pkwv2O
oh3XiuZq79JTr1/mfdksEbhCr5/n63fXW4yfw9+n0MCRS2jhyefmvpQZ/jJ6
1yP9fJ9e2zofTUnX86/lmS21V/bXWh72mrek4u6/8b0vvc0y6dbRUzgfEZQ0
qVXNOeehb33peyGb9OIOy7wwXjH6grvu6vGnbdl+IKg17lss1cz3xwDHHCzP
LHv1deCYk5vGQF41IN9JQ39rdesw/z6S5HBG3uDxRVC+Wlvmv12J/XOiTSV3
1Drdjs+PZV/kpzaWiD+i5dWGvb3X+HZ4qPWl2m/YawmUtD7s2/IBb/Tz17kI
lQ15HETzVro+brUL+2dLwhqZkcD2l6Wfqo7a8yu1YfvV8gfH5S/TvtRm7G8w
Ce/sZ1bYk0lU9Ob5r7Hpz/V+9LLN/Wm0O+SJLdV/Ub7EXW/cN6ILrdKetqnB
8teyHxJ29onocx/6rxyNdRIG3B19/oPaP3o8YCT0gRc5RXY/ea7TBS2fXz6q
XyK1AewtorJLLpU+eh72njf9VqfylGctp+n1CxtdqU/xY5h/KE18/KHs5Y64
vx60NPsV+35+8JfiKfveZreXnIV/mkxn8p/Ys2s87mc87bTd6l2l+GY936KW
dC3WNUPL1xxSYMGerEupQl04YD6ONPrF+sHrf8P9DqY/qg5d+jgN9qsTxd/s
6f/uIMsH63xtP9JkquML1ueWf1hs+tVcrSus4/fF0Z82HQdnPfZYj2fDFaEA
cV6qU5eDvtGLIqHPiIK+B2+PPHFG73eTgM13Lrd5rd8/ZfLWTStLs/y17MUG
V/alFyqN8YZQldhsS6e48n5TMvkecx5YMDfLD5ucNKbs729SfA7w85xpe92H
M//qbeRHe+EONH+u92tulqxdP31L0/uRJB1Y6MP61Kxd+ZPeuSBPo8i26q34
oO+H9P3JU8l2wLjdGF8E/ey1MWX2Ozw/iL6enWLjuB33xZ2qFqrwIP8a+Cch
FHquTOtsI27p9R42+Om9I5XTtLxW9vlTL4x/767x2d8V4fth3Z+Ogc61el06
w78PI2me/cXyy7J3//4xLk8On/NanmV1sW224jXbo9Z9kuqp88qD2F81H4y3
Hr0Ux6UmyytrPV/kCnVf1A7xjBh6mn4rqs75g1r/bXhnV/T9/FT+HESTd524
PNIO+oeoz+Nfsy/oC//DnuMHB7V+7CUHcFPPv/S6n11n1d6oz49af9gTgTR7
8OlvX4tjvKFUcVhgycB1xp7pIQ/8Uy0vSqe0cLsfmaGfd3HAslG/rIX8bsDn
87ne3+f5mv+Re/5B/Tngys1TD2xPeeF5Sj+laXmu/O0LWj9lzEjwfVQG99eT
phbLmpCv1mH+fSKdfmDbu/sE3g/Lf7L2wvJgMJ5QOieOTzvIsyAS3mfYEZw3
B2pVZ/P3XfVh3/rT4zpZpr9/a/RPxLa1kz5MZf/BWt9/CjZct+rQA70+whrN
OAN5HUC7sgsNnK4/9y0kIi64n850IfhtySZ9Wb9Y9tey+p2tK/5G70e3vsG/
b0N8wjqPhx1+KVsg9rXeb9ua7wdtqYb99qYhP9e3OBEA+82Nrva3iZnrDHni
QuI0ts2F+JUHHT1fyHXj5od6vko+It4SRmGRSY8ytRyqP1fLdrfx5WJpev0t
Z6ruyjOwF8LZPoQ8dqD2T3+sfn/5ppbf7aTBb+7r+uhfLz3LZ+znHkd2+M/O
C/0XTGXuzN9+2w7750192zZdm3Us3m+N90ANa8qInznRqR4HFpaoDfs5jqS7
sg77EUk3N4uAZboevwwPVr+l9ZnSTw/1fnqt/vK819lr+vmDqwiH9Lg+jyeq
uU45MxD3I4zsfpa3PBD4rzHU4e652NJdYH9E8P2Ef5ZAKQtyWEvG+2PNX6xm
8+YvtP7PmUV45Lg/7nRLuMuFX2l9LKRpvfbQl/7kHnFpcsN/jXxX/jX8lwDy
nrO5tasb+1OWf3c3R7nto6fCnoqizStLWx4Y3hfE8b5X+u/Ved9m3jd0xL+5
7ODPEb14JSYI+epM4fm7lx10FethR3XL9d3/I/2Y3o+dA1suD66G+YdRaPII
52vHcF5COD54W6+3sKYHn2b/2LIn7lQTEo3Pi+WvjRLh6qEv9Xr9vnt52qRd
kN8R9Lt/3hXNvsFe86GJ9SckjY28rs9LrQtD927t8UjPf0aDlLyj+8L/9iZp
Li3n/bT2p+mLp+H+1RE/CyKPX9+cv9V+5EGMb0LFa49ibWDvB9CO23YO1/98
oNerW8C0L9mb3NHvW7x44JCxhRFvjKEmfVsFD5qD+FgEne+UxdNrHOJFRH9b
tyu8Oc5rIMU5eltXnvWDZV8OPy8CivCfvUmad8Hwnx1pzLkTlseA9Y9i/XVb
Py8tl/CIIG+dqIk8QBw/svzTZv8sPNKvN/a3PnWWBgr23522DMp1Z8/cu1r/
+FjWZ9Eap7V8Vv459HsIXS4tJNJOfb5VPAbyOITPD+LxodRMhA9cEG+pR8fv
bB/W7yLiyb7s39/Sz1f2GtYnhcYemd3kXCasrx/r05d6vwb1FxFlY49M7y8i
xrhvyZRpZNTyVr+a+ymij0NvXNfyO+JNT2vJd+v5Hk7t+vbhlBN6fLPCCo8L
eXFWv88ShpaCxPmvRI1WTp5x+jbOiwtdFu72C9g3wdTsyJUaLYvv0eudW5gT
p3Ffie1Rc/69unn3PzMP9qkvdW09+XU/L+gjP45H7tP6f/a70H/2rcZ+RpIM
F0et5s/x1FuYZ6HrtX7alygcmA36fHy1pCe1hL3qQ0Ojg+cPqgJ/qiYV83W5
tAH2lCWPpfuXl+N5lj5R/h3rT0qhwCzCosH4Pcjl2rH2DoOuaP1dSVy3cezv
Wu+LvlWyX7O6iFf40fq/RIIE8jyQlm4sdy7JIV3vl0xvdXqp59+nU89rHfYi
PhnA+QvYR5WIvvT5eqIv7ms0Sfft3tmD2M8i4WIHrml9MqBYefdbzpBXsZxP
w/2yp8sdm+Q4X/yU/lxKuJOTWD5Z9vnGl0VfjWgP/ySGvsy8O3XkcMQHUuiC
UOehiLcQxXp1rB7T7LVeH2G9x06+p+V36YnFV40bCHvQkRxCM1+9uoXlgWWf
y3BYFqyfN50X4mIex48s/1aGo4rx/bDsXZGN6H0C61+ICtR33x8z44r++1zt
XWY+WgN5VYlGjun8b5VCuG/VSbonp/bz712pRfe1T5d9hb535PgMy4NFzcin
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
NaNLXnB86diBjGBCPF9h/rrILzLs8+BHXU7z9+CI1OOJo0VQ3vD/w1utno38
spRu3Z0ZtyvC77X+iX5Mo50PqGeU0wWSYAKf0Wh+Za4HlimCfIvDfXCuGIji
/XrSK0ynGIzzup6eZTrAG1jPFfTmIVxBR75cRx/8XnLzb9+j3xAnoT8Wrgrz
9eCFzDhYHb6vqwgEIV5qo89eY4AH7uMsypMCLNYLmd4Nzoe06W1+FH7P6kFV
n7mewt5ikPpJGG/Vq3W+murVbgj//mCWXyhFfltpfnGOp5vFdkVnwE+ETB/u
k/Dz3hJQ2O+j83C7Z/qef8Fk6Ke1mV7fWPu+Anqb5TUWOP9J9Wzc/1jjKehd
VVt/Bf2NpJ2/qK80k8gLjMH5laRRSVbIXRc+X+M5nC9dDG+E94nRs2x3caGd
x6xPLfxExCt5pt+Iv2/Yll8d5RNPsbxJN/RHMukPlnv4N/A6DTSW5Wevx/dV
Gj8I8U+O+Z9MC+N3/Sv79tzzVOATe5sfJuoZKZJwYo3r4SreFfitOhL641de
H9DzfkMYT82fng/7WfU5wacst/o59stAulgAJYgvC0zPGvWWHqbvBP5Ys+nT
IJ/Np8mjGWDmfqyMhph+LfiP4JPivG6ifiJw6vw+xT96/UX7X16/Vr9w+MnW
mF6N+8GK3cUeft8q/tHzYcVzbArzpX4Nnt+NZPu5fyx/i+IpjZeQbxZQNz6+
Qz0/SSIf/seccD9qPIp4vpZYnWUh9Fuivxd68kA8T7vVz4GvgX44/AoKDT+A
8ckjaWc9hfioZtt6UIc28+PA+R43PLrXazV/QHzZiebwcD8/OYy/6gd7PNFD
AEzIr4qtn/9emL/VbC99gtfjRD7lVNRj0iRyK09jf9bTKKYnvud+zlrfRP6a
QZcKoNz9E48WQJvzh6cfzzsU5/kA+vwsJtxbf4GaqS/Tm6+DnksV7T8zNv+7
H11PWPs7dl9F+0/7pY7/7cX2Kn1wHzbRRoa7voz7oMTw5Xi+XGI2SafPMd/l
RPuxgjPwMUnTF8X5UWH8c9wX8A8BXqfMPh/5SLP1V7eE8VW95RXh/bQeDb5y
M7F66isT3Y9Ez+MPw/uo/tuYMP6ynE91fASz6XYN/rcNhh/B++UZHtbXo/K9
UW+NmR+u3zccfZy6q/vJvsNyqeuRL+XQTyMYgAq8fz/rZ+E87Eezc7iC4P7W
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
vugfNpPQGQbg/E5RTAzCMF41Fl+j/11i+Ausr7TxbVxvirPn7ANdr1LsGb93
vSOtVyI+zDK+DcavkU4QguPa8PvoZWfu+NP68P7PfLL17N/Bp4ziGQmHX5of
9gOrDXQb5PVWq2+E+dD6GOa7l/nPg59SSSJPdpj7I3cXw13EjzFaP3VJ/4nf
vh7mJ7NlztBDbkK9L9P4l9CrbSKRewr1jN60y9gdo5QW66Gf8aXQzygy/VLc
V/WmLwF9lnb6keEN3cGfjhn/C+NTbfrX6GemSORZF3p8pHoZOM/3N71Q14fh
7lXxjpifXNPjwvuXm74s7q9aKhHCwvvh593Zbrq/4xWE/vUf5K99iNkNt98K
fmat1dsRX8TND8b1TPW8WxPe5yEudw7A+7UaXgHrt9HwdOvC9+dG2Wx5AudF
D2oRAUz0C1pN3wH15VZidtjYw6AvkmfxL877OqtnI/+rJ0mPf3b/Pa3fIB7p
R+yesf2ejq8V+/jBjg8/TACi8Mcq/R+99TrDxyH/ajd8h+vvKv7tq/D7X+5l
QJ7rE6i/t/H9o3hS/Saxn9N049GHx/sGPZty6iyCc7iP6kjSubvmh/FV/jPi
r2q6Qgqi8JNvIZFTynU+u+JpnC8l9I4/XL9X9epdj0HjX/RLq6w/fF+4/1kt
97ld8TxV1Lr5hInH7IX7OkH3vMMJJc6jTFoxngGHt4X52FZvssr87VDvTJCE
/29+Gv5e6FS3on6QMv2uWWG+tN+P9VVEnL3HJmJ+m+hoCdCAF6snsefc7PeP
+gGjnlRBi/i4Xo1+5yC6RgAZVk8ZnjQ/NuyvWvPfRX1rgI0f8qNKiwcQbxWR
yGtsRP+s1OIl5Je9zB8M+tQ1xN2IrOuAR0+SXBdV7g+ieFzMR6b5aaF+XUjj
2F7oMPczVf404p9cKhMDQeAr+9BtXC7/HvlOs/V7kF9WGt/H8amKv0I9rJ0+
Gc4CuahPF5genes1aH/0Lvv7lPk9w48xbv7yHi/rfnG9TuW/oP9UZ/x+4I0b
TT/T9dYUHw48QZPFjzhfY3b+uj+n6l9hP/QwfJbv55IkPwHi73y6i6fvCfw+
nwSedDDWY1/rRyK+qLXzHOspbfURnGdEuZKAOR7sCJaDugb360B68EJ2cET/
tobEnepz9AfI8AbuB7e9AKTAT0hSdDgc8EIW9BObTQ8Z92MePf4pG0IC71xn
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
oK8v+PnF408BH0gFFcvADOZLY8Z/iP5VO935AQuiTgs/a78P57nM+BAxX5qk
o7rPfO2jMePC/isfyC3hPD7+BBN4wJ7mmr4E8MRNhgfF/E8+zXlvQHxO1qvB
P9zA4yb/AH97m/mLz8LzyPj8RMSzqXQDjydv2x2+X/vJV4TvG7CnKODYzzmm
nwQ8WglFwfCYh8phLxPGl+DzZqqv5PVK5QdGvFRt++X8CrVMV7oZ9jBGIleZ
jfsxwOqFeJ7BxNOLF23ZGX7WeUPYzyqrx+H+DCOh40sfb78vpclbuAH3cfhZ
52lh38uN73V92A/Fr+0O+70ny+fNQT2zgab1YMQK8pkasxeI15LAQ4X9Uf1V
10t/memsq63eRi1UNeCPE377Ees5lFIEAIb4J8X68xfZ74usP4J4YqDpI0CP
pIVOEwJp2I9m6i4EWMgv6gzf6vPrHzC9TE/US8pJ4F0X4v7k23y63f/o+TU/
gP1NIZHzHf10eL4VTIfyAPKlGC1juPuxb4T9Vz0t1GvSjI99Q1iffiIohfia
iLv1r853PQlJ1+8E31TCnhf9nxKrFzheQvVVXS9O8Vuul6b83ohPikjSXegB
RvZX589gn3LoX/UsALTa91/wruhXDqBcIayD3kyCcgWhCftUT4ym3rJxZ3h/
nXdEfbfa9GPAL5VBfLp3duC8NxGr+Rz36KawnndPYgMJPE8VsTr3mE8QnxXT
flG09VQu7Hnc5g3x93Uk4xPnenwm7aOx4PuqoEt2r797Y73r62j92fd3pAgM
4edsEjmOy12f8nppuDmeXfWYt4b1X9yNG87Yr5jNd9m/Z/wM0xkdNT+s7zcP
3f/Dmf2Qr5YTq01f8yHuYwFx9aWgi9crVO8H9ajhJOMd+zqeS/vJzpeg9Qvk
N0U0YvEe43KuwvoC7+980AeLgPH8sJ+Kz4CeciUxm9G1ezk/tIwzDcH5byCB
R5+DfnSCYtJgdf7vh5e/9XPhLT4PqPgMrG+25UeIx1LopEuZIe46+75Wy++w
Xgm6neG6y8yf9hpl81CWX/QaQdu4vJYPPE4h3cjjXn1dD1zChYvRr6wjnuZ5
6VnHDz314j1vxb99LTyv9pO9/li77uPPB3/k/XudX0G/LUky7nIM7nOSBgvg
Bvao3uZd0X+M/U89OGF8BOjPFVt/CPl+lfF3o55K9M8kE3hjP2pND/6J8Pfd
xGAin4jRnO6sCO/6MVrPcr0sSdf+A/73NtpLCFoQT4P/B/6ikYSeZ2+P9zrr
nxZZvId5ihbawPQso31+Sejptzl+UPGXjk+TdsHfgT8roV1Hc8PSz5vikxAP
D7J+OM5X3OZlNof9PWDHkOiGYv4nTgInOg7+v4FKRdDK9Ww0P4K/TRo/q/n3
6H7niRyc1VOp0eZ5dobn13jY9dekfPt4R9gvnQe3fkVHm+kHYh69iFid6Kt7
cf6JeguhDexDPkXB+pzEJNfvbWK6znXwlymd+Q2j86J6R66n9g3DQe+fGM7L
yGO5Aww8bH/jk8W8RMz4Qx3/zOoafyrx/qp8/FeYD0vS9NdZ0AXrW0OfHcoT
YcvCfqoeu/cHlS8M56fY5tfAt9pAhwgAc1bY/8hYPlM3BflOJZ0tA0jol9Qb
HhX2lWjUmYzoxL/PM31f3OdGkvDkI7wPWb3E593X97vy0jv3WBF+1noE4p8q
m0cCH16Lyo8/Bv2yJAl85Bngs+J0uBCaof+XMH0lmz+Nfv9gFB3dsd30EyJ/
qfU5nJdWq2dOC+ul89fgo+4l006vT0J+k2n8dDgPhSTh5E/A45bSUCEgfSjs
v/JDfRT2U/MZ8Nc003NM3/0m7EsxHT2ux72pK5CPlFLaih9nTMvcHN43cl4T
jh+F/miR6YUg3y2je99iwJ7rU6u+u+t71kgDAvYu3+oLuA9ppvdu9z/Kh7Re
DTxLnc3ffhK+X/Fx4IduNvztjHC/hyrBQvg+PX/I71KoH6snnwL7mTQ8hNeT
W0XQwPtrFVze67cy7Jfq8WBeopHOkYIo8PAJ4umkB3uBr6PZ8N7A//Wly0Tg
bUNY/5M5HNtvS/j5X+czIw/mr5sMv4B6ZQ9afHeXrJf/hs9roGwef0zDfG4p
fc9w4PdwnuMk7bNDbw3+okUIdZ2/V+gKnkH/opZErunYV8N9kvZD4bhgL3Ve
H/iTJJ1+88WPDhuPek6r6Zc8H+6n8oUgH4reRwQYcJ/q6CoZ6Ed9nkjgaIHf
udrySefbUr5RxIdtJPRdLzn/o/LjID5qtXje+3fK1+j6ABpvuN6XzjO7HqTq
lcDfJ62e/mFY753N3LEG3107nS0Dtp+E59f5V+SzjRYvbQ3fJ+3QP8B/VWX4
f3x/huk74/3TSeSL0M+Kvu9Mpu+oWhnWR/n+4Q8K6eMcBghiPmio6bngfUqs
3rk57IfSSSD+zcM8avDXWt9cG9Z70CF371W7DvxzMauHgR8+SdL+XuH63xr/
fRE+7wQZKEE/qdrqPf8H7yANuvfD+zN6b0Ij3j9u+CTXV1d5dORrMcNz4D42
0CnTU36Zvg/y/RQ6WAaYHJ+i/UXjg4jiv1tZ3v4xzAMUG385+GQSNI3hxLsR
n6eafuuXYT9U/9XrjU+W8gS087+rXg/qJYMNv7wl2DcJ39ux/zk2f4N4s1Lb
i2Xwj7nW33c+ZOUjdDyU5vuwPw304BIuYCP+yaBz5D/wiWUafxzw1CUk8htn
ON84VzsXjEa9uAcJHWEL7G+V9Y+vCJ+v+qd3B//K6tr3nor5o4SdH9znSptf
gr1N2Pwa9Grr6W8zy/NLH0P+m7R5je1hv6ScMP/1sH6qV4r65ADTz1kZ9l/5
apGPxknoBD/ZHd5H9T+hZxoz/lPkDw0kdLQjHJ/ftYAR19iPDON78njlex7X
OMrn95W/BflXmuX3OO+Rf5zQ2H3IPsh3UiinjDu2zq8j4zHQb47edyzTf/0X
eJhyO6/A26Tafjwa/EWn94v8u+qfLA9/r/qcqKeXk9ChjEY/MGn8tYjXK0jo
fhbgvldS7O3aT+fOdP0rrffAnmeT0IdMRzxQTiKXCf8fnW/Fq0O/sYmEjnIT
+DQrbZ4I9cgcm9f8LOyHyB1nPBPOl/LZIj+I0QUi6PRwsG+qV+t42u5CaI/n
LSehC3twebB/PzLbzF6ovyVJ2glrHU+k+kuId4utP4d+UV/Lr7eG51f845Lw
71UfFHxTVZavA4/dRkIX8tua8O9FXizH12vSVh4QQ/yeMHyK90f6SkDsfA0f
j+GJe9izfMuv7gj24QGW/1kI/Z0qOkkI3OBPiM4/mxkYMJ/caPhOnKcSw5ub
P6Z2kvG0AnxfX5vXwXr0o1uXr123/z0+z6L5m813R/G26htvCH8v9Dk7wN/T
TD/ex4IOmN9OUPcSZlx3/TfVA0R9nKibFMgQzxaZPi/43hpI5OBP9Xx1DsP1
J8K+DKZVXJ798Un7ubfhJRGP1ho+3PMnrUeB7yfP8NKIh1uNbwP+Jt3m2Z1f
XP2T6/eovvXa8PcC1/8V5y2bFrStWnHQ9buCfVE9DcSjgwxvgXyw3vRNnw77
q/PRwGtE8ZG0Y6E/XENZuwdFFgr93nzTt3H9N7XfXm8XeY9U18vJkoLt9rBe
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
      
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwc3Hk8FV8bAHAVLX7RXipJCCFUlmg5Uyl3iFBJ1hIlSbZKsoVkCyFJsmcP
hSzhRLKTfbn27V7bvZRKlnif+/7l8/3cMTNn5pxnMXfsM76nZbqSjY3tCTsb
G+unJNo+vrw8hYvYtAVj5inEvTlBr7n5KeywLYnXeplCZGYdEp75PYVXpNN0
DrOTxGFRNWPaxBS+6n6914uLJOQ3eVBr26ewSujCwrO9JEEM/ah+nTGF+5xm
PHsIknjydtksOGUKn/xQlVulRBKlV7jWPH83hSONA08mUUhCqVb0jOubKfzY
9njwcQ2SIHOMPt98NoUNL3WeLDMkCa1ndalHjKYwfnCqzfARSQSf6iIP6k5h
DzeGj70jSbQsjNKFL0/hfVcmU5+6kIS2FbvQLtUpvDWoyN7hKUnoXT0WwSY/
hf8eoQk3BJJExBZScf7QFM4M1hZ5FkwSvXXaHTMSUzhgmbb3cChJXDtts5Uu
MIVtW3SQyRuSMBFP9qvjnsIfJXbsO/aOJN6NfBKrWDeFbaZ21wYnkgQtqqzy
C/sU5t68d6E/mSRub+1nz55n4rPNq8WvppOE5b/tTuE0Jv4iYvO59BNJZOQK
7Q4ZYOLADR73SvJIYtr6cP7zbib2W6t0JKeAJGxoar9dm5i44I2PlGMxSTz8
7nH3VjETf745Oej9jST8Jh60/8pjYp0CCyXtCpKIXXP7lFsWEx8J3m61vYok
apHatrdJTHx+xw1nm1qSGNRDLmJxTCy2RfE5dz1JzD48NJb7lol/dMUWR34n
CYHMbUVNQUw89+TGwJsmkjhau0bk2nMmbk6qXVrbQhJqo3OBjGdMTG8fCzVv
JQl7/l6TtU5MrKErEfBfB0nUByasP3mLiZ19d6yu6CaJ4bSwBzXXmfh5t5cR
tYck5ip9+nX0mbgo59fgYC9JCK24l22rycTCmpPFzf0kobjnOt+K8zCe2OXT
hQMkcUHhopf/Obh+53gp4YMk4WAtr598jIkHtstIyA+TRODzA+VyckzspuUs
9wf8Lnm3dJk0E/uk3eNJHSGJgm9c4ZriTBxcEEG/TCOJhoHlVX37mdhfJij/
D5j278ddC34mdq9tiXtOJ4mFncPtc7uYWGv1wOddoyQhrFWZunUjnP8rvpod
YyRx3LJgWywnE3sk8jGegTV90lykOJhY+fHTICb4ZkLkWOEyA7+/Gt+gOk4S
jqWBF1XmGfjH3a+FUeCgXrei9l8MPB61z2IcnDhvJ2I6xcAilr9mxCdIonD7
rRc/xxh4sfzWbRNw0+GrCy7DDHxo8O1AMHhUXdWUq4+Bq3ZlWBeA/5mf+B7e
ycDuVcmSHeDNz6QURFsY+Alf0EEGWDRuX1xOPQOfX7zuPgc+gbdwnaliYOGm
tWf/gbW6OB42fGXgMw/vPPsLNpud7TcoZmBrDhOjCbDTlnGViTwG3ppTMtAK
DpLqzrbPYuDAXIpgHjhJtZ5vdToDe279eDQIXHTri1dwEhzfI1Xu/+fv/vEn
fxwD26i1H5JknX9UvH76Wwb23lt7chrG/+9zaPmxMAbm+7HVJgW8ucNLuiqI
gdu6pPv1waK/HMK1nzNw+1zQ2zXgkxvvsg8/Y2D707HFKXC9L0oYWVq7wfmZ
5V85BzajaHYsOTJwTY6wExXun7PJmdN+Dxm4elL8zC1wiKts2k4bGJ/gUtEk
3O/kCJHtiRYMfDL224o74JaW/8ZLrjNwfVOIjBbMjycmOcWp+gxcF/fB7RvM
J8lfhsEvr8D460VqDoO9tnw8fluNgW+tpvsuDMH11dIJ2KjAwOW11ABlmL/j
AytM5o8wcAT/ETs/mN9h1qlHhyVh/2+uN9f0kcTPwKWBXCHYX0jWKUVYDwnf
42WMNjLwi3f9r9qpMD4j9XXkfwyM+SfW/+wkCbap2Z7DqxlYXsTfYQ1Yl1v1
2erFSSx3LcFJsJ0kNqj96HxPn8Rs01VN+5phfVafcFksnsT8BVTus9UksV+X
fpGWP4mVLQsVWPGhaSxQtCEbPh8YvjAE8UNi3XBjXMokLlFf+cga4suAso+Q
augkzrhoqmP0hSRUvrVVvb47iaPYr04/zyGJPV/ubZXnncSNK3cNhr2FeLNZ
1k5xxyQ2WZHF8V8ErFfT+eYTmyfx6rYXYw7hJNHG+TRYae0kvp0lIXjpFazf
y+GbtX5NYF8k9pEB8XjVRNnGu7UTuAc9yq5wJ4mxbbu44hwnMK9oyUYzM5LI
uVPGsaFnHBsGNJdkSkF84rc8lNA+jm8k9+4qOwjrvWWHwYmmcfw3UpPWLk4S
X07cyb5TMY739h9jWyFKEtUbNt+o/DCOk202W+ryk0R/ltGXJ57jWOD3Bb0j
m0iCc3He4ZfUOG7Kd71ZOkMhnmfGJ/iKjWOJkieZsz8oxEZT9SaB/eP4ptDb
WMlpCrGtPuaA5q5xrDR2OjpmkkLwR1M63rOPY/Nb7sMRIxRCVilU9lbnGMbK
602n2inENb9D051uY3j4+MWXcsUUwiE7yLPOaQxX85E3qwopxMvuGd4S+zEc
XMJvYfiZQlRLfCKTLMdw944x0YA8CnGkTjHuge4YrtiUMPxfFoVYza2kveXw
GK5pD+V/kATHl3s3ufrgGG4X1CYlEynEMcPV7vMiY1j/cMPY6DsKYZVemTGw
ZwxvaQiNNo2jEJ3qausy141hSXooxSmSQqQFaBeeHxjFi61D5qIvKUR5bq4W
0T2KAw46J64LoRADfTxjR9pHcWBbbAAjiEJsl+7atrtuFL+Odb5bFEghXBqM
7o3ljeImcfZkJz8KobXptoBn4CgOm/hw3M2DQlgoVOc98h3FfDM/9APcKcSz
6+IX7nqO4g/3d6lHuVGIwg+Mx5ccR/HAveCUClcKsV/LplXADIwPOik6UYi/
QY+9MBrFms6/h5MfUAg6b8n4OcVRvOHnlH3LfQrRlrBarV5mFHuPWT5cCc4q
eLGp58AorlQWzTezpRCWg4nh81tGsbLZ2D1DKwqhb8FYfMI9ijv1aPbx9yiE
6p/DRuvWjWJxwblfDEsKIcpZLMizRMelgwak710KMXSoJU12lI5Hna7YTZlT
iKbPOzcUDdKxflGGiCb4y1kja6UecJiR1qfbFCLy6rjsxSY6FvdP4vY1oxA6
T9iwVSEd73rzaL/hTQqh/N+5fX8/0XHIk7ehXaYUQu6lr7vLBzpubpN10Qdv
Sd5O8U+g467K6BwzEwpR3yDRmBpIxzw/51NTjOF66docOeJLx7WqdXVnwKnD
uS8LntKxEOXojf7rFMLr72ndKgc6ZtMpHxEEP3TzKtS4T8cjdMXG6msU4ub6
er6Oe3RsdmZC4j74DP/VIZoJHX/uWZJuMaIQh1Miz1oa0bGw1Il2LzC/zHDi
76t0jGPujhHgJeV7FuwX6Hh/2ufznw0pxGRjdr0vScdbRok3TuAuvXnpLUp0
fLvwmcYZcN69p7/3KdDxnJz/WIcBhUicq76SfISOO7afrU4Ch7pvLJCWpOMf
h9L+cwR7cGnz5onScXQ5b5oW2PbVG2ckSMceroPJEmDjfQP95XvoeCLw2CpO
sEaq8Bl1HjqOqND5NK5PIZCsxbvWzXS8lGJQUg+WxB/WGHDRsXvQNYFPYF5y
9vbwGjrmLDZvjwb/13y89s5KOja+Z9/rD57Xd5OcWaTh76seybqCR2kVgQ6z
NGy1/gLVDtxuxTWz4icNp5g1VFuAy+e1LntP0rCZfjm7GTjbIyx3I52GS94z
nt4Ex3H37gwboGGtgj+qrM+D9NAahW4a9soOlL0LdkuK/tXZRsOb1YhT98E2
v1cMOjTScO/lLAvW8Y1P3/i+u5aGfez9cljnpxVQVlhYTsMdajd2ss7/dPd+
GCkN331Q9jIbfPjAs1dLn8GZh0RrwQIPRj2iPtHws6l99TTw5q+kDfGBhpfs
Vjxlh+u3cmOq0UAqfE47pLIf/FN/vZpbAg33mHLuJsGDyXcVBWNoODGx/dc9
cNOfepGyNzS8lbu75TW49Iz0NtNQGv7w+UJeOTi25+dUgi8NH+s87HwA7n+Q
2KUeZU8ajpfp1zUCuz3MqR51peHT3fZSYWDjTfbvxB7QsN/nx9mbYX5pGXYG
1VjR8J3kVsNL4NOpiq4Wd2i44sn8rzDwvrP/dNOv0bAmydshBvN3Y5Ah5YIe
DT/JLuKzB7P1YdnpyzR8VsZWqRLcb++28bAqDb+zWN5rDeshOm1NeY4sDfM6
TucPw/oJnDPL0pamYa695W8oNyiE67nq6FkxGp7ODj2VAb7W7/dYgZ+Gc+bn
qz1gPe7duvlQESd87lp9TwPWM/d1Wz5DDhreMpm2vhq89L7lv+XlEawibaRx
7haF6FV+RSN+j2DJGs6icxAPIh/zRpT1jeCIqgp8E+KHf6WTtyl1BIdTE0V+
g5239T1Y3TqCf+Wp7PC8QyEMM2I0KdUj+MD7OqcMCwqxZ0h4TW32CA7rXvtn
L8SvCJVDNs3eI9j/VOa0rR2FEPpPpbrBYwRHGrin8EI8TK0xFqh3GcHMmDGD
CnDB+ZCmyvsjeEZLLk7gISsfzB4uvj6Ct3aYnpl+BPH9YtFMksIIDrldmDLs
QiEC9Mj7zmPDePd/t5k7nsPnvMZ1j4eHcWeiec5fcGS3w/5HfcP4iOHUP6o/
hUg3SGu1bR3G/0QaV8VDfqg12iB3u2QYn9yfZ6cM+WStSeufi6+H8akHn2wb
3sB8sLhuf4AcxiE03dH6VLhe/oYRBWeG8bneulBmGoVQ/KD3RfXkMFZxibfd
kA7z8/fltZZH4HiyPXGXMinEdReVsI97hvFxSUH1yWwKQQQdyTv2cwifcVCh
nId8u5TL8VftzRD2n6ufTmmkEI9XpTy0YQziIYX8jqo5yA+vDVdfGx3EYt3b
q2eh/zWW2vJSbWgQ77oXlr5/kUKo6Dl+FO0cxE0ukqefLFEInix1Rm/ZIN40
7iAhv4okso1njFUjBnHyYe7+8PUkwSw5ri6kOojZXez5D0A/fN31u1Bb0gCu
nO5mJp+G/rQz6mRP3ACeS0t8nX0G6qvDVjrDkQM4MfagbTH0xzLDG/1+hgxg
+tHUpO/nSGItRWuG+8kANnI/TaWrkET6htYS5asD+N/ZBXWGFvQvkVTD/HUD
OH/nyjMnjKGfnE2x/8I+gO8Jxt85cAP6MY3HQRXL/TipJNt5qwn0ayt5y1t/
9+M9k7/16abQP940OPhzoB8/85+udLlNEhTJ/gWxgn58bZ3A6CMrknhZNBIW
Yd6Pp/WvJns5kYShfbizvGk/tn54iWrkDPX6kQsmTUb9+Ebtgp8s9N8FSXlS
ay/3453+b627XaG/DvYtt0X9+MXYn008HiQhYn7ol8rWfmzGO/byrA+crxCt
c4S7H7PJXDvH7ksS+X3h2HVdPx4OFTAtAb9KWbv97r8+LH3s05jcc6jfXNPP
KDX1YZX6n7+5oX60OTgf+fNxH658W3Lb5iVJsMfdMBe17sNh+o/f7IB+PpSn
TtbwZh/2++Aj9Rn8eVV0bZVGH369Jc3xH9Sj7NSz89H7+7DCg/BIS6hXQz1f
XL7wvRf3Xw3PWRkF41uc539a1ouJxdy+5+ACa5PJgvxevGX27q0d0STRpy/v
Lhzfi1vCbgfsj2Fdj57Mf/a9WDgg4JRkHGzfJ7o+TaAX25veU/qRAP3h8RXv
w3l6sd1WjlrdROgfXneqeXP3YpfnR8ZKwV+0fAJuzvfgSq1nI/5JJFHxbWLz
vqYebB58aWpbCvQfAmVZGyp78ImjHRJ2YBWXiEtLRT24sLZ2ZSO4/qhaaFdy
D97a3PDIMxX6m9T0naFPejD9d3lMfxqMb+2zAo+HPThp+XDmkfckccXUSM/2
bg8u4tqt9xRM5dv4VuNqD25+VuQllA79wAtr/v8OwfFs+i9pZcD8figj4trf
jd+d4Txv8YEkMlvWV1q2dWOee9E2yWDrQyNmBrXd+GmozKkR8K/xlymKed14
ef57p85HmK8Gswd/B3Tj4k6uzdJZ0P8WfK8fetqNhQoyXxiDnXck3Wt63I0d
eDK/BINXNup8yLjVjYPIEumf4LVKBTLmqBt/zZ29H5UN9X10UKuObDfedkTi
eQXY75/5A2Xxbhw/s0efCd6QuztPaEc3vmCatf8o9C8NW37pbOHqxiqhbwX0
wEFWtXMrVnVj+qqmLkfwdjGnY33MLjwc9v1ZIbjD83J33XAXXmAsOlLBr4cO
OhVSu3Da9+NHZsG8b3uLX5d34Vfaw3Qo3YneuU9GXoVd2GeqdvQsOFo7gO3h
xy6sOlmVYQAW3EicvhTZhf9zOvDSG+wvPeBgHtyFB8pLdaLAfzXcsly9urBm
f8WHLLCxteBkqFMX3rOKGVMOrn1RJvTeBj5fMSXWAZb7aGrw9VYXNjvhrT7K
Ol7T6tBO/S6c/cqFexbMOZNYP6XZhSXMX1uw55KE3RZyzWpl2P5xrPlGcO+R
ccR7vAsrTJpz7gZTLvnaHz7UhcNkK9SEwB/tJD5QhLuw5c5AOQnwnpd1Y4a7
u7BdSGz5YbBXjqXA/Y1dOK+lb1ke/LN1g54vRxfeJnVw+BhY/09mcMw8Fe/Y
bHf/JLh8u1Zt7hQVL/+NyUFgafkZ9vphKt57PSmB5fArISeGO6n4zhdHFdb2
7PayD+brqbjKlieOtb97YW3pG8uoOO2z/UfW8ah5D+nC+VSslhjpwDofpU4e
/hPpVMzLFfBPHJw+l69zMY6Ky520TrDGw7NL78XtMCqWPf77GGu8boqLVS7P
qXhU5NkC63pM6r5dGepGxX+KdjtzgLUfnzyW9pCKY9iqv/2F61nyps+21IKK
42zSWsbBEoWuaR3XqVhszUBaFzi0e98IU5uKt+/21qgBm+8x0d59iopX9lat
TAS3nOAIOCRHxalNOduCwScNEyqUxanYMP/zohN4S9ToUbttVFy62HtBA+yM
va19OKl4mG72RR482ieWEr3cicfLRrj4wIX8d3fXjXXigjsfKXSYj8KnuC8N
9XZiZ1dPxWpw4PUMv7nmTrxnhfbmNLBp7I9/+4s7MaOA28kCzC30oN85qBMf
WAp06Yf1Yq+0Y+fLZ524OK1toAA8aJKnmerYiWnVKcdDwLnv5kvbb3ZiCYmH
I2fA10Rc3kkf68S9mpbnXsH6/CjmZT441IGlaWdubIT1vrfxWr54Zwe2nls2
64Z44PdQYe39+g6sM6wQmgg2LRt/tya/AwcOBFsdA/MYqg1I+HfgeTeRW1cz
ScLpxWadh0c78CPhAzZWEI/G5ScSvhzswA4XJLikwdq9X3+vE+zAv+eZv5kQ
v6TF7wdHcHXgBydvFpiDB8va60sG2/E7PvGLuhD/KH8jzq5/3o57MnVpuyFe
5kTeD7ns1o6JnJdPGpNJQuCs+lDkw3as9OrNC0/wwotl10PG7ZjnTuvOKYjH
6eLGhdry7biMjN5QAPF6q5HIkZiBNjzXKJSj8A7ywbcP/HJybfheW+rfacgX
jhfnlI5KtGFZzpWVUWCeAeK2okAb3ttdcF0drLH4/cNJ7jZ8Z+t/iymREP8P
M08r01rxe9+pFcZvYT1HiZnqhLZiv9T3/yohPxk/ikt2+NOCHXqV6p5Bvlta
PVHnONmCtc6fDTwCDg85/NN5sAVf/bjzal8ISTRllCi617dgKQnVVfLgM7S+
Gt+EFtzLrBynBZGE0EVeZoR2C5zf8jMVyKcjEi8P40/NuHx1d5wE5F8x53fM
0dRm/Erub3Qr5GvL7zkpm2Oa8T2CZ8gZ/Ne6TeCmbzP2DNt8sskb4k3uji1c
15px1u8ld0cvuB+nwmd01zXjTR93MvqfksTjy1HZf/SasKtR4s3fUB98Sciw
4tdswkVVRY9TwOx/sYTKuSasfvLt+mtg//D++LfSTfiixcvEWqgvovv2vVTi
aMI/k6PGU6H+KL8dfz8ovRHnaAd1ujuSxCbnZDnJFY3YRGi7SKw9SXh+Eq3c
ONuA00OjOe6C55mJV2cmG/Av9f9sjoIHjRIc8zoacMGVV7MND2H+noorPZ3Z
gHVEzKvXgrU43qpfMWrAcp6i4iH34XgnePsVLjdAPrA6YQZWfPDGmle1AV9/
bT16HCxAfx0yINeA1zzp4Ry1I4mZylDqHe4GHKphHXgWLLJzXx3b4+9YRkNg
PZ8tSWz02Tv97eZ3/D7iM23BBq7n/J4tvlrfMe/uF9ep4MruXVe3iX3HEW36
Cq/BZtFbRw501uMb7R8c+MAam7asnSqrx2JRztdWgI+6bRLPzqzHBvrrxoat
SWKdCbf1Sa96/NtFd+g9OEVk7T8t+Xq87fJJd2VwUNhqfh7Bery4xvSpFNhh
HceZHu567HpmVpwHrDKxwvsWrQ6nPv1zcwLqwcP6bGkSTXXY1ypxoRW8q26p
/kdRHY7+qCpbAp5IX9jq+LIOa7A3vXoNbtk7L3/qSR2Wp/Z88QQXBv7VXX23
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
AXr+jz3s/B8A+5rrxA==
        "]]},
      Annotation[#, "Charting`Private`Tag$49694687#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{830.203125, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8852259326926107`*^9, 3.885228429366186*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"e1aa8617-f7e6-4e81-b743-265fe969b68b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"max", "=", 
  RowBox[{"NMaximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fit2", "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "<=", "t", "<=", "1"}]}], "}"}], ",", "t"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SHYs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SphericalHarmonicY", "[", 
      RowBox[{"l", ",", "0", ",", "t", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "0", ",", "lmax", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error", " ", "=", " ", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"SHYs", ".", 
      RowBox[{"fit2", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
      RowBox[{"Transpose", "[", "SHYs", "]"}]}], "]"}], "/.", 
    RowBox[{"max", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Around", "[", 
  RowBox[{
   RowBox[{"max", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "error"}], "]"}]}], "Input",
 CellChangeTimes->{3.88522880171769*^9},
 CellLabel->
  "In[431]:=",ExpressionUUID->"edaadc93-b8ec-41c2-81d1-4a83c795a3a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51.84366713596913`", ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", "0.9308576631422183`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8852257875784187`*^9, 3.885225937903059*^9, 
  3.885226148537517*^9, 3.885228452692225*^9, 3.885228802022978*^9},
 CellLabel->
  "Out[431]=",ExpressionUUID->"2ec7f8b7-b33f-4667-acec-3c115a9819c8"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"51.8", "0.7"},
   "Around"],
  Around[51.84366713596913, 0.7314111200418806]]], "Output",
 CellChangeTimes->{3.8852257875784187`*^9, 3.885225937903059*^9, 
  3.885226148537517*^9, 3.885228452692225*^9, 3.8852288020495787`*^9},
 CellLabel->
  "Out[434]=",ExpressionUUID->"83c63bb9-44b6-4a87-8027-0282b2d25362"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"electrons", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "binwidth"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"counts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"2", "/", "binwidth"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "SHtestdata", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c\[Theta]0", ",", "numelectrons"}], "}"}], "=", 
     RowBox[{"SHtestdata", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"idx", "=", 
     RowBox[{"FindBinNum", "[", 
      RowBox[{"c\[Theta]0", ",", "binwidth"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"electrons", "[", 
      RowBox[{"[", "idx", "]"}], "]"}], "+=", "numelectrons"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"counts", "[", 
      RowBox[{"[", "idx", "]"}], "]"}], "+=", "1"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalbins", "=", 
   RowBox[{"electrons", "/", "counts"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finalbins", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"theta", ",", 
        RowBox[{"{", 
         RowBox[{"theta", ",", 
          RowBox[{"-", "0.975"}], ",", "0.975", ",", "binwidth"}], "}"}]}], 
       "]"}], ",", "finalbins"}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.885225797991727*^9, 3.885225809594668*^9}, {
  3.8852258578298597`*^9, 3.885225878158945*^9}, {3.8852259580961018`*^9, 
  3.8852259710320053`*^9}, {3.885226019451571*^9, 3.8852260814316683`*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"8ad82ef0-1099-4f57-a1ec-a82d1d548f48"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "finalbins", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fit2", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Orange"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"30", ",", "70"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"add", " ", "error", " ", "bars"}], ",", " ", 
    RowBox[{
    "average", " ", "bins", " ", "on", " ", "right", " ", "and", " ", 
     "left"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.885225833961669*^9, 3.8852258382732897`*^9}, {
  3.8852260927354403`*^9, 3.885226102637465*^9}, {3.885228671990443*^9, 
  3.8852286751676826`*^9}, {3.8852287103510303`*^9, 3.885228716313483*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"ea8957ac-9607-46cb-8108-fa3c0330a04d"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQbQwG7/df/1cCRB4OM8Hg7X7FFgEnjo+eDgxg8Gb/
cvO9L33fezikgcGr/RuFrTcK7/ZwOAMGL/YfCfwyOeKzhwPEvOf7Tbz+9Ajd
94Sa93T/i1eMu6oaPKDmPdk/4ZaHBMcNmHmP9r+zyvYUCfaEmvdgf2cHEFyA
yd/bH8GZvHnBLC8HI7D5t/c3fza0kG/2cvj3HwSu7//ZxyN95CxM/5X9l32T
BCJ+ejnMANt/cf+rrl2L1q2AyZ/Zv5yfa3X0NE+HFLD5x/Ybzj1aIga0/wfY
vP37k392LIz+6OFgALZv836Xj+KWh528HBogHto/XTd6W85NT4cFEL69LgjI
ejlYQNTbH7cAwh0eDixg/x6wX1HUUteg5emQA7HPfteLRd16uzwdrkDcY1/0
+hOfxSRPh1kQ99qv9ux4pF/k4XAO4h/7YxLJPYbfPByYwObdsP/Itf4Dl76n
gxkkPOz5Sm45LO/1dMiChJe99AnPZ16Vng5nIeFpb/pxTYZKgqdDOiS87acf
Mfr6UcHDgRESH/bqZUnqZUoeDrMh8WX/etbv5FhgfJpC4tMeTB12h5r3wh4S
L+5Q817ZS/5mMI7ZBTPvjX1o+40D6T1eUPPe2t/+WZe1p8QLat57e8ENhrf8
jL0cAM4VLrE=
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
ScLpxWadh0c78CPhAzZWEI/G5ScSvhzswA4XJLikwdq9X3+vE+zAv+eZv5kQ
v6TF7wdHcHXgBydvFpiDB8va60sG2/E7PvGLuhD/KH8jzq5/3o57MnVpuyFe
5kTeD7ns1o6JnJdPGpNJQuCs+lDkw3as9OrNC0/wwotl10PG7ZjnTuvOKYjH
6eLGhdry7biMjN5QAPF6q5HIkZiBNjzXKJSj8A7ywbcP/HJybfheW+rfacgX
jhfnlI5KtGFZzpWVUWCeAeK2okAb3ttdcF0drLH4/cNJ7jZ8Z+t/iymREP8P
M08r01rxe9+pFcZvYT1HiZnqhLZiv9T3/yohPxk/ikt2+NOCHXqV6p5Bvlta
PVHnONmCtc6fDTwCDg85/NN5sAVf/bjzal8ISTRllCi617dgKQnVVfLgM7S+
Gt+EFtzLrBynBZGE0EVeZoR2C5zf8jMVyKcjEi8P40/NuHx1d5wE5F8x53fM
0dRm/Erub3Qr5GvL7zkpm2Oa8T2CZ8gZ/Ne6TeCmbzP2DNt8sskb4k3uji1c
15px1u8ld0cvuB+nwmd01zXjTR93MvqfksTjy1HZf/SasKtR4s3fUB98Sciw
4tdswkVVRY9TwOx/sYTKuSasfvLt+mtg//D++LfSTfiixcvEWqgvovv2vVTi
aMI/k6PGU6H+KL8dfz8ovRHnaAd1ujuSxCbnZDnJFY3YRGi7SKw9SXh+Eq3c
ONuA00OjOe6C55mJV2cmG/Av9f9sjoIHjRIc8zoacMGVV7MND2H+noorPZ3Z
gHVEzKvXgrU43qpfMWrAcp6i4iH34XgnePsVLjdAPrA6YQZWfPDGmle1AV9/
bT16HCxAfx0yINeA1zzp4Ry1I4mZylDqHe4GHKphHXgWLLJzXx3b4+9YRkNg
PZ8tSWz02Tv97eZ3/D7iM23BBq7n/J4tvlrfMe/uF9ep4MruXVe3iX3HEW36
Cq/BZtFbRw501uMb7R8c+MAam7asnSqrx2JRztdWgI+6bRLPzqzHBvrrxoat
SWKdCbf1Sa96/NtFd+g9OEVk7T8t+Xq87fJJd2VwUNhqfh7Bery4xvSpFNhh
HceZHu567HpmVpwHrDKxwvsWrQ6nPv1zcwLqwcP6bGkSTXXY1ypxoRW8q26p
/kdRHY7+qCpbAp5IX9jq+LIOa7A3vXoNbtk7L3/qSR2Wp/Z88QQXBv7VXX23
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
AXr+jz3s/B8A+5rrxA==
        "]]},
      Annotation[#, "Charting`Private`Tag$49708545#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 46.40288888888899},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{545.1875, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{30, 70},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.885226103073374*^9, 3.885228459368536*^9, 
  3.885228675646936*^9, 3.8852287435954933`*^9},
 CellLabel->
  "Out[430]=",ExpressionUUID->"4b7a8ddd-2bc8-4079-8bd2-361b266e0b27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"test1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nc", ",", 
      RowBox[{"AvgElectronsWeighted", "[", 
       RowBox[{"Nc", ",", 
        RowBox[{"2", "Nc"}], ",", "1000"}], "]"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "0.2", ",", "8", ",", "0.8"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"test2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nc", ",", 
      RowBox[{"AvgElectrons3D", "[", 
       RowBox[{"Nc", ",", 
        RowBox[{"2", "Nc"}], ",", "5", ",", "1", ",", "0.8", ",", "100"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "0.2", ",", "8", ",", "0.8"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", "test1", "]"}], ",", 
   RowBox[{"ListLogPlot", "[", "test2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8767437538644543`*^9, 3.876743805925462*^9}, {
   3.87674388786502*^9, 3.876743892199896*^9}, 3.8767440576964808`*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"72e1b9ed-63f0-4a90-9475-097186786596"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     InterpretationBox[
      TemplateBox[{"1.318", "0.015"},
       "Around"],
      Around[1.318, 0.014734079309311901`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", 
     InterpretationBox[
      TemplateBox[{"1.845", "0.026"},
       "Around"],
      Around[1.845, 0.026146867090698623`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"2.83", "0.05"},
       "Around"],
      Around[2.825, 0.048215139735353865`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"3.99", "0.08"},
       "Around"],
      Around[3.993, 0.08360586666580845]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", 
     InterpretationBox[
      TemplateBox[{"5.92", "0.13"},
       "Around"],
      Around[5.919, 0.13268022853101755`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.000000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"8.46", "0.25"},
       "Around"],
      Around[8.458, 0.2495847121290255]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.800000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"12.9", "0.4"},
       "Around"],
      Around[12.876, 0.37010485217246425`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"19.1", "0.6"},
       "Around"],
      Around[19.082, 0.6201547128482278]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", 
     InterpretationBox[
      TemplateBox[{"27.8", "1.1"},
       "Around"],
      Around[27.778, 1.085494824960034]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.87674379006914*^9, 3.87674380662022*^9}, 
   3.876743892813696*^9, 3.876744058109849*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"09180ee1-ccfd-4d38-8744-54638678506e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     InterpretationBox[
      TemplateBox[{"1.29", "0.05"},
       "Around"],
      Around[1.29, 0.045604802157206865`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", 
     InterpretationBox[
      TemplateBox[{"2.30", "0.11"},
       "Around"],
      Around[2.3, 0.10588730430094635`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"3.45", "0.19"},
       "Around"],
      Around[3.45, 0.18606776217607424`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"6.14", "0.35"},
       "Around"],
      Around[6.14, 0.3519125235657638]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", 
     InterpretationBox[
      TemplateBox[{"10.1", "0.6"},
       "Around"],
      Around[10.05, 0.584371370782227]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.000000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"17.3", "0.9"},
       "Around"],
      Around[17.25, 0.9209541604534753]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.800000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"29.5", "1.6"},
       "Around"],
      Around[29.52, 1.6242157392651901`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"44.4", "2.6"},
       "Around"],
      Around[44.43, 2.5928127155230047`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", 
     InterpretationBox[
      TemplateBox[{"85.", "5."},
       "Around"],
      Around[85., 5.083743152879032]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.87674379006914*^9, 3.87674380662022*^9}, 
   3.876743892813696*^9, 3.8767440659373493`*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"54bdeccd-578b-4a6b-aa3a-127782ba9c9e"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1., 0.2648733607362446}, {1., 0.2761154360803155}}], 
          LineBox[{{1., 0.2761154360803155}, {1., 0.28723253090510315`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.8, 0.598206155709661}, {1.8, 0.6124792774924905}}], 
          LineBox[{{1.8, 0.6124792774924905}, {1.8, 0.6265515407856557}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.6000000000000005`, 1.0212937333266658`}, {
           2.6000000000000005`, 1.0385083645984043`}}], 
          LineBox[{{2.6000000000000005`, 1.0385083645984043`}, {
           2.6000000000000005`, 1.0554316604985687`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.4000000000000004`, 1.363382408879341}, {
           3.4000000000000004`, 1.3845428280810843`}}], 
          LineBox[{{3.4000000000000004`, 1.3845428280810843`}, {
           3.4000000000000004`, 1.4052647467740003`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{4.2, 1.7554964714403927`}, {4.2, 1.7781675157085879`}}], 
          LineBox[{{4.2, 1.7781675157085879`}, {4.2, 1.8003359572087905`}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{5.000000000000001, 2.1051598826493545`}, {
           5.000000000000001, 2.135112739050297}}], 
          LineBox[{{5.000000000000001, 2.135112739050297}, {5.000000000000001,
            2.1641944518502627`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{5.800000000000001, 2.5262001449605536`}, {
           5.800000000000001, 2.5553651134365616`}}], 
          LineBox[{{5.800000000000001, 2.5553651134365616`}, {
           5.800000000000001, 2.5837035357926283`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{6.6000000000000005`, 2.9157061854630695`}, {
           6.6000000000000005`, 2.948745482329654}}], 
          LineBox[{{6.6000000000000005`, 2.948745482329654}, {
           6.6000000000000005`, 2.980728006049505}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{7.4, 3.284382820946483}, {7.4, 3.3242443404940274`}}], 
          LineBox[{{7.4, 3.3242443404940274`}, {7.4, 3.362577641820181}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1., 0.28723253090510315`}, 
             Offset[{3, 0}, {1., 0.28723253090510315`}]}, {{1., 
             0.28723253090510315`}, 
             Offset[{-3, 0}, {1., 0.28723253090510315`}]}, {{1., 
             0.2648733607362446}, 
             Offset[{3, 0}, {1., 0.2648733607362446}]}, {{1., 
             0.2648733607362446}, 
             Offset[{-3, 0}, {1., 0.2648733607362446}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8, 0.6265515407856557}, 
             Offset[{3, 0}, {1.8, 0.6265515407856557}]}, {{1.8, 
             0.6265515407856557}, 
             Offset[{-3, 0}, {1.8, 0.6265515407856557}]}, {{1.8, 
             0.598206155709661}, Offset[{3, 0}, {1.8, 0.598206155709661}]}, {{
             1.8, 0.598206155709661}, 
             Offset[{-3, 0}, {1.8, 0.598206155709661}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.6000000000000005`, 1.0554316604985687`}, 
             Offset[{3, 0}, {2.6000000000000005`, 1.0554316604985687`}]}, {{
             2.6000000000000005`, 1.0554316604985687`}, 
             Offset[{-3, 0}, {2.6000000000000005`, 1.0554316604985687`}]}, {{
             2.6000000000000005`, 1.0212937333266658`}, 
             Offset[{3, 0}, {2.6000000000000005`, 1.0212937333266658`}]}, {{
             2.6000000000000005`, 1.0212937333266658`}, 
             Offset[{-3, 0}, {2.6000000000000005`, 
              1.0212937333266658`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.4000000000000004`, 1.4052647467740003`}, 
             Offset[{3, 0}, {3.4000000000000004`, 1.4052647467740003`}]}, {{
             3.4000000000000004`, 1.4052647467740003`}, 
             Offset[{-3, 0}, {3.4000000000000004`, 1.4052647467740003`}]}, {{
             3.4000000000000004`, 1.363382408879341}, 
             Offset[{3, 0}, {3.4000000000000004`, 1.363382408879341}]}, {{
             3.4000000000000004`, 1.363382408879341}, 
             Offset[{-3, 0}, {3.4000000000000004`, 1.363382408879341}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.2, 1.8003359572087905`}, 
             Offset[{3, 0}, {4.2, 1.8003359572087905`}]}, {{4.2, 
             1.8003359572087905`}, 
             Offset[{-3, 0}, {4.2, 1.8003359572087905`}]}, {{4.2, 
             1.7554964714403927`}, 
             Offset[{3, 0}, {4.2, 1.7554964714403927`}]}, {{4.2, 
             1.7554964714403927`}, 
             Offset[{-3, 0}, {4.2, 1.7554964714403927`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.000000000000001, 2.1641944518502627`}, 
             Offset[{3, 0}, {5.000000000000001, 2.1641944518502627`}]}, {{
             5.000000000000001, 2.1641944518502627`}, 
             Offset[{-3, 0}, {5.000000000000001, 2.1641944518502627`}]}, {{
             5.000000000000001, 2.1051598826493545`}, 
             Offset[{3, 0}, {5.000000000000001, 2.1051598826493545`}]}, {{
             5.000000000000001, 2.1051598826493545`}, 
             Offset[{-3, 0}, {5.000000000000001, 2.1051598826493545`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.800000000000001, 2.5837035357926283`}, 
             Offset[{3, 0}, {5.800000000000001, 2.5837035357926283`}]}, {{
             5.800000000000001, 2.5837035357926283`}, 
             Offset[{-3, 0}, {5.800000000000001, 2.5837035357926283`}]}, {{
             5.800000000000001, 2.5262001449605536`}, 
             Offset[{3, 0}, {5.800000000000001, 2.5262001449605536`}]}, {{
             5.800000000000001, 2.5262001449605536`}, 
             Offset[{-3, 0}, {5.800000000000001, 2.5262001449605536`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.6000000000000005`, 2.980728006049505}, 
             Offset[{3, 0}, {6.6000000000000005`, 2.980728006049505}]}, {{
             6.6000000000000005`, 2.980728006049505}, 
             Offset[{-3, 0}, {6.6000000000000005`, 2.980728006049505}]}, {{
             6.6000000000000005`, 2.9157061854630695`}, 
             Offset[{3, 0}, {6.6000000000000005`, 2.9157061854630695`}]}, {{
             6.6000000000000005`, 2.9157061854630695`}, 
             Offset[{-3, 0}, {6.6000000000000005`, 
              2.9157061854630695`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.4, 3.362577641820181}, 
             Offset[{3, 0}, {7.4, 3.362577641820181}]}, {{7.4, 
             3.362577641820181}, 
             Offset[{-3, 0}, {7.4, 3.362577641820181}]}, {{7.4, 
             3.284382820946483}, Offset[{3, 0}, {7.4, 3.284382820946483}]}, {{
             7.4, 3.284382820946483}, 
             Offset[{-3, 0}, {7.4, 3.284382820946483}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.2, 0.}, {1., 0.2761154360803155}, {1.8, 
      0.6124792774924905}, {2.6000000000000005`, 1.0385083645984043`}, {
      3.4000000000000004`, 1.3845428280810843`}, {4.2, 1.7781675157085879`}, {
      5.000000000000001, 2.135112739050297}, {5.800000000000001, 
      2.5553651134365616`}, {6.6000000000000005`, 2.948745482329654}, {7.4, 
      3.3242443404940274`}}]}, {{}, {}}}, {{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1., 0.21864962701975005`}, {1., 0.25464221837358075`}}], 
          LineBox[{{1., 0.25464221837358075`}, {1., 0.2893842245864443}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.8, 0.7857777259391017}, {1.8, 0.8329091229351039}}], 
          LineBox[{{1.8, 0.8329091229351039}, {1.8, 0.8779187770128204}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.6000000000000005`, 1.1829326764157482`}, {
           2.6000000000000005`, 1.2383742310432684`}}], 
          LineBox[{{2.6000000000000005`, 1.2383742310432684`}, {
           2.6000000000000005`, 1.2909028126036424`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.4000000000000004`, 1.755801922067995}, {
           3.4000000000000004`, 1.814824742159051}}], 
          LineBox[{{3.4000000000000004`, 1.814824742159051}, {
           3.4000000000000004`, 1.8705571750646073`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{4.2, 2.2476671986436547`}, {4.2, 2.307572634505085}}], 
          LineBox[{{4.2, 2.307572634505085}, {4.2, 2.3640913374347603`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{5.000000000000001, 2.7929454753638607`}, {
           5.000000000000001, 2.847812143477369}}], 
          LineBox[{{5.000000000000001, 2.847812143477369}, {5.000000000000001,
            2.899824393987687}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{5.800000000000001, 3.3284755756445206`}, {
           5.800000000000001, 3.385067999732272}}], 
          LineBox[{{5.800000000000001, 3.385067999732272}, {5.800000000000001,
            3.4386285374375523`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{6.6000000000000005`, 3.733785591982519}, {
           6.6000000000000005`, 3.7939149169478172`}}], 
          LineBox[{{6.6000000000000005`, 3.7939149169478172`}, {
           6.6000000000000005`, 3.850632860878803}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{7.4, 4.380979296996212}, {7.4, 4.442651256490317}}], 
          LineBox[{{7.4, 4.442651256490317}, {7.4, 4.500739717179018}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1., 0.2893842245864443}, 
             Offset[{3, 0}, {1., 0.2893842245864443}]}, {{1., 
             0.2893842245864443}, 
             Offset[{-3, 0}, {1., 0.2893842245864443}]}, {{1., 
             0.21864962701975005`}, 
             Offset[{3, 0}, {1., 0.21864962701975005`}]}, {{1., 
             0.21864962701975005`}, 
             Offset[{-3, 0}, {1., 0.21864962701975005`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8, 0.8779187770128204}, 
             Offset[{3, 0}, {1.8, 0.8779187770128204}]}, {{1.8, 
             0.8779187770128204}, 
             Offset[{-3, 0}, {1.8, 0.8779187770128204}]}, {{1.8, 
             0.7857777259391017}, 
             Offset[{3, 0}, {1.8, 0.7857777259391017}]}, {{1.8, 
             0.7857777259391017}, 
             Offset[{-3, 0}, {1.8, 0.7857777259391017}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.6000000000000005`, 1.2909028126036424`}, 
             Offset[{3, 0}, {2.6000000000000005`, 1.2909028126036424`}]}, {{
             2.6000000000000005`, 1.2909028126036424`}, 
             Offset[{-3, 0}, {2.6000000000000005`, 1.2909028126036424`}]}, {{
             2.6000000000000005`, 1.1829326764157482`}, 
             Offset[{3, 0}, {2.6000000000000005`, 1.1829326764157482`}]}, {{
             2.6000000000000005`, 1.1829326764157482`}, 
             Offset[{-3, 0}, {2.6000000000000005`, 
              1.1829326764157482`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.4000000000000004`, 1.8705571750646073`}, 
             Offset[{3, 0}, {3.4000000000000004`, 1.8705571750646073`}]}, {{
             3.4000000000000004`, 1.8705571750646073`}, 
             Offset[{-3, 0}, {3.4000000000000004`, 1.8705571750646073`}]}, {{
             3.4000000000000004`, 1.755801922067995}, 
             Offset[{3, 0}, {3.4000000000000004`, 1.755801922067995}]}, {{
             3.4000000000000004`, 1.755801922067995}, 
             Offset[{-3, 0}, {3.4000000000000004`, 1.755801922067995}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.2, 2.3640913374347603`}, 
             Offset[{3, 0}, {4.2, 2.3640913374347603`}]}, {{4.2, 
             2.3640913374347603`}, 
             Offset[{-3, 0}, {4.2, 2.3640913374347603`}]}, {{4.2, 
             2.2476671986436547`}, 
             Offset[{3, 0}, {4.2, 2.2476671986436547`}]}, {{4.2, 
             2.2476671986436547`}, 
             Offset[{-3, 0}, {4.2, 2.2476671986436547`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.000000000000001, 2.899824393987687}, 
             Offset[{3, 0}, {5.000000000000001, 2.899824393987687}]}, {{
             5.000000000000001, 2.899824393987687}, 
             Offset[{-3, 0}, {5.000000000000001, 2.899824393987687}]}, {{
             5.000000000000001, 2.7929454753638607`}, 
             Offset[{3, 0}, {5.000000000000001, 2.7929454753638607`}]}, {{
             5.000000000000001, 2.7929454753638607`}, 
             Offset[{-3, 0}, {5.000000000000001, 2.7929454753638607`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.800000000000001, 3.4386285374375523`}, 
             Offset[{3, 0}, {5.800000000000001, 3.4386285374375523`}]}, {{
             5.800000000000001, 3.4386285374375523`}, 
             Offset[{-3, 0}, {5.800000000000001, 3.4386285374375523`}]}, {{
             5.800000000000001, 3.3284755756445206`}, 
             Offset[{3, 0}, {5.800000000000001, 3.3284755756445206`}]}, {{
             5.800000000000001, 3.3284755756445206`}, 
             Offset[{-3, 0}, {5.800000000000001, 3.3284755756445206`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.6000000000000005`, 3.850632860878803}, 
             Offset[{3, 0}, {6.6000000000000005`, 3.850632860878803}]}, {{
             6.6000000000000005`, 3.850632860878803}, 
             Offset[{-3, 0}, {6.6000000000000005`, 3.850632860878803}]}, {{
             6.6000000000000005`, 3.733785591982519}, 
             Offset[{3, 0}, {6.6000000000000005`, 3.733785591982519}]}, {{
             6.6000000000000005`, 3.733785591982519}, 
             Offset[{-3, 0}, {6.6000000000000005`, 3.733785591982519}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.4, 4.500739717179018}, 
             Offset[{3, 0}, {7.4, 4.500739717179018}]}, {{7.4, 
             4.500739717179018}, 
             Offset[{-3, 0}, {7.4, 4.500739717179018}]}, {{7.4, 
             4.380979296996212}, Offset[{3, 0}, {7.4, 4.380979296996212}]}, {{
             7.4, 4.380979296996212}, 
             Offset[{-3, 0}, {7.4, 4.380979296996212}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.2, 0.}, {1., 0.25464221837358075`}, {1.8, 
      0.8329091229351039}, {2.6000000000000005`, 1.2383742310432684`}, {
      3.4000000000000004`, 1.814824742159051}, {4.2, 2.307572634505085}, {
      5.000000000000001, 2.847812143477369}, {5.800000000000001, 
      3.385067999732272}, {6.6000000000000005`, 3.7939149169478172`}, {7.4, 
      4.442651256490317}}]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.2631407832009814},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7.4}, {-0.2631407832009814, 3.362577641820181}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.87674379006914*^9, 3.87674380662022*^9}, 
   3.876743892813696*^9, 3.876744065984357*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"e80f0078-036b-4d88-8fdf-c4b7e6945da3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nc", ",", 
      RowBox[{"AvgElectronsWeighted", "[", 
       RowBox[{"Nc", ",", "Nc", ",", "1000"}], "]"}]}], " ", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "0.2", ",", "14", ",", "0.8"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.876741186933577*^9, 3.876741222205688*^9}, {
  3.8767415802080803`*^9, 3.876741644080122*^9}, {3.876741857195636*^9, 
  3.8767418584342813`*^9}, {3.876741925863331*^9, 3.876741926051*^9}, {
  3.8767419905624437`*^9, 3.87674199062376*^9}, {3.8767430407618856`*^9, 
  3.876743056444631*^9}, {3.8767433109617033`*^9, 3.876743346315384*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"c3e80c45-8b8f-46d4-a365-022d7039d588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", 
     InterpretationBox[
      TemplateBox[{"1.256", "0.014"},
       "Around"],
      Around[1.256, 0.013807775152234145`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"1.612", "0.018"},
       "Around"],
      Around[1.612, 0.018104800020541066`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"2.006", "0.029"},
       "Around"],
      Around[2.006, 0.028684260262150506`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", 
     InterpretationBox[
      TemplateBox[{"2.55", "0.04"},
       "Around"],
      Around[2.548, 0.03925859443787101]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.000000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"3.17", "0.06"},
       "Around"],
      Around[3.171, 0.055631410676468145`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.800000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"3.89", "0.07"},
       "Around"],
      Around[3.89, 0.07160326128764685]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"4.89", "0.10"},
       "Around"],
      Around[4.892, 0.09604978688972486]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", 
     InterpretationBox[
      TemplateBox[{"6.00", "0.13"},
       "Around"],
      Around[6.003, 0.1294981110316315]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.2`", ",", 
     InterpretationBox[
      TemplateBox[{"7.96", "0.17"},
       "Around"],
      Around[7.962, 0.16926076097313636`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", 
     InterpretationBox[
      TemplateBox[{"9.47", "0.22"},
       "Around"],
      Around[9.468, 0.22358212129990393`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.8`", ",", 
     InterpretationBox[
      TemplateBox[{"12.35", "0.32"},
       "Around"],
      Around[12.349, 0.3243831429396778]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.6`", ",", 
     InterpretationBox[
      TemplateBox[{"14.9", "0.4"},
       "Around"],
      Around[14.882, 0.3601163142093951]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.4`", ",", 
     InterpretationBox[
      TemplateBox[{"19.7", "0.5"},
       "Around"],
      Around[19.674, 0.5239353321090612]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.2`", ",", 
     InterpretationBox[
      TemplateBox[{"23.3", "0.6"},
       "Around"],
      Around[23.256, 0.5956922975104791]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.`", ",", 
     InterpretationBox[
      TemplateBox[{"28.9", "0.9"},
       "Around"],
      Around[28.925, 0.8690665404050782]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.8`", ",", 
     InterpretationBox[
      TemplateBox[{"36.8", "1.1"},
       "Around"],
      Around[36.83, 1.117445203928937]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.876741212909227*^9, 3.8767412228597717`*^9}, 
   3.876741582963626*^9, {3.876741613902274*^9, 3.8767416462144737`*^9}, 
   3.876741859350013*^9, 3.876742045324362*^9, {3.876743045048072*^9, 
   3.8767430573659267`*^9}, {3.876743311884853*^9, 3.8767433470696917`*^9}, 
   3.8767435164642267`*^9, 3.876743749488048*^9, 3.8767451936332207`*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"ae4fd63c-b47b-4a38-8ec9-5dfbd53e060c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2`", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.`", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.8`", ",", 
      InterpretationBox[
       TemplateBox[{"1.256", "0.014"},
        "Around"],
       Around[1.256, 0.013807775152234145`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.6000000000000005`", ",", 
      InterpretationBox[
       TemplateBox[{"1.612", "0.018"},
        "Around"],
       Around[1.612, 0.018104800020541066`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.4000000000000004`", ",", 
      InterpretationBox[
       TemplateBox[{"2.006", "0.029"},
        "Around"],
       Around[2.006, 0.028684260262150506`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.2`", ",", 
      InterpretationBox[
       TemplateBox[{"2.55", "0.04"},
        "Around"],
       Around[2.548, 0.03925859443787101]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.000000000000001`", ",", 
      InterpretationBox[
       TemplateBox[{"3.17", "0.06"},
        "Around"],
       Around[3.171, 0.055631410676468145`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.800000000000001`", ",", 
      InterpretationBox[
       TemplateBox[{"3.89", "0.07"},
        "Around"],
       Around[3.89, 0.07160326128764685]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.6000000000000005`", ",", 
      InterpretationBox[
       TemplateBox[{"4.89", "0.10"},
        "Around"],
       Around[4.892, 0.09604978688972486]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.4`", ",", 
      InterpretationBox[
       TemplateBox[{"6.00", "0.13"},
        "Around"],
       Around[6.003, 0.1294981110316315]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8.2`", ",", 
      InterpretationBox[
       TemplateBox[{"7.96", "0.17"},
        "Around"],
       Around[7.962, 0.16926076097313636`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.`", ",", 
      InterpretationBox[
       TemplateBox[{"9.47", "0.22"},
        "Around"],
       Around[9.468, 0.22358212129990393`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.8`", ",", 
      InterpretationBox[
       TemplateBox[{"12.35", "0.32"},
        "Around"],
       Around[12.349, 0.3243831429396778]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10.6`", ",", 
      InterpretationBox[
       TemplateBox[{"14.9", "0.4"},
        "Around"],
       Around[14.882, 0.3601163142093951]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.4`", ",", 
      InterpretationBox[
       TemplateBox[{"19.7", "0.5"},
        "Around"],
       Around[19.674, 0.5239353321090612]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12.2`", ",", 
      InterpretationBox[
       TemplateBox[{"23.3", "0.6"},
        "Around"],
       Around[23.256, 0.5956922975104791]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13.`", ",", 
      InterpretationBox[
       TemplateBox[{"28.9", "0.9"},
        "Around"],
       Around[28.925, 0.8690665404050782]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13.8`", ",", 
      InterpretationBox[
       TemplateBox[{"36.8", "1.1"},
        "Around"],
       Around[36.83, 1.117445203928937]]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.876918479361663*^9, 3.876918482614008*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"3e5c9588-5a26-4eed-ae9c-cc12cf1d2970"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", 
     InterpretationBox[
      TemplateBox[{"1.256", "0.014"},
       "Around"],
      Around[1.256, 0.013807775152234145`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"1.612", "0.018"},
       "Around"],
      Around[1.612, 0.018104800020541066`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"2.006", "0.029"},
       "Around"],
      Around[2.006, 0.028684260262150506`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", 
     InterpretationBox[
      TemplateBox[{"2.55", "0.04"},
       "Around"],
      Around[2.548, 0.03925859443787101]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.000000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"3.17", "0.06"},
       "Around"],
      Around[3.171, 0.055631410676468145`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.800000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"3.89", "0.07"},
       "Around"],
      Around[3.89, 0.07160326128764685]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"4.89", "0.10"},
       "Around"],
      Around[4.892, 0.09604978688972486]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", 
     InterpretationBox[
      TemplateBox[{"6.00", "0.13"},
       "Around"],
      Around[6.003, 0.1294981110316315]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.2`", ",", 
     InterpretationBox[
      TemplateBox[{"7.96", "0.17"},
       "Around"],
      Around[7.962, 0.16926076097313636`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", 
     InterpretationBox[
      TemplateBox[{"9.47", "0.22"},
       "Around"],
      Around[9.468, 0.22358212129990393`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.8`", ",", 
     InterpretationBox[
      TemplateBox[{"12.35", "0.32"},
       "Around"],
      Around[12.349, 0.3243831429396778]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.6`", ",", 
     InterpretationBox[
      TemplateBox[{"14.9", "0.4"},
       "Around"],
      Around[14.882, 0.3601163142093951]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.4`", ",", 
     InterpretationBox[
      TemplateBox[{"19.7", "0.5"},
       "Around"],
      Around[19.674, 0.5239353321090612]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.2`", ",", 
     InterpretationBox[
      TemplateBox[{"23.3", "0.6"},
       "Around"],
      Around[23.256, 0.5956922975104791]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.`", ",", 
     InterpretationBox[
      TemplateBox[{"28.9", "0.9"},
       "Around"],
      Around[28.925, 0.8690665404050782]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.8`", ",", 
     InterpretationBox[
      TemplateBox[{"36.8", "1.1"},
       "Around"],
      Around[36.83, 1.117445203928937]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.87691848295043*^9, 3.87691851619853*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"f87777af-273a-416e-8533-4f3454f29f89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"java1d", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.0", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.0", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.8", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.292", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.6", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.6152", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.4000000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"2.0128", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.2", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"2.5308", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"3.1744", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.8", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"3.96", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.6", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"4.8992", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.3999999999999995", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"6.146", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8.2", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"7.778", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"9.6872", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.8", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"11.818", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10.600000000000001", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"14.9372", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.400000000000002", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"18.5404", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12.200000000000003", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"22.9588", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13.000000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"29.3304", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13.800000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"36.6168", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14.600000000000005", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"45.6408", ",", "0.0"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.87691848937955*^9, 3.8769184970245743`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2e8cde76-4517-4eef-80e1-1ab64aabde9b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", "1.292`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", "1.6152`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", "2.0128`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", "2.5308`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "3.1744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", "3.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6`", ",", "4.8992`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.3999999999999995`", ",", "6.146`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.2`", ",", "7.778`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "9.6872`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.8`", ",", "11.818`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.600000000000001`", ",", "14.9372`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.400000000000002`", ",", "18.5404`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.200000000000003`", ",", "22.9588`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.000000000000004`", ",", "29.3304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.800000000000004`", ",", "36.6168`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.600000000000005`", ",", "45.6408`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.876918497291751*^9, 3.8769185174332247`*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"ad1b1077-99f1-4765-9fc7-daaa12a49600"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", "java1d", "]"}]], "Input",
 CellChangeTimes->{{3.876918518292843*^9, 3.876918521891417*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"5fa51c42-7c2f-4854-8256-11f2e627797b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCJy0Z0ABH+D8s2dA4I/966ZHiwpSL9hD+CwO
Lg8nvyxef8/exBgEuB0M3iYxtCU9g8oLOERIBf7r3/YWao6Iw5bzUetiqz/Z
g5Ubizu4RdWWSLB+s08DAykH3xXG66/l/LQHO2emrINu/aurrbx/ofIKDh0e
9ybxZzI4QMxTcijeLcg5R4vJAeJ+ZQcp2wa5UweZHSDuUXWQ5Lo8o24hq8M5
sHvUHI7UZt7lj2F3yACbp+FQdCLn70VBTgcmsHlaDnN2f/LKYed2mAM2T9vh
uVLrxmtneRzMwObpOkxR3LOKYSKfAwC2o3Z+
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.29899944383838},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 14.600000000000005`}, {-0.29899944383838, 
    3.820802053324039}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.876918522173098*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"9a51722c-66c6-4896-8fe8-d1d9fbf9f0f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"t1", ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Mathematica 1D MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"java1d", ",", 
     RowBox[{"PlotStyle", "->", "Orange"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Java 1D MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"0.28", 
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.2", ",", "13.8"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Purple"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Exponential Fit\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<1D Ionizations for Increasing Nc at \
\[Lambda]\!\(\*StyleBox[\"i\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)= 1\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      StyleBox[
       RowBox[{"N", 
        StyleBox["c",
         FontSize->10]}]], 
      StyleBox[",",
       FontSize->10], 
      StyleBox[
       RowBox[{"N", 
        StyleBox["i",
         FontSize->10]}]]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.876918498277302*^9, 3.8769185306625338`*^9}, {
  3.876918816195568*^9, 3.876919016930993*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4e964a82-326b-422e-b1c7-ebea43b34735"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{1.8, 0.21687774194441217`}, {1.8, 0.22793206804600694`}}], 
          
          LineBox[{{1.8, 0.22793206804600694`}, {1.8, 
           0.2388655308668523}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{2.6000000000000005`, 0.46618083164417606`}, {
           2.6000000000000005`, 0.4774756440844366}}], 
          
          LineBox[{{2.6000000000000005`, 0.4774756440844366}, {
           2.6000000000000005`, 0.4886443072429983}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{3.4000000000000004`, 0.6817402379303565}, {
           3.4000000000000004`, 0.6961426895397437}}], 
          
          LineBox[{{3.4000000000000004`, 0.6961426895397437}, {
           3.4000000000000004`, 0.7103406521944946}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{4.2, 0.9197811953376416}, {4.2, 0.935308737709917}}], 
          LineBox[{{4.2, 0.935308737709917}, {4.2, 0.9505988574034616}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{5.000000000000001, 1.1363474724699703`}, {
           5.000000000000001, 1.1540469955562103`}}], 
          
          LineBox[{{5.000000000000001, 1.1540469955562103`}, {
           5.000000000000001, 1.1714386861174384`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{5.800000000000001, 1.339830632611226}, {5.800000000000001,
            1.358409157630355}}], 
          
          LineBox[{{5.800000000000001, 1.358409157630355}, {5.800000000000001,
            1.3766488072926168`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{6.6000000000000005`, 1.567771856191927}, {
           6.6000000000000005`, 1.587601217824926}}], 
          
          LineBox[{{6.6000000000000005`, 1.587601217824926}, {
           6.6000000000000005`, 1.6070450091011215`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{7.4, 1.7704510298903955`}, {7.4, 1.7922593442697061`}}], 
          
          LineBox[{{7.4, 1.7922593442697061`}, {7.4, 
           1.8136021891246354`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{8.2, 2.053192433378569}, {8.2, 2.0746802245781253`}}], 
          LineBox[{{8.2, 2.0746802245781253`}, {8.2, 2.095715986687258}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{9., 2.224019896788507}, {9., 2.2479176916517374`}}], 
          LineBox[{{9., 2.2479176916517374`}, {9., 2.2712576861869502`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{9.8, 2.4869559532854884`}, {9.8, 2.5135750881356853`}}], 
          
          LineBox[{{9.8, 2.5135750881356853`}, {9.8, 
           2.5395039786532303`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{10.6, 2.675656731408736}, {10.6, 2.7001524289750694`}}], 
          
          LineBox[{{10.6, 2.7001524289750694`}, {10.6, 
           2.724062406379314}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{11.4, 2.952306092534318}, {11.4, 2.979297967090566}}], 
          
          LineBox[{{11.4, 2.979297967090566}, {11.4, 
           3.0055803879015004`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{12.2, 3.120614834611351}, {12.2, 3.146563163256575}}], 
          LineBox[{{12.2, 3.146563163256575}, {12.2, 3.171855170687562}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{13., 3.334200141135425}, {13., 3.36470627307974}}], 
          LineBox[{{13., 3.36470627307974}, {13., 3.394309264304074}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{13.8, 3.5755023019224224`}, {13.8, 3.606312730456974}}], 
          
          LineBox[{{13.8, 3.606312730456974}, {13.8, 
           3.636202181520969}}]}}}, {{Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8, 0.2388655308668523}, 
             Offset[{3, 0}, {1.8, 0.2388655308668523}]}, {{1.8, 
             0.2388655308668523}, 
             Offset[{-3, 0}, {1.8, 0.2388655308668523}]}, {{1.8, 
             0.21687774194441217`}, 
             Offset[{3, 0}, {1.8, 0.21687774194441217`}]}, {{1.8, 
             0.21687774194441217`}, 
             Offset[{-3, 0}, {1.8, 0.21687774194441217`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.6000000000000005`, 0.4886443072429983}, 
             Offset[{3, 0}, {2.6000000000000005`, 0.4886443072429983}]}, {{
             2.6000000000000005`, 0.4886443072429983}, 
             Offset[{-3, 0}, {2.6000000000000005`, 0.4886443072429983}]}, {{
             2.6000000000000005`, 0.46618083164417606`}, 
             Offset[{3, 0}, {2.6000000000000005`, 0.46618083164417606`}]}, {{
             2.6000000000000005`, 0.46618083164417606`}, 
             
             Offset[{-3, 0}, {2.6000000000000005`, 
              0.46618083164417606`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.4000000000000004`, 0.7103406521944946}, 
             Offset[{3, 0}, {3.4000000000000004`, 0.7103406521944946}]}, {{
             3.4000000000000004`, 0.7103406521944946}, 
             Offset[{-3, 0}, {3.4000000000000004`, 0.7103406521944946}]}, {{
             3.4000000000000004`, 0.6817402379303565}, 
             Offset[{3, 0}, {3.4000000000000004`, 0.6817402379303565}]}, {{
             3.4000000000000004`, 0.6817402379303565}, 
             
             Offset[{-3, 0}, {3.4000000000000004`, 
              0.6817402379303565}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.2, 0.9505988574034616}, 
             Offset[{3, 0}, {4.2, 0.9505988574034616}]}, {{4.2, 
             0.9505988574034616}, 
             Offset[{-3, 0}, {4.2, 0.9505988574034616}]}, {{4.2, 
             0.9197811953376416}, 
             Offset[{3, 0}, {4.2, 0.9197811953376416}]}, {{4.2, 
             0.9197811953376416}, 
             Offset[{-3, 0}, {4.2, 0.9197811953376416}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.000000000000001, 1.1714386861174384`}, 
             Offset[{3, 0}, {5.000000000000001, 1.1714386861174384`}]}, {{
             5.000000000000001, 1.1714386861174384`}, 
             Offset[{-3, 0}, {5.000000000000001, 1.1714386861174384`}]}, {{
             5.000000000000001, 1.1363474724699703`}, 
             Offset[{3, 0}, {5.000000000000001, 1.1363474724699703`}]}, {{
             5.000000000000001, 1.1363474724699703`}, 
             Offset[{-3, 0}, {5.000000000000001, 1.1363474724699703`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.800000000000001, 1.3766488072926168`}, 
             Offset[{3, 0}, {5.800000000000001, 1.3766488072926168`}]}, {{
             5.800000000000001, 1.3766488072926168`}, 
             Offset[{-3, 0}, {5.800000000000001, 1.3766488072926168`}]}, {{
             5.800000000000001, 1.339830632611226}, 
             Offset[{3, 0}, {5.800000000000001, 1.339830632611226}]}, {{
             5.800000000000001, 1.339830632611226}, 
             Offset[{-3, 0}, {5.800000000000001, 1.339830632611226}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.6000000000000005`, 1.6070450091011215`}, 
             Offset[{3, 0}, {6.6000000000000005`, 1.6070450091011215`}]}, {{
             6.6000000000000005`, 1.6070450091011215`}, 
             Offset[{-3, 0}, {6.6000000000000005`, 1.6070450091011215`}]}, {{
             6.6000000000000005`, 1.567771856191927}, 
             Offset[{3, 0}, {6.6000000000000005`, 1.567771856191927}]}, {{
             6.6000000000000005`, 1.567771856191927}, 
             Offset[{-3, 0}, {6.6000000000000005`, 1.567771856191927}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.4, 1.8136021891246354`}, 
             Offset[{3, 0}, {7.4, 1.8136021891246354`}]}, {{7.4, 
             1.8136021891246354`}, 
             Offset[{-3, 0}, {7.4, 1.8136021891246354`}]}, {{7.4, 
             1.7704510298903955`}, 
             Offset[{3, 0}, {7.4, 1.7704510298903955`}]}, {{7.4, 
             1.7704510298903955`}, 
             Offset[{-3, 0}, {7.4, 1.7704510298903955`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8.2, 2.095715986687258}, 
             Offset[{3, 0}, {8.2, 2.095715986687258}]}, {{8.2, 
             2.095715986687258}, 
             Offset[{-3, 0}, {8.2, 2.095715986687258}]}, {{8.2, 
             2.053192433378569}, 
             Offset[{3, 0}, {8.2, 2.053192433378569}]}, {{8.2, 
             2.053192433378569}, 
             Offset[{-3, 0}, {8.2, 2.053192433378569}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9., 2.2712576861869502`}, 
             Offset[{3, 0}, {9., 2.2712576861869502`}]}, {{9., 
             2.2712576861869502`}, 
             Offset[{-3, 0}, {9., 2.2712576861869502`}]}, {{9., 
             2.224019896788507}, 
             Offset[{3, 0}, {9., 2.224019896788507}]}, {{9., 
             2.224019896788507}, 
             Offset[{-3, 0}, {9., 2.224019896788507}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9.8, 2.5395039786532303`}, 
             Offset[{3, 0}, {9.8, 2.5395039786532303`}]}, {{9.8, 
             2.5395039786532303`}, 
             Offset[{-3, 0}, {9.8, 2.5395039786532303`}]}, {{9.8, 
             2.4869559532854884`}, 
             Offset[{3, 0}, {9.8, 2.4869559532854884`}]}, {{9.8, 
             2.4869559532854884`}, 
             Offset[{-3, 0}, {9.8, 2.4869559532854884`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10.6, 2.724062406379314}, 
             Offset[{3, 0}, {10.6, 2.724062406379314}]}, {{10.6, 
             2.724062406379314}, 
             Offset[{-3, 0}, {10.6, 2.724062406379314}]}, {{10.6, 
             2.675656731408736}, 
             Offset[{3, 0}, {10.6, 2.675656731408736}]}, {{10.6, 
             2.675656731408736}, 
             Offset[{-3, 0}, {10.6, 2.675656731408736}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11.4, 3.0055803879015004`}, 
             Offset[{3, 0}, {11.4, 3.0055803879015004`}]}, {{11.4, 
             3.0055803879015004`}, 
             Offset[{-3, 0}, {11.4, 3.0055803879015004`}]}, {{11.4, 
             2.952306092534318}, 
             Offset[{3, 0}, {11.4, 2.952306092534318}]}, {{11.4, 
             2.952306092534318}, 
             Offset[{-3, 0}, {11.4, 2.952306092534318}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12.2, 3.171855170687562}, 
             Offset[{3, 0}, {12.2, 3.171855170687562}]}, {{12.2, 
             3.171855170687562}, 
             Offset[{-3, 0}, {12.2, 3.171855170687562}]}, {{12.2, 
             3.120614834611351}, 
             Offset[{3, 0}, {12.2, 3.120614834611351}]}, {{12.2, 
             3.120614834611351}, 
             Offset[{-3, 0}, {12.2, 3.120614834611351}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13., 3.394309264304074}, 
             Offset[{3, 0}, {13., 3.394309264304074}]}, {{13., 
             3.394309264304074}, 
             Offset[{-3, 0}, {13., 3.394309264304074}]}, {{13., 
             3.334200141135425}, 
             Offset[{3, 0}, {13., 3.334200141135425}]}, {{13., 
             3.334200141135425}, 
             Offset[{-3, 0}, {13., 3.334200141135425}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13.8, 3.636202181520969}, 
             Offset[{3, 0}, {13.8, 3.636202181520969}]}, {{13.8, 
             3.636202181520969}, 
             Offset[{-3, 0}, {13.8, 3.636202181520969}]}, {{13.8, 
             3.5755023019224224`}, 
             Offset[{3, 0}, {13.8, 3.5755023019224224`}]}, {{13.8, 
             3.5755023019224224`}, 
             Offset[{-3, 0}, {13.8, 3.5755023019224224`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{0.2, 0.}, {1., 0.}, {1.8, 0.22793206804600694`}, {
          2.6000000000000005`, 0.4774756440844366}, {3.4000000000000004`, 
          0.6961426895397437}, {4.2, 0.935308737709917}, {5.000000000000001, 
          1.1540469955562103`}, {5.800000000000001, 1.358409157630355}, {
          6.6000000000000005`, 1.587601217824926}, {7.4, 
          1.7922593442697061`}, {8.2, 2.0746802245781253`}, {9., 
          2.2479176916517374`}, {9.8, 2.5135750881356853`}, {10.6, 
          2.7001524289750694`}, {11.4, 2.979297967090566}, {12.2, 
          3.146563163256575}, {13., 3.36470627307974}, {13.8, 
          3.606312730456974}}]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPWsmCJy0Z0ABH+D8s2dA4I/966ZHiwpSL9hD+CwO
Lg8nvyxef8/exBgEuB0M3iYxtCU9g8oLOERIBf7r3/YWao6Iw5bzUetiqz/Z
g5Ubizu4RdWWSLB+s08DAykH3xXG66/l/LQHO2emrINu/aurrbx/ofIKDh0e
9ybxZzI4QMxTcijeLcg5R4vJAeJ+ZQcp2wa5UweZHSDuUXWQ5Lo8o24hq8M5
sHvUHI7UZt7lj2F3yACbp+FQdCLn70VBTgcmsHlaDnN2f/LKYed2mAM2T9vh
uVLrxmtneRzMwObpOkxR3LOKYSKfAwC2o3Z+
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1:eJwVxX081HccAPDrLu6c39l1yPIY5458cwnVUH0/OURy87DIw4Ssa3KykIyK
WCldzvTAtBRKhTUlFXJLbOfYRHilByWOPJ0TMi1s++P9eptG7Pf9hkwikbz+
8/8G/UXjBfnNeAWNf4pa3irlbf+Y6WEmx5EaOK7hh1ap810f89mbclxJdwo5
vKtVGnWCFOxb14I9GHa8KVartAaFymiv/8Tfs9gdvUkt0tU1p9sdWe34pSFF
v3qrXNpCdi8vDejCRWsf34js/0NKO1sfnvb2FbYO5jc/0n8szeJ4nCPs32Fb
cQNDebBSunjV6KveaBUeyFCzqEw+gnNDL5iQbk7jlh09riaKKry97hTZgD+H
BTmUejdpI07GDZ9KxfO4r6v9GjXkLzx0x4Gqp78EPtuSJtuzuxNLf2JNHomg
wFoj4bFDqT3Y96x4sDBdDYTXLdnZrr04MaxJ+LCDCvfveJl13u/DAbhwOvej
BshG4rn9ZgN4IDYpIluPgGcDZHFz6iBemsAMORGhBR2Hhu3WsobxRFOJjSGf
CTsGNgkKEkfx1RqTuff7lkHj8Mj140wlvv1M3zYkmwX6gYu3SwQqbEgaUpkW
asPyVeBJPTqJ2yQ5M4omHaC6VaRbNb/Hb6wYqeo9ulAvaJ8RzE9hR57Qm0PR
g6gSU5q95wweDdqS023xOVwIvtqyNPcDnpOMBQx8sQIyF17LuhtnsY/NwUhV
mD7EKt32fMucw+o9Tz7sTDAAQ3nkpnnXj5hVVjbnl2EI7tTqppSEf7BwMNLZ
66YRROXYKevqP+EVaIJZXGcM3tS93guT81i3J4AzqzABa7nMl4QXsf3OlV3K
jJXgmsijzDqT4LT74SAmwxT8F58mxbwgQaaomVx52RTeVGTD76lLwE5vYfyo
lRkIOrglxgZkONl1YFlepRkklwa8ib5NhgxZd8AaFzaYF1+KLvCnAA/YfdOt
bLil8+icfIICKWOhYodwc6gqn9N6fm4pJBmlp5SPmsPPNQzOiI0amO4eKt4b
xwGXpFptlUwNYl45KovVuSAMPerbLVKHqJcHkxkSLogeGPMeUqlAZxahD+YW
MO7YGZjxCxX8dzJ0LO9ZAE/EDt3iSwMfTjjOxJbgoytYXBihgYpbIhY+tYSJ
/jOqixIN2FzRZpzw9SrYb1l2xAnRYYO707uWgVVwyyhc0dZAhy69851XEq0g
ysH6ootQE8yieyjXSAhoLZ0TD0gE8FdrdmhQEJwM+tVSSCEgcmzjZZEaAvpI
VriOOgGl0Zc3rqMj0NLgP43RJGC1SJjQqI1Ae2tlNXs5AetjZgbfchGYPBYf
FiMCPGOXyU28EKyvddMM9ycg2oafl/4lgnvbzFy0Agk4o4rfM+SDwOH5fEpt
MAFPYp+Rb/kj2DhXpdQNJ8D/u0KnzWEInDewO+T7CAg7YF0REodAcGcxzz6N
gDTbXcm/JSBoc37R3pdOQNF7iYf5IQTeHdX07OMEKA5MK0ZTEPhNilKGswiI
iqs1Tj6OIHDNy12XzhOQZTc+1puJ4Hn9vTzPfALKp4xrnbMQBAty2/8uIGAi
7lgAXYIgVLSN73eFAKZ9FSfmRwSvP3FSSCUE2E4rptrPIog4veRuxTUC/Kr0
GtZdQNBv8Go86AYB8fEekvx8BJFl97m0cgL+BUfTGpM=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$1351251#1"]& ]}}, {}}}, {
    PlotLabel -> 
     FormBox["\"1D Ionizations for Increasing Nc at \
\[Lambda]\\!\\(\\*StyleBox[\\\"i\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)= 1\"", TraditionalForm], AxesLabel -> {
       FormBox["Nc", TraditionalForm], 
       FormBox["Ni", TraditionalForm]}, DisplayFunction -> Identity, 
     GridLines -> {None, None}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, -0.28455345626000356`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 13.8}, {-0.28455345626000356`, 3.636202181520969}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Mathematica 1D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Java 1D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Exponential Fit\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.876918509506398*^9, 3.876918530925459*^9}, {
   3.876918831073387*^9, 3.876918854621354*^9}, 3.876918906532288*^9, {
   3.8769189524642897`*^9, 3.876919017843755*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"f94ab5e4-fd66-4dba-97e1-89364a7c2e3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nc", ",", 
      RowBox[{"AvgElectrons3D", "[", 
       RowBox[{"Nc", ",", "Nc", ",", "5", ",", "15", ",", "0.8", ",", "100"}],
        "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "0.2", ",", "14", ",", "0.8"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.876741249338615*^9, 3.876741279523983*^9}, 
   3.8767422318937893`*^9, 3.8767422833178663`*^9, {3.876743063770685*^9, 
   3.876743066105033*^9}, {3.876918670752578*^9, 3.876918671060092*^9}, {
   3.876918794650794*^9, 3.8769187948746023`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"d2afd923-baf1-48d7-ae97-31d24c6a6be4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", 
     InterpretationBox[
      TemplateBox[{"1.36", "0.05"},
       "Around"],
      Around[1.36, 0.04824181513244218]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"1.88", "0.07"},
       "Around"],
      Around[1.88, 0.06857864319910612]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"2.54", "0.10"},
       "Around"],
      Around[2.54, 0.09579017473497778]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", 
     InterpretationBox[
      TemplateBox[{"3.41", "0.14"},
       "Around"],
      Around[3.41, 0.13713887379977535`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.000000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"5.31", "0.20"},
       "Around"],
      Around[5.31, 0.20483795024014925`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.800000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"6.94", "0.29"},
       "Around"],
      Around[6.94, 0.2922638907189559]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6000000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"10.15", "0.35"},
       "Around"],
      Around[10.15, 0.34739288735064533`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.4`", ",", 
     InterpretationBox[
      TemplateBox[{"13.9", "0.5"},
       "Around"],
      Around[13.94, 0.49437645656734186`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.2`", ",", 
     InterpretationBox[
      TemplateBox[{"20.6", "0.7"},
       "Around"],
      Around[20.62, 0.6696569301070542]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", 
     InterpretationBox[
      TemplateBox[{"26.2", "1.0"},
       "Around"],
      Around[26.23, 0.9532353202423711]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.8`", ",", 
     InterpretationBox[
      TemplateBox[{"36.7", "1.1"},
       "Around"],
      Around[36.68, 1.0541768774209046`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.6`", ",", 
     InterpretationBox[
      TemplateBox[{"51.3", "1.7"},
       "Around"],
      Around[51.28, 1.7123484965792954`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.4`", ",", 
     InterpretationBox[
      TemplateBox[{"74.4", "2.6"},
       "Around"],
      Around[74.4, 2.6285149626910838`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.2`", ",", 
     InterpretationBox[
      TemplateBox[{"102.1", "3.3"},
       "Around"],
      Around[102.13, 3.2914230443025185`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.`", ",", 
     InterpretationBox[
      TemplateBox[{"136.", "5."},
       "Around"],
      Around[135.79, 4.647129992986765]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.8`", ",", 
     InterpretationBox[
      TemplateBox[{"195.", "7."},
       "Around"],
      Around[194.63, 6.6925656779396165`]]}], "}"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.876741284788187*^9, 3.876741330724976*^9, 3.8767413753370132`*^9, 
   3.8767414421491833`*^9, 3.876741507981431*^9, 3.8767422643724213`*^9, 
   3.876742314920188*^9, 3.876743082609565*^9, 3.876743118203722*^9, 
   3.876918707239565*^9, 3.8769188309905567`*^9, {3.876919765767171*^9, 
   3.876919765878111*^9}},ExpressionUUID->"858e67fc-cf9d-49b7-95d9-\
4d61c411eb4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"java3d", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.0", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.0", ",", "0.0"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.8", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.3708", ",", "0.009660380116744999"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.6", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"1.8896", ",", "0.014252183552003757"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.4000000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"2.6092", ",", "0.01951076994892846"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.2", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"3.622", ",", "0.02711690247797481"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"5.0172", ",", "0.03788458346082171"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.8", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"7.038", ",", "0.05230891319842165"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.6", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"9.6412", ",", "0.071414459488258"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.3999999999999995", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"13.5272", ",", "0.0970370241918007"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8.2", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"18.8308", ",", "0.13820415530656086"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"26.5088", ",", "0.18488258172148112"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9.8", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"36.892", ",", "0.25806691845333396"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10.600000000000001", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"51.484", ",", "0.353070726059242"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11.400000000000002", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"71.3404", ",", "0.49144933730344953"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12.200000000000003", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"98.8472", ",", "0.6953129517447517"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13.000000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"139.1028", ",", "0.961511358676537"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13.800000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"194.0804", ",", "1.3399496611201482"}], "]"}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8769197684693336`*^9, 3.876919773231903*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"67252d56-cbff-4142-9cae-fc36f922c649"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.8`", ",", 
     InterpretationBox[
      TemplateBox[{"1.371", "0.010"},
       "Around"],
      Around[1.3708, 0.009660380116744999]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.6`", ",", 
     InterpretationBox[
      TemplateBox[{"1.890", "0.014"},
       "Around"],
      Around[1.8896, 0.014252183552003757`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.4000000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"2.609", "0.020"},
       "Around"],
      Around[2.6092, 0.01951076994892846]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.2`", ",", 
     InterpretationBox[
      TemplateBox[{"3.622", "0.027"},
       "Around"],
      Around[3.622, 0.02711690247797481]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", 
     InterpretationBox[
      TemplateBox[{"5.02", "0.04"},
       "Around"],
      Around[5.0172, 0.03788458346082171]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.8`", ",", 
     InterpretationBox[
      TemplateBox[{"7.04", "0.05"},
       "Around"],
      Around[7.038, 0.05230891319842165]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.6`", ",", 
     InterpretationBox[
      TemplateBox[{"9.64", "0.07"},
       "Around"],
      Around[9.6412, 0.071414459488258]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.3999999999999995`", ",", 
     InterpretationBox[
      TemplateBox[{"13.53", "0.10"},
       "Around"],
      Around[13.5272, 0.0970370241918007]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.2`", ",", 
     InterpretationBox[
      TemplateBox[{"18.83", "0.14"},
       "Around"],
      Around[18.8308, 0.13820415530656086`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", 
     InterpretationBox[
      TemplateBox[{"26.51", "0.18"},
       "Around"],
      Around[26.5088, 0.18488258172148112`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.8`", ",", 
     InterpretationBox[
      TemplateBox[{"36.89", "0.26"},
       "Around"],
      Around[36.892, 0.25806691845333396`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.600000000000001`", ",", 
     InterpretationBox[
      TemplateBox[{"51.48", "0.35"},
       "Around"],
      Around[51.484, 0.353070726059242]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.400000000000002`", ",", 
     InterpretationBox[
      TemplateBox[{"71.3", "0.5"},
       "Around"],
      Around[71.3404, 0.49144933730344953`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.200000000000003`", ",", 
     InterpretationBox[
      TemplateBox[{"98.8", "0.7"},
       "Around"],
      Around[98.8472, 0.6953129517447517]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.000000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"139.1", "1.0"},
       "Around"],
      Around[139.1028, 0.961511358676537]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.800000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"194.1", "1.3"},
       "Around"],
      Around[194.0804, 1.3399496611201482`]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.876919774067648*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"9beccd54-7d0b-429e-b6b8-e743b30d2535"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"t2", ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Mathematica 3D MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"java3d", ",", 
     RowBox[{"PlotStyle", "->", "Orange"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Java 3D MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"0.41", 
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.2", ",", "13.8"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Purple"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Exponential Fit\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<3D Ionizations for Increasing Nc at \
\[Lambda]\!\(\*StyleBox[\"i\",FontSize->10]\)\!\(\*StyleBox[\" \
\",FontSize->10]\)= 1\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", 
       StyleBox["c",
        FontSize->10]}], 
      StyleBox[",",
       FontSize->10], 
      RowBox[{"N", 
       StyleBox["i",
        FontSize->10]}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8769187224688187`*^9, 3.876918734625348*^9}, {
  3.876919780058467*^9, 3.876919807336521*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"3b7a8690-542b-4276-b18a-a001044e65a9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{1.8, 0.27136836322030267`}, {1.8, 0.3074846997479607}}], 
          LineBox[{{1.8, 0.3074846997479607}, {1.8, 0.3423419866916081}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{2.6000000000000005`, 0.5941118171072118}, {
           2.6000000000000005`, 0.6312717768418578}}], 
          
          LineBox[{{2.6000000000000005`, 0.6312717768418578}, {
           2.6000000000000005`, 0.6671002058746837}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{3.4000000000000004`, 0.8937218908422665}, {
           3.4000000000000004`, 0.9321640810304452}}], 
          
          LineBox[{{3.4000000000000004`, 0.9321640810304452}, {
           3.4000000000000004`, 0.9691830135991008}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{4.2, 1.1856645644936614`}, {4.2, 1.2267122912954254`}}], 
          LineBox[{{4.2, 1.2267122912954254`}, {4.2, 1.266141327491857}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{5.000000000000001, 1.630252194454612}, {5.000000000000001,
            1.6695918352538475`}}], 
          
          LineBox[{{5.000000000000001, 1.6695918352538475`}, {
           5.000000000000001, 1.7074422688177615`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{5.800000000000001, 1.8942763620121372`}, {
           5.800000000000001, 1.937301774518713}}], 
          
          LineBox[{{5.800000000000001, 1.937301774518713}, {5.800000000000001,
            1.9785521117381715`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          
          LineBox[{{6.6000000000000005`, 2.2826483821993095`}, {
           6.6000000000000005`, 2.3174737054877963`}}], 
          
          LineBox[{{6.6000000000000005`, 2.3174737054877963`}, {
           6.6000000000000005`, 2.351126929890017}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{7.4, 2.598653665992599}, {7.4, 2.6347624053323777`}}], 
          LineBox[{{7.4, 2.6347624053323777`}, {7.4, 2.669612615546451}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{8.2, 2.9932463396738767`}, {8.2, 3.026261478588814}}], 
          LineBox[{{8.2, 3.026261478588814}, {8.2, 3.058221364642489}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{9., 3.229885581648622}, {9., 3.2669037938787824`}}], 
          LineBox[{{9., 3.2669037938787824`}, {9., 3.3026004347606177`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{9.8, 3.5730707435170963`}, {9.8, 3.602231647388264}}], 
          LineBox[{{9.8, 3.602231647388264}, {9.8, 3.630566232259776}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{10.6, 3.903338433533111}, {10.6, 3.9373008126124147`}}], 
          
          LineBox[{{10.6, 3.9373008126124147`}, {10.6, 
           3.970147535140991}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{11.4, 4.273487252844311}, {11.4, 4.309455941839047}}], 
          LineBox[{{11.4, 4.309455941839047}, {11.4, 4.344175677491399}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{12.2, 4.593487983563279}, {12.2, 4.626246511590008}}], 
          LineBox[{{12.2, 4.626246511590008}, {12.2, 4.657965870143603}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{13., 4.876287339657866}, {13., 4.911109574710704}}], 
          LineBox[{{13., 4.911109574710704}, {13., 4.944759915268196}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {}, {
          LineBox[{{13.8, 5.236109111281765}, {13.8, 5.271100320254484}}], 
          
          LineBox[{{13.8, 5.271100320254484}, {13.8, 
           5.304908426104419}}]}}}, {{Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8, 0.3423419866916081}, 
             Offset[{3, 0}, {1.8, 0.3423419866916081}]}, {{1.8, 
             0.3423419866916081}, 
             Offset[{-3, 0}, {1.8, 0.3423419866916081}]}, {{1.8, 
             0.27136836322030267`}, 
             Offset[{3, 0}, {1.8, 0.27136836322030267`}]}, {{1.8, 
             0.27136836322030267`}, 
             Offset[{-3, 0}, {1.8, 0.27136836322030267`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.6000000000000005`, 0.6671002058746837}, 
             Offset[{3, 0}, {2.6000000000000005`, 0.6671002058746837}]}, {{
             2.6000000000000005`, 0.6671002058746837}, 
             Offset[{-3, 0}, {2.6000000000000005`, 0.6671002058746837}]}, {{
             2.6000000000000005`, 0.5941118171072118}, 
             Offset[{3, 0}, {2.6000000000000005`, 0.5941118171072118}]}, {{
             2.6000000000000005`, 0.5941118171072118}, 
             
             Offset[{-3, 0}, {2.6000000000000005`, 
              0.5941118171072118}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.4000000000000004`, 0.9691830135991008}, 
             Offset[{3, 0}, {3.4000000000000004`, 0.9691830135991008}]}, {{
             3.4000000000000004`, 0.9691830135991008}, 
             Offset[{-3, 0}, {3.4000000000000004`, 0.9691830135991008}]}, {{
             3.4000000000000004`, 0.8937218908422665}, 
             Offset[{3, 0}, {3.4000000000000004`, 0.8937218908422665}]}, {{
             3.4000000000000004`, 0.8937218908422665}, 
             
             Offset[{-3, 0}, {3.4000000000000004`, 
              0.8937218908422665}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.2, 1.266141327491857}, 
             Offset[{3, 0}, {4.2, 1.266141327491857}]}, {{4.2, 
             1.266141327491857}, 
             Offset[{-3, 0}, {4.2, 1.266141327491857}]}, {{4.2, 
             1.1856645644936614`}, 
             Offset[{3, 0}, {4.2, 1.1856645644936614`}]}, {{4.2, 
             1.1856645644936614`}, 
             Offset[{-3, 0}, {4.2, 1.1856645644936614`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.000000000000001, 1.7074422688177615`}, 
             Offset[{3, 0}, {5.000000000000001, 1.7074422688177615`}]}, {{
             5.000000000000001, 1.7074422688177615`}, 
             Offset[{-3, 0}, {5.000000000000001, 1.7074422688177615`}]}, {{
             5.000000000000001, 1.630252194454612}, 
             Offset[{3, 0}, {5.000000000000001, 1.630252194454612}]}, {{
             5.000000000000001, 1.630252194454612}, 
             Offset[{-3, 0}, {5.000000000000001, 1.630252194454612}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.800000000000001, 1.9785521117381715`}, 
             Offset[{3, 0}, {5.800000000000001, 1.9785521117381715`}]}, {{
             5.800000000000001, 1.9785521117381715`}, 
             Offset[{-3, 0}, {5.800000000000001, 1.9785521117381715`}]}, {{
             5.800000000000001, 1.8942763620121372`}, 
             Offset[{3, 0}, {5.800000000000001, 1.8942763620121372`}]}, {{
             5.800000000000001, 1.8942763620121372`}, 
             Offset[{-3, 0}, {5.800000000000001, 1.8942763620121372`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.6000000000000005`, 2.351126929890017}, 
             Offset[{3, 0}, {6.6000000000000005`, 2.351126929890017}]}, {{
             6.6000000000000005`, 2.351126929890017}, 
             Offset[{-3, 0}, {6.6000000000000005`, 2.351126929890017}]}, {{
             6.6000000000000005`, 2.2826483821993095`}, 
             Offset[{3, 0}, {6.6000000000000005`, 2.2826483821993095`}]}, {{
             6.6000000000000005`, 2.2826483821993095`}, 
             
             Offset[{-3, 0}, {6.6000000000000005`, 
              2.2826483821993095`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.4, 2.669612615546451}, 
             Offset[{3, 0}, {7.4, 2.669612615546451}]}, {{7.4, 
             2.669612615546451}, 
             Offset[{-3, 0}, {7.4, 2.669612615546451}]}, {{7.4, 
             2.598653665992599}, 
             Offset[{3, 0}, {7.4, 2.598653665992599}]}, {{7.4, 
             2.598653665992599}, 
             Offset[{-3, 0}, {7.4, 2.598653665992599}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8.2, 3.058221364642489}, 
             Offset[{3, 0}, {8.2, 3.058221364642489}]}, {{8.2, 
             3.058221364642489}, 
             Offset[{-3, 0}, {8.2, 3.058221364642489}]}, {{8.2, 
             2.9932463396738767`}, 
             Offset[{3, 0}, {8.2, 2.9932463396738767`}]}, {{8.2, 
             2.9932463396738767`}, 
             Offset[{-3, 0}, {8.2, 2.9932463396738767`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9., 3.3026004347606177`}, 
             Offset[{3, 0}, {9., 3.3026004347606177`}]}, {{9., 
             3.3026004347606177`}, 
             Offset[{-3, 0}, {9., 3.3026004347606177`}]}, {{9., 
             3.229885581648622}, 
             Offset[{3, 0}, {9., 3.229885581648622}]}, {{9., 
             3.229885581648622}, 
             Offset[{-3, 0}, {9., 3.229885581648622}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9.8, 3.630566232259776}, 
             Offset[{3, 0}, {9.8, 3.630566232259776}]}, {{9.8, 
             3.630566232259776}, 
             Offset[{-3, 0}, {9.8, 3.630566232259776}]}, {{9.8, 
             3.5730707435170963`}, 
             Offset[{3, 0}, {9.8, 3.5730707435170963`}]}, {{9.8, 
             3.5730707435170963`}, 
             Offset[{-3, 0}, {9.8, 3.5730707435170963`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10.6, 3.970147535140991}, 
             Offset[{3, 0}, {10.6, 3.970147535140991}]}, {{10.6, 
             3.970147535140991}, 
             Offset[{-3, 0}, {10.6, 3.970147535140991}]}, {{10.6, 
             3.903338433533111}, 
             Offset[{3, 0}, {10.6, 3.903338433533111}]}, {{10.6, 
             3.903338433533111}, 
             Offset[{-3, 0}, {10.6, 3.903338433533111}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11.4, 4.344175677491399}, 
             Offset[{3, 0}, {11.4, 4.344175677491399}]}, {{11.4, 
             4.344175677491399}, 
             Offset[{-3, 0}, {11.4, 4.344175677491399}]}, {{11.4, 
             4.273487252844311}, 
             Offset[{3, 0}, {11.4, 4.273487252844311}]}, {{11.4, 
             4.273487252844311}, 
             Offset[{-3, 0}, {11.4, 4.273487252844311}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12.2, 4.657965870143603}, 
             Offset[{3, 0}, {12.2, 4.657965870143603}]}, {{12.2, 
             4.657965870143603}, 
             Offset[{-3, 0}, {12.2, 4.657965870143603}]}, {{12.2, 
             4.593487983563279}, 
             Offset[{3, 0}, {12.2, 4.593487983563279}]}, {{12.2, 
             4.593487983563279}, 
             Offset[{-3, 0}, {12.2, 4.593487983563279}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13., 4.944759915268196}, 
             Offset[{3, 0}, {13., 4.944759915268196}]}, {{13., 
             4.944759915268196}, 
             Offset[{-3, 0}, {13., 4.944759915268196}]}, {{13., 
             4.876287339657866}, 
             Offset[{3, 0}, {13., 4.876287339657866}]}, {{13., 
             4.876287339657866}, 
             Offset[{-3, 0}, {13., 4.876287339657866}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13.8, 5.304908426104419}, 
             Offset[{3, 0}, {13.8, 5.304908426104419}]}, {{13.8, 
             5.304908426104419}, 
             Offset[{-3, 0}, {13.8, 5.304908426104419}]}, {{13.8, 
             5.236109111281765}, 
             Offset[{3, 0}, {13.8, 5.236109111281765}]}, {{13.8, 
             5.236109111281765}, 
             Offset[{-3, 0}, {13.8, 5.236109111281765}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{0.2, 0.}, {1., 0.}, {1.8, 0.3074846997479607}, {
          2.6000000000000005`, 0.6312717768418578}, {3.4000000000000004`, 
          0.9321640810304452}, {4.2, 1.2267122912954254`}, {5.000000000000001,
           1.6695918352538475`}, {5.800000000000001, 1.937301774518713}, {
          6.6000000000000005`, 2.3174737054877963`}, {7.4, 
          2.6347624053323777`}, {8.2, 3.026261478588814}, {9., 
          3.2669037938787824`}, {9.8, 3.602231647388264}, {10.6, 
          3.9373008126124147`}, {11.4, 4.309455941839047}, {12.2, 
          4.626246511590008}, {13., 4.911109574710704}, {13.8, 
          5.271100320254484}}]}}}, {{}, {}}}, {{{{Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{1.8, 0.3083223046555192}, {1.8, 0.3153945110183167}}], 
          LineBox[{{1.8, 0.3153945110183167}, {1.8, 0.3224170523143274}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{2.6, 0.628794144324584}, {2.6, 0.6363651664609608}}], 
          LineBox[{{2.6, 0.6363651664609608}, {2.6, 0.6438792986663714}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{3.4000000000000004`, 0.9515378801149931}, {
           3.4000000000000004`, 0.9590436609398039}}], 
          
          LineBox[{{3.4000000000000004`, 0.9590436609398039}, {
           3.4000000000000004`, 0.9664935244612876}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{4.2, 1.279511472569745}, {4.2, 1.2870263594612217`}}], 
          LineBox[{{4.2, 1.2870263594612217`}, {4.2, 
           1.2944851937945192`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{5., 1.6052924150287702`}, {5., 1.6128720091683826`}}], 
          LineBox[{{5., 1.6128720091683826`}, {5., 1.620394584965645}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{5.8, 1.9438639265122495`}, {5.8, 1.9513240388993935`}}], 
          
          LineBox[{{5.8, 1.9513240388993935`}, {5.8, 
           1.9587289098626401`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{6.6, 2.2586107956538632`}, {6.6, 2.2660455822030974`}}], 
          LineBox[{{6.6, 2.2660455822030974`}, {6.6, 2.273425500385022}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{7.3999999999999995`, 2.5975031456668916`}, {
           7.3999999999999995`, 2.6047024732420825`}}], 
          
          LineBox[{{7.3999999999999995`, 2.6047024732420825`}, {
           7.3999999999999995`, 2.611850340756894}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{8.2, 2.928127501319924}, {8.2, 2.9354938271622273`}}], 
          LineBox[{{8.2, 2.9354938271622273`}, {8.2, 2.942806286802317}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{9., 3.270477933462319}, {9., 3.2774767533390188`}}], 
          LineBox[{{9., 3.2774767533390188`}, {9., 3.284426929984089}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{9.8, 3.6009749442602272`}, {9.8, 3.6079947253734725`}}], 
          LineBox[{{9.8, 3.6079947253734725`}, {9.8, 3.614965572466408}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          LineBox[{{10.600000000000001`, 3.9343895836566687`}, {
           10.600000000000001`, 3.9412710797871315`}}], 
          
          LineBox[{{10.600000000000001`, 3.9412710797871315`}, {
           10.600000000000001`, 3.9481055443915363`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{11.400000000000002`, 4.260550155338182}, {
           11.400000000000002`, 4.267462786867648}}], 
          
          LineBox[{{11.400000000000002`, 4.267462786867648}, {
           11.400000000000002`, 4.274327961784849}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{12.200000000000003`, 4.586516146704285}, {
           12.200000000000003`, 4.593575223469364}}], 
          
          LineBox[{{12.200000000000003`, 4.593575223469364}, {
           12.200000000000003`, 4.600584818759168}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{13.000000000000004`, 4.928276992134209}, {
           13.000000000000004`, 4.93521322813011}}], 
          
          LineBox[{{13.000000000000004`, 4.93521322813011}, {
           13.000000000000004`, 4.9421016839803436`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{13.800000000000004`, 5.2613444669301135`}, {
           13.800000000000004`, 5.268272506199387}}], 
          
          LineBox[{{13.800000000000004`, 5.268272506199387}, {
           13.800000000000004`, 5.275152877794712}}]}}}, {{
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8, 0.3224170523143274}, 
             Offset[{3, 0}, {1.8, 0.3224170523143274}]}, {{1.8, 
             0.3224170523143274}, 
             Offset[{-3, 0}, {1.8, 0.3224170523143274}]}, {{1.8, 
             0.3083223046555192}, 
             Offset[{3, 0}, {1.8, 0.3083223046555192}]}, {{1.8, 
             0.3083223046555192}, 
             Offset[{-3, 0}, {1.8, 0.3083223046555192}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.6, 0.6438792986663714}, 
             Offset[{3, 0}, {2.6, 0.6438792986663714}]}, {{2.6, 
             0.6438792986663714}, 
             Offset[{-3, 0}, {2.6, 0.6438792986663714}]}, {{2.6, 
             0.628794144324584}, 
             Offset[{3, 0}, {2.6, 0.628794144324584}]}, {{2.6, 
             0.628794144324584}, 
             Offset[{-3, 0}, {2.6, 0.628794144324584}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.4000000000000004`, 0.9664935244612876}, 
             Offset[{3, 0}, {3.4000000000000004`, 0.9664935244612876}]}, {{
             3.4000000000000004`, 0.9664935244612876}, 
             Offset[{-3, 0}, {3.4000000000000004`, 0.9664935244612876}]}, {{
             3.4000000000000004`, 0.9515378801149931}, 
             Offset[{3, 0}, {3.4000000000000004`, 0.9515378801149931}]}, {{
             3.4000000000000004`, 0.9515378801149931}, 
             
             Offset[{-3, 0}, {3.4000000000000004`, 
              0.9515378801149931}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.2, 1.2944851937945192`}, 
             Offset[{3, 0}, {4.2, 1.2944851937945192`}]}, {{4.2, 
             1.2944851937945192`}, 
             Offset[{-3, 0}, {4.2, 1.2944851937945192`}]}, {{4.2, 
             1.279511472569745}, 
             Offset[{3, 0}, {4.2, 1.279511472569745}]}, {{4.2, 
             1.279511472569745}, 
             Offset[{-3, 0}, {4.2, 1.279511472569745}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5., 1.620394584965645}, 
             Offset[{3, 0}, {5., 1.620394584965645}]}, {{5., 
             1.620394584965645}, 
             Offset[{-3, 0}, {5., 1.620394584965645}]}, {{5., 
             1.6052924150287702`}, 
             Offset[{3, 0}, {5., 1.6052924150287702`}]}, {{5., 
             1.6052924150287702`}, 
             Offset[{-3, 0}, {5., 1.6052924150287702`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.8, 1.9587289098626401`}, 
             Offset[{3, 0}, {5.8, 1.9587289098626401`}]}, {{5.8, 
             1.9587289098626401`}, 
             Offset[{-3, 0}, {5.8, 1.9587289098626401`}]}, {{5.8, 
             1.9438639265122495`}, 
             Offset[{3, 0}, {5.8, 1.9438639265122495`}]}, {{5.8, 
             1.9438639265122495`}, 
             Offset[{-3, 0}, {5.8, 1.9438639265122495`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.6, 2.273425500385022}, 
             Offset[{3, 0}, {6.6, 2.273425500385022}]}, {{6.6, 
             2.273425500385022}, 
             Offset[{-3, 0}, {6.6, 2.273425500385022}]}, {{6.6, 
             2.2586107956538632`}, 
             Offset[{3, 0}, {6.6, 2.2586107956538632`}]}, {{6.6, 
             2.2586107956538632`}, 
             Offset[{-3, 0}, {6.6, 2.2586107956538632`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.3999999999999995`, 2.611850340756894}, 
             Offset[{3, 0}, {7.3999999999999995`, 2.611850340756894}]}, {{
             7.3999999999999995`, 2.611850340756894}, 
             Offset[{-3, 0}, {7.3999999999999995`, 2.611850340756894}]}, {{
             7.3999999999999995`, 2.5975031456668916`}, 
             Offset[{3, 0}, {7.3999999999999995`, 2.5975031456668916`}]}, {{
             7.3999999999999995`, 2.5975031456668916`}, 
             
             Offset[{-3, 0}, {7.3999999999999995`, 
              2.5975031456668916`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8.2, 2.942806286802317}, 
             Offset[{3, 0}, {8.2, 2.942806286802317}]}, {{8.2, 
             2.942806286802317}, 
             Offset[{-3, 0}, {8.2, 2.942806286802317}]}, {{8.2, 
             2.928127501319924}, 
             Offset[{3, 0}, {8.2, 2.928127501319924}]}, {{8.2, 
             2.928127501319924}, 
             Offset[{-3, 0}, {8.2, 2.928127501319924}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9., 3.284426929984089}, 
             Offset[{3, 0}, {9., 3.284426929984089}]}, {{9., 
             3.284426929984089}, 
             Offset[{-3, 0}, {9., 3.284426929984089}]}, {{9., 
             3.270477933462319}, 
             Offset[{3, 0}, {9., 3.270477933462319}]}, {{9., 
             3.270477933462319}, 
             Offset[{-3, 0}, {9., 3.270477933462319}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9.8, 3.614965572466408}, 
             Offset[{3, 0}, {9.8, 3.614965572466408}]}, {{9.8, 
             3.614965572466408}, 
             Offset[{-3, 0}, {9.8, 3.614965572466408}]}, {{9.8, 
             3.6009749442602272`}, 
             Offset[{3, 0}, {9.8, 3.6009749442602272`}]}, {{9.8, 
             3.6009749442602272`}, 
             Offset[{-3, 0}, {9.8, 3.6009749442602272`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10.600000000000001`, 3.9481055443915363`}, 
             Offset[{3, 0}, {10.600000000000001`, 3.9481055443915363`}]}, {{
             10.600000000000001`, 3.9481055443915363`}, 
             Offset[{-3, 0}, {10.600000000000001`, 3.9481055443915363`}]}, {{
             10.600000000000001`, 3.9343895836566687`}, 
             Offset[{3, 0}, {10.600000000000001`, 3.9343895836566687`}]}, {{
             10.600000000000001`, 3.9343895836566687`}, 
             
             Offset[{-3, 0}, {10.600000000000001`, 
              3.9343895836566687`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11.400000000000002`, 4.274327961784849}, 
             Offset[{3, 0}, {11.400000000000002`, 4.274327961784849}]}, {{
             11.400000000000002`, 4.274327961784849}, 
             Offset[{-3, 0}, {11.400000000000002`, 4.274327961784849}]}, {{
             11.400000000000002`, 4.260550155338182}, 
             Offset[{3, 0}, {11.400000000000002`, 4.260550155338182}]}, {{
             11.400000000000002`, 4.260550155338182}, 
             Offset[{-3, 0}, {11.400000000000002`, 4.260550155338182}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12.200000000000003`, 4.600584818759168}, 
             Offset[{3, 0}, {12.200000000000003`, 4.600584818759168}]}, {{
             12.200000000000003`, 4.600584818759168}, 
             Offset[{-3, 0}, {12.200000000000003`, 4.600584818759168}]}, {{
             12.200000000000003`, 4.586516146704285}, 
             Offset[{3, 0}, {12.200000000000003`, 4.586516146704285}]}, {{
             12.200000000000003`, 4.586516146704285}, 
             Offset[{-3, 0}, {12.200000000000003`, 4.586516146704285}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13.000000000000004`, 4.9421016839803436`}, 
             Offset[{3, 0}, {13.000000000000004`, 4.9421016839803436`}]}, {{
             13.000000000000004`, 4.9421016839803436`}, 
             Offset[{-3, 0}, {13.000000000000004`, 4.9421016839803436`}]}, {{
             13.000000000000004`, 4.928276992134209}, 
             Offset[{3, 0}, {13.000000000000004`, 4.928276992134209}]}, {{
             13.000000000000004`, 4.928276992134209}, 
             Offset[{-3, 0}, {13.000000000000004`, 4.928276992134209}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13.800000000000004`, 5.275152877794712}, 
             Offset[{3, 0}, {13.800000000000004`, 5.275152877794712}]}, {{
             13.800000000000004`, 5.275152877794712}, 
             Offset[{-3, 0}, {13.800000000000004`, 5.275152877794712}]}, {{
             13.800000000000004`, 5.2613444669301135`}, 
             Offset[{3, 0}, {13.800000000000004`, 5.2613444669301135`}]}, {{
             13.800000000000004`, 5.2613444669301135`}, 
             
             Offset[{-3, 0}, {13.800000000000004`, 
              5.2613444669301135`}]}}], {{{1., 0.}, {0., 1.}}, {0., 
           0.}}]}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         PointBox[{{0.2, 0.}, {1., 0.}, {1.8, 0.3153945110183167}, {2.6, 
          0.6363651664609608}, {3.4000000000000004`, 0.9590436609398039}, {
          4.2, 1.2870263594612217`}, {5., 1.6128720091683826`}, {5.8, 
          1.9513240388993935`}, {6.6, 2.2660455822030974`}, {
          7.3999999999999995`, 2.6047024732420825`}, {8.2, 
          2.9354938271622273`}, {9., 3.2774767533390188`}, {9.8, 
          3.6079947253734725`}, {10.600000000000001`, 3.9412710797871315`}, {
          11.400000000000002`, 4.267462786867648}, {12.200000000000003`, 
          4.593575223469364}, {13.000000000000004`, 4.93521322813011}, {
          13.800000000000004`, 5.268272506199387}}]}}}, {{}, {}}}, {{{{}, {}, 
        
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1:eJwVj3tU0ncchgHvGoXwK5Z3Ba+/MtOsaej3k7bKzbbQHcguplTavKSpVB6x
8lZsZVJmYtsJ83qWVsetdTGNcvNoWqmFTlwZmmIOVFRSqcixP97z/vW853md
eSkRB0kEAmG7If+37duKiZ/LniBV9XLWrF4m9Q7/IAxz6UDfkgr2Tg7JpCF/
sJnz1zvQrWjtifFWmTThDGF3RFMnSqO/fPymUCZtxKPbzd88Q1qhaOtTe5l0
VeO5nkBqD9InWkVWB72UdpK21ddyexHZl5jAze6Rml96GJsz/BrtE8jXHNN1
Ss+6hpUsWfcOGQ+9It67eF+6WG3//WCSBhkdX/w7gX0aFUeXOhKua5EPb2tN
lfghCm/6iWQbqkNWtTFvAmKfoyzU8qm2UI9KBCI+K7APjf0eYEa3IUJfaPNk
w8BrJL1CnT7BM4LpqJbp1rphFHGpUCnJMwHiuOnTdk8lOhbTGt/8wgw826Yl
62fHERdJtMUfLGC3oDkyUDCBRlIzeUX0JbAQUudyL1ODjPmUPWd4S2HH1Ndi
890zaKq1ysculAK42T96hp0WVTc66mYSraF4S7BCS5pDv/Xb+O4pooK3j3Bo
UDGP7AhjGmcJDcILWl4UX9WhLtGF96OtGMwTu+Fzzkek8CKfMpUvB/d/n131
+0qPAr3jd7ga0WFEdzXTwXsRqXZtutDn/gWMR9UFWJ8hgE6k5o58uRIqk07e
XIgjAtvn6AFNjA0waM1DjVEkMJV3z+3k20Lc1Mw5HssIqHV1ush8O2hx+qXt
so0xxCsPhGy/bg9vR28+qrYygZX4FKWyyQHaFPfXXlGbwHI513V+1BHSUrxj
f1CYwrqdTr2T+U6wPnKFU2uXGZzblr2LQnaGpqQ5juktcxAmPyE1lDuDuQ2E
u1yzAD/654mTXi6wQp9zn5FnCT/2plmLG1yA5b/hTkOMFeS393HXbGaAF5Fz
xIa9BLyBMaR9yoABUnLVobVkEKijCwNimbBDPFFygbkUMu3zBPUqJgj3xy1K
zJaB8/6xykPpriDPi1gIVC6Dw68DJytN3UBnK+P2J1Ig4dXRLLLIDZSUrKmC
VxSwpFTgc0x3uNPFUZZzrIGzk4x53HUHWoCamfvcGtiusUiIPIDdnO3ICaaC
xq2qMP6lB6Rbbc4svUuF4BtdDvy9nsDPMC3q9KDBhm0b33WOeIKxMFfdWkqD
Xvpl2bVjXnD0oN+vqykYuCTJjWoIOHTsVTgLT2EQusrqhYURDgNxtO7sXAwO
qFnlySY4qFK2nEjPx6A2qZzlb4nD0tz6gWghBquS4/l/0XCIqDle7C/CYP3h
98phNwM/STF5K8Hgm1TrDsftBv7kpndBUgySfELFed/h8EmYcdnvMQbnNRlx
Y2zD3sXazZ5/YtCd2k+6xcFhTRX5GtaGAeeIZGNwDA4Z7fIo1XMMYtJW39iT
buApaZ3iQQxyfPdlPeLjQLapzjyvwKBiRhTGPI6DA6PfPX8Yg9E07ahKgMMm
/+D8FCUGCekPHLJO41AQZRm0ZRKDs34T6kEhDiW8INVGDQb1sw4PQs7iUJOY
WrZ2BoOp9FyupQiHJ9l97+3mMKCsu+16+KLh32mLKuoCBr7a0dmeS4Z/RawI
8w8YRN6mt/iXGvzEKYTPHzHIyAgTlZUZ/Coqbs7qMfgPNtYj5Q==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$1356892#1"]& ]}}, {}}}, {
    PlotLabel -> 
     FormBox["\"3D Ionizations for Increasing Nc at \
\[Lambda]\\!\\(\\*StyleBox[\\\"i\\\",FontSize->10]\\)\\!\\(\\*StyleBox[\\\" \
\\\",FontSize->10]\\)= 1\"", TraditionalForm], AxesLabel -> {
       FormBox[
        RowBox[{"c", " ", "N"}], TraditionalForm], 
       FormBox[
        RowBox[{"i", " ", "N"}], TraditionalForm]}, DisplayFunction -> 
     Identity, GridLines -> {None, None}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -0.41513918985643816`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 13.8}, {-0.41513918985643816`, 5.304908426104419}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Mathematica 3D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Java 3D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Exponential Fit\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8769187260701847`*^9, 3.876918735034268*^9}, {
  3.876919797099896*^9, 3.876919807704392*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"0ea2bd13-43ba-468b-ab08-71d82e159ca6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exploring 1D alpha", "Section",
 CellChangeTimes->{{3.875292859536354*^9, 
  3.875292860029972*^9}},ExpressionUUID->"67e0e48a-2fa6-4412-87bd-\
99093c224345"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindAlpha", "[", "\[Lambda]i_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "electrons", ",", "result", ",", "length", ",", "i", ",", "total", ",", 
      "slopes", ",", "alpha", ",", "e"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"electrons", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Nc", ",", 
          RowBox[{"AvgElectronsWeighted", "[", 
           RowBox[{"Nc", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Lambda]i"}], ")"}], " ", "Nc"}], ")"}], 
            ",", "500"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Nc", ",", 
          RowBox[{"\[Lambda]i", "+", "1"}], ",", "20", ",", "0.5"}], "}"}]}], 
       "]"}]}], ";", "\n", 
     RowBox[{"alpha", " ", "=", " ", 
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"e", "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"e", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "-", "\[Lambda]i"}], 
           ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", "electrons"}], "}"}]}], "]"}], "]"}]}], ";", "\n",
      "alpha"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[237]:=",ExpressionUUID->"807a16c0-cd09-49c9-b7e3-01de03f0237a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindAlpha", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.866982638706086*^9, 3.8669826390693827`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"e69dc751-b84a-4eab-9bd3-a12aad8a16e2"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"0.2845", "0.0009"},
   "Around"],
  Around[0.28454014727038274`, 0.0008905246677864013]]], "Output",
 CellChangeTimes->{3.866982639961941*^9, 3.876760137624857*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"c99fa086-27f5-4afc-b8b3-7fe5ff814a4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"javaalphas", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.25", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.6602595438326849", ",", "0.001904193660625115"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.47844948673235005", ",", "0.001748144153630099"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.75", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.35821274297950323", ",", "0.0031233087246661244"}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.27433365451618424", ",", "0.008691189348246631"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.25", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.21314895885656557", ",", "0.013389317555812227"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.1669038047699682", ",", "0.01749867647681158"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.75", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.13018046550569878", ",", "0.014267346022973922"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.1015082557377325", ",", "0.012894206875325626"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.2500000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.078742597634773", ",", "0.011952013460590393"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.5", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.061520625296323746", ",", "0.010962062286845231"}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.75", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.04725434577446056", ",", "0.00734274289001424"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.0358071249036958", ",", "0.004959892432166247"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.25", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.02778741774482209", ",", "0.004504199943380026"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.5", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.021572007247372436", ",", "0.003796229153906858"}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.7500000000000004", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.015726014436025514", ",", "0.0022654561964774527"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.0", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.012178682642516597", ",", "0.0017503399885901638"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.25", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"0.008830658060106817", ",", "0.0010123646555449694"}], 
       "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.876760139538412*^9, 3.876760148566572*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"a2f4455b-3a45-46b3-8e43-aa9024d836f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.6603", "0.0019"},
       "Around"],
      Around[0.6602595438326849, 0.001904193660625115]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.4784", "0.0017"},
       "Around"],
      Around[0.47844948673235005`, 0.001748144153630099]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     InterpretationBox[
      TemplateBox[{"0.3582", "0.0031"},
       "Around"],
      Around[0.35821274297950323`, 0.0031233087246661244`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.274", "0.009"},
       "Around"],
      Around[0.27433365451618424`, 0.008691189348246631]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.213", "0.013"},
       "Around"],
      Around[0.21314895885656557`, 0.013389317555812227`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.167", "0.017"},
       "Around"],
      Around[0.1669038047699682, 0.01749867647681158]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", 
     InterpretationBox[
      TemplateBox[{"0.130", "0.014"},
       "Around"],
      Around[0.13018046550569878`, 0.014267346022973922`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.102", "0.013"},
       "Around"],
      Around[0.1015082557377325, 0.012894206875325626`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.2500000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"0.079", "0.012"},
       "Around"],
      Around[0.078742597634773, 0.011952013460590393`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.062", "0.011"},
       "Around"],
      Around[0.061520625296323746`, 0.010962062286845231`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.75`", ",", 
     InterpretationBox[
      TemplateBox[{"0.047", "0.007"},
       "Around"],
      Around[0.04725434577446056, 0.00734274289001424]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.036", "0.005"},
       "Around"],
      Around[0.0358071249036958, 0.004959892432166247]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.028", "0.005"},
       "Around"],
      Around[0.02778741774482209, 0.004504199943380026]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.022", "0.004"},
       "Around"],
      Around[0.021572007247372436`, 0.003796229153906858]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.7500000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0157", "0.0023"},
       "Around"],
      Around[0.015726014436025514`, 0.0022654561964774527`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0122", "0.0018"},
       "Around"],
      Around[0.012178682642516597`, 0.0017503399885901638`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0088", "0.0010"},
       "Around"],
      Around[0.008830658060106817, 0.0010123646555449694`]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.876760148994727*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"5d54b29a-5861-403c-bcde-baaf67b72ff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alphas1d", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"FindAlpha", "[", "r", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0.25", ",", "4.25", ",", "0.25"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.87676016103904*^9, 3.876760182593679*^9}, {
  3.8767602430725813`*^9, 3.8767602438205347`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"5c60235f-37a4-454d-8f33-1e46c11871b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.6600", "0.0024"},
       "Around"],
      Around[0.6599692755464337, 0.0024237644146815622`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.4842", "0.0013"},
       "Around"],
      Around[0.4841999774330776, 0.0013313815400658711`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     InterpretationBox[
      TemplateBox[{"0.3674", "0.0010"},
       "Around"],
      Around[0.36742279270857914`, 0.0010431789061983727`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.2843", "0.0009"},
       "Around"],
      Around[0.28425782238433617`, 0.0008897216924218482]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.2257", "0.0009"},
       "Around"],
      Around[0.2256867891654597, 0.0008606311266881486]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.1767", "0.0008"},
       "Around"],
      Around[0.17668116933124758`, 0.0008111370379925027]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", 
     InterpretationBox[
      TemplateBox[{"0.1409", "0.0008"},
       "Around"],
      Around[0.14085476256530532`, 0.0008065718536496754]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.1128", "0.0008"},
       "Around"],
      Around[0.11278662879836919`, 0.000763536729233432]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0897", "0.0007"},
       "Around"],
      Around[0.08972036547997904, 0.0007411029029192725]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0717", "0.0007"},
       "Around"],
      Around[0.07171375936907269, 0.0007037623484853872]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.75`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0573", "0.0007"},
       "Around"],
      Around[0.05727056432085293, 0.0006646870505361816]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0459", "0.0006"},
       "Around"],
      Around[0.045899019475035954`, 0.0006305756665093144]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0352", "0.0006"},
       "Around"],
      Around[0.03519807128005919, 0.0005638020913588321]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0276", "0.0005"},
       "Around"],
      Around[0.02761943437925158, 0.0005119277948437997]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.75`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0216", "0.0005"},
       "Around"],
      Around[0.021606598870388304`, 0.0004697871475310423]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0174", "0.0004"},
       "Around"],
      Around[0.01735843686043104, 0.00044141267843744107`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.25`", ",", 
     InterpretationBox[
      TemplateBox[{"0.0137", "0.0004"},
       "Around"],
      Around[0.013681006215771419`, 0.00039747875805396725`]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.876760191799296*^9, 3.876760253336423*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"a3d1dfba-2f1d-4027-a27a-9c598f2ec1c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "javaalphas", "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"alphas1d", ",", 
     RowBox[{"PlotStyle", "->", "Orange"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8767601500099783`*^9, 3.8767601541601753`*^9}, {
  3.876760207015436*^9, 3.87676021607768*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"6e513f72-f36d-4285-b5cb-a58f1abd46e8"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.25, 0.6583553501720598}, {0.25, 0.6602595438326849}}], 
          LineBox[{{0.25, 0.6602595438326849}, {0.25, 0.66216373749331}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.5, 0.47670134257871993`}, {0.5, 0.47844948673235005`}}],
           LineBox[{{0.5, 0.47844948673235005`}, {0.5, 
           0.48019763088598016`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.75, 0.3550894342548371}, {0.75, 0.35821274297950323`}}],
           LineBox[{{0.75, 0.35821274297950323`}, {0.75, 
           0.3613360517041694}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1., 0.2656424651679376}, {1., 0.27433365451618424`}}], 
          LineBox[{{1., 0.27433365451618424`}, {1., 0.2830248438644309}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.25, 0.19975964130075335`}, {1.25, 
           0.21314895885656557`}}], 
          LineBox[{{1.25, 0.21314895885656557`}, {1.25, 
           0.22653827641237778`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.5, 0.1494051282931566}, {1.5, 0.1669038047699682}}], 
          LineBox[{{1.5, 0.1669038047699682}, {1.5, 0.18440248124677977`}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.75, 0.11591311948272487`}, {1.75, 
           0.13018046550569878`}}], 
          LineBox[{{1.75, 0.13018046550569878`}, {1.75, 
           0.1444478115286727}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2., 0.08861404886240688}, {2., 0.1015082557377325}}], 
          LineBox[{{2., 0.1015082557377325}, {2., 0.11440246261305813`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.2500000000000004`, 0.0667905841741826}, {
           2.2500000000000004`, 0.078742597634773}}], 
          LineBox[{{2.2500000000000004`, 0.078742597634773}, {
           2.2500000000000004`, 0.09069461109536339}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.5, 0.050558563009478516`}, {2.5, 
           0.061520625296323746`}}], 
          LineBox[{{2.5, 0.061520625296323746`}, {2.5, 
           0.07248268758316898}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.75, 0.03991160288444632}, {2.75, 0.04725434577446056}}],
           LineBox[{{2.75, 0.04725434577446056}, {2.75, 
           0.054597088664474804`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3., 0.030847232471529554`}, {3., 0.0358071249036958}}], 
          LineBox[{{3., 0.0358071249036958}, {3., 0.04076701733586205}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.25, 0.023283217801442064`}, {3.25, 
           0.02778741774482209}}], 
          LineBox[{{3.25, 0.02778741774482209}, {3.25, 
           0.032291617688202115`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.5, 0.017775778093465578`}, {3.5, 
           0.021572007247372436`}}], 
          LineBox[{{3.5, 0.021572007247372436`}, {3.5, 
           0.025368236401279293`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.7500000000000004`, 0.013460558239548061`}, {
           3.7500000000000004`, 0.015726014436025514`}}], 
          LineBox[{{3.7500000000000004`, 0.015726014436025514`}, {
           3.7500000000000004`, 0.017991470632502966`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{4., 0.010428342653926434`}, {4., 0.012178682642516597`}}],
           LineBox[{{4., 0.012178682642516597`}, {4., 0.01392902263110676}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{4.25, 0.007818293404561848}, {4.25, 
           0.008830658060106817}}], 
          LineBox[{{4.25, 0.008830658060106817}, {4.25, 
           0.009843022715651786}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.25, 0.66216373749331}, 
             Offset[{3, 0}, {0.25, 0.66216373749331}]}, {{0.25, 
             0.66216373749331}, Offset[{-3, 0}, {0.25, 0.66216373749331}]}, {{
             0.25, 0.6583553501720598}, 
             Offset[{3, 0}, {0.25, 0.6583553501720598}]}, {{0.25, 
             0.6583553501720598}, 
             Offset[{-3, 0}, {0.25, 0.6583553501720598}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.5, 0.48019763088598016`}, 
             Offset[{3, 0}, {0.5, 0.48019763088598016`}]}, {{0.5, 
             0.48019763088598016`}, 
             Offset[{-3, 0}, {0.5, 0.48019763088598016`}]}, {{0.5, 
             0.47670134257871993`}, 
             Offset[{3, 0}, {0.5, 0.47670134257871993`}]}, {{0.5, 
             0.47670134257871993`}, 
             Offset[{-3, 0}, {0.5, 0.47670134257871993`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.75, 0.3613360517041694}, 
             Offset[{3, 0}, {0.75, 0.3613360517041694}]}, {{0.75, 
             0.3613360517041694}, 
             Offset[{-3, 0}, {0.75, 0.3613360517041694}]}, {{0.75, 
             0.3550894342548371}, 
             Offset[{3, 0}, {0.75, 0.3550894342548371}]}, {{0.75, 
             0.3550894342548371}, 
             Offset[{-3, 0}, {0.75, 0.3550894342548371}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1., 0.2830248438644309}, 
             Offset[{3, 0}, {1., 0.2830248438644309}]}, {{1., 
             0.2830248438644309}, 
             Offset[{-3, 0}, {1., 0.2830248438644309}]}, {{1., 
             0.2656424651679376}, 
             Offset[{3, 0}, {1., 0.2656424651679376}]}, {{1., 
             0.2656424651679376}, 
             Offset[{-3, 0}, {1., 0.2656424651679376}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.25, 0.22653827641237778`}, 
             Offset[{3, 0}, {1.25, 0.22653827641237778`}]}, {{1.25, 
             0.22653827641237778`}, 
             Offset[{-3, 0}, {1.25, 0.22653827641237778`}]}, {{1.25, 
             0.19975964130075335`}, 
             Offset[{3, 0}, {1.25, 0.19975964130075335`}]}, {{1.25, 
             0.19975964130075335`}, 
             Offset[{-3, 0}, {1.25, 0.19975964130075335`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.5, 0.18440248124677977`}, 
             Offset[{3, 0}, {1.5, 0.18440248124677977`}]}, {{1.5, 
             0.18440248124677977`}, 
             Offset[{-3, 0}, {1.5, 0.18440248124677977`}]}, {{1.5, 
             0.1494051282931566}, 
             Offset[{3, 0}, {1.5, 0.1494051282931566}]}, {{1.5, 
             0.1494051282931566}, 
             Offset[{-3, 0}, {1.5, 0.1494051282931566}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.75, 0.1444478115286727}, 
             Offset[{3, 0}, {1.75, 0.1444478115286727}]}, {{1.75, 
             0.1444478115286727}, 
             Offset[{-3, 0}, {1.75, 0.1444478115286727}]}, {{1.75, 
             0.11591311948272487`}, 
             Offset[{3, 0}, {1.75, 0.11591311948272487`}]}, {{1.75, 
             0.11591311948272487`}, 
             Offset[{-3, 0}, {1.75, 0.11591311948272487`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.11440246261305813`}, 
             Offset[{3, 0}, {2., 0.11440246261305813`}]}, {{2., 
             0.11440246261305813`}, 
             Offset[{-3, 0}, {2., 0.11440246261305813`}]}, {{2., 
             0.08861404886240688}, 
             Offset[{3, 0}, {2., 0.08861404886240688}]}, {{2., 
             0.08861404886240688}, 
             Offset[{-3, 0}, {2., 0.08861404886240688}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.2500000000000004`, 0.09069461109536339}, 
             Offset[{3, 0}, {2.2500000000000004`, 0.09069461109536339}]}, {{
             2.2500000000000004`, 0.09069461109536339}, 
             Offset[{-3, 0}, {2.2500000000000004`, 0.09069461109536339}]}, {{
             2.2500000000000004`, 0.0667905841741826}, 
             Offset[{3, 0}, {2.2500000000000004`, 0.0667905841741826}]}, {{
             2.2500000000000004`, 0.0667905841741826}, 
             Offset[{-3, 0}, {2.2500000000000004`, 
              0.0667905841741826}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.5, 0.07248268758316898}, 
             Offset[{3, 0}, {2.5, 0.07248268758316898}]}, {{2.5, 
             0.07248268758316898}, 
             Offset[{-3, 0}, {2.5, 0.07248268758316898}]}, {{2.5, 
             0.050558563009478516`}, 
             Offset[{3, 0}, {2.5, 0.050558563009478516`}]}, {{2.5, 
             0.050558563009478516`}, 
             Offset[{-3, 0}, {2.5, 0.050558563009478516`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.75, 0.054597088664474804`}, 
             Offset[{3, 0}, {2.75, 0.054597088664474804`}]}, {{2.75, 
             0.054597088664474804`}, 
             Offset[{-3, 0}, {2.75, 0.054597088664474804`}]}, {{2.75, 
             0.03991160288444632}, 
             Offset[{3, 0}, {2.75, 0.03991160288444632}]}, {{2.75, 
             0.03991160288444632}, 
             Offset[{-3, 0}, {2.75, 0.03991160288444632}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3., 0.04076701733586205}, 
             Offset[{3, 0}, {3., 0.04076701733586205}]}, {{3., 
             0.04076701733586205}, 
             Offset[{-3, 0}, {3., 0.04076701733586205}]}, {{3., 
             0.030847232471529554`}, 
             Offset[{3, 0}, {3., 0.030847232471529554`}]}, {{3., 
             0.030847232471529554`}, 
             Offset[{-3, 0}, {3., 0.030847232471529554`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.25, 0.032291617688202115`}, 
             Offset[{3, 0}, {3.25, 0.032291617688202115`}]}, {{3.25, 
             0.032291617688202115`}, 
             Offset[{-3, 0}, {3.25, 0.032291617688202115`}]}, {{3.25, 
             0.023283217801442064`}, 
             Offset[{3, 0}, {3.25, 0.023283217801442064`}]}, {{3.25, 
             0.023283217801442064`}, 
             Offset[{-3, 0}, {3.25, 0.023283217801442064`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.5, 0.025368236401279293`}, 
             Offset[{3, 0}, {3.5, 0.025368236401279293`}]}, {{3.5, 
             0.025368236401279293`}, 
             Offset[{-3, 0}, {3.5, 0.025368236401279293`}]}, {{3.5, 
             0.017775778093465578`}, 
             Offset[{3, 0}, {3.5, 0.017775778093465578`}]}, {{3.5, 
             0.017775778093465578`}, 
             Offset[{-3, 0}, {3.5, 0.017775778093465578`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.7500000000000004`, 0.017991470632502966`}, 
             Offset[{3, 0}, {3.7500000000000004`, 0.017991470632502966`}]}, {{
             3.7500000000000004`, 0.017991470632502966`}, 
             Offset[{-3, 0}, {3.7500000000000004`, 
              0.017991470632502966`}]}, {{3.7500000000000004`, 
             0.013460558239548061`}, 
             Offset[{3, 0}, {3.7500000000000004`, 0.013460558239548061`}]}, {{
             3.7500000000000004`, 0.013460558239548061`}, 
             Offset[{-3, 0}, {3.7500000000000004`, 
              0.013460558239548061`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4., 0.01392902263110676}, 
             Offset[{3, 0}, {4., 0.01392902263110676}]}, {{4., 
             0.01392902263110676}, 
             Offset[{-3, 0}, {4., 0.01392902263110676}]}, {{4., 
             0.010428342653926434`}, 
             Offset[{3, 0}, {4., 0.010428342653926434`}]}, {{4., 
             0.010428342653926434`}, 
             Offset[{-3, 0}, {4., 0.010428342653926434`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.25, 0.009843022715651786}, 
             Offset[{3, 0}, {4.25, 0.009843022715651786}]}, {{4.25, 
             0.009843022715651786}, 
             Offset[{-3, 0}, {4.25, 0.009843022715651786}]}, {{4.25, 
             0.007818293404561848}, 
             Offset[{3, 0}, {4.25, 0.007818293404561848}]}, {{4.25, 
             0.007818293404561848}, 
             Offset[{-3, 0}, {4.25, 0.007818293404561848}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.25, 0.6602595438326849}, {0.5, 0.47844948673235005`}, {0.75,
       0.35821274297950323`}, {1., 0.27433365451618424`}, {1.25, 
      0.21314895885656557`}, {1.5, 0.1669038047699682}, {1.75, 
      0.13018046550569878`}, {2., 0.1015082557377325}, {2.2500000000000004`, 
      0.078742597634773}, {2.5, 0.061520625296323746`}, {2.75, 
      0.04725434577446056}, {3., 0.0358071249036958}, {3.25, 
      0.02778741774482209}, {3.5, 0.021572007247372436`}, {
      3.7500000000000004`, 0.015726014436025514`}, {4., 
      0.012178682642516597`}, {4.25, 0.008830658060106817}}]}, {{}, {}}}, {{{
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{0.25, 0.6575455111317521}, {0.25, 0.6599692755464337}}], 
          LineBox[{{0.25, 0.6599692755464337}, {0.25, 0.6623930399611153}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{0.5, 0.48286859589301173`}, {0.5, 0.4841999774330776}}], 
          LineBox[{{0.5, 0.4841999774330776}, {0.5, 0.4855313589731434}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{0.75, 0.36637961380238077`}, {0.75, 
           0.36742279270857914`}}], 
          LineBox[{{0.75, 0.36742279270857914`}, {0.75, 
           0.3684659716147775}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{1., 0.2833681006919143}, {1., 0.28425782238433617`}}], 
          LineBox[{{1., 0.28425782238433617`}, {1., 0.285147544076758}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{1.25, 0.22482615803877154`}, {1.25, 0.2256867891654597}}],
           LineBox[{{1.25, 0.2256867891654597}, {1.25, 
           0.22654742029214786`}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{1.5, 0.17587003229325507`}, {1.5, 0.17668116933124758`}}],
           LineBox[{{1.5, 0.17668116933124758`}, {1.5, 0.1774923063692401}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{1.75, 0.14004819071165564`}, {1.75, 
           0.14085476256530532`}}], 
          LineBox[{{1.75, 0.14085476256530532`}, {1.75, 0.141661334418955}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{2., 0.11202309206913576`}, {2., 0.11278662879836919`}}], 
          LineBox[{{2., 0.11278662879836919`}, {2., 0.11355016552760262`}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{2.25, 0.08897926257705976}, {2.25, 0.08972036547997904}}],
           LineBox[{{2.25, 0.08972036547997904}, {2.25, 
           0.09046146838289831}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{2.5, 0.0710099970205873}, {2.5, 0.07171375936907269}}], 
          LineBox[{{2.5, 0.07171375936907269}, {2.5, 0.07241752171755808}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{2.75, 0.05660587727031675}, {2.75, 0.05727056432085293}}],
           LineBox[{{2.75, 0.05727056432085293}, {2.75, 
           0.057935251371389114`}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{3., 0.04526844380852664}, {3., 0.045899019475035954`}}], 
          LineBox[{{3., 0.045899019475035954`}, {3., 0.04652959514154527}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{3.25, 0.034634269188700356`}, {3.25, 
           0.03519807128005919}}], 
          LineBox[{{3.25, 0.03519807128005919}, {3.25, 
           0.03576187337141802}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{3.5, 0.02710750658440778}, {3.5, 0.02761943437925158}}], 
          LineBox[{{3.5, 0.02761943437925158}, {3.5, 0.02813136217409538}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{3.75, 0.021136811722857262`}, {3.75, 
           0.021606598870388304`}}], 
          LineBox[{{3.75, 0.021606598870388304`}, {3.75, 
           0.022076386017919346`}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{4., 0.0169170241819936}, {4., 0.01735843686043104}}], 
          LineBox[{{4., 0.01735843686043104}, {4., 0.01779984953886848}}]}},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{{}, {
          LineBox[{{4.25, 0.013283527457717452`}, {4.25, 
           0.013681006215771419`}}], 
          LineBox[{{4.25, 0.013681006215771419`}, {4.25, 
           0.014078484973825385`}}]}},
        Antialiasing->False]}}, {
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.25, 0.6623930399611153}, 
             Offset[{3, 0}, {0.25, 0.6623930399611153}]}, {{0.25, 
             0.6623930399611153}, 
             Offset[{-3, 0}, {0.25, 0.6623930399611153}]}, {{0.25, 
             0.6575455111317521}, 
             Offset[{3, 0}, {0.25, 0.6575455111317521}]}, {{0.25, 
             0.6575455111317521}, 
             Offset[{-3, 0}, {0.25, 0.6575455111317521}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.5, 0.4855313589731434}, 
             Offset[{3, 0}, {0.5, 0.4855313589731434}]}, {{0.5, 
             0.4855313589731434}, 
             Offset[{-3, 0}, {0.5, 0.4855313589731434}]}, {{0.5, 
             0.48286859589301173`}, 
             Offset[{3, 0}, {0.5, 0.48286859589301173`}]}, {{0.5, 
             0.48286859589301173`}, 
             Offset[{-3, 0}, {0.5, 0.48286859589301173`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.75, 0.3684659716147775}, 
             Offset[{3, 0}, {0.75, 0.3684659716147775}]}, {{0.75, 
             0.3684659716147775}, 
             Offset[{-3, 0}, {0.75, 0.3684659716147775}]}, {{0.75, 
             0.36637961380238077`}, 
             Offset[{3, 0}, {0.75, 0.36637961380238077`}]}, {{0.75, 
             0.36637961380238077`}, 
             Offset[{-3, 0}, {0.75, 0.36637961380238077`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1., 0.285147544076758}, 
             Offset[{3, 0}, {1., 0.285147544076758}]}, {{1., 
             0.285147544076758}, Offset[{-3, 0}, {1., 0.285147544076758}]}, {{
             1., 0.2833681006919143}, 
             Offset[{3, 0}, {1., 0.2833681006919143}]}, {{1., 
             0.2833681006919143}, 
             Offset[{-3, 0}, {1., 0.2833681006919143}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.25, 0.22654742029214786`}, 
             Offset[{3, 0}, {1.25, 0.22654742029214786`}]}, {{1.25, 
             0.22654742029214786`}, 
             Offset[{-3, 0}, {1.25, 0.22654742029214786`}]}, {{1.25, 
             0.22482615803877154`}, 
             Offset[{3, 0}, {1.25, 0.22482615803877154`}]}, {{1.25, 
             0.22482615803877154`}, 
             Offset[{-3, 0}, {1.25, 0.22482615803877154`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.5, 0.1774923063692401}, 
             Offset[{3, 0}, {1.5, 0.1774923063692401}]}, {{1.5, 
             0.1774923063692401}, 
             Offset[{-3, 0}, {1.5, 0.1774923063692401}]}, {{1.5, 
             0.17587003229325507`}, 
             Offset[{3, 0}, {1.5, 0.17587003229325507`}]}, {{1.5, 
             0.17587003229325507`}, 
             Offset[{-3, 0}, {1.5, 0.17587003229325507`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.75, 0.141661334418955}, 
             Offset[{3, 0}, {1.75, 0.141661334418955}]}, {{1.75, 
             0.141661334418955}, 
             Offset[{-3, 0}, {1.75, 0.141661334418955}]}, {{1.75, 
             0.14004819071165564`}, 
             Offset[{3, 0}, {1.75, 0.14004819071165564`}]}, {{1.75, 
             0.14004819071165564`}, 
             Offset[{-3, 0}, {1.75, 0.14004819071165564`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 0.11355016552760262`}, 
             Offset[{3, 0}, {2., 0.11355016552760262`}]}, {{2., 
             0.11355016552760262`}, 
             Offset[{-3, 0}, {2., 0.11355016552760262`}]}, {{2., 
             0.11202309206913576`}, 
             Offset[{3, 0}, {2., 0.11202309206913576`}]}, {{2., 
             0.11202309206913576`}, 
             Offset[{-3, 0}, {2., 0.11202309206913576`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.25, 0.09046146838289831}, 
             Offset[{3, 0}, {2.25, 0.09046146838289831}]}, {{2.25, 
             0.09046146838289831}, 
             Offset[{-3, 0}, {2.25, 0.09046146838289831}]}, {{2.25, 
             0.08897926257705976}, 
             Offset[{3, 0}, {2.25, 0.08897926257705976}]}, {{2.25, 
             0.08897926257705976}, 
             Offset[{-3, 0}, {2.25, 0.08897926257705976}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.5, 0.07241752171755808}, 
             Offset[{3, 0}, {2.5, 0.07241752171755808}]}, {{2.5, 
             0.07241752171755808}, 
             Offset[{-3, 0}, {2.5, 0.07241752171755808}]}, {{2.5, 
             0.0710099970205873}, 
             Offset[{3, 0}, {2.5, 0.0710099970205873}]}, {{2.5, 
             0.0710099970205873}, 
             Offset[{-3, 0}, {2.5, 0.0710099970205873}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.75, 0.057935251371389114`}, 
             Offset[{3, 0}, {2.75, 0.057935251371389114`}]}, {{2.75, 
             0.057935251371389114`}, 
             Offset[{-3, 0}, {2.75, 0.057935251371389114`}]}, {{2.75, 
             0.05660587727031675}, 
             Offset[{3, 0}, {2.75, 0.05660587727031675}]}, {{2.75, 
             0.05660587727031675}, 
             Offset[{-3, 0}, {2.75, 0.05660587727031675}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3., 0.04652959514154527}, 
             Offset[{3, 0}, {3., 0.04652959514154527}]}, {{3., 
             0.04652959514154527}, 
             Offset[{-3, 0}, {3., 0.04652959514154527}]}, {{3., 
             0.04526844380852664}, 
             Offset[{3, 0}, {3., 0.04526844380852664}]}, {{3., 
             0.04526844380852664}, 
             Offset[{-3, 0}, {3., 0.04526844380852664}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.25, 0.03576187337141802}, 
             Offset[{3, 0}, {3.25, 0.03576187337141802}]}, {{3.25, 
             0.03576187337141802}, 
             Offset[{-3, 0}, {3.25, 0.03576187337141802}]}, {{3.25, 
             0.034634269188700356`}, 
             Offset[{3, 0}, {3.25, 0.034634269188700356`}]}, {{3.25, 
             0.034634269188700356`}, 
             Offset[{-3, 0}, {3.25, 0.034634269188700356`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.5, 0.02813136217409538}, 
             Offset[{3, 0}, {3.5, 0.02813136217409538}]}, {{3.5, 
             0.02813136217409538}, 
             Offset[{-3, 0}, {3.5, 0.02813136217409538}]}, {{3.5, 
             0.02710750658440778}, 
             Offset[{3, 0}, {3.5, 0.02710750658440778}]}, {{3.5, 
             0.02710750658440778}, 
             Offset[{-3, 0}, {3.5, 0.02710750658440778}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.75, 0.022076386017919346`}, 
             Offset[{3, 0}, {3.75, 0.022076386017919346`}]}, {{3.75, 
             0.022076386017919346`}, 
             Offset[{-3, 0}, {3.75, 0.022076386017919346`}]}, {{3.75, 
             0.021136811722857262`}, 
             Offset[{3, 0}, {3.75, 0.021136811722857262`}]}, {{3.75, 
             0.021136811722857262`}, 
             Offset[{-3, 0}, {3.75, 0.021136811722857262`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4., 0.01779984953886848}, 
             Offset[{3, 0}, {4., 0.01779984953886848}]}, {{4., 
             0.01779984953886848}, 
             Offset[{-3, 0}, {4., 0.01779984953886848}]}, {{4., 
             0.0169170241819936}, 
             Offset[{3, 0}, {4., 0.0169170241819936}]}, {{4., 
             0.0169170241819936}, 
             Offset[{-3, 0}, {4., 0.0169170241819936}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[1, 0.5, 0], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.25, 0.014078484973825385`}, 
             Offset[{3, 0}, {4.25, 0.014078484973825385`}]}, {{4.25, 
             0.014078484973825385`}, 
             Offset[{-3, 0}, {4.25, 0.014078484973825385`}]}, {{4.25, 
             0.013283527457717452`}, 
             Offset[{3, 0}, {4.25, 0.013283527457717452`}]}, {{4.25, 
             0.013283527457717452`}, 
             Offset[{-3, 0}, {4.25, 0.013283527457717452`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{0.25, 0.6599692755464337}, {0.5, 0.4841999774330776}, {
      0.75, 0.36742279270857914`}, {1., 0.28425782238433617`}, {1.25, 
      0.2256867891654597}, {1.5, 0.17668116933124758`}, {1.75, 
      0.14085476256530532`}, {2., 0.11278662879836919`}, {2.25, 
      0.08972036547997904}, {2.5, 0.07171375936907269}, {2.75, 
      0.05727056432085293}, {3., 0.045899019475035954`}, {3.25, 
      0.03519807128005919}, {3.5, 0.02761943437925158}, {3.75, 
      0.021606598870388304`}, {4., 0.01735843686043104}, {4.25, 
      0.013681006215771419`}}]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.25}, {0, 0.66216373749331}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.876760152610918*^9, 3.876760154486043*^9}, 
   3.8767602163988457`*^9, 3.876760256096788*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"6a7b4db6-0e56-4a9e-9bcf-368688708f15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"alphaVals", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]i", ",", 
      RowBox[{"FindAlpha", "[", "\[Lambda]i", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]i", ",", 
      RowBox[{"1", "/", "4"}], ",", "4", ",", 
      RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"alphav2Vals", " ", "=", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Lambda]i", ",", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "\[Lambda]i"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]i", ",", 
       RowBox[{"1", "/", "4"}], ",", "4", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], " ", "//", 
   "N"}]}]}], "Input",ExpressionUUID->"2f71b413-1879-4345-b086-59316bdcacd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.6629", "0.0027"},
       "Around"],
      Around[0.6629186245829671, 0.0026512691121037923`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.3650", "0.0010"},
       "Around"],
      Around[0.3650134909144, 0.0010270316520240156`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.2244", "0.0009"},
       "Around"],
      Around[0.22439298044081246`, 0.000857258655880858]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.1411", "0.0008"},
       "Around"],
      Around[0.14114431148022058`, 0.000799311657672214]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.0912", "0.0008"},
       "Around"],
      Around[0.09120411602424852, 0.0007619102414484256]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["11", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.0577", "0.0007"},
       "Around"],
      Around[0.05774757541072037, 0.0006839618743791536]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["13", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.0363", "0.0006"},
       "Around"],
      Around[0.03626135838834869, 0.0005804424359550017]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["15", "4"], ",", 
     InterpretationBox[
      TemplateBox[{"0.0221", "0.0005"},
       "Around"],
      Around[0.022086720481942133`, 0.000460995532097356]]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[90]= ",ExpressionUUID->"2dd9c62f-8ceb-4296-93a5-b2d41703d3ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.7788007830714049`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "0.4723665527410147`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", "0.2865047968601901`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", "0.17377394345044514`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", "0.10539922456186433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.75`", ",", "0.06392786120670757`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", "0.03877420783172201`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.75`", ",", "0.023517745856009107`"}], "}"}]}], "}"}]], "Output",\

 CellLabel->
  "Out[91]= ",ExpressionUUID->"e22d2d71-db55-44f4-b319-b54808b31892"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "alphaVals", "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"alphav2Vals", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9"}], "}"}]}]}], "]"}]], "Input",ExpressionUUID->\
"7a96a1d6-7632-4384-9c14-85b906667118"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.25, 0.6602673554708633}, {0.25, 0.6629186245829671}}], 
          LineBox[{{0.25, 0.6629186245829671}, {0.25, 0.6655698936950709}}]}},
        
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{0.75, 0.363986459262376}, {0.75, 0.3650134909144}}], 
          LineBox[{{0.75, 0.3650134909144}, {0.75, 0.366040522566424}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.25, 0.2235357217849316}, {1.25, 0.22439298044081246`}}],
           LineBox[{{1.25, 0.22439298044081246`}, {1.25, 
           0.2252502390966933}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{1.75, 0.14034499982254836`}, {1.75, 
           0.14114431148022058`}}], 
          LineBox[{{1.75, 0.14114431148022058`}, {1.75, 
           0.1419436231378928}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.25, 0.0904422057828001}, {2.25, 0.09120411602424852}}], 
          LineBox[{{2.25, 0.09120411602424852}, {2.25, 
           0.09196602626569694}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{2.75, 0.057063613536341214`}, {2.75, 
           0.05774757541072037}}], 
          LineBox[{{2.75, 0.05774757541072037}, {2.75, 
           0.058431537285099526`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.25, 0.035680915952393685`}, {3.25, 
           0.03626135838834869}}], 
          LineBox[{{3.25, 0.03626135838834869}, {3.25, 
           0.03684180082430369}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.75, 0.021625724949844778`}, {3.75, 
           0.022086720481942133`}}], 
          LineBox[{{3.75, 0.022086720481942133`}, {3.75, 
           0.022547716014039487`}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.25, 0.6655698936950709}, 
             Offset[{3, 0}, {0.25, 0.6655698936950709}]}, {{0.25, 
             0.6655698936950709}, 
             Offset[{-3, 0}, {0.25, 0.6655698936950709}]}, {{0.25, 
             0.6602673554708633}, 
             Offset[{3, 0}, {0.25, 0.6602673554708633}]}, {{0.25, 
             0.6602673554708633}, 
             Offset[{-3, 0}, {0.25, 0.6602673554708633}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.75, 0.366040522566424}, 
             Offset[{3, 0}, {0.75, 0.366040522566424}]}, {{0.75, 
             0.366040522566424}, 
             Offset[{-3, 0}, {0.75, 0.366040522566424}]}, {{0.75, 
             0.363986459262376}, 
             Offset[{3, 0}, {0.75, 0.363986459262376}]}, {{0.75, 
             0.363986459262376}, 
             Offset[{-3, 0}, {0.75, 0.363986459262376}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.25, 0.2252502390966933}, 
             Offset[{3, 0}, {1.25, 0.2252502390966933}]}, {{1.25, 
             0.2252502390966933}, 
             Offset[{-3, 0}, {1.25, 0.2252502390966933}]}, {{1.25, 
             0.2235357217849316}, 
             Offset[{3, 0}, {1.25, 0.2235357217849316}]}, {{1.25, 
             0.2235357217849316}, 
             Offset[{-3, 0}, {1.25, 0.2235357217849316}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.75, 0.1419436231378928}, 
             Offset[{3, 0}, {1.75, 0.1419436231378928}]}, {{1.75, 
             0.1419436231378928}, 
             Offset[{-3, 0}, {1.75, 0.1419436231378928}]}, {{1.75, 
             0.14034499982254836`}, 
             Offset[{3, 0}, {1.75, 0.14034499982254836`}]}, {{1.75, 
             0.14034499982254836`}, 
             Offset[{-3, 0}, {1.75, 0.14034499982254836`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.25, 0.09196602626569694}, 
             Offset[{3, 0}, {2.25, 0.09196602626569694}]}, {{2.25, 
             0.09196602626569694}, 
             Offset[{-3, 0}, {2.25, 0.09196602626569694}]}, {{2.25, 
             0.0904422057828001}, 
             Offset[{3, 0}, {2.25, 0.0904422057828001}]}, {{2.25, 
             0.0904422057828001}, 
             Offset[{-3, 0}, {2.25, 0.0904422057828001}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.75, 0.058431537285099526`}, 
             Offset[{3, 0}, {2.75, 0.058431537285099526`}]}, {{2.75, 
             0.058431537285099526`}, 
             Offset[{-3, 0}, {2.75, 0.058431537285099526`}]}, {{2.75, 
             0.057063613536341214`}, 
             Offset[{3, 0}, {2.75, 0.057063613536341214`}]}, {{2.75, 
             0.057063613536341214`}, 
             Offset[{-3, 0}, {2.75, 0.057063613536341214`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.25, 0.03684180082430369}, 
             Offset[{3, 0}, {3.25, 0.03684180082430369}]}, {{3.25, 
             0.03684180082430369}, 
             Offset[{-3, 0}, {3.25, 0.03684180082430369}]}, {{3.25, 
             0.035680915952393685`}, 
             Offset[{3, 0}, {3.25, 0.035680915952393685`}]}, {{3.25, 
             0.035680915952393685`}, 
             Offset[{-3, 0}, {3.25, 0.035680915952393685`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.75, 0.022547716014039487`}, 
             Offset[{3, 0}, {3.75, 0.022547716014039487`}]}, {{3.75, 
             0.022547716014039487`}, 
             Offset[{-3, 0}, {3.75, 0.022547716014039487`}]}, {{3.75, 
             0.021625724949844778`}, 
             Offset[{3, 0}, {3.75, 0.021625724949844778`}]}, {{3.75, 
             0.021625724949844778`}, 
             Offset[{-3, 0}, {3.75, 0.021625724949844778`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.25, 0.6629186245829671}, {0.75, 0.3650134909144}, {1.25, 
      0.22439298044081246`}, {1.75, 0.14114431148022058`}, {2.25, 
      0.09120411602424852}, {2.75, 0.05774757541072037}, {3.25, 
      0.03626135838834869}, {3.75, 
      0.022086720481942133`}}]}, {{}, {}}}, {{}, 
    {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{0.25, 0.7788007830714049}, {0.75, 0.4723665527410147}, {
      1.25, 0.2865047968601901}, {1.75, 0.17377394345044514`}, {2.25, 
      0.10539922456186433`}, {2.75, 0.06392786120670757}, {3.25, 
      0.03877420783172201}, {3.75, 0.023517745856009107`}}]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{0, 0.9},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[94]= ",ExpressionUUID->"3ac611a6-3e00-46d9-b86d-ffbed09d7b21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]i", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testVals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"AvgElectronsWeighted", "[", 
        RowBox[{"Nc", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "\[Lambda]i"}], ")"}], " ", "Nc"}], ",", 
         "1000"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"1", "/", "2"}], ",", "12", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindAlpha", "[", "\[Lambda]i", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]2", " ", "=", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", "\[Lambda]i"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "testVals", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"Nc", "-", "\[Lambda]i"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"1", "/", "2"}], ",", "12"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Alpha]2", 
       RowBox[{"(", " ", 
        RowBox[{"Nc", "-", "\[Lambda]i"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"1", "/", "2"}], ",", "12"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}], "]"}]}], "Input",E\
xpressionUUID->"757744d1-5ba4-49c8-a016-92c3ca385bac"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{1.5, 1.1717405426590612`}, {1.5, 1.184}}], 
          LineBox[{{1.5, 1.184}, {1.5, 1.1962594573409386`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{2., 1.3507593872735946`}, {2., 1.366}}], 
          LineBox[{{2., 1.366}, {2., 1.3812406127264056`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{2.5, 1.5725085681409519`}, {2.5, 1.592}}], 
          LineBox[{{2.5, 1.592}, {2.5, 1.6114914318590483`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{3., 1.8156156866674837`}, {3., 1.841}}], 
          LineBox[{{3., 1.841}, {3., 1.8663843133325162`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{3.5, 1.9796673555992608`}, {3.5, 2.008}}], 
          LineBox[{{3.5, 2.008}, {3.5, 2.0363326444007392`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{4., 2.3464261206781583`}, {4., 2.383}}], 
          LineBox[{{4., 2.383}, {4., 2.4195738793218418`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{4.5, 2.7144755837766974`}, {4.5, 2.76}}], 
          LineBox[{{4.5, 2.76}, {4.5, 2.805524416223302}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{5., 3.094528324941446}, {5., 3.146}}], 
          LineBox[{{5., 3.146}, {5., 3.1974716750585537`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{5.5, 3.573143975097065}, {5.5, 3.639}}], 
          LineBox[{{5.5, 3.639}, {5.5, 3.7048560249029348`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{6., 4.019885728501908}, {6., 4.093}}], 
          LineBox[{{6., 4.093}, {6., 4.166114271498092}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{6.5, 4.62475209830151}, {6.5, 4.718}}], 
          LineBox[{{6.5, 4.718}, {6.5, 4.81124790169849}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{7., 5.511833721890521}, {7., 5.621}}], 
          LineBox[{{7., 5.621}, {7., 5.73016627810948}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{7.5, 5.969134336933484}, {7.5, 6.09}}], 
          LineBox[{{7.5, 6.09}, {7.5, 6.2108656630665156`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{8., 7.113949428638009}, {8., 7.269}}], 
          LineBox[{{8., 7.269}, {8., 7.424050571361991}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{8.5, 8.044328654722914}, {8.5, 8.234}}], 
          LineBox[{{8.5, 8.234}, {8.5, 8.423671345277086}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{9., 9.098079600150475}, {9., 9.325}}], 
          LineBox[{{9., 9.325}, {9., 9.551920399849523}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{9.5, 10.504333765615796`}, {9.5, 10.744}}], 
          LineBox[{{9.5, 10.744}, {9.5, 10.983666234384204`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{10., 12.463478289295297`}, {10., 12.787}}], 
          LineBox[{{10., 12.787}, {10., 13.110521710704704`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{10.5, 13.877975191201173`}, {10.5, 14.222}}], 
          LineBox[{{10.5, 14.222}, {10.5, 14.566024808798826`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{11., 16.418509101815214`}, {11., 16.876}}], 
          LineBox[{{11., 16.876}, {11., 17.333490898184788`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{11.5, 18.640135086521905`}, {11.5, 19.173}}], 
          LineBox[{{11.5, 19.173}, {11.5, 19.70586491347809}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{12., 21.35805754063509}, {12., 21.97}}], 
          LineBox[{{12., 21.97}, {12., 22.581942459364907`}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.5, 1.1962594573409386`}, 
             Offset[{3, 0}, {1.5, 1.1962594573409386`}]}, {{1.5, 
             1.1962594573409386`}, 
             Offset[{-3, 0}, {1.5, 1.1962594573409386`}]}, {{1.5, 
             1.1717405426590612`}, 
             Offset[{3, 0}, {1.5, 1.1717405426590612`}]}, {{1.5, 
             1.1717405426590612`}, 
             Offset[{-3, 0}, {1.5, 1.1717405426590612`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2., 1.3812406127264056`}, 
             Offset[{3, 0}, {2., 1.3812406127264056`}]}, {{2., 
             1.3812406127264056`}, 
             Offset[{-3, 0}, {2., 1.3812406127264056`}]}, {{2., 
             1.3507593872735946`}, 
             Offset[{3, 0}, {2., 1.3507593872735946`}]}, {{2., 
             1.3507593872735946`}, 
             Offset[{-3, 0}, {2., 1.3507593872735946`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.5, 1.6114914318590483`}, 
             Offset[{3, 0}, {2.5, 1.6114914318590483`}]}, {{2.5, 
             1.6114914318590483`}, 
             Offset[{-3, 0}, {2.5, 1.6114914318590483`}]}, {{2.5, 
             1.5725085681409519`}, 
             Offset[{3, 0}, {2.5, 1.5725085681409519`}]}, {{2.5, 
             1.5725085681409519`}, 
             Offset[{-3, 0}, {2.5, 1.5725085681409519`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3., 1.8663843133325162`}, 
             Offset[{3, 0}, {3., 1.8663843133325162`}]}, {{3., 
             1.8663843133325162`}, 
             Offset[{-3, 0}, {3., 1.8663843133325162`}]}, {{3., 
             1.8156156866674837`}, 
             Offset[{3, 0}, {3., 1.8156156866674837`}]}, {{3., 
             1.8156156866674837`}, 
             Offset[{-3, 0}, {3., 1.8156156866674837`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.5, 2.0363326444007392`}, 
             Offset[{3, 0}, {3.5, 2.0363326444007392`}]}, {{3.5, 
             2.0363326444007392`}, 
             Offset[{-3, 0}, {3.5, 2.0363326444007392`}]}, {{3.5, 
             1.9796673555992608`}, 
             Offset[{3, 0}, {3.5, 1.9796673555992608`}]}, {{3.5, 
             1.9796673555992608`}, 
             Offset[{-3, 0}, {3.5, 1.9796673555992608`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4., 2.4195738793218418`}, 
             Offset[{3, 0}, {4., 2.4195738793218418`}]}, {{4., 
             2.4195738793218418`}, 
             Offset[{-3, 0}, {4., 2.4195738793218418`}]}, {{4., 
             2.3464261206781583`}, 
             Offset[{3, 0}, {4., 2.3464261206781583`}]}, {{4., 
             2.3464261206781583`}, 
             Offset[{-3, 0}, {4., 2.3464261206781583`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.5, 2.805524416223302}, 
             Offset[{3, 0}, {4.5, 2.805524416223302}]}, {{4.5, 
             2.805524416223302}, 
             Offset[{-3, 0}, {4.5, 2.805524416223302}]}, {{4.5, 
             2.7144755837766974`}, 
             Offset[{3, 0}, {4.5, 2.7144755837766974`}]}, {{4.5, 
             2.7144755837766974`}, 
             Offset[{-3, 0}, {4.5, 2.7144755837766974`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5., 3.1974716750585537`}, 
             Offset[{3, 0}, {5., 3.1974716750585537`}]}, {{5., 
             3.1974716750585537`}, 
             Offset[{-3, 0}, {5., 3.1974716750585537`}]}, {{5., 
             3.094528324941446}, Offset[{3, 0}, {5., 3.094528324941446}]}, {{
             5., 3.094528324941446}, 
             Offset[{-3, 0}, {5., 3.094528324941446}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.5, 3.7048560249029348`}, 
             Offset[{3, 0}, {5.5, 3.7048560249029348`}]}, {{5.5, 
             3.7048560249029348`}, 
             Offset[{-3, 0}, {5.5, 3.7048560249029348`}]}, {{5.5, 
             3.573143975097065}, Offset[{3, 0}, {5.5, 3.573143975097065}]}, {{
             5.5, 3.573143975097065}, 
             Offset[{-3, 0}, {5.5, 3.573143975097065}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6., 4.166114271498092}, 
             Offset[{3, 0}, {6., 4.166114271498092}]}, {{6., 
             4.166114271498092}, Offset[{-3, 0}, {6., 4.166114271498092}]}, {{
             6., 4.019885728501908}, 
             Offset[{3, 0}, {6., 4.019885728501908}]}, {{6., 
             4.019885728501908}, 
             Offset[{-3, 0}, {6., 4.019885728501908}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.5, 4.81124790169849}, 
             Offset[{3, 0}, {6.5, 4.81124790169849}]}, {{6.5, 
             4.81124790169849}, Offset[{-3, 0}, {6.5, 4.81124790169849}]}, {{
             6.5, 4.62475209830151}, 
             Offset[{3, 0}, {6.5, 4.62475209830151}]}, {{6.5, 
             4.62475209830151}, 
             Offset[{-3, 0}, {6.5, 4.62475209830151}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7., 5.73016627810948}, 
             Offset[{3, 0}, {7., 5.73016627810948}]}, {{7., 5.73016627810948},
              Offset[{-3, 0}, {7., 5.73016627810948}]}, {{7., 
             5.511833721890521}, Offset[{3, 0}, {7., 5.511833721890521}]}, {{
             7., 5.511833721890521}, 
             Offset[{-3, 0}, {7., 5.511833721890521}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.5, 6.2108656630665156`}, 
             Offset[{3, 0}, {7.5, 6.2108656630665156`}]}, {{7.5, 
             6.2108656630665156`}, 
             Offset[{-3, 0}, {7.5, 6.2108656630665156`}]}, {{7.5, 
             5.969134336933484}, Offset[{3, 0}, {7.5, 5.969134336933484}]}, {{
             7.5, 5.969134336933484}, 
             Offset[{-3, 0}, {7.5, 5.969134336933484}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8., 7.424050571361991}, 
             Offset[{3, 0}, {8., 7.424050571361991}]}, {{8., 
             7.424050571361991}, Offset[{-3, 0}, {8., 7.424050571361991}]}, {{
             8., 7.113949428638009}, 
             Offset[{3, 0}, {8., 7.113949428638009}]}, {{8., 
             7.113949428638009}, 
             Offset[{-3, 0}, {8., 7.113949428638009}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8.5, 8.423671345277086}, 
             Offset[{3, 0}, {8.5, 8.423671345277086}]}, {{8.5, 
             8.423671345277086}, 
             Offset[{-3, 0}, {8.5, 8.423671345277086}]}, {{8.5, 
             8.044328654722914}, Offset[{3, 0}, {8.5, 8.044328654722914}]}, {{
             8.5, 8.044328654722914}, 
             Offset[{-3, 0}, {8.5, 8.044328654722914}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9., 9.551920399849523}, 
             Offset[{3, 0}, {9., 9.551920399849523}]}, {{9., 
             9.551920399849523}, Offset[{-3, 0}, {9., 9.551920399849523}]}, {{
             9., 9.098079600150475}, 
             Offset[{3, 0}, {9., 9.098079600150475}]}, {{9., 
             9.098079600150475}, 
             Offset[{-3, 0}, {9., 9.098079600150475}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9.5, 10.983666234384204`}, 
             Offset[{3, 0}, {9.5, 10.983666234384204`}]}, {{9.5, 
             10.983666234384204`}, 
             Offset[{-3, 0}, {9.5, 10.983666234384204`}]}, {{9.5, 
             10.504333765615796`}, 
             Offset[{3, 0}, {9.5, 10.504333765615796`}]}, {{9.5, 
             10.504333765615796`}, 
             Offset[{-3, 0}, {9.5, 10.504333765615796`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10., 13.110521710704704`}, 
             Offset[{3, 0}, {10., 13.110521710704704`}]}, {{10., 
             13.110521710704704`}, 
             Offset[{-3, 0}, {10., 13.110521710704704`}]}, {{10., 
             12.463478289295297`}, 
             Offset[{3, 0}, {10., 12.463478289295297`}]}, {{10., 
             12.463478289295297`}, 
             Offset[{-3, 0}, {10., 12.463478289295297`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10.5, 14.566024808798826`}, 
             Offset[{3, 0}, {10.5, 14.566024808798826`}]}, {{10.5, 
             14.566024808798826`}, 
             Offset[{-3, 0}, {10.5, 14.566024808798826`}]}, {{10.5, 
             13.877975191201173`}, 
             Offset[{3, 0}, {10.5, 13.877975191201173`}]}, {{10.5, 
             13.877975191201173`}, 
             Offset[{-3, 0}, {10.5, 13.877975191201173`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11., 17.333490898184788`}, 
             Offset[{3, 0}, {11., 17.333490898184788`}]}, {{11., 
             17.333490898184788`}, 
             Offset[{-3, 0}, {11., 17.333490898184788`}]}, {{11., 
             16.418509101815214`}, 
             Offset[{3, 0}, {11., 16.418509101815214`}]}, {{11., 
             16.418509101815214`}, 
             Offset[{-3, 0}, {11., 16.418509101815214`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11.5, 19.70586491347809}, 
             Offset[{3, 0}, {11.5, 19.70586491347809}]}, {{11.5, 
             19.70586491347809}, 
             Offset[{-3, 0}, {11.5, 19.70586491347809}]}, {{11.5, 
             18.640135086521905`}, 
             Offset[{3, 0}, {11.5, 18.640135086521905`}]}, {{11.5, 
             18.640135086521905`}, 
             Offset[{-3, 0}, {11.5, 18.640135086521905`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12., 22.581942459364907`}, 
             Offset[{3, 0}, {12., 22.581942459364907`}]}, {{12., 
             22.581942459364907`}, 
             Offset[{-3, 0}, {12., 22.581942459364907`}]}, {{12., 
             21.35805754063509}, Offset[{3, 0}, {12., 21.35805754063509}]}, {{
             12., 21.35805754063509}, 
             Offset[{-3, 0}, {12., 21.35805754063509}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEP7CH0Bxz0D/vunOe/V378BOUzODglPL2gdPsr
lM/i4Lbt898rFT+hfA6H2z/rsvaU/IXyeRxWfbzkmyTA4ADhC0D5zFC+kIPI
OveHVSJsUL6IQ9wuTx4mbU4oX8zhpZohxxoZXihfwmGNTFSKdbwAlC8F4d8X
gvJlHKY5A11cLQblyznE9B/6qhEjAeUrOPwCOU9YFspXdNBuF7t5rlwByldy
SAOBZUpQvrLDhqKMiW9rVKF8FYdcUHBM0oTyVR3A4VOoA+WrORz3Nu90fGAA
5as72JsCfaRjDOVrOOyQa30d+MPUAQDcDl7X
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0Gs0lHkAx/FJmAil3GpojMFjJUdpniXl/0s561aWtpTdEq100nRBUZvs
tiWbSzTplLDk1kqchKmoEXZb0rgcxJZF4zqDwUwKpW1ffM/n/ZcTdMw3WIXB
YGz70v8K9RjnGIxewlavmCmslpFqi7VrB4x7yfgmwaT4uYw00EH99Y69hBVc
I1KKZeTN7joPQXgvMSqc7XXtlhGVjDhDy6FeUj1nsHV+Rka2Weje9xT3kcin
F94/tx8lEp5Z//V0CYmL7eTX3BklS/y2eqxxHCKuO5gdR2+MEYcPTvP92nKy
oTOybGelnNwROuf12SpIZm4eq2F8gvh6hDZF1E0TcUm39n6tKRKccIL/smCW
eNdky874KcjxR+l+j9zmyamyDI832Uoy1dDsX85aAMXHLWYdptOk0rxrca/G
QtTvvnem7cF7wlAqgto6VBH49WDJZdcZMpM2F363QR1W1UwfGM6Ro0L91V4Z
i2CXx/7LcfgjCRPx+p8e1ET6C68eL/E8sf7dxU/PTwubdw23y39mYJ8y8Li9
pQ5ifb31GWkLkLNUmL1SZyl8Nh5Rae1RQY8xEi6o6kI/UKG8Tqui60Cr+w6p
Ls7eTAnmJqjhnsH3PwokyyBgZeabGDFBVMd8HBqXQ00RLvTJWYS7e0+mb/9b
D6dSWyP5fE30FDGGX4r0cctkTDXRWwstdKp6ab4BBkMn52Cngwwb0/PMbENU
h5s419ouBbW3rPnZZSNoxfl9VHPVRdSvnqYDx1bAqj7kojJkGXL1uxpPH1qJ
urLZmC2PliPp7TGv8G9ZGBrP06zX0Icv65PVv57GsF0+W/X2igG63RPVS11M
MMDLEu+yNoLlA0uh1GoVzFp/CObXroBHXEXdNTM2QoInVpRmsGDQWNDaomaK
sDs5QotIE0jFJ2u1o0xxwrkyX+MgG0VMUZCK0hQj7dw/ZS2meNmdEPpHCAfJ
3oeuLp7g4PVIu5nGAAeJLTOpVU5cuAlytrD8zWA89WzhkkvmuCGc6u9rNEPA
4WLuxT4LdOg+WR/ozkX0a8kq+3AK4Rpa41efcHGt6PpGDdWv8Inu2BntZA7X
uVf2xW3WONzDcTYWmqOCyw7NeWID2mLqCt/aAlUjhZX6ebaQZ21KjiywwDuh
015Dvh2Yj7Vn7Y0tMRX/YpXDpbVYuD2gPzfJEmlZbx5aF6/DqKFNtFiTAonv
1OWqrsf6mOiYwnMUtvqVxrvs4WGdxv72kp8pVP/m5XgogAc7gcvq8vMUUi4x
i64E82BTwHwliqXQOTHyVnKCB/OmFNv2JApeaiW52Zd50GPnd3/OpBB3xFoW
VsWD8qnYaaeIwsh5e+5xDo0pt/sp/s8oJIQmRzRRNCZaBUMBtRR2jOXfsrOl
MTq4W3D4OQX5oAn/wwYa/ToSaUwThckDi2wyv6PRtu/9zcIeCuzId8kucTRa
h7vkJX0U1vQVRIuSaDSHVbmWSygs25bm5pxKozH2l0nREAVP6uBPm2/TqCte
7N4up7A65sGBfVU0ahzGM/+ZpHDt7DkfaQ2N6ppmZY+CglXMa05UPY2qjtQs
6XsKzPjIIzc7aDzeHzUtn6EwrWgcsumm8VDq7/VujsJpTt83NRIaFRGbbs9+
olBUQBL3SGmUz7M/fP785ZdLxMOpCRr/AQR9PdQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$1129330#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVi3k41HkAh4fkyp2wTJkR81ORlHNtvp/HUcwMa9kiSVHZTSsiUpujy1Me
RzXd5SpMSa7SSBhiOzyOYWNXOTNSU5lChLDtH+/z/vO+zOBw792yNBrN4zv/
W6BNi6fR+smD8jDTnCwJqTWxtByi9xP2lFby4VsS0mgTLH5u30+EhiXdm0sl
pNuvgc2L6idD8Y/89OolRDbjlC5r+Pufk/y05o2EeJholnJaBsjA0+qAq6vf
k0FrI/HF64Pk16KAAF7te6Lu68I2tx8mYhdR4l8fPxC7rw5zYlUp2eCdVxbK
l5JbAse8gdVj5EpWgM9C28/Em7239UDDBLHfoLTucuko2Z2yP6yZP022eWZ5
LN0/TiIeXvd96DZH1PtU6ZF2E2S0UeRfbiADvpVtTZX3V/LIuGtRv9ICiCZF
BVXnpwltfCz4RaccGkfziWn/NzJ1dSbqTqM8mMvoiryL82SfYMkqboYivhxa
m9lsJoNIobW4JkQZ8RU7n23Jk8XKLCdfbV8VfPK19osNlkPgeFDEOpYaBn1c
c1dQ8ripIcjRV9NA6oVaLx9HRfTRkXJCThPR+48mNR1RRtfOdncfiSY6TvOO
BDWo4K7O1l28QS3od3+0QIw6iNzHX+yaFuOOsP2Jmb4m7myLvu75TBsl5wJP
rnmohb5C2ttm4RL02tTODsVoo83mgnxZvg7+XnHcf85BBxlmjGMKObqojK+7
neWjB2rbfVFdsh5mw48zmNH6iD3OYQyF/wD7s3SGWyUduUu6mg79rg/HkUub
XfcYIu11ODfKywCOnY+2aGox4W0wa9rL+d79GV2zotgIPe6p8mVOSyF8vfFK
UagxWPdYAonpMrRGVTz3N2eBfepBw3kjQ3Sbl4zQnUyh08Rvb1vIwNQ4py16
x0pIWqLrVWMZaJN381p8wwyFCsJg2XEGfFXU6f1cCzT3pOy9/RsTFXEdpRdl
LPHqXYeR0hATFhq83ulra+HGu+ls4G+EeuF0koqjFS4LRsUDTUbw9MrtOzFj
jU7Naqsg9+UoupRdv0zZDlFKKiPnqpejLv991STzR8zadG6KczBG+Sf5ishr
PyG0j+lIFxgjO/1g3H1nAhuT0fSwlSZI9b6/M30GkGavP3OQb4JM50WM9eed
oFCpOr2OzsIZSDYGW7lgged2cW4aCzzOlGKh1BUfdM3iWpQp5JRUjBXPbIRV
QlxCQTyFBYGuNoUabKxV2tFRnEhhX4/HpkB9NtbwnFaVH6PwajJXXduYDTO+
wj/CJApyP2dsTbZlw7j17OqONApmVSExNwLZ0DbM75nPpOAjf+LN0btsjNe0
OGwSUqCnVLsoeHIw6lZ61r+OAv+kKMLCj4NP7bzh7fUUNrcZ7NoazMGHN368
0KcUAlRn8mpiOBCrDUoSWimEmfvWlGVx8CJw8kpBH4WyNL0E71EO2t92SYsH
KFSkxj0TfONAFFnlWj5IwbagU8pQ4KIp6ehn4TCFLbWs3jkDLhqKFrl3SClE
L+QHvXPl4rHdSObLzxQU/9WsD/PiovaxaLxvjMIfT2TUJvy5qOq8kC2ZpDBQ
5hyiFcFF5Y7YCekUhXt7EmPyD3NRIfHnfpmhwC7SjXE8ycWDA+tvTM9SOGWX
GPIynYvyOcOv8/MURBxL98NXufgPcO00gQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$1129382#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 12.}, {0, 22.581942459364907`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[104]= ",ExpressionUUID->"ea19b631-0bb7-4805-9e7c-6431739660dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]i", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testVals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"AvgElectronsWeighted", "[", 
        RowBox[{"Nc", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "\[Lambda]i"}], ")"}], " ", "Nc"}], ",", 
         "1000"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"1", "/", "4"}], ",", "12", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindAlpha", "[", "\[Lambda]i", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]2", " ", "=", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", "\[Lambda]i"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "testVals", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"Nc", "-", "\[Lambda]i"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"1", "/", "4"}], ",", "12"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Alpha]2", 
       RowBox[{"(", " ", 
        RowBox[{"Nc", "-", "\[Lambda]i"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"1", "/", "4"}], ",", "12"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}], "]"}]}], "Input",E\
xpressionUUID->"7a434b07-d775-4ef4-ac84-f1624a217e34"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{0.75, 1.1338600224821098`}, {0.75, 1.145}}], 
          LineBox[{{0.75, 1.145}, {0.75, 1.1561399775178902`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{1.25, 1.4304613682516678`}, {1.25, 1.448}}], 
          LineBox[{{1.25, 1.448}, {1.25, 1.465538631748332}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{1.75, 1.8558337553561477`}, {1.75, 1.884}}], 
          LineBox[{{1.75, 1.884}, {1.75, 1.912166244643852}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{2.25, 2.3806343166986066`}, {2.25, 2.421}}], 
          LineBox[{{2.25, 2.421}, {2.25, 2.461365683301393}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{2.75, 2.9513836384684318`}, {2.75, 3.006}}], 
          LineBox[{{2.75, 3.006}, {2.75, 3.060616361531568}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{3.25, 3.740186563300861}, {3.25, 3.818}}], 
          LineBox[{{3.25, 3.818}, {3.25, 3.895813436699139}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{3.75, 4.368283253109251}, {3.75, 4.465}}], 
          LineBox[{{3.75, 4.465}, {3.75, 4.561716746890749}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{4.25, 6.074938551042233}, {4.25, 6.234}}], 
          LineBox[{{4.25, 6.234}, {4.25, 6.393061448957767}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{4.75, 7.417521992050999}, {4.75, 7.614}}], 
          LineBox[{{4.75, 7.614}, {4.75, 7.810478007949}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{5.25, 9.784605803169482}, {5.25, 10.044}}], 
          LineBox[{{5.25, 10.044}, {5.25, 10.303394196830519`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{5.75, 12.249283268581385`}, {5.75, 12.618}}], 
          LineBox[{{5.75, 12.618}, {5.75, 12.986716731418616`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{6.25, 15.87913628138777}, {6.25, 16.415}}], 
          LineBox[{{6.25, 16.415}, {6.25, 16.950863718612226`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{6.75, 20.104297094894832`}, {6.75, 20.791}}], 
          LineBox[{{6.75, 20.791}, {6.75, 21.47770290510517}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{7.25, 26.263075533977506`}, {7.25, 27.169}}], 
          LineBox[{{7.25, 27.169}, {7.25, 28.074924466022495`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{7.75, 29.493594992314232`}, {7.75, 30.639}}], 
          LineBox[{{7.75, 30.639}, {7.75, 31.784405007685766`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{8.25, 40.224966200609}, {8.25, 41.872}}], 
          LineBox[{{8.25, 41.872}, {8.25, 43.519033799390996`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{8.75, 45.45093779141532}, {8.75, 47.033}}], 
          LineBox[{{8.75, 47.033}, {8.75, 48.61506220858468}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{9.25, 63.689459940188385`}, {9.25, 66.617}}], 
          LineBox[{{9.25, 66.617}, {9.25, 69.54454005981162}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{9.75, 85.77275543942277}, {9.75, 89.914}}], 
          LineBox[{{9.75, 89.914}, {9.75, 94.05524456057724}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{10.25, 99.7659927356374}, {10.25, 104.2}}], 
          LineBox[{{10.25, 104.2}, {10.25, 108.63400726436261`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{10.75, 137.97698702388575`}, {10.75, 145.426}}], 
          LineBox[{{10.75, 145.426}, {10.75, 152.87501297611422`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{11.25, 173.88053620830104`}, {11.25, 183.884}}], 
          LineBox[{{11.25, 183.884}, {11.25, 193.88746379169893`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{11.75, 217.56432804568016`}, {11.75, 231.568}}], 
          LineBox[{{11.75, 231.568}, {11.75, 245.57167195431987`}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{0.75, 1.1561399775178902`}, 
             Offset[{3, 0}, {0.75, 1.1561399775178902`}]}, {{0.75, 
             1.1561399775178902`}, 
             Offset[{-3, 0}, {0.75, 1.1561399775178902`}]}, {{0.75, 
             1.1338600224821098`}, 
             Offset[{3, 0}, {0.75, 1.1338600224821098`}]}, {{0.75, 
             1.1338600224821098`}, 
             Offset[{-3, 0}, {0.75, 1.1338600224821098`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.25, 1.465538631748332}, 
             Offset[{3, 0}, {1.25, 1.465538631748332}]}, {{1.25, 
             1.465538631748332}, 
             Offset[{-3, 0}, {1.25, 1.465538631748332}]}, {{1.25, 
             1.4304613682516678`}, 
             Offset[{3, 0}, {1.25, 1.4304613682516678`}]}, {{1.25, 
             1.4304613682516678`}, 
             Offset[{-3, 0}, {1.25, 1.4304613682516678`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.75, 1.912166244643852}, 
             Offset[{3, 0}, {1.75, 1.912166244643852}]}, {{1.75, 
             1.912166244643852}, 
             Offset[{-3, 0}, {1.75, 1.912166244643852}]}, {{1.75, 
             1.8558337553561477`}, 
             Offset[{3, 0}, {1.75, 1.8558337553561477`}]}, {{1.75, 
             1.8558337553561477`}, 
             Offset[{-3, 0}, {1.75, 1.8558337553561477`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.25, 2.461365683301393}, 
             Offset[{3, 0}, {2.25, 2.461365683301393}]}, {{2.25, 
             2.461365683301393}, 
             Offset[{-3, 0}, {2.25, 2.461365683301393}]}, {{2.25, 
             2.3806343166986066`}, 
             Offset[{3, 0}, {2.25, 2.3806343166986066`}]}, {{2.25, 
             2.3806343166986066`}, 
             Offset[{-3, 0}, {2.25, 2.3806343166986066`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.75, 3.060616361531568}, 
             Offset[{3, 0}, {2.75, 3.060616361531568}]}, {{2.75, 
             3.060616361531568}, 
             Offset[{-3, 0}, {2.75, 3.060616361531568}]}, {{2.75, 
             2.9513836384684318`}, 
             Offset[{3, 0}, {2.75, 2.9513836384684318`}]}, {{2.75, 
             2.9513836384684318`}, 
             Offset[{-3, 0}, {2.75, 2.9513836384684318`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.25, 3.895813436699139}, 
             Offset[{3, 0}, {3.25, 3.895813436699139}]}, {{3.25, 
             3.895813436699139}, 
             Offset[{-3, 0}, {3.25, 3.895813436699139}]}, {{3.25, 
             3.740186563300861}, 
             Offset[{3, 0}, {3.25, 3.740186563300861}]}, {{3.25, 
             3.740186563300861}, 
             Offset[{-3, 0}, {3.25, 3.740186563300861}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.75, 4.561716746890749}, 
             Offset[{3, 0}, {3.75, 4.561716746890749}]}, {{3.75, 
             4.561716746890749}, 
             Offset[{-3, 0}, {3.75, 4.561716746890749}]}, {{3.75, 
             4.368283253109251}, 
             Offset[{3, 0}, {3.75, 4.368283253109251}]}, {{3.75, 
             4.368283253109251}, 
             Offset[{-3, 0}, {3.75, 4.368283253109251}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.25, 6.393061448957767}, 
             Offset[{3, 0}, {4.25, 6.393061448957767}]}, {{4.25, 
             6.393061448957767}, 
             Offset[{-3, 0}, {4.25, 6.393061448957767}]}, {{4.25, 
             6.074938551042233}, 
             Offset[{3, 0}, {4.25, 6.074938551042233}]}, {{4.25, 
             6.074938551042233}, 
             Offset[{-3, 0}, {4.25, 6.074938551042233}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.75, 7.810478007949}, 
             Offset[{3, 0}, {4.75, 7.810478007949}]}, {{4.75, 7.810478007949},
              Offset[{-3, 0}, {4.75, 7.810478007949}]}, {{4.75, 
             7.417521992050999}, 
             Offset[{3, 0}, {4.75, 7.417521992050999}]}, {{4.75, 
             7.417521992050999}, 
             Offset[{-3, 0}, {4.75, 7.417521992050999}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.25, 10.303394196830519`}, 
             Offset[{3, 0}, {5.25, 10.303394196830519`}]}, {{5.25, 
             10.303394196830519`}, 
             Offset[{-3, 0}, {5.25, 10.303394196830519`}]}, {{5.25, 
             9.784605803169482}, 
             Offset[{3, 0}, {5.25, 9.784605803169482}]}, {{5.25, 
             9.784605803169482}, 
             Offset[{-3, 0}, {5.25, 9.784605803169482}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.75, 12.986716731418616`}, 
             Offset[{3, 0}, {5.75, 12.986716731418616`}]}, {{5.75, 
             12.986716731418616`}, 
             Offset[{-3, 0}, {5.75, 12.986716731418616`}]}, {{5.75, 
             12.249283268581385`}, 
             Offset[{3, 0}, {5.75, 12.249283268581385`}]}, {{5.75, 
             12.249283268581385`}, 
             Offset[{-3, 0}, {5.75, 12.249283268581385`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.25, 16.950863718612226`}, 
             Offset[{3, 0}, {6.25, 16.950863718612226`}]}, {{6.25, 
             16.950863718612226`}, 
             Offset[{-3, 0}, {6.25, 16.950863718612226`}]}, {{6.25, 
             15.87913628138777}, 
             Offset[{3, 0}, {6.25, 15.87913628138777}]}, {{6.25, 
             15.87913628138777}, 
             Offset[{-3, 0}, {6.25, 15.87913628138777}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.75, 21.47770290510517}, 
             Offset[{3, 0}, {6.75, 21.47770290510517}]}, {{6.75, 
             21.47770290510517}, 
             Offset[{-3, 0}, {6.75, 21.47770290510517}]}, {{6.75, 
             20.104297094894832`}, 
             Offset[{3, 0}, {6.75, 20.104297094894832`}]}, {{6.75, 
             20.104297094894832`}, 
             Offset[{-3, 0}, {6.75, 20.104297094894832`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.25, 28.074924466022495`}, 
             Offset[{3, 0}, {7.25, 28.074924466022495`}]}, {{7.25, 
             28.074924466022495`}, 
             Offset[{-3, 0}, {7.25, 28.074924466022495`}]}, {{7.25, 
             26.263075533977506`}, 
             Offset[{3, 0}, {7.25, 26.263075533977506`}]}, {{7.25, 
             26.263075533977506`}, 
             Offset[{-3, 0}, {7.25, 26.263075533977506`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.75, 31.784405007685766`}, 
             Offset[{3, 0}, {7.75, 31.784405007685766`}]}, {{7.75, 
             31.784405007685766`}, 
             Offset[{-3, 0}, {7.75, 31.784405007685766`}]}, {{7.75, 
             29.493594992314232`}, 
             Offset[{3, 0}, {7.75, 29.493594992314232`}]}, {{7.75, 
             29.493594992314232`}, 
             Offset[{-3, 0}, {7.75, 29.493594992314232`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8.25, 43.519033799390996`}, 
             Offset[{3, 0}, {8.25, 43.519033799390996`}]}, {{8.25, 
             43.519033799390996`}, 
             Offset[{-3, 0}, {8.25, 43.519033799390996`}]}, {{8.25, 
             40.224966200609}, Offset[{3, 0}, {8.25, 40.224966200609}]}, {{
             8.25, 40.224966200609}, 
             Offset[{-3, 0}, {8.25, 40.224966200609}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8.75, 48.61506220858468}, 
             Offset[{3, 0}, {8.75, 48.61506220858468}]}, {{8.75, 
             48.61506220858468}, 
             Offset[{-3, 0}, {8.75, 48.61506220858468}]}, {{8.75, 
             45.45093779141532}, 
             Offset[{3, 0}, {8.75, 45.45093779141532}]}, {{8.75, 
             45.45093779141532}, 
             Offset[{-3, 0}, {8.75, 45.45093779141532}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9.25, 69.54454005981162}, 
             Offset[{3, 0}, {9.25, 69.54454005981162}]}, {{9.25, 
             69.54454005981162}, 
             Offset[{-3, 0}, {9.25, 69.54454005981162}]}, {{9.25, 
             63.689459940188385`}, 
             Offset[{3, 0}, {9.25, 63.689459940188385`}]}, {{9.25, 
             63.689459940188385`}, 
             Offset[{-3, 0}, {9.25, 63.689459940188385`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9.75, 94.05524456057724}, 
             Offset[{3, 0}, {9.75, 94.05524456057724}]}, {{9.75, 
             94.05524456057724}, 
             Offset[{-3, 0}, {9.75, 94.05524456057724}]}, {{9.75, 
             85.77275543942277}, 
             Offset[{3, 0}, {9.75, 85.77275543942277}]}, {{9.75, 
             85.77275543942277}, 
             Offset[{-3, 0}, {9.75, 85.77275543942277}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10.25, 108.63400726436261`}, 
             Offset[{3, 0}, {10.25, 108.63400726436261`}]}, {{10.25, 
             108.63400726436261`}, 
             Offset[{-3, 0}, {10.25, 108.63400726436261`}]}, {{10.25, 
             99.7659927356374}, Offset[{3, 0}, {10.25, 99.7659927356374}]}, {{
             10.25, 99.7659927356374}, 
             Offset[{-3, 0}, {10.25, 99.7659927356374}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10.75, 152.87501297611422`}, 
             Offset[{3, 0}, {10.75, 152.87501297611422`}]}, {{10.75, 
             152.87501297611422`}, 
             Offset[{-3, 0}, {10.75, 152.87501297611422`}]}, {{10.75, 
             137.97698702388575`}, 
             Offset[{3, 0}, {10.75, 137.97698702388575`}]}, {{10.75, 
             137.97698702388575`}, 
             Offset[{-3, 0}, {10.75, 137.97698702388575`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11.25, 193.88746379169893`}, 
             Offset[{3, 0}, {11.25, 193.88746379169893`}]}, {{11.25, 
             193.88746379169893`}, 
             Offset[{-3, 0}, {11.25, 193.88746379169893`}]}, {{11.25, 
             173.88053620830104`}, 
             Offset[{3, 0}, {11.25, 173.88053620830104`}]}, {{11.25, 
             173.88053620830104`}, 
             Offset[{-3, 0}, {11.25, 173.88053620830104`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11.75, 245.57167195431987`}, 
             Offset[{3, 0}, {11.75, 245.57167195431987`}]}, {{11.75, 
             245.57167195431987`}, 
             Offset[{-3, 0}, {11.75, 245.57167195431987`}]}, {{11.75, 
             217.56432804568016`}, 
             Offset[{3, 0}, {11.75, 217.56432804568016`}]}, {{11.75, 
             217.56432804568016`}, 
             Offset[{-3, 0}, {11.75, 217.56432804568016`}]}}], {{{1., 0.}, {
           0., 1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEX7CH0Byj9wj5oh1zr68BPUP4X+7hdnjxM2t+h
/D/2++ZL6d9V+QflMzlMfFtjbxrH7ADhszkAOUAdHFA+l4MqW+NU524+KJ/P
Iab/0FeNO4JQvqBDGJ/uprnvJaB8YYfbP+uy9pTIQfmiDl5A29vFVKB8cQdl
kAIbTShf0oHr+uIC2ywDKF/a4aISUMEpEyhfFmK/tjWUL+9wVwUosNgOwm9Q
gNrvAuUrOvglCURYtrhD+UoOxRlAHy4PgPKVIeZXhUH5Kg5nzwABTxSUr+og
1Hzg1ELdJChfDRIef9KgfHUHSRagjZ9yHAC2a15j
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVkns01HkAxWdM3sRUnmm9ht+qNh2VzfN700RbkzU9PIoTNqPpjJlRW1rW
qUQUpalOD2fQg0WplFbGZskrUy0SYjajF8oOo/LYEGv/uOf+8Tnn/vE51zZS
tDlKg0ajbZrN/331UjydTmshJf5HuTqhKsLaFEIz8GghGvL6+lu7VaSAtnrG
9EALETVcVG7fryLF0aNTS1UthNWnoVN3SkXKVon/De58RozHCg8rHqqI/FmU
uqTkOfHlTvlYOg2SYV1ud3jEC1Jt3mAyPjlIvOMpWXWNkvx1Ic2iolRNpIkT
1cUR/cTR5EJ715uPhBOnjvZUDJHfT60dSdMcIRcYRj3XTD8TmSTRrzl0jOTu
EzblGo0Tfn3Fux2uXwhoJjsr6ybI/r7zwy9dpsjEPcZKrnyaPNBerPWpfYbw
svzEkjA6uvMbObuG6JC+X26WvpKB8ZJjVQ26c6Dc4P2KrNBEWL9nXnKWFgQe
6l80jbXBkOhlcjbqIlUinOG/1YFrJ/eaobcBbk0yC44r9VDamxnzpM0ItiPB
1hX3DXBgUcLF1CdMXKbVyfLL54L5fZSZ2GQBtsmmrc2DjbGOWzbwKtsUR9xi
nvT6MDHAE/p8w7bA3dpBbcmaefB/mNHWmWgFPZPqYrbzfKRs+oOxp8cau8V5
b9qXL0B6+rKi1mlbZEyLTpV9Z4Jzc0bWZfiy0LHl5NVcC1McmnSykxY5wrH0
gR/PwgwHk0I4NyROkHZ5bVulY46+9OPbfHOWosvlt84tn8xhHjQj6Rp1htV5
m8Efhy1wpSNTUMJwQUq1ir+12xL2Lz2sOA4rMTLyOM5VuRBV8cXc2kpXOIWe
noxWWOHPqnknA7LdkHyioP9K/SIUNc54D+R4oremZZes7hukdi4rG7MHYmo2
bui6aw09QZnc3cgHYRMdm1n+NhgKZHUfdGIj1Zwpf/zUBgP7eANXy33Btvx5
36iPLaZTq+SlvB8wxza8b26tLd7X1WuzrnMQrL//ZLG7HfQ/3Lfcqx8Ao8xE
9cfbdoilnbbSVXEhNzOydHS2x2pJRpvVqq0wTZYfVObbIy3tDp2TFQjeqMHl
FEcWFnZE2S1MCYEFjZ3UlsfCMvLBgVYdip1D1y4WWDpgMEyRIDMOR+HrjDh+
lgNsG4ePSK0jkVyec+I20xEhZw8Ms9fvQu23ecHZxxwRND/i+kA+D5o5LrMH
ovDr2e57S1L5UIx9kCkSKEiZds9j0wUotn7j/08iBQPBi747lwRIXK94O3mI
Qier3uxLgQA2WY8NFyVTSPM73COtEyDK60bEzgwK0X2Be9ynBRg+KtB9J6Ww
rll0pmVvDLSY6uDBSgphzy7fTYoQotOtf/BrFYXQ8qbYm2IhiiJ7kubWUHgU
EFrbc0gIzr3mYucGCqYe95fuyBFCElRC29tEgb6jIunm30JY5cQWjilnuVPB
udogEYYa+F7arykE/XRmLT9ahCp1RKvZWwpx3Z41pnEiRK7ZPLW6n8Lutj3e
x8+LUPjOJSBBTeFmd0fu03YR4g2X9KZ/pDB9brv7nV4RNrrax0s/U+jo06rL
Hp3dT52fVzlOIfB2yPZHemJUlei7NX2h8PBBq0Q+T4zTXYwm5SQFtmFrY7Ol
GJEaU5HqrxSyLwXSFXZirFgyMj4zM+srJNzr/WIx/gMRKzr5
        "]]},
      Annotation[#, "Charting`Private`Tag$1173642#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAopl6AQEA0D+BWkYaa3/rPyRNWQAM
O9A/gMOvVdKO6z+nADj/FnbQPzb09DFCnus/rGf1/Czs0D+5rWrgO73rP7Y1
cPhY2NE/o3oDnZf76z/J0WXvsLDTP2SI4d30eew/8AlR3WBh1z/1OXJXaX3t
Pz56J7nAwt4/ReflSVqg7z+cffrArGHnPz8cKmQZZ/I/THfvZzza7j+WGcz6
wTP1P5cDD9+jFvM/vz/AzhZc+D+fc27Onw/3P7L5neiaUfw/QAAVX73E+j9t
iSudyEsAQPq0AzRRyf4/zqfM/yH6AkBmmkdwkV0BQIl1K1y1CQZAnOgwF4s0
A0D7Bo1/J1YJQN5KPuA/MwVAIv3/DUJ5DUBsO+95BRAHQCAy3N7D+BBAh5Fu
/2njCECsNGPoyX0TQK77EaeJ3gpA5RFpd2amFkAh9FgfurcMQK0ooB6sDhpA
oADEuaW4DkC+h4zb/lQeQFW5/h8YWBBAA73rh+KaIUCBOW3L5UIRQKXZnjZf
OyRAssPtB5FBEkCMwbFtp4YnQAoVwKxELxNAfwFjxjQVK0BocKTi1TAUQIH4
OVLkiy9AjP5vjrYtFUDom+8yaFIyQNZTjaKfGRZA7tqBUdARNUAms7xHZhkX
QMVbUNgfhDhAnNk9VTUIGEBKIGfFvD08QNkypthT8hhAkGaeZJI4QEAcliDt
T/AZQJrGM+232kJAhcDsaVTdGkCLT1hSNbJFQPT0ync23htAjoX8xv5CSUAp
XJD7Z9ocQPOqLX7nVE1AhIqn56HFHUDZwgw+v9tQQOXC0GS5xB5AyP7Nuayb
U0BtwktK2bIfQP5h2jwJlFZAXfrWUiROIECSrQPIHO1ZQIcYEcnKzCBA2Q1a
/3sfXkBEGnRz9UIhQAA0EFwWU2FABCFg5g7DIUBEhpMp3SlkQFgLdY2sOiJA
JF/2kKk7Z0APj33v8a8iQDRb5xUTsmpAyRcPGiYvI0Ar39qwiQlvQBaEyXje
pSNASuxLCLLccUBm9QyghSYkQKmRdUWDzXRAGQBEgtSkJEDO/AKFECl4QF/u
o5inGiVAyNsED4XHe0Co4Yx3aZolQOz9krTDKIBAhLieiq8RJkA8RupDlJyC
QGtLAUK+LyZAs9+xFotSg0DUjIXF
        "]]},
      Annotation[#, "Charting`Private`Tag$1173694#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 11.75}, {0, 245.57167195431987`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[109]= ",ExpressionUUID->"f331895e-c414-4689-9d8a-332338850ae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]i", "=", "4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testVals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Nc", ",", 
       RowBox[{"AvgElectronsWeighted", "[", 
        RowBox[{"Nc", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "\[Lambda]i"}], ")"}], " ", "Nc"}], ",", 
         "5000"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", "1", ",", "20", ",", 
       RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindAlpha", "[", "\[Lambda]i", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Alpha]2", " ", "=", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", "\[Lambda]i"}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "testVals", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"Nc", "-", "\[Lambda]i"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", "1", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"\[Alpha]2", 
       RowBox[{"(", " ", 
        RowBox[{"Nc", "-", "\[Lambda]i"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", "1", ",", "20"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}], "]"}]}], "Input",E\
xpressionUUID->"bf2c63c6-89b8-4a9a-871c-35ede653221e"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{4.5, 1.006924508966917}, {4.5, 1.0082}}], 
          LineBox[{{4.5, 1.0082}, {4.5, 1.009475491033083}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{5., 1.0147929191749614`}, {5., 1.0166}}], 
          LineBox[{{5., 1.0166}, {5., 1.0184070808250385`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{5.5, 1.0239408557490612`}, {5.5, 1.0262}}], 
          LineBox[{{5.5, 1.0262}, {5.5, 1.0284591442509388`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{6., 1.0331722532445835`}, {6., 1.0358}}], 
          LineBox[{{6., 1.0358}, {6., 1.0384277467554166`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{6.5, 1.0412929461318305`}, {6.5, 1.0442}}], 
          LineBox[{{6.5, 1.0442}, {6.5, 1.0471070538681695`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{7., 1.049248360019464}, {7., 1.0524}}], 
          LineBox[{{7., 1.0524}, {7., 1.055551639980536}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{7.5, 1.0615132491505275`}, {7.5, 1.065}}], 
          LineBox[{{7.5, 1.065}, {7.5, 1.0684867508494724`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{8., 1.0646345695268464`}, {8., 1.0682}}], 
          LineBox[{{8., 1.0682}, {8., 1.0717654304731536`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{8.5, 1.076523123159706}, {8.5, 1.0804}}], 
          LineBox[{{8.5, 1.0804}, {8.5, 1.084276876840294}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{9., 1.0863442808564259`}, {9., 1.0904}}], 
          LineBox[{{9., 1.0904}, {9., 1.0944557191435742`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{9.5, 1.0940748145189034`}, {9.5, 1.0984}}], 
          LineBox[{{9.5, 1.0984}, {9.5, 1.1027251854810967`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{10., 1.1122310037048133`}, {10., 1.1168}}], 
          LineBox[{{10., 1.1168}, {10., 1.1213689962951867`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{10.5, 1.1124190583060765`}, {10.5, 1.1172}}], 
          LineBox[{{10.5, 1.1172}, {10.5, 1.1219809416939235`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{11., 1.1247004521521038`}, {11., 1.1296}}], 
          LineBox[{{11., 1.1296}, {11., 1.134499547847896}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{11.5, 1.1358396583615844`}, {11.5, 1.141}}], 
          LineBox[{{11.5, 1.141}, {11.5, 1.1461603416384156`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{12., 1.1458340452206397`}, {12., 1.1512}}], 
          LineBox[{{12., 1.1512}, {12., 1.1565659547793603`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{12.5, 1.1533812930991891`}, {12.5, 1.1588}}], 
          LineBox[{{12.5, 1.1588}, {12.5, 1.164218706900811}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{13., 1.1617042176667927`}, {13., 1.1674}}], 
          LineBox[{{13., 1.1674}, {13., 1.1730957823332073`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{13.5, 1.1729542368685246`}, {13.5, 1.1788}}], 
          LineBox[{{13.5, 1.1788}, {13.5, 1.1846457631314755`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{14., 1.1877967350452185`}, {14., 1.194}}], 
          LineBox[{{14., 1.194}, {14., 1.2002032649547814`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{14.5, 1.1835611718572059`}, {14.5, 1.1898}}], 
          LineBox[{{14.5, 1.1898}, {14.5, 1.196038828142794}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{15., 1.2052063024508646`}, {15., 1.2118}}], 
          LineBox[{{15., 1.2118}, {15., 1.2183936975491354`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{15.5, 1.1986342239576842`}, {15.5, 1.205}}], 
          LineBox[{{15.5, 1.205}, {15.5, 1.211365776042316}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{16., 1.21037950408253}, {16., 1.217}}], 
          LineBox[{{16., 1.217}, {16., 1.2236204959174701`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{16.5, 1.2381773826599876`}, {16.5, 1.2454}}], 
          LineBox[{{16.5, 1.2454}, {16.5, 1.2526226173400126`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{17., 1.2496540726080858`}, {17., 1.2572}}], 
          LineBox[{{17., 1.2572}, {17., 1.2647459273919144`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{17.5, 1.2585502146537848`}, {17.5, 1.2662}}], 
          LineBox[{{17.5, 1.2662}, {17.5, 1.2738497853462152`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{18., 1.2560452383965757`}, {18., 1.2636}}], 
          LineBox[{{18., 1.2636}, {18., 1.2711547616034244`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{18.5, 1.2823051119164632`}, {18.5, 1.2902}}], 
          LineBox[{{18.5, 1.2902}, {18.5, 1.2980948880835368`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{19., 1.289989255065421}, {19., 1.298}}], 
          LineBox[{{19., 1.298}, {19., 1.306010744934579}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{19.5, 1.2948412964171998`}, {19.5, 1.3032}}], 
          LineBox[{{19.5, 1.3032}, {19.5, 1.3115587035828}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{20., 1.3145816644356063`}, {20., 1.323}}], 
          LineBox[{{20., 1.323}, {20., 1.3314183355643936`}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.5, 1.009475491033083}, 
             Offset[{3, 0}, {4.5, 1.009475491033083}]}, {{4.5, 
             1.009475491033083}, 
             Offset[{-3, 0}, {4.5, 1.009475491033083}]}, {{4.5, 
             1.006924508966917}, Offset[{3, 0}, {4.5, 1.006924508966917}]}, {{
             4.5, 1.006924508966917}, 
             Offset[{-3, 0}, {4.5, 1.006924508966917}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5., 1.0184070808250385`}, 
             Offset[{3, 0}, {5., 1.0184070808250385`}]}, {{5., 
             1.0184070808250385`}, 
             Offset[{-3, 0}, {5., 1.0184070808250385`}]}, {{5., 
             1.0147929191749614`}, 
             Offset[{3, 0}, {5., 1.0147929191749614`}]}, {{5., 
             1.0147929191749614`}, 
             Offset[{-3, 0}, {5., 1.0147929191749614`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.5, 1.0284591442509388`}, 
             Offset[{3, 0}, {5.5, 1.0284591442509388`}]}, {{5.5, 
             1.0284591442509388`}, 
             Offset[{-3, 0}, {5.5, 1.0284591442509388`}]}, {{5.5, 
             1.0239408557490612`}, 
             Offset[{3, 0}, {5.5, 1.0239408557490612`}]}, {{5.5, 
             1.0239408557490612`}, 
             Offset[{-3, 0}, {5.5, 1.0239408557490612`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6., 1.0384277467554166`}, 
             Offset[{3, 0}, {6., 1.0384277467554166`}]}, {{6., 
             1.0384277467554166`}, 
             Offset[{-3, 0}, {6., 1.0384277467554166`}]}, {{6., 
             1.0331722532445835`}, 
             Offset[{3, 0}, {6., 1.0331722532445835`}]}, {{6., 
             1.0331722532445835`}, 
             Offset[{-3, 0}, {6., 1.0331722532445835`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.5, 1.0471070538681695`}, 
             Offset[{3, 0}, {6.5, 1.0471070538681695`}]}, {{6.5, 
             1.0471070538681695`}, 
             Offset[{-3, 0}, {6.5, 1.0471070538681695`}]}, {{6.5, 
             1.0412929461318305`}, 
             Offset[{3, 0}, {6.5, 1.0412929461318305`}]}, {{6.5, 
             1.0412929461318305`}, 
             Offset[{-3, 0}, {6.5, 1.0412929461318305`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7., 1.055551639980536}, 
             Offset[{3, 0}, {7., 1.055551639980536}]}, {{7., 
             1.055551639980536}, Offset[{-3, 0}, {7., 1.055551639980536}]}, {{
             7., 1.049248360019464}, 
             Offset[{3, 0}, {7., 1.049248360019464}]}, {{7., 
             1.049248360019464}, 
             Offset[{-3, 0}, {7., 1.049248360019464}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{7.5, 1.0684867508494724`}, 
             Offset[{3, 0}, {7.5, 1.0684867508494724`}]}, {{7.5, 
             1.0684867508494724`}, 
             Offset[{-3, 0}, {7.5, 1.0684867508494724`}]}, {{7.5, 
             1.0615132491505275`}, 
             Offset[{3, 0}, {7.5, 1.0615132491505275`}]}, {{7.5, 
             1.0615132491505275`}, 
             Offset[{-3, 0}, {7.5, 1.0615132491505275`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8., 1.0717654304731536`}, 
             Offset[{3, 0}, {8., 1.0717654304731536`}]}, {{8., 
             1.0717654304731536`}, 
             Offset[{-3, 0}, {8., 1.0717654304731536`}]}, {{8., 
             1.0646345695268464`}, 
             Offset[{3, 0}, {8., 1.0646345695268464`}]}, {{8., 
             1.0646345695268464`}, 
             Offset[{-3, 0}, {8., 1.0646345695268464`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{8.5, 1.084276876840294}, 
             Offset[{3, 0}, {8.5, 1.084276876840294}]}, {{8.5, 
             1.084276876840294}, 
             Offset[{-3, 0}, {8.5, 1.084276876840294}]}, {{8.5, 
             1.076523123159706}, Offset[{3, 0}, {8.5, 1.076523123159706}]}, {{
             8.5, 1.076523123159706}, 
             Offset[{-3, 0}, {8.5, 1.076523123159706}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9., 1.0944557191435742`}, 
             Offset[{3, 0}, {9., 1.0944557191435742`}]}, {{9., 
             1.0944557191435742`}, 
             Offset[{-3, 0}, {9., 1.0944557191435742`}]}, {{9., 
             1.0863442808564259`}, 
             Offset[{3, 0}, {9., 1.0863442808564259`}]}, {{9., 
             1.0863442808564259`}, 
             Offset[{-3, 0}, {9., 1.0863442808564259`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{9.5, 1.1027251854810967`}, 
             Offset[{3, 0}, {9.5, 1.1027251854810967`}]}, {{9.5, 
             1.1027251854810967`}, 
             Offset[{-3, 0}, {9.5, 1.1027251854810967`}]}, {{9.5, 
             1.0940748145189034`}, 
             Offset[{3, 0}, {9.5, 1.0940748145189034`}]}, {{9.5, 
             1.0940748145189034`}, 
             Offset[{-3, 0}, {9.5, 1.0940748145189034`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10., 1.1213689962951867`}, 
             Offset[{3, 0}, {10., 1.1213689962951867`}]}, {{10., 
             1.1213689962951867`}, 
             Offset[{-3, 0}, {10., 1.1213689962951867`}]}, {{10., 
             1.1122310037048133`}, 
             Offset[{3, 0}, {10., 1.1122310037048133`}]}, {{10., 
             1.1122310037048133`}, 
             Offset[{-3, 0}, {10., 1.1122310037048133`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10.5, 1.1219809416939235`}, 
             Offset[{3, 0}, {10.5, 1.1219809416939235`}]}, {{10.5, 
             1.1219809416939235`}, 
             Offset[{-3, 0}, {10.5, 1.1219809416939235`}]}, {{10.5, 
             1.1124190583060765`}, 
             Offset[{3, 0}, {10.5, 1.1124190583060765`}]}, {{10.5, 
             1.1124190583060765`}, 
             Offset[{-3, 0}, {10.5, 1.1124190583060765`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11., 1.134499547847896}, 
             Offset[{3, 0}, {11., 1.134499547847896}]}, {{11., 
             1.134499547847896}, 
             Offset[{-3, 0}, {11., 1.134499547847896}]}, {{11., 
             1.1247004521521038`}, 
             Offset[{3, 0}, {11., 1.1247004521521038`}]}, {{11., 
             1.1247004521521038`}, 
             Offset[{-3, 0}, {11., 1.1247004521521038`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{11.5, 1.1461603416384156`}, 
             Offset[{3, 0}, {11.5, 1.1461603416384156`}]}, {{11.5, 
             1.1461603416384156`}, 
             Offset[{-3, 0}, {11.5, 1.1461603416384156`}]}, {{11.5, 
             1.1358396583615844`}, 
             Offset[{3, 0}, {11.5, 1.1358396583615844`}]}, {{11.5, 
             1.1358396583615844`}, 
             Offset[{-3, 0}, {11.5, 1.1358396583615844`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12., 1.1565659547793603`}, 
             Offset[{3, 0}, {12., 1.1565659547793603`}]}, {{12., 
             1.1565659547793603`}, 
             Offset[{-3, 0}, {12., 1.1565659547793603`}]}, {{12., 
             1.1458340452206397`}, 
             Offset[{3, 0}, {12., 1.1458340452206397`}]}, {{12., 
             1.1458340452206397`}, 
             Offset[{-3, 0}, {12., 1.1458340452206397`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12.5, 1.164218706900811}, 
             Offset[{3, 0}, {12.5, 1.164218706900811}]}, {{12.5, 
             1.164218706900811}, 
             Offset[{-3, 0}, {12.5, 1.164218706900811}]}, {{12.5, 
             1.1533812930991891`}, 
             Offset[{3, 0}, {12.5, 1.1533812930991891`}]}, {{12.5, 
             1.1533812930991891`}, 
             Offset[{-3, 0}, {12.5, 1.1533812930991891`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13., 1.1730957823332073`}, 
             Offset[{3, 0}, {13., 1.1730957823332073`}]}, {{13., 
             1.1730957823332073`}, 
             Offset[{-3, 0}, {13., 1.1730957823332073`}]}, {{13., 
             1.1617042176667927`}, 
             Offset[{3, 0}, {13., 1.1617042176667927`}]}, {{13., 
             1.1617042176667927`}, 
             Offset[{-3, 0}, {13., 1.1617042176667927`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{13.5, 1.1846457631314755`}, 
             Offset[{3, 0}, {13.5, 1.1846457631314755`}]}, {{13.5, 
             1.1846457631314755`}, 
             Offset[{-3, 0}, {13.5, 1.1846457631314755`}]}, {{13.5, 
             1.1729542368685246`}, 
             Offset[{3, 0}, {13.5, 1.1729542368685246`}]}, {{13.5, 
             1.1729542368685246`}, 
             Offset[{-3, 0}, {13.5, 1.1729542368685246`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{14., 1.2002032649547814`}, 
             Offset[{3, 0}, {14., 1.2002032649547814`}]}, {{14., 
             1.2002032649547814`}, 
             Offset[{-3, 0}, {14., 1.2002032649547814`}]}, {{14., 
             1.1877967350452185`}, 
             Offset[{3, 0}, {14., 1.1877967350452185`}]}, {{14., 
             1.1877967350452185`}, 
             Offset[{-3, 0}, {14., 1.1877967350452185`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{14.5, 1.196038828142794}, 
             Offset[{3, 0}, {14.5, 1.196038828142794}]}, {{14.5, 
             1.196038828142794}, 
             Offset[{-3, 0}, {14.5, 1.196038828142794}]}, {{14.5, 
             1.1835611718572059`}, 
             Offset[{3, 0}, {14.5, 1.1835611718572059`}]}, {{14.5, 
             1.1835611718572059`}, 
             Offset[{-3, 0}, {14.5, 1.1835611718572059`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{15., 1.2183936975491354`}, 
             Offset[{3, 0}, {15., 1.2183936975491354`}]}, {{15., 
             1.2183936975491354`}, 
             Offset[{-3, 0}, {15., 1.2183936975491354`}]}, {{15., 
             1.2052063024508646`}, 
             Offset[{3, 0}, {15., 1.2052063024508646`}]}, {{15., 
             1.2052063024508646`}, 
             Offset[{-3, 0}, {15., 1.2052063024508646`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{15.5, 1.211365776042316}, 
             Offset[{3, 0}, {15.5, 1.211365776042316}]}, {{15.5, 
             1.211365776042316}, 
             Offset[{-3, 0}, {15.5, 1.211365776042316}]}, {{15.5, 
             1.1986342239576842`}, 
             Offset[{3, 0}, {15.5, 1.1986342239576842`}]}, {{15.5, 
             1.1986342239576842`}, 
             Offset[{-3, 0}, {15.5, 1.1986342239576842`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{16., 1.2236204959174701`}, 
             Offset[{3, 0}, {16., 1.2236204959174701`}]}, {{16., 
             1.2236204959174701`}, 
             Offset[{-3, 0}, {16., 1.2236204959174701`}]}, {{16., 
             1.21037950408253}, Offset[{3, 0}, {16., 1.21037950408253}]}, {{
             16., 1.21037950408253}, 
             Offset[{-3, 0}, {16., 1.21037950408253}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{16.5, 1.2526226173400126`}, 
             Offset[{3, 0}, {16.5, 1.2526226173400126`}]}, {{16.5, 
             1.2526226173400126`}, 
             Offset[{-3, 0}, {16.5, 1.2526226173400126`}]}, {{16.5, 
             1.2381773826599876`}, 
             Offset[{3, 0}, {16.5, 1.2381773826599876`}]}, {{16.5, 
             1.2381773826599876`}, 
             Offset[{-3, 0}, {16.5, 1.2381773826599876`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{17., 1.2647459273919144`}, 
             Offset[{3, 0}, {17., 1.2647459273919144`}]}, {{17., 
             1.2647459273919144`}, 
             Offset[{-3, 0}, {17., 1.2647459273919144`}]}, {{17., 
             1.2496540726080858`}, 
             Offset[{3, 0}, {17., 1.2496540726080858`}]}, {{17., 
             1.2496540726080858`}, 
             Offset[{-3, 0}, {17., 1.2496540726080858`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{17.5, 1.2738497853462152`}, 
             Offset[{3, 0}, {17.5, 1.2738497853462152`}]}, {{17.5, 
             1.2738497853462152`}, 
             Offset[{-3, 0}, {17.5, 1.2738497853462152`}]}, {{17.5, 
             1.2585502146537848`}, 
             Offset[{3, 0}, {17.5, 1.2585502146537848`}]}, {{17.5, 
             1.2585502146537848`}, 
             Offset[{-3, 0}, {17.5, 1.2585502146537848`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{18., 1.2711547616034244`}, 
             Offset[{3, 0}, {18., 1.2711547616034244`}]}, {{18., 
             1.2711547616034244`}, 
             Offset[{-3, 0}, {18., 1.2711547616034244`}]}, {{18., 
             1.2560452383965757`}, 
             Offset[{3, 0}, {18., 1.2560452383965757`}]}, {{18., 
             1.2560452383965757`}, 
             Offset[{-3, 0}, {18., 1.2560452383965757`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{18.5, 1.2980948880835368`}, 
             Offset[{3, 0}, {18.5, 1.2980948880835368`}]}, {{18.5, 
             1.2980948880835368`}, 
             Offset[{-3, 0}, {18.5, 1.2980948880835368`}]}, {{18.5, 
             1.2823051119164632`}, 
             Offset[{3, 0}, {18.5, 1.2823051119164632`}]}, {{18.5, 
             1.2823051119164632`}, 
             Offset[{-3, 0}, {18.5, 1.2823051119164632`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{19., 1.306010744934579}, 
             Offset[{3, 0}, {19., 1.306010744934579}]}, {{19., 
             1.306010744934579}, 
             Offset[{-3, 0}, {19., 1.306010744934579}]}, {{19., 
             1.289989255065421}, Offset[{3, 0}, {19., 1.289989255065421}]}, {{
             19., 1.289989255065421}, 
             Offset[{-3, 0}, {19., 1.289989255065421}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{19.5, 1.3115587035828}, 
             Offset[{3, 0}, {19.5, 1.3115587035828}]}, {{19.5, 
             1.3115587035828}, Offset[{-3, 0}, {19.5, 1.3115587035828}]}, {{
             19.5, 1.2948412964171998`}, 
             Offset[{3, 0}, {19.5, 1.2948412964171998`}]}, {{19.5, 
             1.2948412964171998`}, 
             Offset[{-3, 0}, {19.5, 1.2948412964171998`}]}}], {{{1., 0.}, {0.,
            1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{20., 1.3314183355643936`}, 
             Offset[{3, 0}, {20., 1.3314183355643936`}]}, {{20., 
             1.3314183355643936`}, 
             Offset[{-3, 0}, {20., 1.3314183355643936`}]}, {{20., 
             1.3145816644356063`}, 
             Offset[{3, 0}, {20., 1.3145816644356063`}]}, {{20., 
             1.3145816644356063`}, 
             Offset[{-3, 0}, {20., 1.3145816644356063`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7FHpH2h8BgdUPgsanwONz4PGF0DjCzmY2ewN
mqYI44s4+F2cGPPPGcYXc9hc/WlDQDaML+EgoRbMungSjC/lYLBbnZ97K4wv
45D2/UniwmswvpwD1/XFBbZcH6F8BQedVMlHEeIwvqIDz+SVTYGeML6Sg+l7
C1f3Ihhf2aHz0r0H3JNhfBWHU4ed1mbeg/FVHfpKC6V5H8D4ag4BfySKrwt9
gvLVHVYc8zbvdITxNaD+gfE1HZyBphV2wfhaDrazQ+evXgvjaztMTe1Ijr0D
4+s4bDlRtm++1GcoX9dBo65nZzYnjK/n4L9+ClAHjK/v4PGwSmSdO4xv4OC2
7fPfKxVQfoOBwwbm5z0ab2Hyhg5n6j3218p+gcobOnTJJ7+LcoLyGYwc+OcY
L9piDpM3cmg7GXJwxRKYvLHDj+DHS2cfgckbOwA12724CZM3cYjb5cnDpP3V
HgDN46Dh
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjX0wlAkcx5FpHe0t06m0tS9hvVTenvKyW/1+elEoslEqSi/MJi93i0pa
p8glkStRJF1323AnScoYUx0aynCN6qTzkuqWpdp99tmH9ba5vT++853PfL8z
H/7BRHG0iZGR0TZD/m/FjgUSIyMSntj3XuiPVYEbN6xhYCEJ4+FS7S9HVXBy
9LL5I1cSAu7o98XEqcDytNWd1P0kiHw0G9XxKhBWz6OoxyRY7AveavyDCvLN
5pxSyDTg3jfHX3BcBZ6P1Bfbpyl42LtyOilTBdmC5/WFujEoXnjen3NdBfM6
NytvJ85AQIRdfX+XCuqLj7nq1xgjy+9e1kFTNbhkbBPPeJiir9zEVOiphiLx
+WjhEQa6/Z6XJ49Tw5cz/7CvSczxGfO29mm5GrzKCpo9K5jI67CZynmjhkPH
o5WhcZaIjdmCMAYJ/OB5TZwRK4y3Zi3w5JPQwx6yMsuejxHKbk7KWhJ+Kvav
O82wxuAPj0KMwg27S6J5zOkFWJ1QpXWVkrCssa3nCHsRJpiIFc/ySTg8Xjmh
v2aDdSWWHb9VklAueFJwz5uN3Q2+oG0l4ZS0qO/FiyU4utNOPvqRhO3xutT0
QA7u9fLfz54lgROZe3HrMBfTdudntC/RACULTfv7Pg/9EkKWVntr4GXbTOx3
WXw8rq9ssNmlgUxudt257cuwtK6ya3mKBu4GvRZsYtliqpNMIvlZA+ETojCr
AVt8/PRJsE+NBmSpkir7cjusVVncde3UQJLZscjECHv0XMWTNY9oQGFV1v7M
SYBVD+N6xswoeEWdi4odEaCM8+7mRgEF64Lya9kNDjiXu9linR8FJ+uT95mc
dcQ7tYUve6IpcJ/gEu4bnPDC2/zsrEwKou//25Jo5Yzrb1zsGP6VAmu/BNl4
lzOWMace7GymoGiop6A2fzk2WGfGRgxSUGgcGZW+dwU6aCtyBcZaYNLy8EuL
V2IVQ9Sk4WphzgEz5sORlYhU0FSurxaS5a6j/D9c0GtqVSf/gBbqdV78Fokr
Rud8PhKYoQXRhxXmQrYbmvSlHgq5pYXwVbyrnmluKPbhmW5p1kLdBp6p6KMb
5nBuGwkUWph4a7l0j787FqVXOJYxaJjqPRRQVuGOud4DWZMONAhLW8KULA/c
eX1kd2AgDd6tZ1N2fe+BGRlj5afiaOCe8F7//i8PHFyszBXl0bBxWPdZuppA
4oxsXF9Dg0OzTZXjFQJ9A78NLnxJw/mw4G9eFxFo+2C6xfkVDZ+VWTE/XiWQ
uclxbZOBa1gkr7uUwPoQWKN6bfBHtl7JvEVga6okfssbGoImpD8O3CXwxYem
Un0vDckuHeLCdgL1qyVORxU0dDcZ10AHgTGKFIHJEA0+YV7MT50ESi+1Olwz
8Ne0W22+XQSWRLl7tQ3TcO75iTXqNwTeWO6WYztKQ+lhe0GAgsCn0i+TfSrD
X7cnc2yIwIPxPqJkNQ1RuQWDN5UENorbMyxIGuxqp0t0nwicu7txkVBDQ/Vs
F0tOEai5359WrKXB8jIjfjtN4J7Doe9caBqSBGvbp8cI3D9uubnVwN7bKrLE
kwQ2CSNsx8ZoKBnsf6+fIvCd86fiC+M06JPmQ+UMgbwTf1ra6Qx+hv/10K8E
Rvv25TUauLkkfXJ2lsBC+TrWjgka/gM4eVei
        "]]},
      Annotation[#, "Charting`Private`Tag$1385569#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVz3s01AkUB/Dx2B3EYZTUToVmTLLy+nnMUu5deo2iifFYu6LV1LBbI6nN
u0LbsknFkMfqdLbSVhRKtrVbSEhZUmZ7LYmUdt4/M56z0x/3fM/nnHvO/V67
b4UhfH0KhRKkm485ErpQQKHI4O3G2jLDQAm42oQ1vbKWAS/eI1Wsc+r70ybN
LjKILM2OubJJAhaHaVdTYmTAbDvkywuSgE+NqULxpwyUd6bYv3IlUGBkkD6S
IYe4NovAdRES8GqWnuiaVkB4/+C9/B0SOMrqbCxSk3C8S+nkmCUB04cbxi4I
Z8BkJCDfrUkCjSUHXGZX66H5jSpGm1QCzoeCQmbcDTHcq7rjnL0URCF5fJ94
KkqlfTHpsVL478gz+hmBCZpUcp91l0jBu7KwxavaDLWVw1qnfinE/cAf431v
geqIwTtyqgzstpjeXfaOhjTj9d2zDBmI6aM0o6PzcckarV6Vvwx+LOE0HKZa
IVG89eJ3uj/FzkKTnYcXYmHb83viNBksv31fHE9fhL0P/w4ZK5PBjolLmtkz
izHBUHly0S0ZVLH+KrzOpmNmL9V5YkAG6UmiFz09S7DnBLMuRS0D7m51Suam
ZZin9K62tJLDsuj8E5vf2uBmj5J5uzzloMjgpT2pt0XX+Gn2g1A59N2fSViQ
Y4e2TUNeE8lyyLY52nCMuxw9DVxi2orlUBvcz1pnzsBurt4vogY5RGp8w2iv
GDgn5fP8nsohI0Vwxb6KiS2hNfCGlMM+owPRwm/s0RTnTtlZKWCEVtnVsZKF
A/ha4e+tgMeKY7EJ71h4nSG8HR6hAL/ggjp60wq0zK0oikpVQGpj8jb9XAfM
4tT2TFcowE1jQ7gFrMS+iRzr7GYF8OvftAppjmi5q2zEeEgBVuv3ZEz0OuLZ
Cu1PifpKEI2KC+sKPse906FMAUMJRXrRsZlfOyEOTl3Ys0EJZqrzkac+W4VH
mAfzNsYrwWC7kdnNd6tQb+KQgV+BEpLPu7y3u+yMYT4XBZTrSmhUe9u1Clyw
+NOaSO5jJfi+djLxobuioDR0+IFGCZEetqVeaa74rNx7J3WJChoCbA19h11x
cr/8Zpq/CjT/WCyN4rjhE4dEZo5ABVPP4wIrq93wTkKRxu9nFfiUt4aNmbuj
KipLFFCvAnZ77v6IRHfcNs+sUzmgApuDbP+hR+748qvt+x1nVLD2rfpDkieB
hn9w+m4zSFjRsviKQzGBswadVuMbScgL22LcLyKwZjyp/iSHhA9jOTuzSgks
XuAZzg4k4Zq5zPZpOYH5nfqXczeR4BPdXpx9jsAFSztO2gaTEKxJynpVSyA/
fCkvIpSEZOfukKIuAo9cM77aEU3C07t616CbwIt0Y4lwGwlfhHmbjT8k8FS7
vYd1DAlzaefuf9lL4L9pjT38WBKOdR5cLR0gUHQP1xrEkVC+w54VOEJg2rAZ
AwS6fXVUNjlKYDtNdWNU59j8wsGzYwSqKFNBBfEkMOumy9TjBO5t4R9/mUBC
jbbX/LyCwCDPu5z03SRYnKbu5qoItH506RPmHhL2sdZ0TZMEdgnq2x/ozA6q
zgmZJDB3rWMkPZGEssGXQ7NTBL54UuLQqvPsvvlwaYbAZuMVcwl7dfepnAre
HIFbjcRiyyQSWsoyJ7VaXb/J3279rvP/psJVTg==
        "]]},
      Annotation[#, "Charting`Private`Tag$1385621#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.981587870246425},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20.}, {0.981587870246425, 1.3314183355643936`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[114]= ",ExpressionUUID->"33223494-a15b-4f8a-9032-1e57937a288c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alpha equation with x (reference alpha derivation)", "Section",
 CellChangeTimes->{{3.8645179214987173`*^9, 
  3.864517933907236*^9}},ExpressionUUID->"58e9c9e6-a2c7-4cf0-bb14-\
795507c33bd8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"l1", " ", "=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"AvgElectrons3D", "[", 
     RowBox[{"10", ",", "10", ",", "5000"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"l1", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.872451360747604*^9, 3.8724513810437937`*^9}, {
  3.872452147874374*^9, 3.872452148046516*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"bbcc0f44-bea1-40d2-9470-ebfdc3fcbe96"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"39.79", "0.19"},
   "Around"],
  Around[39.7874, 0.19109490757406422`]]], "Output",
 CellChangeTimes->{3.872451371296194*^9, 3.8724514059013033`*^9, 
  3.872452259338846*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"83abb0c9-d78f-4225-86fa-d1ce479714c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l1", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "0.25"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l1", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "0.2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8724513758599777`*^9, 3.8724513764282913`*^9}, {
  3.872451434858056*^9, 3.872451466512219*^9}, {3.872452140671731*^9, 
  3.8724521408929243`*^9}, {3.872452270343405*^9, 3.8724523136941347`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"f8b8b9f3-38ef-4383-9731-63d76f386663"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.40599999999999997`], Thickness[Small]}], 
     RectangleBox[{1., 0}, {1.25, 506.},
      RoundingRadius->0], RectangleBox[{1.25, 0}, {1.5, 609.},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {1.75, 638.},
      RoundingRadius->0], RectangleBox[{1.75, 0}, {2., 615.},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.25, 738.},
      RoundingRadius->0], RectangleBox[{2.25, 0}, {2.5, 870.},
      RoundingRadius->0], RectangleBox[{2.5, 0}, {2.75, 968.},
      RoundingRadius->0], RectangleBox[{2.75, 0}, {3., 1023.},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.25, 1225.},
      RoundingRadius->0], RectangleBox[{3.25, 0}, {3.5, 1320.},
      RoundingRadius->0], RectangleBox[{3.5, 0}, {3.75, 1398.},
      RoundingRadius->0], RectangleBox[{3.75, 0}, {4., 1575.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.25, 1825.},
      RoundingRadius->0], RectangleBox[{4.25, 0}, {4.5, 2063.},
      RoundingRadius->0], RectangleBox[{4.5, 0}, {4.75, 2277.},
      RoundingRadius->0], RectangleBox[{4.75, 0}, {5., 2474.},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.25, 2697.},
      RoundingRadius->0], RectangleBox[{5.25, 0}, {5.5, 3060.},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {5.75, 3360.},
      RoundingRadius->0], RectangleBox[{5.75, 0}, {6., 3760.},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.25, 4174.},
      RoundingRadius->0], RectangleBox[{6.25, 0}, {6.5, 4689.},
      RoundingRadius->0], RectangleBox[{6.5, 0}, {6.75, 5048.},
      RoundingRadius->0], RectangleBox[{6.75, 0}, {7., 5557.},
      RoundingRadius->0], RectangleBox[{7., 0}, {7.25, 6393.},
      RoundingRadius->0], RectangleBox[{7.25, 0}, {7.5, 7104.},
      RoundingRadius->0], RectangleBox[{7.5, 0}, {7.75, 7754.},
      RoundingRadius->0], RectangleBox[{7.75, 0}, {8., 8489.},
      RoundingRadius->0], RectangleBox[{8., 0}, {8.25, 9456.},
      RoundingRadius->0], RectangleBox[{8.25, 0}, {8.5, 10596.},
      RoundingRadius->0], RectangleBox[{8.5, 0}, {8.75, 11572.},
      RoundingRadius->0], RectangleBox[{8.75, 0}, {9., 13137.},
      RoundingRadius->0], RectangleBox[{9., 0}, {9.25, 14421.},
      RoundingRadius->0], RectangleBox[{9.25, 0}, {9.5, 15906.},
      RoundingRadius->0], RectangleBox[{9.5, 0}, {9.75, 17462.},
      RoundingRadius->0], RectangleBox[{9.75, 0}, {10., 19178.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.2, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 10.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.872451376811822*^9, {3.872451408982574*^9, 3.872451467036672*^9}, 
   3.8724521413399897`*^9, {3.8724522621722937`*^9, 3.8724523140102177`*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"4bbd8528-2ebc-4b66-b798-8798a210b86b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.511], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.511], Thickness[Small]}], RectangleBox[{2., 0}, {2.2, 566.},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.4, 686.},
      RoundingRadius->0], RectangleBox[{2.4, 0}, {2.6, 730.},
      RoundingRadius->0], RectangleBox[{2.6, 0}, {2.8, 824.},
      RoundingRadius->0], RectangleBox[{2.8, 0}, {3., 793.},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.2, 980.},
      RoundingRadius->0], RectangleBox[{3.2, 0}, {3.4000000000000004, 1007.},
      RoundingRadius->0], RectangleBox[{3.4000000000000004, 0}, {3.6, 1093.},
      RoundingRadius->0], RectangleBox[{3.6, 0}, {3.8, 1155.},
      RoundingRadius->0], RectangleBox[{3.8, 0}, {4., 1283.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.2, 1446.},
      RoundingRadius->0], RectangleBox[{4.2, 0}, {4.4, 1576.},
      RoundingRadius->0], RectangleBox[{4.4, 0}, {4.6, 1762.},
      RoundingRadius->0], RectangleBox[{4.6, 0}, {4.800000000000001, 1874.},
      RoundingRadius->0], RectangleBox[{4.800000000000001, 0}, {5., 1981.},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.2, 2144.},
      RoundingRadius->0], RectangleBox[{5.2, 0}, {5.4, 2309.},
      RoundingRadius->0], RectangleBox[{5.4, 0}, {5.6, 2656.},
      RoundingRadius->0], RectangleBox[{5.6, 0}, {5.800000000000001, 2717.},
      RoundingRadius->0], RectangleBox[{5.800000000000001, 0}, {6., 3051.},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.2, 3236.},
      RoundingRadius->0], RectangleBox[{6.2, 0}, {6.4, 3688.},
      RoundingRadius->0], RectangleBox[{6.4, 0}, {6.6000000000000005, 3930.},
      RoundingRadius->0], 
     RectangleBox[{6.6000000000000005, 0}, {6.800000000000001, 4123.},
      RoundingRadius->0], RectangleBox[{6.800000000000001, 0}, {7., 4491.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{2., 7.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.872451376811822*^9, {3.872451408982574*^9, 3.872451467036672*^9}, 
   3.8724521413399897`*^9, {3.8724522621722937`*^9, 3.872452314038364*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"d79b2835-a099-487e-8cdc-eeb69aecef93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Alpha]", "]"}], "\n", 
 RowBox[{
  RowBox[{"FindAlphav2", "[", 
   RowBox[{"\[Lambda]i_", ",", "x_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "\[Lambda]i"}], "]"}], " ", "-", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}]}], ")"}]}]}], "\n", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"FindAlphav2", "[", 
    RowBox[{"\[Lambda]i", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]i", ",", 
     RowBox[{"1", "/", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1", "/", "2"}], ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]i", ",", "x", ",", "\[Alpha]"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"6b7541c5-bfa2-4711-81a0-2c813050f14a"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
CSKH63v194VWjtn4v3hkqu0SFusLxp/X4qckObqQPmj+TYrF+o581g+jNeOP
VtF/1mtPZbF+IedzV3hXsaeR9v6RPoHFGkI+xnd7td3CFtrnkNsoljkLj+uf
IJAdo91Gm6zJG+aY8SL/uvTXvUbxDlpFnHeQY8aH3GKtrO7r8530lG+rv3PM
+JHTyQvf+V3porsLz33mmI1FfmTB0oMP/5lHxYd6f+SYjUO+Zl+c6s2ubtrB
vqydYyb0lweds+OaOWbC7KOHfmWrOTX/xbm3r3x23oLFaqZg++uXUq04l1yp
bVV+DRwzkb/2A9uXlnqnR4eIsrt6/V3i5zTj9sAHrcRk8xfa4vgL++GZHKEb
rPCegvGOu/+H6wXb59xIsauYwcxXubeH6wjblwYWZN816sLxkXt7uL7c5wX3
PzeH8YV7P3A/cG8P7YWbw3jEvR+4f7i3h/bFzWH84t4P3G/c20N75OYw3nHv
B+5P7u2h/XJzGB+59wP3M/f20N65OYyn3PuB+597e+gfuDmMv9z7gfbCvT30
J9wc7mfu/cD9D+P1zZbqa0lSzThew/0v9FRh96dYawq2h/381NjWGNoZg/Nb
7uNCe4H93PafsmpoVwu2LzhulJTtkcQddlRddegR45D+v+5zGO+q9Hf3faxs
+mu9zZegb+q/TrT8td7G23ejT4RpK3IxA9rN0EaQXbZrh7J4HdNvvFXOOVL7
ZDz7xeEbjWoLOpFv8jUs8gwWYSfIV46Rc2V4tnq0/rkTP6jr1OauVU+YeJTf
r9N6VvJPu9bY9u0SHxMPi3ZYanNyiLq6aovVGieGd/TPNpx3bZg6TO/aINzL
8OfHE5bL97HYs+UfO6zIZ+J/MXvtqcbxPOxX8y+arapjuOoMiV2Krbzsk1Pj
T+2JYOYPHM/K1exkPvbKjalWW/Xamfv5wTfOGn9+9p89MZI7vjK8Ybr0QY1H
Y9lnvCYfb9P+P+OUXXSYuMU4tuqOHjPVtwyH635E7p38JC/GD/QPHy3Tfmwo
/Ps5d8FPMafMF8xxof0GJi2teKnI7B/aox6PzKBsVMdf7Uv9yas9WiKdf7WX
yIjoMwf3MRzmqw7zgtL22zIc5j9PfmTPubydiTMxwPSFTxzPiPPDO51BOrFs
Jn6YF/nyNwdnfGc4zIvsjKokObeY+GFedHiL9Z4dbQyHedFBJccTUvJMnDAv
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
hYmmLujzVeSwC4vVRRnxPp33c1sw+pQn62fmUwteLtJLw/xY0iKXqzEG7VTH
5CGb3+cq8PkrmOxniX2TqOWMdnwuWE3285asj4Ljzr+4656T3xdq+ER4b1h1
Hh7XYHs0+z/rm/bv1Nn2o/4tkz+Rmf7LQOszZSjn2DPrUDjmi76S9WD9ZB04
xLOI7P9e9PGdv1oqMJ4LZP82EyzXfzesweeUKLL/6ScXppq8r8f58w+yf36y
Lhri/2U1J006a4BafZtPQe9LKcbPPmlzy0l6gHLwyLpUqpzJ5CXYvatY5t+p
bPbpsTf1wvE+zCXre400J5gmpjzHfNek37H+Nav7qSpPm1XCIQmY/zlYOfOY
mtM3Kql83q4qY+Z8/5B4bjfsXa1yNRvPdxOJ53hR7axr5wvwfG1JPFqWR4JF
+ovwfAtIPEpkPTOcb677V56Y3t/U8GxJnXQ9Jg8z6drBOGm135Qyf/+YM46F
eL6HDiQaO/kNUh7ymvOavn3A8/X677rgQWoRz8KEV3Fvsd21TbBrMdD6RS30
3zRQb3MBz1f2U597TfRPyu+FsIxgRRjmYS7k7N+nNuknFf/ipwa/ZiLmYaJJ
HqmLK99VQOLv1PeX5FGJZ55bSfxRfDe0axenoB8tEr9/7qDZiow09OND4p/S
fzc2kC8L5/mdJP5ZM1xF537PwXn+UhJ/ZLHTyuGX+Tj/NCHxn+eEdG94VIie
Cyp1vKRtWez760RPhjszeRjjDOcbNatZ7OPFgQ9ydzF5GNnzD99IZ3GohdP1
BhMds9Gzsdp3PSdpDmWha+MlZpuEnmPna81mmQ9TXVt+LhLRDmOeW0clVxrU
DFGZMnN4xm25i/3bpqb5j2pWD1Exhte7jrn4oGdbkkdq5cp3FZL4c2jdxhl9
AejZhMQfd+9H6sRlEeh5KYk/sWxghobgO/RsQuIXOG+0/aRcInp+T+K32HPb
TfZEMnrm4fs3fo+hoxs/GXxAz6ok/ieBDeGPVNPQc+zJ7ASDaaPY7cl9+bNH
MXkYrT1DT6WzeNlOdPOBRTOYPAyHvdy0xpSXnS44QVimNh89+yw7ucdJmpfd
GbmibeGtNPSsPNNlqVoxDzvgWqun/p336LlTKGvcf9bNxS7cKB17IQQ92/3+
3R69hIctPu5i37CRI44jS0geaSZXviuOxJ8sZsJRCzRHz9okfuEho7qzPV7o
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
M/NVr6HNy+ZgUFbD0trRGvo0Z74rq+/0z9aP1pHGa+5e5/ekbP7HZb5Ya2FM
5lv1rkanzreV/yoP7putN627O2hX07c3+B00yWpolbP7KJrdV5PsWnquZtm8
af1qHWvuhqeu9Y1FLsz7nAtoEwqev10FP0fT7Ln2Zufao3WZzbfy8j/QvSvl
45TPps7flcdXyvLKJzhPA9ojOk45NPwwPEoxFDwbngDfAD8Ej4SbwnPgiYlt
+UzNSWJ/tVO6qbgr2v/KD3/O78vhKsgvaDW1FpB75eP13MhmHDtXcy//nrpG
dybHXp66lnU2/Jn+Jp3UcanrhGfR/75ycvgE+X/OMwG+U9eBx8H94FvhpfAD
ie3ZMng6/IueTXqI7ET/avhRuCO8Cp4J91D+Ac9P7HM2wwtkg6NttWx2f/qf
hZcn9qUT4QFwbXgKPBiuBY+XjsJ14fvhYXAdeCo8FG4NL4GnwdfC98FD4BKJ
64sr6ftR8Rx8PvKArqH5UcyT6bJ0Wu9aNcjdmf9SffEV5Uyp6zkdNK+p6yod
ke8VXOOSz3u/4PqV7PjltLFwX87/ta4Bl0N+l/j9VkSez/NfknMtVz5RNuZV
XTe4Pqb65DeJa1knIb+inQ2XRX6ZOA4vg/xJfgK+QH9P7TdPVfyW+tk7pY6R
ZZNlm+tkNl/68h7H1ECWRu5TvKj1g9yvWFPrJLHOSHcmIi9O7a8rK+YqWF/k
F85M7XOvQe4puG4p+/4ux58Bl0J+VnBtU7b+rNS+vhLnuRp+DX4frpG6jlsx
80Gyg7sLnjvN4RL4+4LrwKrnnxStq6pX6FjpsfIC1dFUT1NePxZZj7Yks9E6
56a87azmQLHBuLxzhKW08XnnAstkN/LOKZbTJtIa0FbIhwbnU8rBWwfnUMq7
R6Wuy8k+t6c1zzmvbxOcW6lecXGw3s2Gbw3OrZSnt5JNzzmX75n5ffn/sZlN
k22UfVjN/R4fXT/VOlnH74uC3+Msrc/gOX8MvhCuLt1MvYa0lpYz/lL54Lzz
L9kN7Rco55J9UH1eOZfetWrrytditF+Tf1NN5UqtH87TK/Mp8i19guuK5bL3
+3nOudWYzBd8xt9LJo4ZHmfMKdF1PdWdVH+6jf56/L109LqfQ/+3yKvoryG7
FGy75tFfJ9g2LpY/DLZ18+XTgm3gXK35YDu5CK4bbD+XwI2C7cCq1LUuzfll
yu+Cr7WM/muCbeZC+IZgvVgON4av0/0rxgvWkRVwg2B7shJuHlxTXQvXhi+V
3YObBtcz18A9gmsdqu10C65dqMbSMTjvVp2wQ3Ber3pgu+B8XzXDnsG1EdVe
egXXRlRj6R5c91Dd5vbg+VQ9p1mwrX4idd1FewQt5aeC7cZqxQ/BNQrVEitF
14JVn+kUXENQza1zcG1BNajHo/fDlFt1yuyMam6bovfSlHfsCtbrM1LX3j7L
uQYv+79eOS1ye7Dvq86Y5cF+5FR4WbAfqQyvgNfI38Frg31KFb3faL9bUe8r
2jdUgOtF+0WNrx/tGzS+drQ/PkXvNNq3VVXcEe1LTta6ivbrleDro3227ue6
aL+u+3mKe9jKPVSDnwz2X6enrskr3/mw4Bqk4lTtSzROHaeqHrKh4FhGe23a
R1Bc8UHBNX/5DvkQ1SAVT2uPZV2w39R9ao9Vsb1ifOVUupbqKqplyq5rH+P1
xPsj2id5I3G8qz0Z7bEqb/2mYNtyRd61Te3NaW/1i4J1/Gvlaar7RvvR8oy5
MtofnwRfFL03UEL3EO2/9X5bR/sP6V2TaLuvnK5NtK+VbnaNrjFJR7pE15Wk
O+dH1/GLa91G17akX02j/ZPywebRcYzs2HnR+wfHac1H16q0hptFxzTKGVtG
x0+yh62i46f/7G20b5MNaREdS8lO3hYdH0hPu0XX1GQfOkfXyKT7taLjpHKy
mdH7IifANaNjlLLwpdH7IqVlP6P3RUrKJkfvhRwPXxK9n1RK9jY6VjhRtis6
9iojexIdS2lddYqu38kudYjes5Edaxvt+2Wj2kXvl8jWtY+Oz2QbJ2XxieKU
m6JjNa3bm6PjM+ndOdH7OsVS75XLd8uHa89Iefpe5NDgvZ6jGDMkeC/sSPhu
eBR8DHxX8J7R4anrABVyzsOU2yqPUz43OHif6Aj4lmj7Ljs/Mjhe0j0MC95v
OhruF7xndAg8KjguPRYeEVwzUQ2qf/Be0qH0DwjebzoMHhi8D1UUvjN4n6gI
3Du4fiU/pb067dkNTB3DyEbVTp2PSFfe4B4HpY4flIMrh1Euoz2FsrTZ9H9Z
cN6h2GBE6vyornInZDnGzM18ZZ3UuqZat/Jf+UHl0MoHpX+vSedSfzOheqbi
TNmQJqnvQd9NvJ3ForInsiunyE7mvbetPFo5oHJBxX6yIU2RfYP37CJ8b3As
Ld0ZHRzzS+8aws3ggtZG8H5cAs8PjqtlM1sG7w8GzUfwflxedjJ4zy6nNQl3
EkoXgvd2/0QuCM4jZKsVeygG2cb97kn8DYDiAe3LK696nv6FwbmG7LC+eVCM
8wL9G6O//1DdT9+iKB58Nvo7BOWL8ivVg+PknxQHBceNP8ufB9c5/0I+RpuX
s7+YEZyLSa+nB+d00uVHg3Mr+YVHgnM62cAxwXmKdHlmcE4nOzktONeTLo8P
zl9kJycE5yOyA5cF55V/K9YI3q/8V33B3wP8g5xMm5azbXkgOK+UTZiXxc+K
oycG5z6yIZOCcyLZnGLRe/yqz+v7BNUyFC8eFv3tgtbkWdHfDUi/To/e+5eO
HBEzn8GxJ0bvoereTov+hkD6dXLM/VfY0TqpEv2dgXSqR/R+g2Kbw6P9kGoj
J0TnPHquU6O/OZAul4n+DkA1/zOiv2+QTSgb/U2A1lK56Nq01ljxbK2oLr05
2o/qe5vjor8D0PutHv0NhOxP+ehvLLSGK0TvK2vd9orej1Fsdmz0twtaJz2j
904UI50d/a2DbFrl6P1m6U7F6L1qre0a0d9zyAaeG723Lbt0ZvT3GbKTpaJz
P73rqtHfUsgulYzO5bQOi0bnM7IbJaLzOunL/wEV86DO
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmnfgV9Mbx+/nnnuuTdKyQoumlBVFyyhlVEZUklLRMColiihFsppWQlFI
lIbILCuyZe+9Nz/r9355nz9O3fd97r3f+znnOc/zft7P3a3f8G7D8izL3tM/
hf6/XP9cpf/3DVk2pcyyHTT2lK2jzh0s2xEaR+v4F507TbabK1nWXuNbnZuj
/y/Vud6ynS18vq79TM/poPPzNGoL3x2z7BDZ9tI1g3XtYTrXVfhH4VOFpwpf
Lbyf7rtMeL6u30+4ruynCM8Vbia8vfBJwrcJ7ytcR7iv8AvCU4RHCE/lfj1v
kfBRet504Q7Chwt/K3s/4SHCZwnXkH288OnCw4WrCV8g/KKed5nwSF1/hfDQ
wr+tluwXCl8jPFu4jfDlwrfo+r2Ed9L1fYTbyX6o8Nfp/doLHyb8Tfo9M4Sv
Y26Dnz9deI7wQcHvzxoM0bUXpbWZp+c31/GOOteb+RfeU3gH4V7CC4T3F66X
ft9tumeh8JF63rXCf8u+QXi17A8I7yt7E+Hlsj8lfJbwKN5f+BLhs4XPFd5Z
eKLwOcKjhWsLTxJ+VGOhjrfVuQaynakxkvfTuYtl+0m4Jffr720n3Fy4gfBd
sj8hvI9wY+Flwk8KVxeeL185ROMLnftd7/uM7Pfr/vtlf0v4ZuGpwrOE3xae
J3yF8OzSz7hf9x2Q+dk/a+zN+8peTbY3df1c5lJ4pvBw2Ucwf7pnQuk5WKHj
AzPPzW+6/mneT9cvk22Yzp2D/+mai9gbwvWFFwk/JlxLeLne/Uudm6Zz/7Jn
eJbu31n2ehpdWRud6y3b4mj/aKFzp8vWQKNXbp/EN28o/PsO07Ouku1W4TuE
uwpfI/yP7n9B+EHds1p4V42DdNydNde1f8n+vI4f0LlVsv0p/JzwKuGVwvN0
ze3CXfS8q4X/J/t64ZWyrxD+UfYWyZ+r4j/CnYT3Ft6R64XbCzcRrsn7CHdm
7oV3Er6u8HwfoudPE76+8PodKnwl7yPcQbiprq8l/LDGu7K10hwOjI45+8j+
Ze5Y9FfhWNRMeHvhzsJHCf8sPKD0njySWJJ5ry7SM9rquHGKVw8KnyDcUXi0
8APCxwm3Fx4l/KH+dmv97R11bp6Ol8t+jI5bE9Pwrej4dyBrJLxK+FjhdsIj
he8V7kL8Eh4qvCz6/Q4QPlN4pXAP4bbCI4SfER4k3CP3fjpB79xbONffHibc
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
97+Z5neH6NhADiGXbB+9n8gx5BqeVy9zjUWttaPsMzPHFGLLHNmvFO6odexQ
moPBxeBgDxTWHJrn1njQIupFxxr2NHu7fnSsIwYRixrgo5ljILEQjgXXguOt
KpxjZ6R4BR+vGR2riJHEyt2j+Sz8h9qSHH9J4k/0XqjPqOUbCVd0vHM0N4TD
kS9rR3M3OCP5cqfotWbNyWe7EHMyczzi+5hoffPKVA8Sk9iPr+WOVbtGxyJi
NvEZTgo3haOt1vv8UJgbb0LfLpoPD0j5dWLKT/Rm0OzaROdQcima4kHC3wv/
mTmHkku/Llw7wtHgat8VrkXRGM+IzlHkKjS/JYU5FdwKzrIUfy38+7rrbx5R
moOjhaOpwc3Rf+itZHpea7Sq6NhNzCX2wnmmp3i9rDDnhfvCeR+GTxe+t0HK
t3Wicwc5gPhNzY4W8kbuWr6u7PMz5xhyDfUQWspbubUeOC5rzZpTy3SJ1k7b
pf3O/m+XNNVTomtSatO2Kd7NTvmUNUJ/ICfRKyEnk6vgR8fmrungQ9T49EbI
odT+b8Id9KxqvGNwj4T1eTV37wSezFoQk2YFa4Jo0/QM0ArJifSi4ATkSmoC
agNqgEeFnw/WLx7Q2KawpkmvpGdaDzRNtHw0dLRONHS09L6Ze6dolGjpaNpo
l2g2aNdoqGg5aJxo32jyaJ9ooGj59AjQRtE00erR+NE6JyV/GJy594iGjpaO
5kmvEs0c7bxf5n4ZnActF00XLgTvJRcSk2cE9zxap3gM90KzpHeD5ouWiUZJ
bwaNHe3yreDYRs66Nlhjp/eDBo32Ts+D3gc9Hnol9FDo9dAjordCD4ZeDJo2
vR16KvSG6NHQa4FD0suCQ8EtqUHgx/BhapMh6ffgH3C3gWk+8Qe4FT0AeumH
Zu4NoKm2TL+f3hAaML0tehT/acOle2GsB718NHO0czRetHc0drT2tpl7a2jg
9CbRbNHG0ejR6tHc6d3/V0PlrnHoTdLzoPdxWuZeMD0TeicDMvdaB0fXnmgs
6F1otvSq0ezhF/R0pya+eaeuf1X44eD5P0/250r3Mehn0Ct6vjTPgm+hpaGB
0utFI0MbJR7BZdBU0ceIl3A5NJ39U/wiNtTWuWOj66dvgjkX3IseMb3im3XN
Il37rsbBSS88ObqGuCOYPxEP4TdtkwbYV7gGMS03Jw+l9bVPgp8xNLpGplZG
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

            "]], Polygon3DBox[CompressedData["
1:eJwt13e81uMbB/BzzvOcI7JVRkSEhrISlaRN0aKiPWhq00A7DS0qDWkpKe0h
ZTSUNlmlYZRsiZ/1s3lfr+/zx+e8nuv9XPf3Wff3vu9TtG33ht1ysrKyPpFc
WeTPz6C81FXfns7Kms+Oq6+VGuxWNo99q75GrpYL8rKymrPLs7OydqayshZK
BfVz8p3nr5OaxlYxdgE7ob5earGq7Hn2o/pGuYPdxiaxPep/XPNMdo16ofzE
bpI7WS19L7GTvV7dMCnmvaxmKXabuoW+e/Q1Zhe71jY+Xcqpl8gfeirLLXKJ
scvZ3x5XlcbGNjD2NXamMY1YZ9aePcYaut4EOU2d39hX2en67tLXQV9bvoal
2e2sJbuXrWD/qKtJE9aQLWV/qm+Vu1k9toz9pa4ijVh99iLLdb3arBVryjax
c9g9rCvryDazAuxe1o11YhvYWawx68LuZyfkgPoov9ln6axno5ytbsIf0NdB
zyvsNNaQtWdt2HfygfoIr2hsJz1Py6GYEzE39JXQ8xR7R32GXMwqqr/m76sP
GnuDse3Yesmvrs/v09dKzwx2WF045hsrxaawd9Vnxm/GrlOvkhxja7HmrLG+
11lB1pR1Z51ZI1bE673Bp8Rrq5+VL/SUiu8/3p++6eyg+nwpw0qymeyI+lIp
x25Rz5Kj6sti/rLK6rnyubpkzC1WwdiX2alerwG7n7Vma1keq8Nas2ZsMftV
XVHqszpsNjumLi6VWHm2kmUbW5M1Y03YOnYKq8fasZbsBfaLuoLUY7XZHPaZ
ukTMe3YTO8n8PW7sRDnO7og5L1ep2+rry4boG8Ya+P7Gy2RpEHNFrtHXXt+j
+kboO4ddyzqwAWwkK8iuZ53YIDaaFWDXsY5sIBvFLmG3sYFsEpvJirLb2SA2
mc1ihdnNrBcbyZ5khVhZ1pkNZo+zC1hF1pONYE+wy1gdNoRNYXPYVawjm8VW
s9dYadaJzWZr2AZWkrWO+cOWsLWsFGvDprKl7CV2HivPurPhbDy7lNVmg9lT
bDY7n1VgPdhjbAI7l93EYoEexsaxy+O7ZyPZTPY8+1u+V18evzGrHvelvp76
nmcLZZHfdgyb6fdanp2sW8PVj8szHi/LTn7Toeqxxj3m8SApKXvUv7vmza59
pWu9pK6mb7TM8PxSqS+DM+vp75k9IfaGjl73oOQ3fpWe1TIx5qP6Bte7WM/i
WHfYp9LW42lsuswy7jd9FfVdoX7Rc1X0XCi3etyHjfXcFD2/s8Fsbbw/WWvs
RawK66sep2+qviKsKuvHxrNpsX5Fb9x33ltdeTT2Cammr7++Cfqme35UrG2e
XyL1ZGCsD3KXvtH6Ho/f07WuZv3YMvUWY980tgzrwRawV9k2VozVZyPYM2wB
y2OXZNbnWHf7sJPZZZl1PNaw/nGvsqKZ9TnW+77sFFYss9b1YA+zM1gp1ob1
YYPZ6awka80eYoNi74q9mzVjPdkjLB+7NLOnxP7Rj+WyM1gN1pTdx7LZb7FG
SnVWl6XiMBF7LKvjYSOWw/5V3yC12d0szU7SV4ndxVqwf+V/OclcizlXU/2P
/JCTzIOYDzXUpxpb3NiWrDcbkE4OMf9Xl469VXknu5Ldo288m8eWstNYCdaK
PcgGsuLsXjaBzWfLWJtY//zWJ/h3ks/v+xmvyRZmJ/dT3FfHWA2PF2Qn91Pc
V/VkosfzpLr0Ur9n/Jeu82x2MpdiTh01tqrHc2SajMxNzhY/6HtdCmcl9+oV
cd5Qj4p7gy00bjLbq84nBY3tmZuch/KlkvNMnGt6e80Bucnzm/n3qWSOv88L
xdkrO/k8vdl9Us7jw3omS1Zesi/H/nxI/aT8q54q++I1c5IzVZytpsl+daHY
k1mT3OQsEWeKT+MzS7br9WfferxBCsS8it9CmqqfMPY5ttz76sIqGXss7hvJ
MbY+m8QKev5rlsfOYqU9bmdsP2OHeu7NeM+sS9xHMlrfj6wve1X9tr7dMc9Y
H/YK28t2sZ/lY3WBWFPZ1elkbWqXStbSWFMbuN4P7CH2svotfTv1fcbuZy+w
DWw9OxbfK1vEXmPr2E/ykfocKcbKqH+UD9Vnx1mClVb/FZ8zJ1knY72srP7V
9QbE3GAfsHfieuxhtpG9z96Kz8EeYZvYPraX/cIeZZvZfvZ23FtsBNudk/wf
cJAdZa3YfLaerWF/yJfqi+R6Vkn9p3ylLiJl4zykPmJsS2PnsXVsNfuEtYg5
EOszWxWfnzVjc2JtZyvjs7IH2Eq2jW1mb7DzM/d5L9aVbWXnsRaseawLfo8t
rFBmDYv1r4u+QbnJWj02O7kX4578SrroW6HvDX0b9Q3JTfawcdnJ/Ip5FvdM
7Adj5MnYG2JtkYHGbjH2gLHvxncS85wtZ1vZJvYt68ZWsx1sS8wp1pzNjf2J
rWCfs/ZsMdvIXmZfsA5sCdvEXmHHWXe2hu1kWzN7fK9UZr+TRr6Db1hXtkq9
Xd/rcTZgD7L17E22g51gvdk6todtTyf/030T964UlVax/7JB+raqD+p7L84b
sT6xXexjdiDmgLwX3wkv67tqG+uL1FKP5XP0zdDzLquRSvbK2DOreY13WGU2
PPZ9fZP1vc1uYcPYNDYx7o24r9W7eHGv0SLWU6mpHsNn63taz95YN9hQNpVN
Sif79N2p5FwR54s6Xnd3rKmpZP7EPBrJysbZLuZn/HaSykvec3WPH9bzSJwb
2MfpZO1Kqb/wXNfcZF+ItTo/+yaVrKe5etfHGiFHPHcondybcY/2j+9f0no+
Cjdut7qEz9bS2F9j3WErU8l7KpuZ9+emkv9z4//dwXnJ2WcI2xbzWZqwQ6wR
e1q9zNhFcc6J+cwmsYVsXmadLJdKPld8vvLG7mFl4v2rR8Xeo+8wa8xmsOXs
hfg9WBP2DFvBFsd6wIaxHexDtp/tYBdmziBx3ugR6xobznayj9gHsb6woWw7
O8z2sQNx/8ZexBax+Ww7K5w5v8Te3Z2NY7N9b8XSyVnzZJ/jLXZj7HX6ntA3
hu9jd8Q+xhawZ9l+diebGGs7m8u2sQsy54M4W3RLJ/d/rANzpVpmr90lRTJ7
T/x/1CudzKsrU8m+E/tPae9lJ7solfwfFeewnvr+A6TZMpQ=
            "]], 
           Polygon3DBox[{{1250, 720, 1000, 420, 411, 1417}, {1436, 735, 545, 
            544, 942, 1341}}]},
          Annotation[#, "Charting`Private`Tag$4981846#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlElP1EEQxbun/+wMHjyYOB7EuyD4IfTsEg/GqCgKCjMqOhz4KMZgop9D
3KIxGoMMDIqiuO9GcMI6qL9KvcNLva6uru6uet2dfaUDxVwIYRgkUI0h/MbO
YkfARZBn3J5z3pCF0Ap2wydZsA7OwDeweWIuwxuZ78FeAO2s/YTdAz6DFeKa
8DUSe4TxKNjCeCp6zgr4EX39T7AAusFbMM7aSzrDIrwG3wZfwx4G6yAj7zHb
F3+W+RmuJd/3FHwVewNc0Tkt9xCocYZb2KNgAuxg7qnid8F/wa/DZ8BqcF61
+8Nv2p2IOUHMcvL6zMC3YuewXeAlOK+9WoOfrQhP2FnW7IX/sQYwPgf/B18C
h+QfiO5fIuRv8hwWk8s8b8T2Y8+qfxY/CFqC7z+otS3ELWOnk/dkGLQF56Xo
c2vJ19WT9+Q0aGbcnHmdKsl9ffLbGSzPVdXhEbyAPYk9Hr3fm8nPVpdmbF0T
vWrIeYzVrRBdE/XgWjP9Wa1rqo/VqRxdYx34t7PHffW6Iv1MR9dIj7Rn8bbW
+jSh/t6OrgHzVZW7rJwb2r+O/a48pkfrQ0Fzj6Pf7Ul0HfXqjbxQr+dU7y7V
37R6MLpOrA7mf6b+2p4dejdlnfOBaRP7EHvH9A6/i32lHs5jv6hXX6P30rjp
/J20/D56n4xbX6yum8HPH6T7KfnHNDeiu1jNS3qzpo03eoML0m+3NGx6+ADf
mXkN9+v8Q9J6TXr7Bu803SlmRVor6g5j6rv9A73qe153trvfi/4fma6fR/9v
+jUe13u0d1lU3jbl2ae7zKtur22N/Ivq0YDmJqV1+8c+6u72b43qbNb7/95o
roc=
           "]], Polygon3DBox[CompressedData["
1:eJwtk8tvjVEUxc+557u9bd028UiEGqi5V42Na0yNROj1DFEl/B+di5DwhzBQ
4hFt1SukggFG2rptrz7wW9YerOy1zjn7O/usvb/B1tWjY7WU0mFQgdWc0nGw
Dl8jbmbxHXEePV1S6kLfRPeh+0j8Bj8AltHfic/BKGigXxDXyDkf+VPwZXAa
3YWuk/8IfjL0JPED2AcW0R+Ju7nvK7GN7oZ3yD+Dfgl2obeAuTg/w94g+kfU
0wP/DN8f+V+IddauE5voJvcvkVOHP2RtB3vt4vf/BtvQb9BD2W++B+8nZwA+
ojvR6+AC/JxyimtQLZeyDVWdqrcFprI9lBfK2YD/LT57EfyBTxPPgr1gJmp6
QDyRXestcCU8fwV/DQ5mv+kO/HF4KY+fgF+sHSL2J9fbrOy3fN8Jv8tah72f
6D2Vz49E/9/qfcE3wET2/fLyMrxWeR5uwFeT/VG/VXu3ZqnY72vZd6i+28W9
GWOtYm+gcp2qtwFfIA5ne76YfX48+42z8KW464h6nF23vq2cebCSvac3d+RF
zd6rByvFPe3Efjv615M8c+rH/zcnz4D2t3J+NvrRW7mHreiReqX+9SbPmPqd
wabkHsmf7fIUfgwscPYp8VT8I8/ijUOxr3ONmmdJ/4z8u1+8pzOaRc2Pan0f
/6bmTXd/yv4XSuXZHg9//wFq4odg
           "]], 
          Polygon3DBox[{{979, 304, 485, 484, 1032}, {932, 250, 501, 500, 
           1009}, {1016, 462, 461, 7, 1015}, {928, 494, 493, 305, 981}, {1036,
            452, 451, 5, 516}, {980, 305, 491, 490, 1033}, {1014, 351, 458, 
           457, 1031}, {976, 240, 470, 469, 1034}}]}],
        Lighting->{{"Ambient", 
           GrayLevel[0.8]}}]}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slLVVEcwPHzLBEiy03SRiWaQKhtBLoJikBXQgi2ixBqkYsINLLMnLJS
TFObTdNyns3StHKojDZWltkk+G9EfS4uvu/zO+dcuPe+93acKMg5EwshjOm8
IZrzfKxx98YQkphivdecZk7nfh5kJo8ym7k8znye5jkWsYxVrGcTW9nBQY7y
FWd5OD6ETe5zQZ+sC7lHU3EhfLae5pfoei7xNb/yDb9xhsuc5XfOcV4r5rf8
wXf8yff8xQX+5gf+4cSGEDa7Z7FWrYui99aKZ1y0/sgZTnGE/WxnCxtZx0qW
spBneYonmcdjzOIRZvAA9/GQd09wn1RzhfmvuUxNGtaQdrn2Ia+oS40a1E77
A3ygUnXqlhLt17Jf9/VUT5Rsv4E16tM9dahd25zV84Z6dVePlWa/jTd1XT26
o9bomZ09Yp2uqVsp9prZotuq1qSuKsnZS17WhKr0XJXa6uwFS1ShMW23N85n
uqRybYm+f47qoixDzG/o5wv/rI1h0iIxtv6f/g9MOGNs
        "]], 
       Line3DBox[CompressedData["
1:eJwl0UdKREEUBdBq7WBqxQBiGNguyamI0CAIgqIIDtyEKzLnnHPOOeeEp3Fw
uLfe4/9BVSrdVtcaCSF0EM0KISZfskOoN+ylj34qoiEMyEGGGKbSbESOMsY4
VWYTcpIppplhlmq7OTnPAosssUyp3YpcZY11is025CZbbLPDLiV2e3KfAw45
osb8WJ5wyhnnXJCyu5RXXHPDLbXmd/KeBx55otz8Wb7wyhvvlJl/yE+++KaH
H3fXLYtkV+YuKHSnhc6delJP6u16gV6gZ/tX5gHy9Yjeoufpv96gWc/VP/Qm
PeGbHOe0HtcTeqMe0+N6Q+T/Df8AX/xEkg==
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNy8cyA2AUBeBrhiCewsKep1Cihm20vUQXvUTvCa/jAZSVboYoUV7Dt/jm
3P+c+RtHc+lsVURkaKqOaK6JOOMiEdEqW2jj0vvVnnFPM0M7V/o3/aB7ljk6
uNWPybJtSOaZJ6lPySzvtmG5wIO+lk53jg/biKzTPbLo7mKcT9uOfNIvyWW6
meCcO/2uXGGVHia51n/5u+deY51eEvobKrZ97w0K9HGvn5LftgO5yRYN+rQ8
5sd2KE951hdlPyf82o5kvf6FknuAP/22/AdBnDPy
        "]], 
       Line3DBox[{1063, 1339, 1429, 1729, 1062, 1330, 1430, 1726, 1064, 1331, 
        1548, 1256, 1378, 1332, 1549, 1257, 1379, 1535, 1550, 1258, 1380, 
        1536, 1551, 1259, 1381, 1743, 1333, 1365, 1260, 1382, 1744, 1334, 
        1366, 1431, 1727, 1383, 1335, 1367, 1432, 1728, 1384, 1336, 1368, 
        1741, 1261, 1385, 1337, 1369, 1742, 1262, 1386, 1537, 1552, 1370, 
        1263, 1387, 1538, 1553, 1371, 1264, 1388, 1745, 1338, 1372, 1265, 
        1346}], Line3DBox[{1066, 1433, 1624, 1065, 1434, 1625, 1067, 1435, 
        1626, 1068, 1554, 1266, 1069, 1555, 1267, 1070, 1556, 1268, 1071, 
        1730, 1340, 1269, 1072, 1732, 1341, 1436, 1731, 1073, 1342, 1437, 
        1733, 1074, 1343, 1438, 1734, 1075, 1344, 1557, 1270, 1076, 1539, 
        1558, 1271, 1077, 1735, 1345, 1272, 1078, 1736, 1347, 1273, 1079}], 
       Line3DBox[{1081, 1439, 1627, 1080, 1440, 1628, 1082, 1441, 1629, 1083, 
        1442, 1630, 1084, 1559, 1274, 1085, 1560, 1275, 1086, 1561, 1276, 
        1087, 1562, 1443, 1631, 1088, 1444, 1632, 1089, 1445, 1633, 1090, 
        1446, 1634, 1091, 1563, 1277, 1092, 1564, 1278, 1093, 1565, 1279, 
        1094}], Line3DBox[{1096, 1447, 1635, 1095, 1448, 1636, 1097, 1449, 
        1637, 1098, 1450, 1638, 1099, 1451, 1639, 1100, 1566, 1280, 1101, 
        1567, 1281, 1102, 1568, 1452, 1640, 1103, 1453, 1641, 1104, 1454, 
        1642, 1105, 1455, 1643, 1106, 1456, 1644, 1107, 1569, 1282, 1108, 
        1570, 1283, 1109}], 
       Line3DBox[{1111, 1457, 1645, 1110, 1458, 1646, 1112, 1459, 1647, 1113, 
        1460, 1648, 1114, 1461, 1649, 1115, 1462, 1650, 1116, 1571, 1284, 
        1117, 1572, 1463, 1651, 1118, 1464, 1652, 1119, 1465, 1653, 1120, 
        1466, 1654, 1121, 1467, 1655, 1122, 1468, 1656, 1123, 1573, 1285, 
        1124}], Line3DBox[{106, 597, 107, 598, 108, 599, 109, 600, 110, 601, 
        111, 602, 112, 603, 113, 604, 605, 114, 606, 115, 607, 116, 608, 117, 
        609, 118, 610, 119, 611, 120}], 
       Line3DBox[{1126, 1469, 1657, 1125, 1470, 1658, 1127, 1471, 1659, 1128, 
        1472, 1660, 1129, 1473, 1661, 1130, 1474, 1662, 1131, 1475, 1663, 
        1132, 1574, 1476, 1664, 1133, 1477, 1665, 1134, 1478, 1666, 1135, 
        1479, 1667, 1136, 1480, 1668, 1137, 1481, 1669, 1138, 1482, 1670, 
        1139}], Line3DBox[{1141, 799, 1140, 1575, 1286, 1142, 1576, 1287, 
        1143, 1577, 1288, 1144, 1578, 1289, 1145, 1579, 1290, 1146, 1580, 
        1291, 1147, 1581, 1483, 1671, 1148, 1582, 1292, 1149, 1583, 1293, 
        1150, 1584, 1294, 1151, 1585, 1295, 1152, 1586, 1296, 1153, 1587, 
        1297, 1154}], 
       Line3DBox[{1156, 1484, 1672, 1155, 815, 1157, 1588, 1298, 1158, 1589, 
        1299, 1159, 1590, 1300, 1160, 1591, 1301, 1161, 1592, 1302, 1162, 
        1593, 1485, 1673, 1163, 1486, 1674, 1164, 1594, 1303, 1165, 1595, 
        1304, 1166, 1596, 1305, 1167, 1597, 1306, 1168, 1598, 1307, 1169}], 
       Line3DBox[{1171, 1487, 1675, 1170, 1488, 1676, 1172, 1489, 1677, 1173, 
        1599, 1308, 1174, 1600, 1309, 1175, 1601, 1310, 1176, 1602, 1311, 
        1177, 1603, 1490, 1678, 1178, 1491, 1679, 1179, 1492, 1680, 1180, 
        1604, 1312, 1181, 1605, 1313, 1182, 1606, 1314, 1183, 1607, 1315, 
        1184}], Line3DBox[{1186, 1493, 1681, 1185, 1494, 1682, 1187, 1495, 
        1683, 1188, 1496, 1684, 1189, 1608, 1316, 1190, 1609, 1317, 1191, 
        1610, 1318, 1192, 1611, 1497, 1685, 1193, 1498, 1686, 1194, 1499, 
        1687, 1195, 1500, 1688, 1196, 1612, 1319, 1197, 1613, 1320, 1198, 
        1614, 1321, 1199}], 
       Line3DBox[{1201, 1501, 1689, 1200, 1502, 1690, 1202, 1503, 1691, 1203, 
        1504, 1692, 1204, 1505, 1693, 1205, 1615, 1322, 1206, 1616, 1323, 
        1207, 1617, 1506, 1694, 1208, 1507, 1695, 1209, 1508, 1696, 1210, 
        1509, 1697, 1211, 1510, 1698, 1212, 1618, 1324, 1213, 1619, 1325, 
        1214}], Line3DBox[{1216, 1511, 1699, 1215, 1512, 1700, 1217, 1513, 
        1701, 1218, 1514, 1702, 1219, 1515, 1703, 1220, 1516, 1704, 1221, 
        1620, 1326, 1222, 1621, 1517, 1705, 1223, 1518, 1706, 1224, 1519, 
        1707, 1225, 1520, 1708, 1226, 1521, 1709, 1227, 1522, 1710, 1228, 
        1622, 1327, 1229}], 
       Line3DBox[{1243, 1350, 1724, 1541, 1242, 1723, 1534, 1241, 1722, 1533, 
        1240, 1721, 1532, 1239, 1720, 1531, 1238, 1719, 1530, 1237, 1718, 
        1529, 1623, 1236, 1717, 1528, 1235, 1716, 1527, 1234, 1715, 1526, 
        1233, 1714, 1525, 1232, 1713, 1524, 1231, 1712, 1523, 1230, 1540, 
        1711, 1348, 1349}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{511, 904, 970, 717, 1737, 512, 905, 1726, 722, 528, 1625, 
        730, 538, 1628, 740, 553, 1636, 755, 568, 1646, 770, 583, 1658, 785, 
        598, 800, 1575, 613, 815, 628, 1676, 830, 643, 1682, 845, 658, 1690, 
        860, 673, 1700, 875, 688, 1712, 890, 703}], 
       Line3DBox[{513, 906, 971, 718, 1738, 514, 907, 984, 723, 1548, 529, 
        1626, 731, 539, 1629, 741, 554, 1637, 756, 569, 1647, 771, 584, 1659, 
        786, 599, 801, 1576, 614, 816, 1588, 629, 1677, 831, 644, 1683, 846, 
        659, 1691, 861, 674, 1701, 876, 689, 1713, 891, 704}], 
       Line3DBox[{702, 889, 952, 1711, 687, 874, 1699, 672, 859, 1689, 657, 
        844, 1681, 642, 829, 1675, 627, 814, 1672, 612, 799, 597, 784, 1657, 
        582, 769, 1645, 567, 754, 1635, 552, 739, 1627, 537, 729, 1624, 527, 
        721, 1729, 937, 510, 716, 1725, 957, 903, 956}], 
       Line3DBox[{705, 892, 1714, 690, 877, 1702, 675, 862, 1692, 660, 847, 
        1684, 645, 1599, 832, 630, 1589, 817, 615, 1577, 802, 600, 787, 1660, 
        585, 772, 1648, 570, 757, 1638, 555, 742, 1630, 540, 1554, 732, 530, 
        1549, 724, 985, 909, 515, 998, 1746, 997, 972, 908, 1038}], 
       Line3DBox[{706, 893, 1715, 691, 878, 1703, 676, 863, 1693, 661, 1608, 
        848, 646, 1600, 833, 631, 1590, 818, 616, 1578, 803, 601, 788, 1661, 
        586, 773, 1649, 571, 758, 1639, 556, 1559, 743, 541, 1555, 733, 531, 
        1550, 913, 986, 912, 958, 1003, 1546, 911, 973, 910, 1048}], 
       Line3DBox[{707, 894, 1716, 692, 879, 1704, 677, 1615, 864, 662, 1609, 
        849, 647, 1601, 834, 632, 1591, 819, 617, 1579, 804, 602, 789, 1662, 
        587, 774, 1650, 572, 1566, 759, 557, 1560, 744, 542, 1556, 734, 532, 
        1551, 916, 987, 915, 959, 1749, 1004, 914, 974, 1039}], 
       Line3DBox[{708, 895, 1717, 693, 1620, 880, 678, 1616, 865, 663, 1610, 
        850, 648, 1602, 835, 633, 1592, 820, 618, 1580, 805, 603, 790, 1663, 
        588, 1571, 775, 573, 1567, 760, 558, 1561, 745, 543, 939, 1730, 938, 
        965, 918, 1743, 988, 917, 960, 1750, 1005, 1006, 975, 1040}], 
       Line3DBox[{710, 897, 1718, 695, 882, 1705, 680, 867, 1694, 665, 852, 
        1685, 650, 837, 1678, 635, 822, 1673, 620, 807, 1671, 605, 792, 1664, 
        590, 777, 1651, 575, 762, 1640, 560, 747, 1631, 545, 735, 1731, 941, 
        533, 725, 1727, 990, 920, 520, 719, 1747, 999, 1054}], 
       Line3DBox[{711, 898, 1719, 696, 883, 1706, 681, 868, 1695, 666, 853, 
        1686, 651, 838, 1679, 636, 823, 1674, 621, 1582, 808, 606, 793, 1665, 
        591, 778, 1652, 576, 763, 1641, 561, 748, 1632, 546, 736, 1733, 943, 
        534, 726, 1728, 991, 922, 521, 1739, 720, 1000, 1055}], 
       Line3DBox[{712, 899, 1720, 697, 884, 1707, 682, 869, 1696, 667, 854, 
        1687, 652, 839, 1680, 637, 1594, 824, 622, 1583, 809, 607, 794, 1666, 
        592, 779, 1653, 577, 764, 1642, 562, 749, 1633, 547, 737, 1734, 944, 
        535, 1741, 727, 992, 924, 522, 1740, 1001, 1045}], 
       Line3DBox[{713, 900, 1721, 698, 885, 1708, 683, 870, 1697, 668, 855, 
        1688, 653, 1604, 840, 638, 1595, 825, 623, 1584, 810, 608, 795, 1667, 
        593, 780, 1654, 578, 765, 1643, 563, 750, 1634, 548, 1557, 738, 945, 
        536, 1742, 728, 993, 926, 523, 1002, 1748, 1046}], 
       Line3DBox[{714, 901, 1722, 699, 886, 1709, 684, 871, 1698, 669, 1612, 
        856, 654, 1605, 841, 639, 1596, 826, 624, 1585, 811, 609, 796, 1668, 
        594, 781, 1655, 579, 766, 1644, 564, 1563, 751, 549, 1558, 947, 946, 
        967, 1552, 930, 994, 929, 962, 1008, 1547, 1037}], 
       Line3DBox[{715, 902, 1723, 700, 887, 1710, 685, 1618, 872, 670, 1613, 
        857, 655, 1606, 842, 640, 1597, 827, 625, 1586, 812, 610, 797, 1669, 
        595, 782, 1656, 580, 1569, 767, 565, 1564, 752, 550, 949, 1735, 948, 
        968, 1553, 934, 995, 933, 963, 1752, 1059}], 
       Line3DBox[{955, 954, 953, 1724, 701, 1622, 888, 686, 1619, 873, 671, 
        1614, 858, 656, 1607, 843, 641, 1598, 828, 626, 1587, 813, 611, 798, 
        1670, 596, 1573, 783, 581, 1570, 768, 566, 1565, 753, 551, 951, 1736, 
        950, 969, 936, 1745, 996, 935, 964, 1753, 1035, 1060}], 
       Line3DBox[{1053, 1751, 1007, 961, 919, 989, 1744, 921, 966, 940, 1732, 
        942, 544, 746, 1562, 559, 761, 1568, 574, 776, 1572, 589, 791, 1574, 
        604, 806, 1581, 619, 821, 1593, 634, 836, 1603, 649, 851, 1611, 664, 
        866, 1617, 679, 881, 1621, 694, 896, 1623, 709}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\[Lambda]i", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox["\[Alpha]", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->NCache[{{
      Rational[1, 2], 4}, {
      Rational[1, 2], 5}, {-0.8423274695767069, 0.6038613459668783}}, {{
     0.5, 4}, {0.5, 5}, {-0.8423274695767069, 0.6038613459668783}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.872451497007063*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"b9d5927a-8468-4b18-b27f-4682a44337c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FindAlphav2", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", "x"}], "]"}], "==", 
    RowBox[{
     RowBox[{"FindAlpha", "[", 
      RowBox[{"1", "/", "2"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}], "\n", 
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FindAlphav2", "[", 
     RowBox[{"1", ",", "x"}], "]"}], "==", 
    RowBox[{
     RowBox[{"FindAlpha", "[", "1", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}], "\n", 
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FindAlphav2", "[", 
     RowBox[{"4", ",", "x"}], "]"}], "==", 
    RowBox[{
     RowBox[{"FindAlpha", "[", "4", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "Input",ExpressionUUI\
D->"da518c28-e921-42e8-ba1f-afa00c9ad7ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "1.4262788345870085`"}], "}"}]], "Output",
 CellLabel->
  "Out[118]= ",ExpressionUUID->"4a02f58d-9b9e-47ed-9331-c438cbc1e765"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "2.1640214499299053`"}], "}"}]], "Output",
 CellLabel->
  "Out[119]= ",ExpressionUUID->"e821925a-f4da-4fa6-9d77-04662db619b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "6.7843651581480575`"}], "}"}]], "Output",
 CellLabel->
  "Out[120]= ",ExpressionUUID->"5111d610-396c-4256-a106-a7f38ef81a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l1", " ", "=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"AvgElectronsBanked", "[", 
     RowBox[{"10", ",", "10", ",", "10000"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"l1", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l1", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "0.25"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l1", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"10", "-", "2.16401"}], ")"}], ",", "10", ",", "0.1"}], "}"}]}],
   "]"}], "\n"}], "Input",ExpressionUUID->"15efff7b-39fd-40ce-bda2-\
a5801a0b500a"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"12.65", "0.06"},
   "Around"],
  Around[12.6467, 0.05800831326146921]]], "Output",
 CellLabel->
  "Out[128]= ",ExpressionUUID->"4942abe3-5e1b-44d9-bfd2-c89bb2abf16c"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.40599999999999997`], Thickness[Small]}], 
     RectangleBox[{0., 0}, {0.25, 2523.},
      RoundingRadius->0], RectangleBox[{0.25, 0}, {0.5, 2468.},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {0.75, 2371.},
      RoundingRadius->0], RectangleBox[{0.75, 0}, {1., 2485.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.25, 1705.},
      RoundingRadius->0], RectangleBox[{1.25, 0}, {1.5, 1882.},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {1.75, 2154.},
      RoundingRadius->0], RectangleBox[{1.75, 0}, {2., 2387.},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.25, 2556.},
      RoundingRadius->0], RectangleBox[{2.25, 0}, {2.5, 2774.},
      RoundingRadius->0], RectangleBox[{2.5, 0}, {2.75, 2880.},
      RoundingRadius->0], RectangleBox[{2.75, 0}, {3., 3149.},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.25, 3360.},
      RoundingRadius->0], RectangleBox[{3.25, 0}, {3.5, 3651.},
      RoundingRadius->0], RectangleBox[{3.5, 0}, {3.75, 3874.},
      RoundingRadius->0], RectangleBox[{3.75, 0}, {4., 4236.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.25, 4499.},
      RoundingRadius->0], RectangleBox[{4.25, 0}, {4.5, 4795.},
      RoundingRadius->0], RectangleBox[{4.5, 0}, {4.75, 5213.},
      RoundingRadius->0], RectangleBox[{4.75, 0}, {5., 5409.},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.25, 5839.},
      RoundingRadius->0], RectangleBox[{5.25, 0}, {5.5, 6242.},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {5.75, 6641.},
      RoundingRadius->0], RectangleBox[{5.75, 0}, {6., 7057.},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.25, 7713.},
      RoundingRadius->0], RectangleBox[{6.25, 0}, {6.5, 8334.},
      RoundingRadius->0], RectangleBox[{6.5, 0}, {6.75, 8977.},
      RoundingRadius->0], RectangleBox[{6.75, 0}, {7., 9433.},
      RoundingRadius->0], RectangleBox[{7., 0}, {7.25, 10340.},
      RoundingRadius->0], RectangleBox[{7.25, 0}, {7.5, 11097.},
      RoundingRadius->0], RectangleBox[{7.5, 0}, {7.75, 11864.},
      RoundingRadius->0], RectangleBox[{7.75, 0}, {8., 12585.},
      RoundingRadius->0], RectangleBox[{8., 0}, {8.25, 13445.},
      RoundingRadius->0], RectangleBox[{8.25, 0}, {8.5, 14520.},
      RoundingRadius->0], RectangleBox[{8.5, 0}, {8.75, 15613.},
      RoundingRadius->0], RectangleBox[{8.75, 0}, {9., 16731.},
      RoundingRadius->0], RectangleBox[{9., 0}, {9.25, 17835.},
      RoundingRadius->0], RectangleBox[{9.25, 0}, {9.5, 19245.},
      RoundingRadius->0], RectangleBox[{9.5, 0}, {9.75, 20425.},
      RoundingRadius->0], RectangleBox[{9.75, 0}, {10., 21853.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.2, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 10.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[129]= ",ExpressionUUID->"1008e56e-d5f1-49bb-9784-195c8a64104d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5389999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5389999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.83599, 0}, {7.935989999999999, 4985.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.158326661329056`, 
           46.916247283541}, {-18.6532955012906, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4985]& ,
        TagBoxNote->"4985"],
       StyleBox["4985", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4985, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.935989999999999, 0}, {8.03599, 5109.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{46.416247283541, 
           62.174167905753166`}, {-21.366049024991057`, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5109]& ,
        TagBoxNote->"5109"],
       StyleBox["5109", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5109, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.03599, 0}, {8.13599, 5225.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{61.674167905753166`, 
           77.4320885279651}, {-23.90378619232372, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5225]& ,
        TagBoxNote->"5225"],
       StyleBox["5225", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5225, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.13599, 0}, {8.23599, 5613.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{76.9320885279651, 
           92.69000915017705}, {-32.3920794761606, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5613]& ,
        TagBoxNote->"5613"],
       StyleBox["5613", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5613, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.23599, 0}, {8.335989999999999, 5626.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{92.19000915017705, 
           107.94792977238922`}, {-32.67648105525822, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5626]& ,
        TagBoxNote->"5626"],
       StyleBox["5626", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5626, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.335989999999999, 0}, {8.43599, 5807.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{107.44792977238922`, 
           123.20585039460138`}, {-36.63622611807904, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5807]& ,
        TagBoxNote->"5807"],
       StyleBox["5807", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5807, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.43599, 0}, {8.53599, 6088.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{122.70585039460138`, 
           138.46377101681333`}, {-42.78367563549699, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6088]& ,
        TagBoxNote->"6088"],
       StyleBox["6088", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6088, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.53599, 0}, {8.63599, 6227.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{137.96377101681333`, 
           153.7216916390255}, {-45.824584827386985`, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6227]& ,
        TagBoxNote->"6227"],
       StyleBox["6227", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6227, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.63599, 0}, {8.73599, 6271.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{153.2216916390255, 
           168.97961226123743`}, {-46.787174787409725`, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6271]& ,
        TagBoxNote->"6271"],
       StyleBox["6271", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6271, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.73599, 0}, {8.835989999999999, 6615.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{168.47961226123743`, 
           184.23753288344938`}, {-54.31287811122388, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6615]& ,
        TagBoxNote->"6615"],
       StyleBox["6615", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6615, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.835989999999999, 0}, {8.93599, 6658.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{183.73753288344938`, 
           199.49545350566177`}, {-55.25359102670063, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6658]& ,
        TagBoxNote->"6658"],
       StyleBox["6658", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6658, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.93599, 0}, {9.03599, 6868.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{198.99545350566177`, 
           214.7533741278737}, {-59.84777038135462, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6868]& ,
        TagBoxNote->"6868"],
       StyleBox["6868", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6868, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.03599, 0}, {9.13599, 7136.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{214.2533741278737, 
           230.01129475008565`}, {-65.71081831967493, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7136]& ,
        TagBoxNote->"7136"],
       StyleBox["7136", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7136, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.13599, 0}, {9.23599, 7150.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{229.51129475008565`, 
           245.2692153722976}, {-66.01709694331853, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7150]& ,
        TagBoxNote->"7150"],
       StyleBox["7150", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7150, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.23599, 0}, {9.335989999999999, 7600.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{244.7692153722976, 
           260.52713599450976`}, {-75.86176698900562, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7600]& ,
        TagBoxNote->"7600"],
       StyleBox["7600", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7600, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.335989999999999, 0}, {9.43599, 7659.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{260.02713599450976`, 
           275.78505661672193`}, {-77.15251261721795, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7659]& ,
        TagBoxNote->"7659"],
       StyleBox["7659", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7659, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.43599, 0}, {9.53599, 7822.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{275.28505661672193`, 
           291.0429772389339}, {-80.71847087821126, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7822]& ,
        TagBoxNote->"7822"],
       StyleBox["7822", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7822, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.53599, 0}, {9.63599, 8026.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{290.5429772389339, 
           306.30089786114604`}, {-85.18138796558941, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8026]& ,
        TagBoxNote->"8026"],
       StyleBox["8026", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8026, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.63599, 0}, {9.73599, 8387.}, "RoundingRadius" -> 
            0]},
          
          ImageSizeCache->{{305.80089786114604`, 
           321.558818483358}, {-93.07900104668508, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8387]& ,
        TagBoxNote->"8387"],
       StyleBox["8387", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8387, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.73599, 0}, {9.835989999999999, 8472.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{321.058818483358, 
           336.8167391055699}, {-94.93854983309262, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8472]& ,
        TagBoxNote->"8472"],
       StyleBox["8472", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8472, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.835989999999999, 0}, {9.93599, 8769.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{336.3167391055699, 
           352.0746597277823}, {-101.4360320632461, 90.90377156037647}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8769]& ,
        TagBoxNote->"8769"],
       StyleBox["8769", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8769, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.79399, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{7.83599, 9.93599}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[130]= ",ExpressionUUID->"b26cd292-e455-4199-ad84-4a17359e794b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l2", "=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"AvgElectronsBanked", "[", 
     RowBox[{"20", ",", "10", ",", "10000"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"l2", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l2", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "20", ",", "0.5"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l2", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"20", "-", "6.78"}], ",", "20", ",", "0.25"}], "}"}]}], 
  "]"}]}], "Input",ExpressionUUID->"b2427dcf-ebd7-4688-ad5d-df6dceb329f3"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"7.25", "0.04"},
   "Around"],
  Around[7.2533, 0.040196958722632924`]]], "Output",
 CellLabel->
  "Out[131]= ",ExpressionUUID->"3f1cdf5b-82bb-4c91-b145-7511f9ba11bc"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.40599999999999997`], Thickness[Small]}], 
     RectangleBox[{0., 0}, {0.5, 4890.},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {1., 4964.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.5, 5061.},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {2., 4927.},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.5, 4445.},
      RoundingRadius->0], RectangleBox[{2.5, 0}, {3., 4815.},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.5, 5223.},
      RoundingRadius->0], RectangleBox[{3.5, 0}, {4., 5426.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.5, 5891.},
      RoundingRadius->0], RectangleBox[{4.5, 0}, {5., 6145.},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.5, 6300.},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {6., 6821.},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.5, 7134.},
      RoundingRadius->0], RectangleBox[{6.5, 0}, {7., 7596.},
      RoundingRadius->0], RectangleBox[{7., 0}, {7.5, 8002.},
      RoundingRadius->0], RectangleBox[{7.5, 0}, {8., 8330.},
      RoundingRadius->0], RectangleBox[{8., 0}, {8.5, 8959.},
      RoundingRadius->0], RectangleBox[{8.5, 0}, {9., 9559.},
      RoundingRadius->0], RectangleBox[{9., 0}, {9.5, 10085.},
      RoundingRadius->0], RectangleBox[{9.5, 0}, {10., 10551.},
      RoundingRadius->0], RectangleBox[{10., 0}, {10.5, 11198.},
      RoundingRadius->0], RectangleBox[{10.5, 0}, {11., 11635.},
      RoundingRadius->0], RectangleBox[{11., 0}, {11.5, 12499.},
      RoundingRadius->0], RectangleBox[{11.5, 0}, {12., 13010.},
      RoundingRadius->0], RectangleBox[{12., 0}, {12.5, 13802.},
      RoundingRadius->0], RectangleBox[{12.5, 0}, {13., 14817.},
      RoundingRadius->0], RectangleBox[{13., 0}, {13.5, 15396.},
      RoundingRadius->0], RectangleBox[{13.5, 0}, {14., 16265.},
      RoundingRadius->0], RectangleBox[{14., 0}, {14.5, 17228.},
      RoundingRadius->0], RectangleBox[{14.5, 0}, {15., 18271.},
      RoundingRadius->0], RectangleBox[{15., 0}, {15.5, 18993.},
      RoundingRadius->0], RectangleBox[{15.5, 0}, {16., 20496.},
      RoundingRadius->0], RectangleBox[{16., 0}, {16.5, 21804.},
      RoundingRadius->0], RectangleBox[{16.5, 0}, {17., 22718.},
      RoundingRadius->0], RectangleBox[{17., 0}, {17.5, 24192.},
      RoundingRadius->0], RectangleBox[{17.5, 0}, {18., 25468.},
      RoundingRadius->0], RectangleBox[{18., 0}, {18.5, 26982.},
      RoundingRadius->0], RectangleBox[{18.5, 0}, {19., 28459.},
      RoundingRadius->0], RectangleBox[{19., 0}, {19.5, 29803.},
      RoundingRadius->0], RectangleBox[{19.5, 0}, {20., 31370.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.4, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 20.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[132]= ",ExpressionUUID->"29ae52d6-abc8-4b64-80dc-e7afaf1e532e"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.49699999999999994`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.49699999999999994`], Thickness[Small]}], 
     RectangleBox[{13.219999999999999, 0}, {13.469999999999999, 7858.},
      RoundingRadius->0], 
     RectangleBox[{13.469999999999999, 0}, {13.719999999999999, 7975.},
      RoundingRadius->0], 
     RectangleBox[{13.719999999999999, 0}, {13.969999999999999, 8277.},
      RoundingRadius->0], 
     RectangleBox[{13.969999999999999, 0}, {14.219999999999999, 8500.},
      RoundingRadius->0], 
     RectangleBox[{14.219999999999999, 0}, {14.469999999999999, 8556.},
      RoundingRadius->0], 
     RectangleBox[{14.469999999999999, 0}, {14.719999999999999, 9199.},
      RoundingRadius->0], 
     RectangleBox[{14.719999999999999, 0}, {14.969999999999999, 9154.},
      RoundingRadius->0], 
     RectangleBox[{14.969999999999999, 0}, {15.219999999999999, 9201.},
      RoundingRadius->0], 
     RectangleBox[{15.219999999999999, 0}, {15.469999999999999, 9705.},
      RoundingRadius->0], 
     RectangleBox[{15.469999999999999, 0}, {15.719999999999999, 9920.},
      RoundingRadius->0], 
     RectangleBox[{15.719999999999999, 0}, {15.969999999999999, 10422.},
      RoundingRadius->0], 
     RectangleBox[{15.969999999999999, 0}, {16.22, 10743.},
      RoundingRadius->0], RectangleBox[{16.22, 0}, {16.47, 11015.},
      RoundingRadius->0], RectangleBox[{16.47, 0}, {16.72, 11252.},
      RoundingRadius->0], RectangleBox[{16.72, 0}, {16.97, 11411.},
      RoundingRadius->0], RectangleBox[{16.97, 0}, {17.22, 11854.},
      RoundingRadius->0], RectangleBox[{17.22, 0}, {17.47, 12237.},
      RoundingRadius->0], RectangleBox[{17.47, 0}, {17.72, 12508.},
      RoundingRadius->0], RectangleBox[{17.72, 0}, {17.97, 12875.},
      RoundingRadius->0], RectangleBox[{17.97, 0}, {18.22, 13249.},
      RoundingRadius->0], RectangleBox[{18.22, 0}, {18.47, 13683.},
      RoundingRadius->0], RectangleBox[{18.47, 0}, {18.72, 13917.},
      RoundingRadius->0], RectangleBox[{18.72, 0}, {18.97, 14379.},
      RoundingRadius->0], RectangleBox[{18.97, 0}, {19.22, 14723.},
      RoundingRadius->0], RectangleBox[{19.22, 0}, {19.47, 15037.},
      RoundingRadius->0], RectangleBox[{19.47, 0}, {19.72, 15357.},
      RoundingRadius->0], RectangleBox[{19.72, 0}, {19.97, 15965.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{13.084999999999999`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{13.219999999999999`, 19.97}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[133]= ",ExpressionUUID->"2783ea5a-c976-433e-8855-cb1bda6b57b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"l3", " ", "=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"AvgElectronsBanked", "[", 
     RowBox[{"10", ",", "20", ",", "10000"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"l3", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l3", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "0.25"}], "}"}]}], "]"}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l3", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", "-", "5"}], ",", "10", ",", "0.1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.862773354899518*^9, 3.862773357856065*^9}, {
  3.862773468007476*^9, 
  3.862773471241053*^9}},ExpressionUUID->"3120d510-c8ca-48ac-aefe-\
4e4c503cf376"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"95.4", "0.5"},
   "Around"],
  Around[95.432, 0.5247609122271781]]], "Output",
 CellChangeTimes->{3.862773366389393*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"63f01a01-ffc3-4e42-a6e9-cd17ca3611ef"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.40599999999999997`], Thickness[Small]}], 
     RectangleBox[{0., 0}, {0.25, 2532.},
      RoundingRadius->0], RectangleBox[{0.25, 0}, {0.5, 2514.},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {0.75, 2721.},
      RoundingRadius->0], RectangleBox[{0.75, 0}, {1., 2988.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.25, 3467.},
      RoundingRadius->0], RectangleBox[{1.25, 0}, {1.5, 3883.},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {1.75, 4351.},
      RoundingRadius->0], RectangleBox[{1.75, 0}, {2., 4921.},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.25, 5509.},
      RoundingRadius->0], RectangleBox[{2.25, 0}, {2.5, 6237.},
      RoundingRadius->0], RectangleBox[{2.5, 0}, {2.75, 6900.},
      RoundingRadius->0], RectangleBox[{2.75, 0}, {3., 7805.},
      RoundingRadius->0], RectangleBox[{3., 0}, {3.25, 8886.},
      RoundingRadius->0], RectangleBox[{3.25, 0}, {3.5, 10184.},
      RoundingRadius->0], RectangleBox[{3.5, 0}, {3.75, 11486.},
      RoundingRadius->0], RectangleBox[{3.75, 0}, {4., 12903.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.25, 14521.},
      RoundingRadius->0], RectangleBox[{4.25, 0}, {4.5, 16463.},
      RoundingRadius->0], RectangleBox[{4.5, 0}, {4.75, 18452.},
      RoundingRadius->0], RectangleBox[{4.75, 0}, {5., 20978.},
      RoundingRadius->0], RectangleBox[{5., 0}, {5.25, 23266.},
      RoundingRadius->0], RectangleBox[{5.25, 0}, {5.5, 26042.},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {5.75, 29603.},
      RoundingRadius->0], RectangleBox[{5.75, 0}, {6., 33254.},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.25, 37625.},
      RoundingRadius->0], RectangleBox[{6.25, 0}, {6.5, 42662.},
      RoundingRadius->0], RectangleBox[{6.5, 0}, {6.75, 47636.},
      RoundingRadius->0], RectangleBox[{6.75, 0}, {7., 54251.},
      RoundingRadius->0], RectangleBox[{7., 0}, {7.25, 60261.},
      RoundingRadius->0], RectangleBox[{7.25, 0}, {7.5, 68292.},
      RoundingRadius->0], RectangleBox[{7.5, 0}, {7.75, 76924.},
      RoundingRadius->0], RectangleBox[{7.75, 0}, {8., 86257.},
      RoundingRadius->0], RectangleBox[{8., 0}, {8.25, 97374.},
      RoundingRadius->0], RectangleBox[{8.25, 0}, {8.5, 109780.},
      RoundingRadius->0], RectangleBox[{8.5, 0}, {8.75, 123831.},
      RoundingRadius->0], RectangleBox[{8.75, 0}, {9., 139852.},
      RoundingRadius->0], RectangleBox[{9., 0}, {9.25, 157111.},
      RoundingRadius->0], RectangleBox[{9.25, 0}, {9.5, 177558.},
      RoundingRadius->0], RectangleBox[{9.5, 0}, {9.75, 199821.},
      RoundingRadius->0], RectangleBox[{9.75, 0}, {10., 224389.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.2, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 10.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862773366480505*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"bd73a20b-c6cf-4909-b254-55cdc24b67f9"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.33599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.33599999999999997`], Thickness[Small]}], 
     RectangleBox[{5., 0}, {5.1, 8970.},
      RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 9420.},
      RoundingRadius->0], RectangleBox[{5.2, 0}, {5.3, 9880.},
      RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 10282.},
      RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 10756.},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {5.6, 11410.},
      RoundingRadius->0], RectangleBox[{5.6, 0}, {5.7, 11954.},
      RoundingRadius->0], RectangleBox[{5.7, 0}, {5.8, 12642.},
      RoundingRadius->0], RectangleBox[{5.8, 0}, {5.9, 13159.},
      RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 13692.},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.1, 14502.},
      RoundingRadius->0], RectangleBox[{6.1, 0}, {6.2, 15133.},
      RoundingRadius->0], RectangleBox[{6.2, 0}, {6.3, 16030.},
      RoundingRadius->0], RectangleBox[{6.3, 0}, {6.4, 16852.},
      RoundingRadius->0], RectangleBox[{6.4, 0}, {6.5, 17770.},
      RoundingRadius->0], RectangleBox[{6.5, 0}, {6.6, 18580.},
      RoundingRadius->0], RectangleBox[{6.6, 0}, {6.7, 19168.},
      RoundingRadius->0], RectangleBox[{6.7, 0}, {6.8, 20138.},
      RoundingRadius->0], RectangleBox[{6.8, 0}, {6.9, 21381.},
      RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 22620.},
      RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 23041.},
      RoundingRadius->0], RectangleBox[{7.1, 0}, {7.2, 24665.},
      RoundingRadius->0], RectangleBox[{7.2, 0}, {7.300000000000001, 25604.},
      RoundingRadius->0], RectangleBox[{7.300000000000001, 0}, {7.4, 27212.},
      RoundingRadius->0], RectangleBox[{7.4, 0}, {7.5, 28031.},
      RoundingRadius->0], RectangleBox[{7.5, 0}, {7.6, 29608.},
      RoundingRadius->0], RectangleBox[{7.6, 0}, {7.7, 31344.},
      RoundingRadius->0], RectangleBox[{7.7, 0}, {7.800000000000001, 32421.},
      RoundingRadius->0], RectangleBox[{7.800000000000001, 0}, {7.9, 34142.},
      RoundingRadius->0], RectangleBox[{7.9, 0}, {8., 35666.},
      RoundingRadius->0], RectangleBox[{8., 0}, {8.1, 37746.},
      RoundingRadius->0], RectangleBox[{8.1, 0}, {8.2, 39128.},
      RoundingRadius->0], RectangleBox[{8.2, 0}, {8.3, 41606.},
      RoundingRadius->0], RectangleBox[{8.3, 0}, {8.4, 43243.},
      RoundingRadius->0], RectangleBox[{8.4, 0}, {8.5, 45431.},
      RoundingRadius->0], RectangleBox[{8.5, 0}, {8.6, 48049.},
      RoundingRadius->0], RectangleBox[{8.6, 0}, {8.7, 49982.},
      RoundingRadius->0], RectangleBox[{8.7, 0}, {8.8, 52334.},
      RoundingRadius->0], RectangleBox[{8.8, 0}, {8.9, 55693.},
      RoundingRadius->0], RectangleBox[{8.9, 0}, {9., 57625.},
      RoundingRadius->0], RectangleBox[{9., 0}, {9.100000000000001, 60574.},
      RoundingRadius->0], RectangleBox[{9.100000000000001, 0}, {9.2, 63604.},
      RoundingRadius->0], RectangleBox[{9.2, 0}, {9.3, 66816.},
      RoundingRadius->0], RectangleBox[{9.3, 0}, {9.4, 70483.},
      RoundingRadius->0], RectangleBox[{9.4, 0}, {9.5, 73192.},
      RoundingRadius->0], RectangleBox[{9.5, 0}, {9.600000000000001, 77476.},
      RoundingRadius->0], RectangleBox[{9.600000000000001, 0}, {9.7, 80342.},
      RoundingRadius->0], RectangleBox[{9.7, 0}, {9.8, 84473.},
      RoundingRadius->0], RectangleBox[{9.8, 0}, {9.9, 88571.},
      RoundingRadius->0], RectangleBox[{9.9, 0}, {10., 93348.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{4.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{5., 10.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.862773366570594*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"b82e4de4-3376-48d3-a4f7-1a11e9c708e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"l3", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", "-", "5"}], ",", "10", ",", "0.1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance\>\"", ",", " ", "\"\<Total ionizations\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Ionizations for x = 5 at \
\!\(\*StyleBox[\(N\*StyleBox[\"c\",FontSize->8]\)]\)\!\(\*StyleBox[\(\*\
StyleBox[\" \",FontSize->8]\\\ \)]\)= 10 and \!\(\*StyleBox[\(N\*StyleBox[\"i\
\",FontSize->9]\)]\)\!\(\*StyleBox[\(\*StyleBox[\" \",FontSize->9]\\\ \)]\)= \
20\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.862773476506374*^9, 3.862773644842029*^9}, {
  3.8627737684267406`*^9, 3.862773781450692*^9}, {3.8627738477761106`*^9, 
  3.862773871309182*^9}, {3.8627901755234623`*^9, 3.86279019523135*^9}, {
  3.862793324585599*^9, 3.862793341468298*^9}, {3.862831462918681*^9, 
  3.8628314633004713`*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"7cd4f03e-cf86-4b60-8f88-a40b5ffe0ed0"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.33599999999999997`], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.33599999999999997`], Thickness[Small]}], 
     RectangleBox[{5., 0}, {5.1, 8970.},
      RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 9420.},
      RoundingRadius->0], RectangleBox[{5.2, 0}, {5.3, 9880.},
      RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 10282.},
      RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 10756.},
      RoundingRadius->0], RectangleBox[{5.5, 0}, {5.6, 11410.},
      RoundingRadius->0], RectangleBox[{5.6, 0}, {5.7, 11954.},
      RoundingRadius->0], RectangleBox[{5.7, 0}, {5.8, 12642.},
      RoundingRadius->0], RectangleBox[{5.8, 0}, {5.9, 13159.},
      RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 13692.},
      RoundingRadius->0], RectangleBox[{6., 0}, {6.1, 14502.},
      RoundingRadius->0], RectangleBox[{6.1, 0}, {6.2, 15133.},
      RoundingRadius->0], RectangleBox[{6.2, 0}, {6.3, 16030.},
      RoundingRadius->0], RectangleBox[{6.3, 0}, {6.4, 16852.},
      RoundingRadius->0], RectangleBox[{6.4, 0}, {6.5, 17770.},
      RoundingRadius->0], RectangleBox[{6.5, 0}, {6.6, 18580.},
      RoundingRadius->0], RectangleBox[{6.6, 0}, {6.7, 19168.},
      RoundingRadius->0], RectangleBox[{6.7, 0}, {6.8, 20138.},
      RoundingRadius->0], RectangleBox[{6.8, 0}, {6.9, 21381.},
      RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 22620.},
      RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 23041.},
      RoundingRadius->0], RectangleBox[{7.1, 0}, {7.2, 24665.},
      RoundingRadius->0], RectangleBox[{7.2, 0}, {7.300000000000001, 25604.},
      RoundingRadius->0], RectangleBox[{7.300000000000001, 0}, {7.4, 27212.},
      RoundingRadius->0], RectangleBox[{7.4, 0}, {7.5, 28031.},
      RoundingRadius->0], RectangleBox[{7.5, 0}, {7.6, 29608.},
      RoundingRadius->0], RectangleBox[{7.6, 0}, {7.7, 31344.},
      RoundingRadius->0], RectangleBox[{7.7, 0}, {7.800000000000001, 32421.},
      RoundingRadius->0], RectangleBox[{7.800000000000001, 0}, {7.9, 34142.},
      RoundingRadius->0], RectangleBox[{7.9, 0}, {8., 35666.},
      RoundingRadius->0], RectangleBox[{8., 0}, {8.1, 37746.},
      RoundingRadius->0], RectangleBox[{8.1, 0}, {8.2, 39128.},
      RoundingRadius->0], RectangleBox[{8.2, 0}, {8.3, 41606.},
      RoundingRadius->0], RectangleBox[{8.3, 0}, {8.4, 43243.},
      RoundingRadius->0], RectangleBox[{8.4, 0}, {8.5, 45431.},
      RoundingRadius->0], RectangleBox[{8.5, 0}, {8.6, 48049.},
      RoundingRadius->0], RectangleBox[{8.6, 0}, {8.7, 49982.},
      RoundingRadius->0], RectangleBox[{8.7, 0}, {8.8, 52334.},
      RoundingRadius->0], RectangleBox[{8.8, 0}, {8.9, 55693.},
      RoundingRadius->0], RectangleBox[{8.9, 0}, {9., 57625.},
      RoundingRadius->0], RectangleBox[{9., 0}, {9.100000000000001, 60574.},
      RoundingRadius->0], RectangleBox[{9.100000000000001, 0}, {9.2, 63604.},
      RoundingRadius->0], RectangleBox[{9.2, 0}, {9.3, 66816.},
      RoundingRadius->0], RectangleBox[{9.3, 0}, {9.4, 70483.},
      RoundingRadius->0], RectangleBox[{9.4, 0}, {9.5, 73192.},
      RoundingRadius->0], RectangleBox[{9.5, 0}, {9.600000000000001, 77476.},
      RoundingRadius->0], RectangleBox[{9.600000000000001, 0}, {9.7, 80342.},
      RoundingRadius->0], RectangleBox[{9.7, 0}, {9.8, 84473.},
      RoundingRadius->0], RectangleBox[{9.8, 0}, {9.9, 88571.},
      RoundingRadius->0], RectangleBox[{9.9, 0}, {10., 93348.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Distance\"", TraditionalForm], 
    FormBox["\"Total ionizations\"", TraditionalForm]},
  AxesOrigin->{4.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
   "\"Ionizations for x = 5 at \
\\!\\(\\*StyleBox[\\(N\\*StyleBox[\\\"c\\\",FontSize->8]\\)]\\)\\!\\(\\*\
StyleBox[\\(\\*StyleBox[\\\" \\\",FontSize->8]\\\\ \\)]\\)= 10 and \
\\!\\(\\*StyleBox[\\(N\\*StyleBox[\\\"i\\\",FontSize->9]\\)]\\)\\!\\(\\*\
StyleBox[\\(\\*StyleBox[\\\" \\\",FontSize->9]\\\\ \\)]\\)= 20\"", 
    TraditionalForm],
  PlotRange->{{5., 10.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.862773524969153*^9, 3.862773537437278*^9}, {
   3.862773588896274*^9, 3.86277364519728*^9}, {3.862773778848329*^9, 
   3.862773781872973*^9}, {3.862773855564726*^9, 3.862773872607772*^9}, {
   3.8627901777705917`*^9, 3.862790195764909*^9}, {3.8627933380892878`*^9, 
   3.862793341852282*^9}, 3.862831465255584*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"84f3e118-3aff-46af-bdec-6696d3ab3a93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindKink", "[", "\[Lambda]i_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "idx", ",", "electrons", ",", "positions", ",", "result", ",", "length",
        ",", "i", ",", "total", ",", "slopes", ",", "alpha", ",", "e"}], 
      "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"electrons", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"AvgElectrons3D", "[", 
            RowBox[{"d", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "/", "\[Lambda]i"}], ")"}], " ", "d"}], ",", "d", 
             ",", "15", ",", "50"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"\[Lambda]i", "/", "50"}], ",", " ", 
           RowBox[{"\[Lambda]i", "+", "0.3"}], ",", " ", "0.025"}], "}"}]}], 
        "]"}]}], ";", "\n", 
      RowBox[{"positions", "=", 
       RowBox[{"Position", "[", 
        RowBox[{"electrons", ",", "1"}], "]"}]}], ";", "\n", 
      RowBox[{"idx", "=", 
       RowBox[{"First", "[", 
        RowBox[{"Last", "[", "positions", "]"}], "]"}]}], ";", "\n", 
      RowBox[{"electrons", "[", 
       RowBox[{"[", 
        RowBox[{"idx", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.857937894555702*^9, 3.8579379840383263`*^9}, {
  3.857938053030283*^9, 3.857938109037809*^9}, {3.8579381765624228`*^9, 
  3.857938177212441*^9}, {3.857938388248959*^9, 3.8579383962737226`*^9}, {
  3.857938720792212*^9, 3.85793872099091*^9}, {3.8627895553808537`*^9, 
  3.862789559105813*^9}, {3.8627896871610003`*^9, 3.862789754026504*^9}, {
  3.870207132193067*^9, 3.870207133132218*^9}, {3.870207272543663*^9, 
  3.870207273691765*^9}, {3.8728778359966784`*^9, 3.8728778373287497`*^9}, {
  3.8736835320327663`*^9, 3.8736836481082077`*^9}, {3.8736837839552717`*^9, 
  3.873683842379746*^9}, {3.873684343792775*^9, 3.873684343920347*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"19d31ff6-6ae9-4c00-a61f-c59ded903654"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindKink", "[", 
   RowBox[{"1", "/", "5"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.87368350927494*^9, 3.8736835291069727`*^9}, {
  3.873683606710178*^9, 3.873683640351865*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"43dfc1e6-8294-470a-a386-71954727d2c2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.004`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.029`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.054000000000000006`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07900000000000001`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10400000000000001`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.129`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15400000000000003`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.17900000000000002`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.20400000000000001`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.229`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.254`", ",", 
     InterpretationBox[
      TemplateBox[{"1.020", "0.020"},
       "Around"],
      Around[1.02, 0.02]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.279`", ",", 
     InterpretationBox[
      TemplateBox[{"1.060", "0.034"},
       "Around"],
      Around[1.06, 0.03392669167725119]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.30400000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"1.060", "0.034"},
       "Around"],
      Around[1.06, 0.03392669167725119]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.329`", ",", 
     InterpretationBox[
      TemplateBox[{"1.08", "0.04"},
       "Around"],
      Around[1.08, 0.03875617133214439]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35400000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"1.08", "0.04"},
       "Around"],
      Around[1.08, 0.03875617133214439]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.379`", ",", 
     InterpretationBox[
      TemplateBox[{"1.040", "0.028"},
       "Around"],
      Around[1.04, 0.027994168488950606`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.404`", ",", 
     InterpretationBox[
      TemplateBox[{"1.20", "0.06"},
       "Around"],
      Around[1.2, 0.05714285714285714]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.42900000000000005`", ",", 
     InterpretationBox[
      TemplateBox[{"1.22", "0.06"},
       "Around"],
      Around[1.22, 0.05917804336345137]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.454`", ",", 
     InterpretationBox[
      TemplateBox[{"1.18", "0.05"},
       "Around"],
      Around[1.18, 0.054883922035138706`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.47900000000000004`", ",", 
     InterpretationBox[
      TemplateBox[{"1.24", "0.07"},
       "Around"],
      Around[1.24, 0.07317856271351827]]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.8736837897843943`*^9, 3.8736838490126963`*^9}},
 CellLabel->
  "During evaluation of \
In[171]:=",ExpressionUUID->"72377b1c-0c67-4489-8f63-99876a3ed7c6"],

Cell[BoxData["0.229`"], "Output",
 CellChangeTimes->{{3.873683511012043*^9, 3.873683537604397*^9}, {
  3.873683568444879*^9, 3.87368364100636*^9}, {3.873683776195396*^9, 
  3.8736838490146523`*^9}},
 CellLabel->
  "Out[171]=",ExpressionUUID->"d0dffdcd-8fbc-445b-8987-6ba49119ab30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"FindKink", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.25", ",", "5.75", ",", "0.5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.857938138636183*^9, 3.857938165869858*^9}, {
  3.857938220284998*^9, 3.8579382464151773`*^9}, {3.857938306907189*^9, 
  3.857938306966691*^9}, {3.857938462461754*^9, 3.857938472579421*^9}, {
  3.857938683471509*^9, 3.857938698000297*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"799fd27b-851f-4692-8c2e-f6563267f3dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "0.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", "1.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", "1.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", "2.65`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.75`", ",", "2.9499999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", "3.4499999999999997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.75`", ",", "4.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.25`", ",", "4.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.75`", ",", "5.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.25`", ",", "5.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.75`", ",", "6.25`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.85793814778761*^9, 3.857938169898321*^9}, 
   3.85793821104165*^9, 3.857938679882324*^9, {3.857938719255476*^9, 
   3.857938730838623*^9}, 3.85793876096036*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2403724f-0b3f-41f2-bd2e-6af81fbd2241"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.857938768932845*^9, 3.857938770856492*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c7116ab3-2dd4-49c3-baec-326a0d9b95f7"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0.25, 0.25}, {0.75, 0.75}, {1.25, 1.25}, {1.75, 1.75}, {2.25, 
     2.65}, {2.75, 2.9499999999999997`}, {3.25, 3.4499999999999997`}, {3.75, 
     4.05}, {4.25, 4.75}, {4.75, 5.25}, {5.25, 5.75}, {5.75, 
     6.25}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.75}, {0, 6.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.857938771523642*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f3b1316b-60a2-4be8-babc-1c134b81dd0d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting breakdown", "Section",
 CellChangeTimes->{{3.864518069759185*^9, 3.864518087051037*^9}, {
  3.875292881876042*^9, 
  3.875292883726182*^9}},ExpressionUUID->"da9546da-49a5-471f-a6ef-\
f8ad6e9f29f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindBreakdown", "[", 
   RowBox[{"r_", ",", "\[Gamma]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"alpha", ",", " ", "idx", ",", "Nc", ",", " ", "Ni"}], "}"}], 
    ",", "\n", 
    RowBox[{
     RowBox[{"alpha", " ", "=", " ", 
      RowBox[{"FindAlpha", "[", "r", "]"}]}], ";", "\n", 
     RowBox[{"Nc", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", "\[Gamma]", "]"}], "/", "alpha"}], " ", "+", " ", 
       "r"}]}], " ", ";", "\n", 
     RowBox[{"Ni", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "r"}], ")"}], 
       RowBox[{"(", "Nc", ")"}]}]}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", "Ni"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8579393667266703`*^9, 3.857939389646249*^9}, {
  3.866982651000146*^9, 3.8669826518193607`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"86ba88ce-e465-42c4-af44-a7233f2459d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdown", "[", 
  RowBox[{"1", ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.866982592325453*^9, 3.866982596651854*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a141d621-aaeb-4fc4-9d92-3b8674770d24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{"14.77", "0.04"},
     "Around"],
    Around[14.765949471393126`, 0.043513422045014814`]], ",", 
   InterpretationBox[
    TemplateBox[{"14.77", "0.04"},
     "Around"],
    Around[14.765949471393126`, 0.043513422045014814`]]}], "}"}]], "Output",
 CellChangeTimes->{3.8669825978173857`*^9, 3.866982653811599*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"19a8203a-3e54-4c91-a417-bae50b082622"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindBreakdown", "[", 
   RowBox[{"5", ",", "50"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.8702226431619263`*^9, 3.870222654818706*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"bdaa3c9a-1c01-4879-8d55-2beebbec330e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{"588.", "26."},
     "Around"],
    Around[588.2698812022523, 26.213894792270228`]], ",", 
   InterpretationBox[
    TemplateBox[{"118.", "5."},
     "Around"],
    Around[117.65397624045048`, 5.242778958454046]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8702226458445044`*^9, 3.870222655560069*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"94b9301b-b616-4c83-bbb4-adfa124ee4c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bdVals", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FindBreakdown", "[", 
     RowBox[{"r", ",", "50"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"1", "/", "50"}], ",", "5", ",", 
      RowBox[{"1", "/", "4"}]}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"",ExpressionUUID->"eabf5c7c-d9aa-4eb9-bab9-053c64434c26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"4.164", "0.024"},
       "Around"],
      Around[4.164437200959334, 0.02363020771708678]], ",", 
     InterpretationBox[
      TemplateBox[{"208.2", "1.2"},
       "Around"],
      Around[208.2218600479667, 1.181510385854339]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.375", "0.020"},
       "Around"],
      Around[6.37478810077655, 0.02035035277341881]], ",", 
     InterpretationBox[
      TemplateBox[{"23.61", "0.08"},
       "Around"],
      Around[23.61032629917241, 0.07537167693858819]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"8.835", "0.023"},
       "Around"],
      Around[8.834983797453969, 0.022762148980389998`]], ",", 
     InterpretationBox[
      TemplateBox[{"16.99", "0.04"},
       "Around"],
      Around[16.99035345664225, 0.04377336342382692]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"11.700", "0.031"},
       "Around"],
      Around[11.699986889755428`, 0.030593940933321424`]], ",", 
     InterpretationBox[
      TemplateBox[{"15.19", "0.04"},
       "Around"],
      Around[15.194788168513542`, 0.039732390822495356`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"15.05", "0.05"},
       "Around"],
      Around[15.052022078507449`, 0.045196575917177725`]], ",", 
     InterpretationBox[
      TemplateBox[{"14.76", "0.04"},
       "Around"],
      Around[14.756884390693576`, 0.04431036854625267]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"19.04", "0.07"},
       "Around"],
      Around[19.04174028711155, 0.06793307094414092]], ",", 
     InterpretationBox[
      TemplateBox[{"14.99", "0.05"},
       "Around"],
      Around[14.993496289064215`, 0.053490607042630645`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"24.09", "0.11"},
       "Around"],
      Around[24.085426060786226`, 0.10959073809269085`]], ",", 
     InterpretationBox[
      TemplateBox[{"15.85", "0.07"},
       "Around"],
      Around[15.845675039990939`, 0.07209916979782294]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"29.82", "0.16"},
       "Around"],
      Around[29.81734304526341, 0.1605416070364104]], ",", 
     InterpretationBox[
      TemplateBox[{"16.85", "0.09"},
       "Around"],
      Around[16.845956522747688`, 0.09070147290192679]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"37.48", "0.25"},
       "Around"],
      Around[37.47876532251233, 0.2502566507692575]], ",", 
     InterpretationBox[
      TemplateBox[{"18.55", "0.12"},
       "Around"],
      Around[18.55384421906551, 0.12388943107388986`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"47.1", "0.4"},
       "Around"],
      Around[47.10317711334186, 0.3796798706226605]], ",", 
     InterpretationBox[
      TemplateBox[{"20.75", "0.17"},
       "Around"],
      Around[20.750298287815795`, 0.16725985489985043`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"59.1", "0.6"},
       "Around"],
      Around[59.104783502041904`, 0.5666019589700035]], ",", 
     InterpretationBox[
      TemplateBox[{"23.45", "0.22"},
       "Around"],
      Around[23.454279167476944`, 0.22484204721031886`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"71.0", "0.8"},
       "Around"],
      Around[71.04751489839524, 0.8072483116914162]], ",", 
     InterpretationBox[
      TemplateBox[{"25.65", "0.29"},
       "Around"],
      Around[25.64892234599106, 0.2914253832820997]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"92.2", "1.2"},
       "Around"],
      Around[92.15357466728406, 1.2377937650192723`]], ",", 
     InterpretationBox[
      TemplateBox[{"30.5", "0.4"},
       "Around"],
      Around[30.514428697776182`, 0.40986548510571935`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"119.1", "1.9"},
       "Around"],
      Around[119.07571056285803`, 1.8630409882722743`]], ",", 
     InterpretationBox[
      TemplateBox[{"36.4", "0.6"},
       "Around"],
      Around[36.414590386195115`, 0.569737305282041]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"145.1", "2.7"},
       "Around"],
      Around[145.14518084529308`, 2.72186575979899]], ",", 
     InterpretationBox[
      TemplateBox[{"41.2", "0.8"},
       "Around"],
      Around[41.23442637650372, 0.7732573181247132]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"189.", "4."},
       "Around"],
      Around[188.69501507428163`, 4.108004891920223]], ",", 
     InterpretationBox[
      TemplateBox[{"50.1", "1.1"},
       "Around"],
      Around[50.051728136414226`, 1.0896564700053644`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"234.", "6."},
       "Around"],
      Around[234.24445719100154`, 6.0445501430342246`]], ",", 
     InterpretationBox[
      TemplateBox[{"58.3", "1.5"},
       "Around"],
      Around[58.2697654703984, 1.5036194385657276`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"292.", "8."},
       "Around"],
      Around[291.52113346299194`, 8.294414833866712]], ",", 
     InterpretationBox[
      TemplateBox[{"68.3", "1.9"},
       "Around"],
      Around[68.27192821147352, 1.9424859095706588`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"369.", "13."},
       "Around"],
      Around[368.8809042790485, 12.523636661186112`]], ",", 
     InterpretationBox[
      TemplateBox[{"81.6", "2.8"},
       "Around"],
      Around[81.61081953076294, 2.7707160754836533`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"476.", "19."},
       "Around"],
      Around[476.00490257688546`, 18.52743606368569]], ",", 
     InterpretationBox[
      TemplateBox[{"100.", "4."},
       "Around"],
      Around[99.7913841880263, 3.8841585039173356`]]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[34]= ",ExpressionUUID->"29601537-efea-401e-8c0f-cff09ce93a9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bd1d", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4.164", "\[PlusMinus]", "0.024"}], ",", 
      RowBox[{"208.2", "\[PlusMinus]", "1.2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"6.375", "\[PlusMinus]", "0.020"}], ",", 
      RowBox[{"23.61", "\[PlusMinus]", "0.08"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"8.835", "\[PlusMinus]", "0.023"}], ",", 
      RowBox[{"16.99", "\[PlusMinus]", "0.04"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"11.700", "\[PlusMinus]", "0.031"}], ",", 
      RowBox[{"15.19", "\[PlusMinus]", "0.04"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"15.05", "\[PlusMinus]", "0.05"}], ",", 
      RowBox[{"14.76", "\[PlusMinus]", "0.04"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"19.04", "\[PlusMinus]", "0.07"}], ",", 
      RowBox[{"14.99", "\[PlusMinus]", "0.05"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"24.09", "\[PlusMinus]", "0.11"}], ",", 
      RowBox[{"15.85", "\[PlusMinus]", "0.07"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"29.82", "\[PlusMinus]", "0.16"}], ",", 
      RowBox[{"16.85", "\[PlusMinus]", "0.09"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"37.48", "\[PlusMinus]", "0.25"}], ",", 
      RowBox[{"18.55", "\[PlusMinus]", "0.12"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"47.1", "\[PlusMinus]", "0.4"}], ",", 
      RowBox[{"20.75", "\[PlusMinus]", "0.17"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"59.1", "\[PlusMinus]", "0.6"}], ",", 
      RowBox[{"23.45", "\[PlusMinus]", "0.22"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"71.0", "\[PlusMinus]", "0.8"}], ",", 
      RowBox[{"25.65", "\[PlusMinus]", "0.29"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"92.2", "\[PlusMinus]", "1.2"}], ",", 
      RowBox[{"30.5", "\[PlusMinus]", "0.4"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"119.1", "\[PlusMinus]", "1.9"}], ",", 
      RowBox[{"36.4", "\[PlusMinus]", "0.6"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"145.1", "\[PlusMinus]", "2.7"}], ",", 
      RowBox[{"41.2", "\[PlusMinus]", "0.8"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"189.", "\[PlusMinus]", "4."}], ",", 
      RowBox[{"50.1", "\[PlusMinus]", "1.1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"234.", "\[PlusMinus]", "6."}], ",", 
      RowBox[{"58.3", "\[PlusMinus]", "1.5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"292.", "\[PlusMinus]", "8."}], ",", 
      RowBox[{"68.3", "\[PlusMinus]", "1.9"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"369.", "\[PlusMinus]", "13."}], ",", 
      RowBox[{"81.6", "\[PlusMinus]", "2.8"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"476.", "\[PlusMinus]", "19."}], ",", 
      RowBox[{"100.", "\[PlusMinus]", "4."}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"588.", "\[PlusMinus]", "26."}], ",", 
      RowBox[{"118.", "\[PlusMinus]", "5."}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.865774322078401*^9, 3.865774323500236*^9}, {
  3.870222668188528*^9, 3.870222668388445*^9}, {3.871824917790283*^9, 
  3.871824918163508*^9}, {3.87219669988969*^9, 3.872196704638226*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"64dbe1a8-313c-405d-bc76-af7d56179dea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4.164`", "\[PlusMinus]", "0.024`"}], ",", 
     RowBox[{"208.2`", "\[PlusMinus]", "1.2`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"6.375`", "\[PlusMinus]", "0.02`"}], ",", 
     RowBox[{"23.61`", "\[PlusMinus]", "0.08`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"8.835`", "\[PlusMinus]", "0.023`"}], ",", 
     RowBox[{"16.99`", "\[PlusMinus]", "0.04`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"11.7`", "\[PlusMinus]", "0.031`"}], ",", 
     RowBox[{"15.19`", "\[PlusMinus]", "0.04`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"15.05`", "\[PlusMinus]", "0.05`"}], ",", 
     RowBox[{"14.76`", "\[PlusMinus]", "0.04`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"19.04`", "\[PlusMinus]", "0.07`"}], ",", 
     RowBox[{"14.99`", "\[PlusMinus]", "0.05`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"24.09`", "\[PlusMinus]", "0.11`"}], ",", 
     RowBox[{"15.85`", "\[PlusMinus]", "0.07`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"29.82`", "\[PlusMinus]", "0.16`"}], ",", 
     RowBox[{"16.85`", "\[PlusMinus]", "0.09`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"37.48`", "\[PlusMinus]", "0.25`"}], ",", 
     RowBox[{"18.55`", "\[PlusMinus]", "0.12`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"47.1`", "\[PlusMinus]", "0.4`"}], ",", 
     RowBox[{"20.75`", "\[PlusMinus]", "0.17`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"59.1`", "\[PlusMinus]", "0.6`"}], ",", 
     RowBox[{"23.45`", "\[PlusMinus]", "0.22`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"71.`", "\[PlusMinus]", "0.8`"}], ",", 
     RowBox[{"25.65`", "\[PlusMinus]", "0.29`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"92.2`", "\[PlusMinus]", "1.2`"}], ",", 
     RowBox[{"30.5`", "\[PlusMinus]", "0.4`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"119.1`", "\[PlusMinus]", "1.9`"}], ",", 
     RowBox[{"36.4`", "\[PlusMinus]", "0.6`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"145.1`", "\[PlusMinus]", "2.7`"}], ",", 
     RowBox[{"41.2`", "\[PlusMinus]", "0.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"189.`", "\[PlusMinus]", "4.`"}], ",", 
     RowBox[{"50.1`", "\[PlusMinus]", "1.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"234.`", "\[PlusMinus]", "6.`"}], ",", 
     RowBox[{"58.3`", "\[PlusMinus]", "1.5`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"292.`", "\[PlusMinus]", "8.`"}], ",", 
     RowBox[{"68.3`", "\[PlusMinus]", "1.9`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"369.`", "\[PlusMinus]", "13.`"}], ",", 
     RowBox[{"81.6`", "\[PlusMinus]", "2.8`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"476.`", "\[PlusMinus]", "19.`"}], ",", 
     RowBox[{"100.`", "\[PlusMinus]", "4.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"588.`", "\[PlusMinus]", "26.`"}], ",", 
     RowBox[{"118.`", "\[PlusMinus]", "5.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.865774323932336*^9, 3.866888529187776*^9, 
  3.866978143728107*^9, 3.867070625250198*^9, 3.870221854451131*^9, 
  3.8702221081919518`*^9, 3.870222669018524*^9, 3.870712752362965*^9, 
  3.870790924709301*^9, 3.8707969698372707`*^9, 3.871396845267149*^9, 
  3.871824742392889*^9, 3.871824918549028*^9, 3.872196242263383*^9, 
  3.8721967050512543`*^9, 3.8736823574108543`*^9, 3.8767603075280313`*^9, 
  3.876920063379979*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"b1c7e148-2d7b-406d-a40a-760ec18164f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"javabd", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"5.700231943597744", ",", "0.01207241166528697"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"28.50115971798872", ",", "0.06036205832643485"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"5.79873973252985", ",", "0.008127368263246374"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"27.61304634538024", ",", "0.03870175363450654"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"5.90510885004121", ",", "0.01880097208443146"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"26.841403863823686", ",", "0.08545896402014301"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"5.980782139922633", ",", "0.022623892171313394"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"26.00340060835927", ",", "0.09836474857092779"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"6.174977597021277", ",", "0.017808683425452585"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"24.699910388085108", ",", "0.07123473370181034"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"6.259659518165803", ",", "0.01294585426723786"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"24.075613531406933", ",", "0.049791747181684075"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"6.453798986162792", ",", "0.02814262266653645"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"23.049282093438542", ",", "0.1005093666662016"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"6.750213589096242", ",", "0.005356209559882019"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"21.774882545471748", ",", "0.017278095354458126"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"6.956648887715002", ",", "0.006510191038770662"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"21.08075420519698", ",", "0.01972785163263837"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"7.220958181081789", ",", "0.016024550705824953"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"20.058217169671636", ",", "0.04451264084951376"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"7.635908775222859", ",", "0.010276886691871264"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"19.089771938057147", ",", "0.02569221672967816"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"8.03464133984749", ",", "0.0036999717907642495"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"18.260548499653385", ",", "0.008409026797191476"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"8.666186577739973", ",", "0.01778912290701574"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"17.332373155479946", ",", "0.03557824581403148"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"9.350404990874567", ",", "0.006419931102432235"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"16.69715176941887", ",", "0.011464162682914704"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"10.558215754398047", ",", "0.018609784723081196"}], "]"}], 
      ",", 
      RowBox[{"Around", "[", 
       RowBox[{"15.997296597572799", ",", "0.028196643519819993"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"12.189849737655585", ",", "0.1691424999247856"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"15.430189541336182", ",", "0.2141044302845387"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"15.233034583855726", ",", "0.5468246433362867"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"15.233034583855726", ",", "0.5468246433362867"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"32.607032745474434", ",", "3.5391212217852397"}], "]"}], ",", 
      
      RowBox[{"Around", "[", 
       RowBox[{"18.422052398573125", ",", "1.9995035151329037"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"37.56666730405342", ",", "4.788665312298926"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"19.56597255419449", ",", "2.494096516822358"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"51.5143029936392", ",", "7.969622234516992"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"22.895245774950755", ",", "3.5420543264519964"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"226.1883191276727", ",", "34.15818691413011"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"61.13197814261424", ",", "9.231942409224354"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"312.9949279966182", ",", "39.66595313492955"}], "]"}], ",", 
      RowBox[{"Around", "[", 
       RowBox[{"78.24873199915454", ",", "9.916488283732388"}], "]"}]}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8767602921853237`*^9, 3.87676029917703*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"befe69ec-c245-4938-92b3-dbc0321c7d8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"5.700", "0.012"},
       "Around"],
      Around[5.700231943597744, 0.01207241166528697]], ",", 
     InterpretationBox[
      TemplateBox[{"28.50", "0.06"},
       "Around"],
      Around[28.50115971798872, 0.06036205832643485]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"5.799", "0.008"},
       "Around"],
      Around[5.79873973252985, 0.008127368263246374]], ",", 
     InterpretationBox[
      TemplateBox[{"27.61", "0.04"},
       "Around"],
      Around[27.61304634538024, 0.03870175363450654]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"5.905", "0.019"},
       "Around"],
      Around[5.90510885004121, 0.01880097208443146]], ",", 
     InterpretationBox[
      TemplateBox[{"26.84", "0.09"},
       "Around"],
      Around[26.841403863823686`, 0.08545896402014301]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"5.981", "0.023"},
       "Around"],
      Around[5.980782139922633, 0.022623892171313394`]], ",", 
     InterpretationBox[
      TemplateBox[{"26.00", "0.10"},
       "Around"],
      Around[26.00340060835927, 0.09836474857092779]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.175", "0.018"},
       "Around"],
      Around[6.174977597021277, 0.017808683425452585`]], ",", 
     InterpretationBox[
      TemplateBox[{"24.70", "0.07"},
       "Around"],
      Around[24.699910388085108`, 0.07123473370181034]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.260", "0.013"},
       "Around"],
      Around[6.259659518165803, 0.01294585426723786]], ",", 
     InterpretationBox[
      TemplateBox[{"24.08", "0.05"},
       "Around"],
      Around[24.075613531406933`, 0.049791747181684075`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.454", "0.028"},
       "Around"],
      Around[6.453798986162792, 0.02814262266653645]], ",", 
     InterpretationBox[
      TemplateBox[{"23.05", "0.10"},
       "Around"],
      Around[23.049282093438542`, 0.1005093666662016]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.750", "0.005"},
       "Around"],
      Around[6.750213589096242, 0.005356209559882019]], ",", 
     InterpretationBox[
      TemplateBox[{"21.775", "0.017"},
       "Around"],
      Around[21.774882545471748`, 0.017278095354458126`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.957", "0.007"},
       "Around"],
      Around[6.956648887715002, 0.006510191038770662]], ",", 
     InterpretationBox[
      TemplateBox[{"21.081", "0.020"},
       "Around"],
      Around[21.08075420519698, 0.01972785163263837]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"7.221", "0.016"},
       "Around"],
      Around[7.220958181081789, 0.016024550705824953`]], ",", 
     InterpretationBox[
      TemplateBox[{"20.06", "0.04"},
       "Around"],
      Around[20.058217169671636`, 0.04451264084951376]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"7.636", "0.010"},
       "Around"],
      Around[7.635908775222859, 0.010276886691871264`]], ",", 
     InterpretationBox[
      TemplateBox[{"19.090", "0.026"},
       "Around"],
      Around[19.089771938057147`, 0.02569221672967816]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"8.035", "0.004"},
       "Around"],
      Around[8.03464133984749, 0.0036999717907642495`]], ",", 
     InterpretationBox[
      TemplateBox[{"18.261", "0.008"},
       "Around"],
      Around[18.260548499653385`, 0.008409026797191476]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"8.666", "0.018"},
       "Around"],
      Around[8.666186577739973, 0.01778912290701574]], ",", 
     InterpretationBox[
      TemplateBox[{"17.33", "0.04"},
       "Around"],
      Around[17.332373155479946`, 0.03557824581403148]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"9.350", "0.006"},
       "Around"],
      Around[9.350404990874567, 0.006419931102432235]], ",", 
     InterpretationBox[
      TemplateBox[{"16.697", "0.011"},
       "Around"],
      Around[16.69715176941887, 0.011464162682914704`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"10.558", "0.019"},
       "Around"],
      Around[10.558215754398047`, 0.018609784723081196`]], ",", 
     InterpretationBox[
      TemplateBox[{"15.997", "0.028"},
       "Around"],
      Around[15.997296597572799`, 0.028196643519819993`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"12.19", "0.17"},
       "Around"],
      Around[12.189849737655585`, 0.1691424999247856]], ",", 
     InterpretationBox[
      TemplateBox[{"15.43", "0.21"},
       "Around"],
      Around[15.430189541336182`, 0.2141044302845387]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"15.2", "0.5"},
       "Around"],
      Around[15.233034583855726`, 0.5468246433362867]], ",", 
     InterpretationBox[
      TemplateBox[{"15.2", "0.5"},
       "Around"],
      Around[15.233034583855726`, 0.5468246433362867]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"32.6", "3.5"},
       "Around"],
      Around[32.607032745474434`, 3.5391212217852397`]], ",", 
     InterpretationBox[
      TemplateBox[{"18.4", "2.0"},
       "Around"],
      Around[18.422052398573125`, 1.9995035151329037`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"38.", "5."},
       "Around"],
      Around[37.56666730405342, 4.788665312298926]], ",", 
     InterpretationBox[
      TemplateBox[{"19.6", "2.5"},
       "Around"],
      Around[19.56597255419449, 2.494096516822358]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"52.", "8."},
       "Around"],
      Around[51.5143029936392, 7.969622234516992]], ",", 
     InterpretationBox[
      TemplateBox[{"22.9", "3.5"},
       "Around"],
      Around[22.895245774950755`, 3.5420543264519964`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"226.", "34."},
       "Around"],
      Around[226.1883191276727, 34.15818691413011]], ",", 
     InterpretationBox[
      TemplateBox[{"61.", "9."},
       "Around"],
      Around[61.13197814261424, 9.231942409224354]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"313.", "40."},
       "Around"],
      Around[312.9949279966182, 39.66595313492955]], ",", 
     InterpretationBox[
      TemplateBox[{"78.", "10."},
       "Around"],
      Around[78.24873199915454, 9.916488283732388]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8767602995082293`*^9, 3.87692006543603*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"7f1aed0f-c175-4733-a4cb-7c4611182176"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", "javabd", "]"}]], "Input",
 CellChangeTimes->{{3.876760461097693*^9, 3.8767604690320683`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"ba9df27c-01a2-4310-91fa-6011e4256fea"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.7383867392124894`, 3.349944778305967}, {
          1.7405068658718665`, 3.349944778305967}}], 
         LineBox[{{1.7405068658718665`, 3.349944778305967}, {
          1.7426225071021928`, 3.349944778305967}}]}, {
         LineBox[{{1.7405068658718665`, 3.3478246516465897`}, {
          1.7405068658718665`, 3.349944778305967}}], 
         LineBox[{{1.7405068658718665`, 3.349944778305967}, {
          1.7405068658718665`, 3.3520604195362935`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.756238048387379, 3.3182883547118407`}, {
          1.7576406064471723`, 3.3182883547118407`}}], 
         LineBox[{{1.7576406064471723`, 3.3182883547118407`}, {
          1.759041200092738, 3.3182883547118407`}}]}, {
         LineBox[{{1.7576406064471723`, 3.3168857966520475`}, {
          1.7576406064471723`, 3.3182883547118407`}}], 
         LineBox[{{1.7576406064471723`, 3.3182883547118407`}, {
          1.7576406064471723`, 3.319688948357406}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.7726289552657495`, 3.2899456156470905`}, {
          1.775817883017315, 3.2899456156470905`}}], 
         LineBox[{{1.775817883017315, 3.2899456156470905`}, {
          1.778996673826091, 3.2899456156470905`}}]}, {
         LineBox[{{1.775817883017315, 3.286756687895525}, {1.775817883017315, 
          3.2899456156470905`}}], 
         LineBox[{{1.775817883017315, 3.2899456156470905`}, {
          1.775817883017315, 3.2931244064558665`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.7847614144874286`, 3.2582273220980746`}, {
          1.788551352039133, 3.2582273220980746`}}], 
         LineBox[{{1.788551352039133, 3.2582273220980746`}, {
          1.7923269801789057`, 3.2582273220980746`}}]}, {
         LineBox[{{1.788551352039133, 3.2544373845463705`}, {
          1.788551352039133, 3.2582273220980746`}}], 
         LineBox[{{1.788551352039133, 3.2582273220980746`}, {
          1.788551352039133, 3.2620029502378474`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.8176170799519487`, 3.2067996156146017`}, {
          1.820505254494711, 3.2067996156146017`}}], 
         LineBox[{{1.820505254494711, 3.2067996156146017`}, {
          1.8233851115020128`, 3.2067996156146017`}}]}, {
         LineBox[{{1.820505254494711, 3.2039114410718397`}, {
          1.820505254494711, 3.2067996156146017`}}], 
         LineBox[{{1.820505254494711, 3.2067996156146017`}, {
          1.820505254494711, 3.209679472621904}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.8320555116835389`, 3.1811994415300626`}, {
          1.8341257935634532`, 3.1811994415300626`}}], 
         LineBox[{{1.8341257935634532`, 3.1811994415300626`}, {
          1.8361917982298184`, 3.1811994415300626`}}]}, {
         LineBox[{{1.8341257935634532`, 3.1791291596501483`}, {
          1.8341257935634532`, 3.1811994415300626`}}], 
         LineBox[{{1.8341257935634532`, 3.1811994415300626`}, {
          1.8341257935634532`, 3.183265446196428}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.8602987833061444`, 3.137634623336735}, {
          1.8646689475238476`, 3.137634623336735}}], 
         LineBox[{{1.8646689475238476`, 3.137634623336735}, {
          1.8690200964759627`, 3.137634623336735}}]}, {
         LineBox[{{1.8646689475238476`, 3.1332644591190317`}, {
          1.8646689475238476`, 3.137634623336735}}], 
         LineBox[{{1.8646689475238476`, 3.137634623336735}, {
          1.8646689475238476`, 3.14198577228885}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.9087803448159104`, 3.080757128715833}, {
          1.9095741472128875`, 3.080757128715833}}], 
         LineBox[{{1.9095741472128875`, 3.080757128715833}, {
          1.9103673199873819`, 3.080757128715833}}]}, {
         LineBox[{{1.9095741472128875`, 3.0799633263188557`}, {
          1.9095741472128875`, 3.080757128715833}}], 
         LineBox[{{1.9095741472128875`, 3.080757128715833}, {
          1.9095741472128875`, 3.0815503014903274`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.9387616157338674`, 3.0483605012682866`}, {
          1.9396978767466753`, 3.0483605012682866`}}], 
         LineBox[{{1.9396978767466753`, 3.0483605012682866`}, {
          1.9406332619946793`, 3.0483605012682866`}}]}, {
         LineBox[{{1.9396978767466753`, 3.047424240255479}, {
          1.9396978767466753`, 3.0483605012682866`}}], 
         LineBox[{{1.9396978767466753`, 3.0483605012682866`}, {
          1.9396978767466753`, 3.0492958865162905`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{1.974766017802669, 2.9986389036924392`}, {
          1.976987656160458, 2.9986389036924392`}}], 
         LineBox[{{1.976987656160458, 2.9986389036924392`}, {
          1.9792043697802202`, 2.9986389036924392`}}]}, {
         LineBox[{{1.976987656160458, 2.9964172653346504`}, {
          1.976987656160458, 2.9986389036924392`}}], 
         LineBox[{{1.976987656160458, 2.9986389036924392`}, {
          1.976987656160458, 3.0008556173122014`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{2.031515189686909, 2.9491526909956365`}, {
          2.0328619591214814`, 2.9491526909956365`}}], 
         LineBox[{{2.0328619591214814`, 2.9491526909956365`}, {
          2.034206917207339, 2.9491526909956365`}}]}, {
         LineBox[{{2.0328619591214814`, 2.947805921561064}, {
          2.0328619591214814`, 2.9491526909956365`}}], 
         LineBox[{{2.0328619591214814`, 2.9491526909956365`}, {
          2.0328619591214814`, 2.9504976490814943`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{2.0833017524769883`, 2.904742913031858}, {
          2.0837623609620275`, 2.904742913031858}}], 
         LineBox[{{2.0837623609620275`, 2.904742913031858}, {
          2.084222757384564, 2.904742913031858}}]}, {
         LineBox[{{2.0837623609620275`, 2.9042823045468187`}, {
          2.0837623609620275`, 2.904742913031858}}], 
         LineBox[{{2.0837623609620275`, 2.904742913031858}, {
          2.0837623609620275`, 2.9052033094543948`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{2.157374038442815, 2.852576033502808}, {
          2.1594288529428627`, 2.852576033502808}}], 
         LineBox[{{2.1594288529428627`, 2.852576033502808}, {2.16147945383698,
           2.852576033502808}}]}, {
         LineBox[{{2.1594288529428627`, 2.8505212190027605`}, {
          2.1594288529428627`, 2.852576033502808}}], 
         LineBox[{{2.1594288529428627`, 2.852576033502808}, {
          2.1594288529428627`, 2.8546266343969253`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{2.2347328271732207`, 2.8152381521475296`}, {
          2.235419656894588, 2.8152381521475296`}}], 
         LineBox[{{2.235419656894588, 2.8152381521475296`}, {
          2.2361060152046495`, 2.8152381521475296`}}]}, {
         LineBox[{{2.235419656894588, 2.8145513224261625`}, {
          2.235419656894588, 2.8152381521475296`}}], 
         LineBox[{{2.235419656894588, 2.8152381521475296`}, {
          2.235419656894588, 2.8159245104575916`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{2.355140158133094, 2.772419745312284}, {
          2.3569043013506183`, 2.772419745312284}}], 
         LineBox[{{2.3569043013506183`, 2.772419745312284}, {
          2.358665337846748, 2.772419745312284}}]}, {
         LineBox[{{2.3569043013506183`, 2.7706556020947595`}, {
          2.3569043013506183`, 2.772419745312284}}], 
         LineBox[{{2.3569043013506183`, 2.772419745312284}, {
          2.3569043013506183`, 2.7741807818084134`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{2.4866307657896938`, 2.736325950248824}, {
          2.500603616727754, 2.736325950248824}}], 
         LineBox[{{2.500603616727754, 2.736325950248824}, {
          2.5143839145291076`, 2.736325950248824}}]}, {
         LineBox[{{2.500603616727754, 2.7223530993107636`}, {
          2.500603616727754, 2.736325950248824}}], 
         LineBox[{{2.500603616727754, 2.736325950248824}, {2.500603616727754, 
          2.7501062480501774`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{2.686908954209786, 2.723466397476659}, {2.723466397476659, 
          2.723466397476659}}], 
         LineBox[{{2.723466397476659, 2.723466397476659}, {
          2.7587343944141853`, 2.723466397476659}}]}, {
         LineBox[{{2.723466397476659, 2.686908954209786}, {2.723466397476659, 
          2.723466397476659}}], 
         LineBox[{{2.723466397476659, 2.723466397476659}, {2.723466397476659, 
          2.7587343944141853`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{3.3696348689796043`, 2.9135484469096875`}, {
          3.4845279934954254`, 2.9135484469096875`}}], 
         LineBox[{{3.4845279934954254`, 2.9135484469096875`}, {
          3.5875705519976817`, 2.9135484469096875`}}]}, {
         LineBox[{{3.4845279934954254`, 2.7986553223938664`}, {
          3.4845279934954254`, 2.9135484469096875`}}], 
         LineBox[{{3.4845279934954254`, 2.9135484469096875`}, {
          3.4845279934954254`, 3.016591005411944}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{3.489757619406613, 2.9737919633047474`}, {
          3.6261171493444375`, 2.9737919633047474`}}], 
         LineBox[{{3.6261171493444375`, 2.9737919633047474`}, {
          3.7460943309125856`, 2.9737919633047474`}}]}, {
         LineBox[{{3.6261171493444375`, 2.8374324333669225`}, {
          3.6261171493444375`, 2.9737919633047474`}}], 
         LineBox[{{3.6261171493444375`, 2.9737919633047474`}, {
          3.6261171493444375`, 3.0937691448728954`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{3.7737875548311646`, 3.1309292809259}, {
          3.9418594971422287`, 3.1309292809259}}], 
         LineBox[{{3.9418594971422287`, 3.1309292809259}, {4.085706111817984, 
          3.1309292809259}}]}, {
         LineBox[{{3.9418594971422287`, 2.962857338614836}, {
          3.9418594971422287`, 3.1309292809259}}], 
         LineBox[{{3.9418594971422287`, 3.1309292809259}, {
          3.9418594971422287`, 3.2747758956016555`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{5.257652298326407, 4.113035103121429}, {5.421367922771608, 
          4.113035103121429}}], 
         LineBox[{{5.421367922771608, 4.113035103121429}, {5.562013459283799, 
          4.113035103121429}}]}, {
         LineBox[{{5.421367922771608, 3.949319478676228}, {5.421367922771608, 
          4.113035103121429}}], 
         LineBox[{{5.421367922771608, 4.113035103121429}, {5.421367922771608, 
          4.25368063963362}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{
         LineBox[{{5.610676105835088, 4.359892624805321}, {
          5.7461869859252115`, 4.359892624805321}}], 
         LineBox[{{5.7461869859252115`, 4.359892624805321}, {
          5.865506918506537, 4.359892624805321}}]}, {
         LineBox[{{5.7461869859252115`, 4.224381744715197}, {
          5.7461869859252115`, 4.359892624805321}}], 
         LineBox[{{5.7461869859252115`, 4.359892624805321}, {
          5.7461869859252115`, 4.479212557386647}}]}},
       Antialiasing->False]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.7426225071021928`, 3.349944778305967}, 
            Offset[{0, 3}, {1.7426225071021928`, 3.349944778305967}]}, {{
            1.7426225071021928`, 3.349944778305967}, 
            Offset[{0, -3}, {1.7426225071021928`, 3.349944778305967}]}, {{
            1.7383867392124894`, 3.349944778305967}, 
            Offset[{0, 3}, {1.7383867392124894`, 3.349944778305967}]}, {{
            1.7383867392124894`, 3.349944778305967}, 
            Offset[{0, -3}, {1.7383867392124894`, 3.349944778305967}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.7405068658718665`, 3.3520604195362935`}, 
            Offset[{3, 0}, {1.7405068658718665`, 3.3520604195362935`}]}, {{
            1.7405068658718665`, 3.3520604195362935`}, 
            Offset[{-3, 0}, {1.7405068658718665`, 3.3520604195362935`}]}, {{
            1.7405068658718665`, 3.3478246516465897`}, 
            Offset[{3, 0}, {1.7405068658718665`, 3.3478246516465897`}]}, {{
            1.7405068658718665`, 3.3478246516465897`}, 
            Offset[{-3, 0}, {1.7405068658718665`, 
             3.3478246516465897`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.759041200092738, 3.3182883547118407`}, 
            Offset[{0, 3}, {1.759041200092738, 3.3182883547118407`}]}, {{
            1.759041200092738, 3.3182883547118407`}, 
            Offset[{0, -3}, {1.759041200092738, 3.3182883547118407`}]}, {{
            1.756238048387379, 3.3182883547118407`}, 
            Offset[{0, 3}, {1.756238048387379, 3.3182883547118407`}]}, {{
            1.756238048387379, 3.3182883547118407`}, 
            Offset[{0, -3}, {1.756238048387379, 3.3182883547118407`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.7576406064471723`, 3.319688948357406}, 
            Offset[{3, 0}, {1.7576406064471723`, 3.319688948357406}]}, {{
            1.7576406064471723`, 3.319688948357406}, 
            Offset[{-3, 0}, {1.7576406064471723`, 3.319688948357406}]}, {{
            1.7576406064471723`, 3.3168857966520475`}, 
            Offset[{3, 0}, {1.7576406064471723`, 3.3168857966520475`}]}, {{
            1.7576406064471723`, 3.3168857966520475`}, 
            Offset[{-3, 0}, {1.7576406064471723`, 
             3.3168857966520475`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.778996673826091, 3.2899456156470905`}, 
            Offset[{0, 3}, {1.778996673826091, 3.2899456156470905`}]}, {{
            1.778996673826091, 3.2899456156470905`}, 
            Offset[{0, -3}, {1.778996673826091, 3.2899456156470905`}]}, {{
            1.7726289552657495`, 3.2899456156470905`}, 
            Offset[{0, 3}, {1.7726289552657495`, 3.2899456156470905`}]}, {{
            1.7726289552657495`, 3.2899456156470905`}, 
            Offset[{0, -3}, {1.7726289552657495`, 
             3.2899456156470905`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.775817883017315, 3.2931244064558665`}, 
            Offset[{3, 0}, {1.775817883017315, 3.2931244064558665`}]}, {{
            1.775817883017315, 3.2931244064558665`}, 
            Offset[{-3, 0}, {1.775817883017315, 3.2931244064558665`}]}, {{
            1.775817883017315, 3.286756687895525}, 
            Offset[{3, 0}, {1.775817883017315, 3.286756687895525}]}, {{
            1.775817883017315, 3.286756687895525}, 
            Offset[{-3, 0}, {1.775817883017315, 3.286756687895525}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.7923269801789057`, 3.2582273220980746`}, 
            Offset[{0, 3}, {1.7923269801789057`, 3.2582273220980746`}]}, {{
            1.7923269801789057`, 3.2582273220980746`}, 
            Offset[{0, -3}, {1.7923269801789057`, 3.2582273220980746`}]}, {{
            1.7847614144874286`, 3.2582273220980746`}, 
            Offset[{0, 3}, {1.7847614144874286`, 3.2582273220980746`}]}, {{
            1.7847614144874286`, 3.2582273220980746`}, 
            Offset[{0, -3}, {1.7847614144874286`, 
             3.2582273220980746`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.788551352039133, 3.2620029502378474`}, 
            Offset[{3, 0}, {1.788551352039133, 3.2620029502378474`}]}, {{
            1.788551352039133, 3.2620029502378474`}, 
            Offset[{-3, 0}, {1.788551352039133, 3.2620029502378474`}]}, {{
            1.788551352039133, 3.2544373845463705`}, 
            Offset[{3, 0}, {1.788551352039133, 3.2544373845463705`}]}, {{
            1.788551352039133, 3.2544373845463705`}, 
            Offset[{-3, 0}, {1.788551352039133, 3.2544373845463705`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.8233851115020128`, 3.2067996156146017`}, 
            Offset[{0, 3}, {1.8233851115020128`, 3.2067996156146017`}]}, {{
            1.8233851115020128`, 3.2067996156146017`}, 
            Offset[{0, -3}, {1.8233851115020128`, 3.2067996156146017`}]}, {{
            1.8176170799519487`, 3.2067996156146017`}, 
            Offset[{0, 3}, {1.8176170799519487`, 3.2067996156146017`}]}, {{
            1.8176170799519487`, 3.2067996156146017`}, 
            Offset[{0, -3}, {1.8176170799519487`, 
             3.2067996156146017`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.820505254494711, 3.209679472621904}, 
            Offset[{3, 0}, {1.820505254494711, 3.209679472621904}]}, {{
            1.820505254494711, 3.209679472621904}, 
            Offset[{-3, 0}, {1.820505254494711, 3.209679472621904}]}, {{
            1.820505254494711, 3.2039114410718397`}, 
            Offset[{3, 0}, {1.820505254494711, 3.2039114410718397`}]}, {{
            1.820505254494711, 3.2039114410718397`}, 
            Offset[{-3, 0}, {1.820505254494711, 3.2039114410718397`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.8361917982298184`, 3.1811994415300626`}, 
            Offset[{0, 3}, {1.8361917982298184`, 3.1811994415300626`}]}, {{
            1.8361917982298184`, 3.1811994415300626`}, 
            Offset[{0, -3}, {1.8361917982298184`, 3.1811994415300626`}]}, {{
            1.8320555116835389`, 3.1811994415300626`}, 
            Offset[{0, 3}, {1.8320555116835389`, 3.1811994415300626`}]}, {{
            1.8320555116835389`, 3.1811994415300626`}, 
            Offset[{0, -3}, {1.8320555116835389`, 
             3.1811994415300626`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.8341257935634532`, 3.183265446196428}, 
            Offset[{3, 0}, {1.8341257935634532`, 3.183265446196428}]}, {{
            1.8341257935634532`, 3.183265446196428}, 
            Offset[{-3, 0}, {1.8341257935634532`, 3.183265446196428}]}, {{
            1.8341257935634532`, 3.1791291596501483`}, 
            Offset[{3, 0}, {1.8341257935634532`, 3.1791291596501483`}]}, {{
            1.8341257935634532`, 3.1791291596501483`}, 
            Offset[{-3, 0}, {1.8341257935634532`, 
             3.1791291596501483`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.8690200964759627`, 3.137634623336735}, 
            Offset[{0, 3}, {1.8690200964759627`, 3.137634623336735}]}, {{
            1.8690200964759627`, 3.137634623336735}, 
            Offset[{0, -3}, {1.8690200964759627`, 3.137634623336735}]}, {{
            1.8602987833061444`, 3.137634623336735}, 
            Offset[{0, 3}, {1.8602987833061444`, 3.137634623336735}]}, {{
            1.8602987833061444`, 3.137634623336735}, 
            Offset[{0, -3}, {1.8602987833061444`, 3.137634623336735}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.8646689475238476`, 3.14198577228885}, 
            Offset[{3, 0}, {1.8646689475238476`, 3.14198577228885}]}, {{
            1.8646689475238476`, 3.14198577228885}, 
            Offset[{-3, 0}, {1.8646689475238476`, 3.14198577228885}]}, {{
            1.8646689475238476`, 3.1332644591190317`}, 
            Offset[{3, 0}, {1.8646689475238476`, 3.1332644591190317`}]}, {{
            1.8646689475238476`, 3.1332644591190317`}, 
            Offset[{-3, 0}, {1.8646689475238476`, 
             3.1332644591190317`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.9103673199873819`, 3.080757128715833}, 
            Offset[{0, 3}, {1.9103673199873819`, 3.080757128715833}]}, {{
            1.9103673199873819`, 3.080757128715833}, 
            Offset[{0, -3}, {1.9103673199873819`, 3.080757128715833}]}, {{
            1.9087803448159104`, 3.080757128715833}, 
            Offset[{0, 3}, {1.9087803448159104`, 3.080757128715833}]}, {{
            1.9087803448159104`, 3.080757128715833}, 
            Offset[{0, -3}, {1.9087803448159104`, 3.080757128715833}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.9095741472128875`, 3.0815503014903274`}, 
            Offset[{3, 0}, {1.9095741472128875`, 3.0815503014903274`}]}, {{
            1.9095741472128875`, 3.0815503014903274`}, 
            Offset[{-3, 0}, {1.9095741472128875`, 3.0815503014903274`}]}, {{
            1.9095741472128875`, 3.0799633263188557`}, 
            Offset[{3, 0}, {1.9095741472128875`, 3.0799633263188557`}]}, {{
            1.9095741472128875`, 3.0799633263188557`}, 
            Offset[{-3, 0}, {1.9095741472128875`, 
             3.0799633263188557`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.9406332619946793`, 3.0483605012682866`}, 
            Offset[{0, 3}, {1.9406332619946793`, 3.0483605012682866`}]}, {{
            1.9406332619946793`, 3.0483605012682866`}, 
            Offset[{0, -3}, {1.9406332619946793`, 3.0483605012682866`}]}, {{
            1.9387616157338674`, 3.0483605012682866`}, 
            Offset[{0, 3}, {1.9387616157338674`, 3.0483605012682866`}]}, {{
            1.9387616157338674`, 3.0483605012682866`}, 
            Offset[{0, -3}, {1.9387616157338674`, 
             3.0483605012682866`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.9396978767466753`, 3.0492958865162905`}, 
            Offset[{3, 0}, {1.9396978767466753`, 3.0492958865162905`}]}, {{
            1.9396978767466753`, 3.0492958865162905`}, 
            Offset[{-3, 0}, {1.9396978767466753`, 3.0492958865162905`}]}, {{
            1.9396978767466753`, 3.047424240255479}, 
            Offset[{3, 0}, {1.9396978767466753`, 3.047424240255479}]}, {{
            1.9396978767466753`, 3.047424240255479}, 
            Offset[{-3, 0}, {1.9396978767466753`, 3.047424240255479}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{1.9792043697802202`, 2.9986389036924392`}, 
            Offset[{0, 3}, {1.9792043697802202`, 2.9986389036924392`}]}, {{
            1.9792043697802202`, 2.9986389036924392`}, 
            Offset[{0, -3}, {1.9792043697802202`, 2.9986389036924392`}]}, {{
            1.974766017802669, 2.9986389036924392`}, 
            Offset[{0, 3}, {1.974766017802669, 2.9986389036924392`}]}, {{
            1.974766017802669, 2.9986389036924392`}, 
            Offset[{0, -3}, {1.974766017802669, 2.9986389036924392`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.976987656160458, 3.0008556173122014`}, 
            Offset[{3, 0}, {1.976987656160458, 3.0008556173122014`}]}, {{
            1.976987656160458, 3.0008556173122014`}, 
            Offset[{-3, 0}, {1.976987656160458, 3.0008556173122014`}]}, {{
            1.976987656160458, 2.9964172653346504`}, 
            Offset[{3, 0}, {1.976987656160458, 2.9964172653346504`}]}, {{
            1.976987656160458, 2.9964172653346504`}, 
            Offset[{-3, 0}, {1.976987656160458, 2.9964172653346504`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{2.034206917207339, 2.9491526909956365`}, 
            Offset[{0, 3}, {2.034206917207339, 2.9491526909956365`}]}, {{
            2.034206917207339, 2.9491526909956365`}, 
            Offset[{0, -3}, {2.034206917207339, 2.9491526909956365`}]}, {{
            2.031515189686909, 2.9491526909956365`}, 
            Offset[{0, 3}, {2.031515189686909, 2.9491526909956365`}]}, {{
            2.031515189686909, 2.9491526909956365`}, 
            Offset[{0, -3}, {2.031515189686909, 2.9491526909956365`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.0328619591214814`, 2.9504976490814943`}, 
            Offset[{3, 0}, {2.0328619591214814`, 2.9504976490814943`}]}, {{
            2.0328619591214814`, 2.9504976490814943`}, 
            Offset[{-3, 0}, {2.0328619591214814`, 2.9504976490814943`}]}, {{
            2.0328619591214814`, 2.947805921561064}, 
            Offset[{3, 0}, {2.0328619591214814`, 2.947805921561064}]}, {{
            2.0328619591214814`, 2.947805921561064}, 
            Offset[{-3, 0}, {2.0328619591214814`, 2.947805921561064}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{2.084222757384564, 2.904742913031858}, 
            Offset[{0, 3}, {2.084222757384564, 2.904742913031858}]}, {{
            2.084222757384564, 2.904742913031858}, 
            Offset[{0, -3}, {2.084222757384564, 2.904742913031858}]}, {{
            2.0833017524769883`, 2.904742913031858}, 
            Offset[{0, 3}, {2.0833017524769883`, 2.904742913031858}]}, {{
            2.0833017524769883`, 2.904742913031858}, 
            Offset[{0, -3}, {2.0833017524769883`, 2.904742913031858}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.0837623609620275`, 2.9052033094543948`}, 
            Offset[{3, 0}, {2.0837623609620275`, 2.9052033094543948`}]}, {{
            2.0837623609620275`, 2.9052033094543948`}, 
            Offset[{-3, 0}, {2.0837623609620275`, 2.9052033094543948`}]}, {{
            2.0837623609620275`, 2.9042823045468187`}, 
            Offset[{3, 0}, {2.0837623609620275`, 2.9042823045468187`}]}, {{
            2.0837623609620275`, 2.9042823045468187`}, 
            Offset[{-3, 0}, {2.0837623609620275`, 
             2.9042823045468187`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{2.16147945383698, 2.852576033502808}, 
            Offset[{0, 3}, {2.16147945383698, 2.852576033502808}]}, {{
            2.16147945383698, 2.852576033502808}, 
            Offset[{0, -3}, {2.16147945383698, 2.852576033502808}]}, {{
            2.157374038442815, 2.852576033502808}, 
            Offset[{0, 3}, {2.157374038442815, 2.852576033502808}]}, {{
            2.157374038442815, 2.852576033502808}, 
            Offset[{0, -3}, {2.157374038442815, 2.852576033502808}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.1594288529428627`, 2.8546266343969253`}, 
            Offset[{3, 0}, {2.1594288529428627`, 2.8546266343969253`}]}, {{
            2.1594288529428627`, 2.8546266343969253`}, 
            Offset[{-3, 0}, {2.1594288529428627`, 2.8546266343969253`}]}, {{
            2.1594288529428627`, 2.8505212190027605`}, 
            Offset[{3, 0}, {2.1594288529428627`, 2.8505212190027605`}]}, {{
            2.1594288529428627`, 2.8505212190027605`}, 
            Offset[{-3, 0}, {2.1594288529428627`, 
             2.8505212190027605`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{2.2361060152046495`, 2.8152381521475296`}, 
            Offset[{0, 3}, {2.2361060152046495`, 2.8152381521475296`}]}, {{
            2.2361060152046495`, 2.8152381521475296`}, 
            Offset[{0, -3}, {2.2361060152046495`, 2.8152381521475296`}]}, {{
            2.2347328271732207`, 2.8152381521475296`}, 
            Offset[{0, 3}, {2.2347328271732207`, 2.8152381521475296`}]}, {{
            2.2347328271732207`, 2.8152381521475296`}, 
            Offset[{0, -3}, {2.2347328271732207`, 
             2.8152381521475296`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.235419656894588, 2.8159245104575916`}, 
            Offset[{3, 0}, {2.235419656894588, 2.8159245104575916`}]}, {{
            2.235419656894588, 2.8159245104575916`}, 
            Offset[{-3, 0}, {2.235419656894588, 2.8159245104575916`}]}, {{
            2.235419656894588, 2.8145513224261625`}, 
            Offset[{3, 0}, {2.235419656894588, 2.8145513224261625`}]}, {{
            2.235419656894588, 2.8145513224261625`}, 
            Offset[{-3, 0}, {2.235419656894588, 2.8145513224261625`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{2.358665337846748, 2.772419745312284}, 
            Offset[{0, 3}, {2.358665337846748, 2.772419745312284}]}, {{
            2.358665337846748, 2.772419745312284}, 
            Offset[{0, -3}, {2.358665337846748, 2.772419745312284}]}, {{
            2.355140158133094, 2.772419745312284}, 
            Offset[{0, 3}, {2.355140158133094, 2.772419745312284}]}, {{
            2.355140158133094, 2.772419745312284}, 
            Offset[{0, -3}, {2.355140158133094, 2.772419745312284}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.3569043013506183`, 2.7741807818084134`}, 
            Offset[{3, 0}, {2.3569043013506183`, 2.7741807818084134`}]}, {{
            2.3569043013506183`, 2.7741807818084134`}, 
            Offset[{-3, 0}, {2.3569043013506183`, 2.7741807818084134`}]}, {{
            2.3569043013506183`, 2.7706556020947595`}, 
            Offset[{3, 0}, {2.3569043013506183`, 2.7706556020947595`}]}, {{
            2.3569043013506183`, 2.7706556020947595`}, 
            Offset[{-3, 0}, {2.3569043013506183`, 
             2.7706556020947595`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{2.5143839145291076`, 2.736325950248824}, 
            Offset[{0, 3}, {2.5143839145291076`, 2.736325950248824}]}, {{
            2.5143839145291076`, 2.736325950248824}, 
            Offset[{0, -3}, {2.5143839145291076`, 2.736325950248824}]}, {{
            2.4866307657896938`, 2.736325950248824}, 
            Offset[{0, 3}, {2.4866307657896938`, 2.736325950248824}]}, {{
            2.4866307657896938`, 2.736325950248824}, 
            Offset[{0, -3}, {2.4866307657896938`, 2.736325950248824}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.500603616727754, 2.7501062480501774`}, 
            Offset[{3, 0}, {2.500603616727754, 2.7501062480501774`}]}, {{
            2.500603616727754, 2.7501062480501774`}, 
            Offset[{-3, 0}, {2.500603616727754, 2.7501062480501774`}]}, {{
            2.500603616727754, 2.7223530993107636`}, 
            Offset[{3, 0}, {2.500603616727754, 2.7223530993107636`}]}, {{
            2.500603616727754, 2.7223530993107636`}, 
            Offset[{-3, 0}, {2.500603616727754, 2.7223530993107636`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{2.7587343944141853`, 2.723466397476659}, 
            Offset[{0, 3}, {2.7587343944141853`, 2.723466397476659}]}, {{
            2.7587343944141853`, 2.723466397476659}, 
            Offset[{0, -3}, {2.7587343944141853`, 2.723466397476659}]}, {{
            2.686908954209786, 2.723466397476659}, 
            Offset[{0, 3}, {2.686908954209786, 2.723466397476659}]}, {{
            2.686908954209786, 2.723466397476659}, 
            Offset[{0, -3}, {2.686908954209786, 2.723466397476659}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.723466397476659, 2.7587343944141853`}, 
            Offset[{3, 0}, {2.723466397476659, 2.7587343944141853`}]}, {{
            2.723466397476659, 2.7587343944141853`}, 
            Offset[{-3, 0}, {2.723466397476659, 2.7587343944141853`}]}, {{
            2.723466397476659, 2.686908954209786}, 
            Offset[{3, 0}, {2.723466397476659, 2.686908954209786}]}, {{
            2.723466397476659, 2.686908954209786}, 
            Offset[{-3, 0}, {2.723466397476659, 2.686908954209786}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{3.5875705519976817`, 2.9135484469096875`}, 
            Offset[{0, 3}, {3.5875705519976817`, 2.9135484469096875`}]}, {{
            3.5875705519976817`, 2.9135484469096875`}, 
            Offset[{0, -3}, {3.5875705519976817`, 2.9135484469096875`}]}, {{
            3.3696348689796043`, 2.9135484469096875`}, 
            Offset[{0, 3}, {3.3696348689796043`, 2.9135484469096875`}]}, {{
            3.3696348689796043`, 2.9135484469096875`}, 
            Offset[{0, -3}, {3.3696348689796043`, 
             2.9135484469096875`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3.4845279934954254`, 3.016591005411944}, 
            Offset[{3, 0}, {3.4845279934954254`, 3.016591005411944}]}, {{
            3.4845279934954254`, 3.016591005411944}, 
            Offset[{-3, 0}, {3.4845279934954254`, 3.016591005411944}]}, {{
            3.4845279934954254`, 2.7986553223938664`}, 
            Offset[{3, 0}, {3.4845279934954254`, 2.7986553223938664`}]}, {{
            3.4845279934954254`, 2.7986553223938664`}, 
            Offset[{-3, 0}, {3.4845279934954254`, 
             2.7986553223938664`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{3.7460943309125856`, 2.9737919633047474`}, 
            Offset[{0, 3}, {3.7460943309125856`, 2.9737919633047474`}]}, {{
            3.7460943309125856`, 2.9737919633047474`}, 
            Offset[{0, -3}, {3.7460943309125856`, 2.9737919633047474`}]}, {{
            3.489757619406613, 2.9737919633047474`}, 
            Offset[{0, 3}, {3.489757619406613, 2.9737919633047474`}]}, {{
            3.489757619406613, 2.9737919633047474`}, 
            Offset[{0, -3}, {3.489757619406613, 2.9737919633047474`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3.6261171493444375`, 3.0937691448728954`}, 
            Offset[{3, 0}, {3.6261171493444375`, 3.0937691448728954`}]}, {{
            3.6261171493444375`, 3.0937691448728954`}, 
            Offset[{-3, 0}, {3.6261171493444375`, 3.0937691448728954`}]}, {{
            3.6261171493444375`, 2.8374324333669225`}, 
            Offset[{3, 0}, {3.6261171493444375`, 2.8374324333669225`}]}, {{
            3.6261171493444375`, 2.8374324333669225`}, 
            Offset[{-3, 0}, {3.6261171493444375`, 
             2.8374324333669225`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{4.085706111817984, 3.1309292809259}, 
            Offset[{0, 3}, {4.085706111817984, 3.1309292809259}]}, {{
            4.085706111817984, 3.1309292809259}, 
            Offset[{0, -3}, {4.085706111817984, 3.1309292809259}]}, {{
            3.7737875548311646`, 3.1309292809259}, 
            Offset[{0, 3}, {3.7737875548311646`, 3.1309292809259}]}, {{
            3.7737875548311646`, 3.1309292809259}, 
            Offset[{0, -3}, {3.7737875548311646`, 3.1309292809259}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3.9418594971422287`, 3.2747758956016555`}, 
            Offset[{3, 0}, {3.9418594971422287`, 3.2747758956016555`}]}, {{
            3.9418594971422287`, 3.2747758956016555`}, 
            Offset[{-3, 0}, {3.9418594971422287`, 3.2747758956016555`}]}, {{
            3.9418594971422287`, 2.962857338614836}, 
            Offset[{3, 0}, {3.9418594971422287`, 2.962857338614836}]}, {{
            3.9418594971422287`, 2.962857338614836}, 
            Offset[{-3, 0}, {3.9418594971422287`, 2.962857338614836}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{5.562013459283799, 4.113035103121429}, 
            Offset[{0, 3}, {5.562013459283799, 4.113035103121429}]}, {{
            5.562013459283799, 4.113035103121429}, 
            Offset[{0, -3}, {5.562013459283799, 4.113035103121429}]}, {{
            5.257652298326407, 4.113035103121429}, 
            Offset[{0, 3}, {5.257652298326407, 4.113035103121429}]}, {{
            5.257652298326407, 4.113035103121429}, 
            Offset[{0, -3}, {5.257652298326407, 4.113035103121429}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{5.421367922771608, 4.25368063963362}, 
            Offset[{3, 0}, {5.421367922771608, 4.25368063963362}]}, {{
            5.421367922771608, 4.25368063963362}, 
            Offset[{-3, 0}, {5.421367922771608, 4.25368063963362}]}, {{
            5.421367922771608, 3.949319478676228}, 
            Offset[{3, 0}, {5.421367922771608, 3.949319478676228}]}, {{
            5.421367922771608, 3.949319478676228}, 
            Offset[{-3, 0}, {5.421367922771608, 3.949319478676228}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{{{5.865506918506537, 4.359892624805321}, 
            Offset[{0, 3}, {5.865506918506537, 4.359892624805321}]}, {{
            5.865506918506537, 4.359892624805321}, 
            Offset[{0, -3}, {5.865506918506537, 4.359892624805321}]}, {{
            5.610676105835088, 4.359892624805321}, 
            Offset[{0, 3}, {5.610676105835088, 4.359892624805321}]}, {{
            5.610676105835088, 4.359892624805321}, 
            Offset[{0, -3}, {5.610676105835088, 4.359892624805321}]}}], {{{1.,
           0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{5.7461869859252115`, 4.479212557386647}, 
            Offset[{3, 0}, {5.7461869859252115`, 4.479212557386647}]}, {{
            5.7461869859252115`, 4.479212557386647}, 
            Offset[{-3, 0}, {5.7461869859252115`, 4.479212557386647}]}, {{
            5.7461869859252115`, 4.224381744715197}, 
            Offset[{3, 0}, {5.7461869859252115`, 4.224381744715197}]}, {{
            5.7461869859252115`, 4.224381744715197}, 
            Offset[{-3, 0}, {5.7461869859252115`, 4.224381744715197}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7aFotkv25m97u+uCN9ef4XK49G/NQW/5P/aPqy4e
vtXN5TA50Zj5QOYfe92pxxjPB3I5mMw4zPpi7h/70ENVNTcFuBxuMavInVL4
a/9Urr+vbTmnQ/q6g55TIv7aT0qL3ihRzOnwfIu59Pqrf+2rrQr0HkhyOqgK
/Jw3t/ef/RO2sH/JSzkcTL9xL2Hg/G9f+mbWFa5kDoetD/6c27vwv33zr30p
Zn/ZHXrW1Cr6OjM4rHqyNfbudHaHQ3uPz+xeDeQLm916acPuEJ6bvajJjdHh
8m/NJOFLbA5iUys3Kz9idFiY1j9ldiubg9GlgiUfbjE5CJi6p7/SBcpfF6iw
YWRxiJaTufPvMatDWpj6gRUnEXRfZYFZwANuByf/bzWf/Ngd4g3tt3oy8TrI
Md8pCD7F7iBheXbh2w5+B9bguctUeDgdzvfMF6peL+pQfTmmcn+xgMO0/18K
JP6IOUgVmm1sLxB0AADjM5wu
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.5646321136085337`, 2.5466510258847217`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{1.5646321136085337`, 5.865506918506537}, {2.5466510258847217`, 
   4.479212557386647}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {{{1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.003065458786462, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.090076835776092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
      2.995732273553991, 
       FormBox["20", TraditionalForm], {0.01, 0.}}, {3.6888794541139363`, 
       FormBox["40", TraditionalForm], {0.01, 0.}}, {4.0943445622221, 
       FormBox["60", TraditionalForm], {0.01, 0.}}, {4.382026634673881, 
       FormBox["80", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.5553480614894135`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.8066624897703196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.007333185232471, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.174387269895637, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.31748811353631, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.442651256490317, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.553876891600541, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.876760457272381*^9, 3.876760469272488*^9}},
 CellLabel->
  "Out[257]=",ExpressionUUID->"4aeb347d-9654-4314-85ae-d3917a90b20d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"Nc", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", "Nc", "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"Log", "[", "51", "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", "3.9", ",", "1000"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1000"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "400"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", "Purple"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Literature paschen curve\>\"", "}"}]}]}], "]"}], ",", 
   
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"bd1d", ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Mathematica 1D MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"javabd", ",", 
     RowBox[{"PlotStyle", "->", "Orange"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Java 1D MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Nc\>\"", ",", "\"\<Ni\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<1D Paschen Curve Monte Carlo vs Literature\>\""}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.872196709695106*^9, 3.8721967135917587`*^9}, {
   3.8767603140884047`*^9, 3.876760422662922*^9}, 3.87676045367133*^9, {
   3.876920058636838*^9, 3.876920059376574*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"8ec701a0-4981-423a-8f14-ebd32ba87eb0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$1359676#1"]& ]}}, {}}, {{{{
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{1.4206957878372228`, 5.338499156180869}, {
           1.4264761507527224`, 5.338499156180869}}], 
          
          LineBox[{{1.4264761507527224`, 5.338499156180869}, {
           1.4322232930082903`, 5.338499156180869}}]}, {
          
          LineBox[{{1.4264761507527224`, 5.33271879326537}, {
           1.4264761507527224`, 5.338499156180869}}], 
          
          LineBox[{{1.4264761507527224`, 5.338499156180869}, {
           1.4264761507527224`, 5.3442462984364365`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{1.8492419046414172`, 3.1616703510974213`}, {
           1.8523840910444898`, 3.1616703510974213`}}], 
          LineBox[{{1.8523840910444898`, 3.1616703510974213`}, {
           1.8555164350308058`, 3.1616703510974213`}}]}, {
          
          LineBox[{{1.8523840910444898`, 3.158276202739271}, {
           1.8523840910444898`, 3.1616703510974213`}}], 
          
          LineBox[{{1.8523840910444898`, 3.1616703510974213`}, {
           1.8523840910444898`, 3.1650530181706937`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{2.176114428940097, 2.8326249356838407`}, {
           2.17872110577166, 2.8326249356838407`}}], 
          
          LineBox[{{2.17872110577166, 2.8326249356838407`}, {
           2.1813210055010064`, 2.8326249356838407`}}]}, {
          
          LineBox[{{2.17872110577166, 2.830267833826459}, {2.17872110577166, 
           2.8326249356838407`}}], 
          
          LineBox[{{2.17872110577166, 2.8326249356838407`}, {2.17872110577166,
            2.8349764946745966`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{2.4569357528239704`, 2.7206373166076814`}, {
           2.4595888418037104`, 2.7206373166076814`}}], 
          
          LineBox[{{2.4595888418037104`, 2.7206373166076814`}, {
           2.4622349105235832`, 2.7206373166076814`}}]}, {
          
          LineBox[{{2.4595888418037104`, 2.718000531955378}, {
           2.4595888418037104`, 2.7206373166076814`}}], 
          
          LineBox[{{2.4595888418037104`, 2.7206373166076814`}, {
           2.4595888418037104`, 2.7232671669070703`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{2.7080502011022105`, 2.6919208191723265`}, {
           2.711377991194885, 2.6919208191723265`}}], 
          
          LineBox[{{2.711377991194885, 2.6919208191723265`}, {
           2.714694743820879, 2.6919208191723265`}}]}, {
          
          LineBox[{{2.711377991194885, 2.6892071133007303`}, {
           2.711377991194885, 2.6919208191723265`}}], 
          
          LineBox[{{2.711377991194885, 2.6919208191723265`}, {
           2.711377991194885, 2.6946271807700692`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{2.942858783946923, 2.7073833121145063`}, {
           2.9465420293632194`, 2.7073833121145063`}}], 
          
          LineBox[{{2.9465420293632194`, 2.7073833121145063`}, {
           2.950211758252182, 2.7073833121145063`}}]}, {
          
          LineBox[{{2.9465420293632194`, 2.7040421797046714`}, {
           2.9465420293632194`, 2.7073833121145063`}}], 
          
          LineBox[{{2.9465420293632194`, 2.7073833121145063`}, {
           2.9465420293632194`, 2.7107133185216936`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{3.177220149599368, 2.7631695003232895`}, {
           3.18179681662678, 2.7631695003232895`}}], 
          
          LineBox[{{3.18179681662678, 2.7631695003232895`}, {
           3.1863526331626404`, 2.7631695003232895`}}]}, {
          
          LineBox[{{3.18179681662678, 2.758743315417728}, {3.18179681662678, 
           2.7631695003232895`}}], 
          
          LineBox[{{3.18179681662678, 2.7631695003232895`}, {3.18179681662678,
            2.7675761804162367`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{3.3897993367097863`, 2.8243506567983707`}, {
           3.3951793093365925`, 2.8243506567983707`}}], 
          
          LineBox[{{3.3951793093365925`, 2.8243506567983707`}, {
           3.4005304926744517`, 2.8243506567983707`}}]}, {
          
          LineBox[{{3.3951793093365925`, 2.818995095053937}, {
           3.3951793093365925`, 2.8243506567983707`}}], 
          
          LineBox[{{3.3951793093365925`, 2.8243506567983707`}, {
           3.3951793093365925`, 2.8296776892239084`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{3.6171148878846258`, 2.920469789053444}, {
           3.6238074573702215`, 2.920469789053444}}], 
          LineBox[{{3.6238074573702215`, 2.920469789053444}, {
           3.6304555339762192`, 2.920469789053444}}]}, {
          
          LineBox[{{3.6238074573702215`, 2.9139797716817317`}, {
           3.6238074573702215`, 2.920469789053444}}], 
          
          LineBox[{{3.6238074573702215`, 2.920469789053444}, {
           3.6238074573702215`, 2.9269179575536315`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{3.843744164674852, 3.0325462466767075`}, {
           3.8522730010223722`, 3.0325462466767075`}}], 
          
          LineBox[{{3.8522730010223722`, 3.0325462466767075`}, {
           3.860729711040596, 3.0325462466767075`}}]}, {
          
          LineBox[{{3.8522730010223722`, 3.0243197304059035`}, {
           3.8522730010223722`, 3.0325462466767075`}}], 
          
          LineBox[{{3.8522730010223722`, 3.0325462466767075`}, {
           3.8522730010223722`, 3.040705639196722}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{4.069026754237811, 3.1548704948922883`}, {
           4.079230924412053, 3.1548704948922883`}}], 
          
          LineBox[{{4.079230924412053, 3.1548704948922883`}, {
           4.089332020398556, 3.1548704948922883`}}]}, {
          
          LineBox[{{4.079230924412053, 3.145444546782318}, {4.079230924412053,
            3.1548704948922883`}}], 
          
          LineBox[{{4.079230924412053, 3.1548704948922883`}, {
           4.079230924412053, 3.1642084235258925`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{4.251348311031766, 3.2445435716167785`}, {
           4.2626798770413155`, 3.2445435716167785`}}], 
          
          LineBox[{{4.2626798770413155`, 3.2445435716167785`}, {
           4.273884476054178, 3.2445435716167785`}}]}, {
          
          LineBox[{{4.2626798770413155`, 3.233173129569025}, {
           4.2626798770413155`, 3.2445435716167785`}}], 
          
          LineBox[{{4.2626798770413155`, 3.2445435716167785`}, {
           4.2626798770413155`, 3.2557861788882976`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{4.51085950651685, 3.417726683613366}, {4.523960130562548, 
           3.417726683613366}}], 
          
          LineBox[{{4.523960130562548, 3.417726683613366}, {4.536891345234797,
            3.417726683613366}}]}, {
          
          LineBox[{{4.523960130562548, 3.40452517175483}, {4.523960130562548, 
           3.417726683613366}}], 
          
          LineBox[{{4.523960130562548, 3.417726683613366}, {4.523960130562548,
            3.4307561839036995`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{4.763881877142912, 3.594568774642695}, {4.779963476361254,
            3.594568774642695}}], 
          
          LineBox[{{4.779963476361254, 3.594568774642695}, {
           4.7957905455967405`, 3.594568774642695}}]}, {
          
          LineBox[{{4.779963476361254, 3.577947893406655}, {4.779963476361254,
            3.594568774642695}}], 
          
          LineBox[{{4.779963476361254, 3.594568774642695}, {4.779963476361254,
            3.610917912644225}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{4.958639998977875, 3.7184382563554808`}, {
           4.977423159890142, 3.7184382563554808`}}], 
          
          LineBox[{{4.977423159890142, 3.7184382563554808`}, {
           4.995860008514101, 3.7184382563554808`}}]}, {
          
          LineBox[{{4.977423159890142, 3.6988297849671046`}, {
           4.977423159890142, 3.7184382563554808`}}], 
          
          LineBox[{{4.977423159890142, 3.7184382563554808`}, {
           4.977423159890142, 3.7376696182833684`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{5.220355825078325, 3.914021008090819}, {5.241747015059643,
            3.914021008090819}}], 
          
          LineBox[{{5.241747015059643, 3.914021008090819}, {5.262690188904886,
            3.914021008090819}}]}, {
          
          LineBox[{{5.241747015059643, 3.8918202981106265`}, {
           5.241747015059643, 3.914021008090819}}], 
          
          LineBox[{{5.241747015059643, 3.914021008090819}, {5.241747015059643,
            3.9357395320454622`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{5.429345628954441, 4.065602093356446}, {5.455321115357702,
            4.065602093356446}}], 
          
          LineBox[{{5.455321115357702, 4.065602093356446}, {5.480638923341991,
            4.065602093356446}}]}, {
          
          LineBox[{{5.455321115357702, 4.039536325727105}, {5.455321115357702,
            4.065602093356446}}], 
          
          LineBox[{{5.455321115357702, 4.065602093356446}, {5.455321115357702,
            4.0910056609565855`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{5.648974238161206, 4.223909766576744}, {5.676753802268282,
            4.223909766576744}}], 
          
          LineBox[{{5.676753802268282, 4.223909766576744}, {5.703782474656201,
            4.223909766576744}}]}, {
          
          LineBox[{{5.676753802268282, 4.195697056482388}, {5.676753802268282,
            4.223909766576744}}], 
          
          LineBox[{{5.676753802268282, 4.223909766576744}, {5.676753802268282,
            4.251348311031765}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{5.87493073085203, 4.401829261970061}, {5.910796644040527, 
           4.401829261970061}}], 
          
          LineBox[{{5.910796644040527, 4.401829261970061}, {5.945420608606575,
            4.401829261970061}}]}, {
          
          LineBox[{{5.910796644040527, 4.366912996863833}, {5.910796644040527,
            4.401829261970061}}], 
          
          LineBox[{{5.910796644040527, 4.401829261970061}, {5.910796644040527,
            4.435567401601911}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          LineBox[{{6.124683390894205, 4.605170185988092}, {6.16541785423142, 
           4.605170185988092}}], 
          
          LineBox[{{6.16541785423142, 4.605170185988092}, {6.20455776256869, 
           4.605170185988092}}]}, {
          
          LineBox[{{6.16541785423142, 4.564348191467837}, {6.16541785423142, 
           4.605170185988092}}], 
          
          LineBox[{{6.16541785423142, 4.605170185988092}, {6.16541785423142, 
           4.644390899141373}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], {
          
          LineBox[{{6.331501849893691, 4.770684624465665}, {6.376726947898627,
            4.770684624465665}}], 
          
          LineBox[{{6.376726947898627, 4.770684624465665}, {6.419994928147142,
            4.770684624465665}}]}, {
          
          LineBox[{{6.376726947898627, 4.727387818712341}, {6.376726947898627,
            4.770684624465665}}], 
          
          LineBox[{{6.376726947898627, 4.770684624465665}, {6.376726947898627,
            4.812184355372418}}]}}}, {{Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{1.4322232930082903`, 5.338499156180869}, 
             Offset[{0, 3}, {1.4322232930082903`, 5.338499156180869}]}, {{
             1.4322232930082903`, 5.338499156180869}, 
             Offset[{0, -3}, {1.4322232930082903`, 5.338499156180869}]}, {{
             1.4206957878372228`, 5.338499156180869}, 
             Offset[{0, 3}, {1.4206957878372228`, 5.338499156180869}]}, {{
             1.4206957878372228`, 5.338499156180869}, 
             Offset[{0, -3}, {1.4206957878372228`, 5.338499156180869}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.4264761507527224`, 5.3442462984364365`}, 
             Offset[{3, 0}, {1.4264761507527224`, 5.3442462984364365`}]}, {{
             1.4264761507527224`, 5.3442462984364365`}, 
             Offset[{-3, 0}, {1.4264761507527224`, 5.3442462984364365`}]}, {{
             1.4264761507527224`, 5.33271879326537}, 
             Offset[{3, 0}, {1.4264761507527224`, 5.33271879326537}]}, {{
             1.4264761507527224`, 5.33271879326537}, 
             Offset[{-3, 0}, {1.4264761507527224`, 5.33271879326537}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{1.8555164350308058`, 3.1616703510974213`}, 
             Offset[{0, 3}, {1.8555164350308058`, 3.1616703510974213`}]}, {{
             1.8555164350308058`, 3.1616703510974213`}, 
             Offset[{0, -3}, {1.8555164350308058`, 3.1616703510974213`}]}, {{
             1.8492419046414172`, 3.1616703510974213`}, 
             Offset[{0, 3}, {1.8492419046414172`, 3.1616703510974213`}]}, {{
             1.8492419046414172`, 3.1616703510974213`}, 
             
             Offset[{0, -3}, {1.8492419046414172`, 
              3.1616703510974213`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8523840910444898`, 3.1650530181706937`}, 
             Offset[{3, 0}, {1.8523840910444898`, 3.1650530181706937`}]}, {{
             1.8523840910444898`, 3.1650530181706937`}, 
             Offset[{-3, 0}, {1.8523840910444898`, 3.1650530181706937`}]}, {{
             1.8523840910444898`, 3.158276202739271}, 
             Offset[{3, 0}, {1.8523840910444898`, 3.158276202739271}]}, {{
             1.8523840910444898`, 3.158276202739271}, 
             Offset[{-3, 0}, {1.8523840910444898`, 3.158276202739271}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{2.1813210055010064`, 2.8326249356838407`}, 
             Offset[{0, 3}, {2.1813210055010064`, 2.8326249356838407`}]}, {{
             2.1813210055010064`, 2.8326249356838407`}, 
             Offset[{0, -3}, {2.1813210055010064`, 2.8326249356838407`}]}, {{
             2.176114428940097, 2.8326249356838407`}, 
             Offset[{0, 3}, {2.176114428940097, 2.8326249356838407`}]}, {{
             2.176114428940097, 2.8326249356838407`}, 
             Offset[{0, -3}, {2.176114428940097, 2.8326249356838407`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.17872110577166, 2.8349764946745966`}, 
             Offset[{3, 0}, {2.17872110577166, 2.8349764946745966`}]}, {{
             2.17872110577166, 2.8349764946745966`}, 
             Offset[{-3, 0}, {2.17872110577166, 2.8349764946745966`}]}, {{
             2.17872110577166, 2.830267833826459}, 
             Offset[{3, 0}, {2.17872110577166, 2.830267833826459}]}, {{
             2.17872110577166, 2.830267833826459}, 
             Offset[{-3, 0}, {2.17872110577166, 2.830267833826459}]}}], {{{1.,
            0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{2.4622349105235832`, 2.7206373166076814`}, 
             Offset[{0, 3}, {2.4622349105235832`, 2.7206373166076814`}]}, {{
             2.4622349105235832`, 2.7206373166076814`}, 
             Offset[{0, -3}, {2.4622349105235832`, 2.7206373166076814`}]}, {{
             2.4569357528239704`, 2.7206373166076814`}, 
             Offset[{0, 3}, {2.4569357528239704`, 2.7206373166076814`}]}, {{
             2.4569357528239704`, 2.7206373166076814`}, 
             
             Offset[{0, -3}, {2.4569357528239704`, 
              2.7206373166076814`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.4595888418037104`, 2.7232671669070703`}, 
             Offset[{3, 0}, {2.4595888418037104`, 2.7232671669070703`}]}, {{
             2.4595888418037104`, 2.7232671669070703`}, 
             Offset[{-3, 0}, {2.4595888418037104`, 2.7232671669070703`}]}, {{
             2.4595888418037104`, 2.718000531955378}, 
             Offset[{3, 0}, {2.4595888418037104`, 2.718000531955378}]}, {{
             2.4595888418037104`, 2.718000531955378}, 
             Offset[{-3, 0}, {2.4595888418037104`, 2.718000531955378}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{2.714694743820879, 2.6919208191723265`}, 
             Offset[{0, 3}, {2.714694743820879, 2.6919208191723265`}]}, {{
             2.714694743820879, 2.6919208191723265`}, 
             Offset[{0, -3}, {2.714694743820879, 2.6919208191723265`}]}, {{
             2.7080502011022105`, 2.6919208191723265`}, 
             Offset[{0, 3}, {2.7080502011022105`, 2.6919208191723265`}]}, {{
             2.7080502011022105`, 2.6919208191723265`}, 
             
             Offset[{0, -3}, {2.7080502011022105`, 
              2.6919208191723265`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.711377991194885, 2.6946271807700692`}, 
             Offset[{3, 0}, {2.711377991194885, 2.6946271807700692`}]}, {{
             2.711377991194885, 2.6946271807700692`}, 
             Offset[{-3, 0}, {2.711377991194885, 2.6946271807700692`}]}, {{
             2.711377991194885, 2.6892071133007303`}, 
             Offset[{3, 0}, {2.711377991194885, 2.6892071133007303`}]}, {{
             2.711377991194885, 2.6892071133007303`}, 
             Offset[{-3, 0}, {2.711377991194885, 2.6892071133007303`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{2.950211758252182, 2.7073833121145063`}, 
             Offset[{0, 3}, {2.950211758252182, 2.7073833121145063`}]}, {{
             2.950211758252182, 2.7073833121145063`}, 
             Offset[{0, -3}, {2.950211758252182, 2.7073833121145063`}]}, {{
             2.942858783946923, 2.7073833121145063`}, 
             Offset[{0, 3}, {2.942858783946923, 2.7073833121145063`}]}, {{
             2.942858783946923, 2.7073833121145063`}, 
             Offset[{0, -3}, {2.942858783946923, 2.7073833121145063`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.9465420293632194`, 2.7107133185216936`}, 
             Offset[{3, 0}, {2.9465420293632194`, 2.7107133185216936`}]}, {{
             2.9465420293632194`, 2.7107133185216936`}, 
             Offset[{-3, 0}, {2.9465420293632194`, 2.7107133185216936`}]}, {{
             2.9465420293632194`, 2.7040421797046714`}, 
             Offset[{3, 0}, {2.9465420293632194`, 2.7040421797046714`}]}, {{
             2.9465420293632194`, 2.7040421797046714`}, 
             
             Offset[{-3, 0}, {2.9465420293632194`, 
              2.7040421797046714`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{3.1863526331626404`, 2.7631695003232895`}, 
             Offset[{0, 3}, {3.1863526331626404`, 2.7631695003232895`}]}, {{
             3.1863526331626404`, 2.7631695003232895`}, 
             Offset[{0, -3}, {3.1863526331626404`, 2.7631695003232895`}]}, {{
             3.177220149599368, 2.7631695003232895`}, 
             Offset[{0, 3}, {3.177220149599368, 2.7631695003232895`}]}, {{
             3.177220149599368, 2.7631695003232895`}, 
             Offset[{0, -3}, {3.177220149599368, 2.7631695003232895`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.18179681662678, 2.7675761804162367`}, 
             Offset[{3, 0}, {3.18179681662678, 2.7675761804162367`}]}, {{
             3.18179681662678, 2.7675761804162367`}, 
             Offset[{-3, 0}, {3.18179681662678, 2.7675761804162367`}]}, {{
             3.18179681662678, 2.758743315417728}, 
             Offset[{3, 0}, {3.18179681662678, 2.758743315417728}]}, {{
             3.18179681662678, 2.758743315417728}, 
             Offset[{-3, 0}, {3.18179681662678, 2.758743315417728}]}}], {{{1.,
            0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{3.4005304926744517`, 2.8243506567983707`}, 
             Offset[{0, 3}, {3.4005304926744517`, 2.8243506567983707`}]}, {{
             3.4005304926744517`, 2.8243506567983707`}, 
             Offset[{0, -3}, {3.4005304926744517`, 2.8243506567983707`}]}, {{
             3.3897993367097863`, 2.8243506567983707`}, 
             Offset[{0, 3}, {3.3897993367097863`, 2.8243506567983707`}]}, {{
             3.3897993367097863`, 2.8243506567983707`}, 
             
             Offset[{0, -3}, {3.3897993367097863`, 
              2.8243506567983707`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.3951793093365925`, 2.8296776892239084`}, 
             Offset[{3, 0}, {3.3951793093365925`, 2.8296776892239084`}]}, {{
             3.3951793093365925`, 2.8296776892239084`}, 
             Offset[{-3, 0}, {3.3951793093365925`, 2.8296776892239084`}]}, {{
             3.3951793093365925`, 2.818995095053937}, 
             Offset[{3, 0}, {3.3951793093365925`, 2.818995095053937}]}, {{
             3.3951793093365925`, 2.818995095053937}, 
             Offset[{-3, 0}, {3.3951793093365925`, 2.818995095053937}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{3.6304555339762192`, 2.920469789053444}, 
             Offset[{0, 3}, {3.6304555339762192`, 2.920469789053444}]}, {{
             3.6304555339762192`, 2.920469789053444}, 
             Offset[{0, -3}, {3.6304555339762192`, 2.920469789053444}]}, {{
             3.6171148878846258`, 2.920469789053444}, 
             Offset[{0, 3}, {3.6171148878846258`, 2.920469789053444}]}, {{
             3.6171148878846258`, 2.920469789053444}, 
             Offset[{0, -3}, {3.6171148878846258`, 2.920469789053444}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.6238074573702215`, 2.9269179575536315`}, 
             Offset[{3, 0}, {3.6238074573702215`, 2.9269179575536315`}]}, {{
             3.6238074573702215`, 2.9269179575536315`}, 
             Offset[{-3, 0}, {3.6238074573702215`, 2.9269179575536315`}]}, {{
             3.6238074573702215`, 2.9139797716817317`}, 
             Offset[{3, 0}, {3.6238074573702215`, 2.9139797716817317`}]}, {{
             3.6238074573702215`, 2.9139797716817317`}, 
             
             Offset[{-3, 0}, {3.6238074573702215`, 
              2.9139797716817317`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{3.860729711040596, 3.0325462466767075`}, 
             Offset[{0, 3}, {3.860729711040596, 3.0325462466767075`}]}, {{
             3.860729711040596, 3.0325462466767075`}, 
             Offset[{0, -3}, {3.860729711040596, 3.0325462466767075`}]}, {{
             3.843744164674852, 3.0325462466767075`}, 
             Offset[{0, 3}, {3.843744164674852, 3.0325462466767075`}]}, {{
             3.843744164674852, 3.0325462466767075`}, 
             Offset[{0, -3}, {3.843744164674852, 3.0325462466767075`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.8522730010223722`, 3.040705639196722}, 
             Offset[{3, 0}, {3.8522730010223722`, 3.040705639196722}]}, {{
             3.8522730010223722`, 3.040705639196722}, 
             Offset[{-3, 0}, {3.8522730010223722`, 3.040705639196722}]}, {{
             3.8522730010223722`, 3.0243197304059035`}, 
             Offset[{3, 0}, {3.8522730010223722`, 3.0243197304059035`}]}, {{
             3.8522730010223722`, 3.0243197304059035`}, 
             
             Offset[{-3, 0}, {3.8522730010223722`, 
              3.0243197304059035`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{4.089332020398556, 3.1548704948922883`}, 
             Offset[{0, 3}, {4.089332020398556, 3.1548704948922883`}]}, {{
             4.089332020398556, 3.1548704948922883`}, 
             Offset[{0, -3}, {4.089332020398556, 3.1548704948922883`}]}, {{
             4.069026754237811, 3.1548704948922883`}, 
             Offset[{0, 3}, {4.069026754237811, 3.1548704948922883`}]}, {{
             4.069026754237811, 3.1548704948922883`}, 
             Offset[{0, -3}, {4.069026754237811, 3.1548704948922883`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.079230924412053, 3.1642084235258925`}, 
             Offset[{3, 0}, {4.079230924412053, 3.1642084235258925`}]}, {{
             4.079230924412053, 3.1642084235258925`}, 
             Offset[{-3, 0}, {4.079230924412053, 3.1642084235258925`}]}, {{
             4.079230924412053, 3.145444546782318}, 
             Offset[{3, 0}, {4.079230924412053, 3.145444546782318}]}, {{
             4.079230924412053, 3.145444546782318}, 
             Offset[{-3, 0}, {4.079230924412053, 3.145444546782318}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{4.273884476054178, 3.2445435716167785`}, 
             Offset[{0, 3}, {4.273884476054178, 3.2445435716167785`}]}, {{
             4.273884476054178, 3.2445435716167785`}, 
             Offset[{0, -3}, {4.273884476054178, 3.2445435716167785`}]}, {{
             4.251348311031766, 3.2445435716167785`}, 
             Offset[{0, 3}, {4.251348311031766, 3.2445435716167785`}]}, {{
             4.251348311031766, 3.2445435716167785`}, 
             Offset[{0, -3}, {4.251348311031766, 3.2445435716167785`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.2626798770413155`, 3.2557861788882976`}, 
             Offset[{3, 0}, {4.2626798770413155`, 3.2557861788882976`}]}, {{
             4.2626798770413155`, 3.2557861788882976`}, 
             Offset[{-3, 0}, {4.2626798770413155`, 3.2557861788882976`}]}, {{
             4.2626798770413155`, 3.233173129569025}, 
             Offset[{3, 0}, {4.2626798770413155`, 3.233173129569025}]}, {{
             4.2626798770413155`, 3.233173129569025}, 
             Offset[{-3, 0}, {4.2626798770413155`, 3.233173129569025}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{4.536891345234797, 3.417726683613366}, 
             Offset[{0, 3}, {4.536891345234797, 3.417726683613366}]}, {{
             4.536891345234797, 3.417726683613366}, 
             Offset[{0, -3}, {4.536891345234797, 3.417726683613366}]}, {{
             4.51085950651685, 3.417726683613366}, 
             Offset[{0, 3}, {4.51085950651685, 3.417726683613366}]}, {{
             4.51085950651685, 3.417726683613366}, 
             Offset[{0, -3}, {4.51085950651685, 3.417726683613366}]}}], {{{1.,
            0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.523960130562548, 3.4307561839036995`}, 
             Offset[{3, 0}, {4.523960130562548, 3.4307561839036995`}]}, {{
             4.523960130562548, 3.4307561839036995`}, 
             Offset[{-3, 0}, {4.523960130562548, 3.4307561839036995`}]}, {{
             4.523960130562548, 3.40452517175483}, 
             Offset[{3, 0}, {4.523960130562548, 3.40452517175483}]}, {{
             4.523960130562548, 3.40452517175483}, 
             Offset[{-3, 0}, {4.523960130562548, 3.40452517175483}]}}], {{{1.,
            0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{4.7957905455967405`, 3.594568774642695}, 
             Offset[{0, 3}, {4.7957905455967405`, 3.594568774642695}]}, {{
             4.7957905455967405`, 3.594568774642695}, 
             Offset[{0, -3}, {4.7957905455967405`, 3.594568774642695}]}, {{
             4.763881877142912, 3.594568774642695}, 
             Offset[{0, 3}, {4.763881877142912, 3.594568774642695}]}, {{
             4.763881877142912, 3.594568774642695}, 
             Offset[{0, -3}, {4.763881877142912, 3.594568774642695}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.779963476361254, 3.610917912644225}, 
             Offset[{3, 0}, {4.779963476361254, 3.610917912644225}]}, {{
             4.779963476361254, 3.610917912644225}, 
             Offset[{-3, 0}, {4.779963476361254, 3.610917912644225}]}, {{
             4.779963476361254, 3.577947893406655}, 
             Offset[{3, 0}, {4.779963476361254, 3.577947893406655}]}, {{
             4.779963476361254, 3.577947893406655}, 
             Offset[{-3, 0}, {4.779963476361254, 3.577947893406655}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{4.995860008514101, 3.7184382563554808`}, 
             Offset[{0, 3}, {4.995860008514101, 3.7184382563554808`}]}, {{
             4.995860008514101, 3.7184382563554808`}, 
             Offset[{0, -3}, {4.995860008514101, 3.7184382563554808`}]}, {{
             4.958639998977875, 3.7184382563554808`}, 
             Offset[{0, 3}, {4.958639998977875, 3.7184382563554808`}]}, {{
             4.958639998977875, 3.7184382563554808`}, 
             Offset[{0, -3}, {4.958639998977875, 3.7184382563554808`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.977423159890142, 3.7376696182833684`}, 
             Offset[{3, 0}, {4.977423159890142, 3.7376696182833684`}]}, {{
             4.977423159890142, 3.7376696182833684`}, 
             Offset[{-3, 0}, {4.977423159890142, 3.7376696182833684`}]}, {{
             4.977423159890142, 3.6988297849671046`}, 
             Offset[{3, 0}, {4.977423159890142, 3.6988297849671046`}]}, {{
             4.977423159890142, 3.6988297849671046`}, 
             Offset[{-3, 0}, {4.977423159890142, 3.6988297849671046`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{5.262690188904886, 3.914021008090819}, 
             Offset[{0, 3}, {5.262690188904886, 3.914021008090819}]}, {{
             5.262690188904886, 3.914021008090819}, 
             Offset[{0, -3}, {5.262690188904886, 3.914021008090819}]}, {{
             5.220355825078325, 3.914021008090819}, 
             Offset[{0, 3}, {5.220355825078325, 3.914021008090819}]}, {{
             5.220355825078325, 3.914021008090819}, 
             Offset[{0, -3}, {5.220355825078325, 3.914021008090819}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.241747015059643, 3.9357395320454622`}, 
             Offset[{3, 0}, {5.241747015059643, 3.9357395320454622`}]}, {{
             5.241747015059643, 3.9357395320454622`}, 
             Offset[{-3, 0}, {5.241747015059643, 3.9357395320454622`}]}, {{
             5.241747015059643, 3.8918202981106265`}, 
             Offset[{3, 0}, {5.241747015059643, 3.8918202981106265`}]}, {{
             5.241747015059643, 3.8918202981106265`}, 
             Offset[{-3, 0}, {5.241747015059643, 3.8918202981106265`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{5.480638923341991, 4.065602093356446}, 
             Offset[{0, 3}, {5.480638923341991, 4.065602093356446}]}, {{
             5.480638923341991, 4.065602093356446}, 
             Offset[{0, -3}, {5.480638923341991, 4.065602093356446}]}, {{
             5.429345628954441, 4.065602093356446}, 
             Offset[{0, 3}, {5.429345628954441, 4.065602093356446}]}, {{
             5.429345628954441, 4.065602093356446}, 
             Offset[{0, -3}, {5.429345628954441, 4.065602093356446}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.455321115357702, 4.0910056609565855`}, 
             Offset[{3, 0}, {5.455321115357702, 4.0910056609565855`}]}, {{
             5.455321115357702, 4.0910056609565855`}, 
             Offset[{-3, 0}, {5.455321115357702, 4.0910056609565855`}]}, {{
             5.455321115357702, 4.039536325727105}, 
             Offset[{3, 0}, {5.455321115357702, 4.039536325727105}]}, {{
             5.455321115357702, 4.039536325727105}, 
             Offset[{-3, 0}, {5.455321115357702, 4.039536325727105}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{5.703782474656201, 4.223909766576744}, 
             Offset[{0, 3}, {5.703782474656201, 4.223909766576744}]}, {{
             5.703782474656201, 4.223909766576744}, 
             Offset[{0, -3}, {5.703782474656201, 4.223909766576744}]}, {{
             5.648974238161206, 4.223909766576744}, 
             Offset[{0, 3}, {5.648974238161206, 4.223909766576744}]}, {{
             5.648974238161206, 4.223909766576744}, 
             Offset[{0, -3}, {5.648974238161206, 4.223909766576744}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.676753802268282, 4.251348311031765}, 
             Offset[{3, 0}, {5.676753802268282, 4.251348311031765}]}, {{
             5.676753802268282, 4.251348311031765}, 
             Offset[{-3, 0}, {5.676753802268282, 4.251348311031765}]}, {{
             5.676753802268282, 4.195697056482388}, 
             Offset[{3, 0}, {5.676753802268282, 4.195697056482388}]}, {{
             5.676753802268282, 4.195697056482388}, 
             Offset[{-3, 0}, {5.676753802268282, 4.195697056482388}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{5.945420608606575, 4.401829261970061}, 
             Offset[{0, 3}, {5.945420608606575, 4.401829261970061}]}, {{
             5.945420608606575, 4.401829261970061}, 
             Offset[{0, -3}, {5.945420608606575, 4.401829261970061}]}, {{
             5.87493073085203, 4.401829261970061}, 
             Offset[{0, 3}, {5.87493073085203, 4.401829261970061}]}, {{
             5.87493073085203, 4.401829261970061}, 
             Offset[{0, -3}, {5.87493073085203, 4.401829261970061}]}}], {{{1.,
            0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.910796644040527, 4.435567401601911}, 
             Offset[{3, 0}, {5.910796644040527, 4.435567401601911}]}, {{
             5.910796644040527, 4.435567401601911}, 
             Offset[{-3, 0}, {5.910796644040527, 4.435567401601911}]}, {{
             5.910796644040527, 4.366912996863833}, 
             Offset[{3, 0}, {5.910796644040527, 4.366912996863833}]}, {{
             5.910796644040527, 4.366912996863833}, 
             Offset[{-3, 0}, {5.910796644040527, 4.366912996863833}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{6.20455776256869, 4.605170185988092}, 
             Offset[{0, 3}, {6.20455776256869, 4.605170185988092}]}, {{
             6.20455776256869, 4.605170185988092}, 
             Offset[{0, -3}, {6.20455776256869, 4.605170185988092}]}, {{
             6.124683390894205, 4.605170185988092}, 
             Offset[{0, 3}, {6.124683390894205, 4.605170185988092}]}, {{
             6.124683390894205, 4.605170185988092}, 
             Offset[{0, -3}, {6.124683390894205, 4.605170185988092}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.16541785423142, 4.644390899141373}, 
             Offset[{3, 0}, {6.16541785423142, 4.644390899141373}]}, {{
             6.16541785423142, 4.644390899141373}, 
             Offset[{-3, 0}, {6.16541785423142, 4.644390899141373}]}, {{
             6.16541785423142, 4.564348191467837}, 
             Offset[{3, 0}, {6.16541785423142, 4.564348191467837}]}, {{
             6.16541785423142, 4.564348191467837}, 
             Offset[{-3, 0}, {6.16541785423142, 4.564348191467837}]}}], {{{1.,
            0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798]], 
         GeometricTransformationBox[
          LineBox[{{{6.419994928147142, 4.770684624465665}, 
             Offset[{0, 3}, {6.419994928147142, 4.770684624465665}]}, {{
             6.419994928147142, 4.770684624465665}, 
             Offset[{0, -3}, {6.419994928147142, 4.770684624465665}]}, {{
             6.331501849893691, 4.770684624465665}, 
             Offset[{0, 3}, {6.331501849893691, 4.770684624465665}]}, {{
             6.331501849893691, 4.770684624465665}, 
             Offset[{0, -3}, {6.331501849893691, 4.770684624465665}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{6.376726947898627, 4.812184355372418}, 
             Offset[{3, 0}, {6.376726947898627, 4.812184355372418}]}, {{
             6.376726947898627, 4.812184355372418}, 
             Offset[{-3, 0}, {6.376726947898627, 4.812184355372418}]}, {{
             6.376726947898627, 4.727387818712341}, 
             Offset[{3, 0}, {6.376726947898627, 4.727387818712341}]}, {{
             6.376726947898627, 4.727387818712341}, 
             Offset[{-3, 0}, {6.376726947898627, 4.727387818712341}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAATBwAqNjS9j/rFNaFn1oVQBerKoBd
o/0/8pE10xlLCUBlJ8NUBW4BQATFJEM3qQZARjop6jytA0CG21h/3cMFQKw1
uvHmsAVAJSJOyA2JBUBqPKOghJIHQMsk+pS4qAVAcm6v41F0CUCni2mc+BoG
QJRADcVTKQtAuxQ7KEWYBkCFP6PDjv0MQEWGx0MfXQdAKT3VgXTRDkAMrEib
p0IIQPm5VOkhURBA9Wv1vSw9CUDJ1iT0+wwRQCtUlELT9AlANrIkAYkYEkCe
SWYWgVcLQCkv3L6uHhNAX4ESRq3BDEAWU+id4egTQLrveY5cvw1A3liOh4z3
FEAt2ww/6k8PQOyOzrI/0hVAcA/2MS1DEEBivuDy/rQWQPbOEppI5RBArNcd
4KekF0Ds8koheZsRQM9kSExjqRhAFlW1u7FrEkBq/IK1xIEZQLdwplkuFRNA
QGaPyA==
          "]]}}}, {{}, {}}}, {{{{Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.7383867392124894`, 3.349944778305967}, {
           1.7405068658718665`, 3.349944778305967}}], 
          
          LineBox[{{1.7405068658718665`, 3.349944778305967}, {
           1.7426225071021928`, 3.349944778305967}}]}, {
          
          LineBox[{{1.7405068658718665`, 3.3478246516465897`}, {
           1.7405068658718665`, 3.349944778305967}}], 
          
          LineBox[{{1.7405068658718665`, 3.349944778305967}, {
           1.7405068658718665`, 3.3520604195362935`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.756238048387379, 3.3182883547118407`}, {
           1.7576406064471723`, 3.3182883547118407`}}], 
          
          LineBox[{{1.7576406064471723`, 3.3182883547118407`}, {
           1.759041200092738, 3.3182883547118407`}}]}, {
          
          LineBox[{{1.7576406064471723`, 3.3168857966520475`}, {
           1.7576406064471723`, 3.3182883547118407`}}], 
          
          LineBox[{{1.7576406064471723`, 3.3182883547118407`}, {
           1.7576406064471723`, 3.319688948357406}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          LineBox[{{1.7726289552657495`, 3.2899456156470905`}, {
           1.775817883017315, 3.2899456156470905`}}], 
          
          LineBox[{{1.775817883017315, 3.2899456156470905`}, {
           1.778996673826091, 3.2899456156470905`}}]}, {
          
          LineBox[{{1.775817883017315, 3.286756687895525}, {1.775817883017315,
            3.2899456156470905`}}], 
          
          LineBox[{{1.775817883017315, 3.2899456156470905`}, {
           1.775817883017315, 3.2931244064558665`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.7847614144874286`, 3.2582273220980746`}, {
           1.788551352039133, 3.2582273220980746`}}], 
          
          LineBox[{{1.788551352039133, 3.2582273220980746`}, {
           1.7923269801789057`, 3.2582273220980746`}}]}, {
          
          LineBox[{{1.788551352039133, 3.2544373845463705`}, {
           1.788551352039133, 3.2582273220980746`}}], 
          
          LineBox[{{1.788551352039133, 3.2582273220980746`}, {
           1.788551352039133, 3.2620029502378474`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.8176170799519487`, 3.2067996156146017`}, {
           1.820505254494711, 3.2067996156146017`}}], 
          
          LineBox[{{1.820505254494711, 3.2067996156146017`}, {
           1.8233851115020128`, 3.2067996156146017`}}]}, {
          
          LineBox[{{1.820505254494711, 3.2039114410718397`}, {
           1.820505254494711, 3.2067996156146017`}}], 
          
          LineBox[{{1.820505254494711, 3.2067996156146017`}, {
           1.820505254494711, 3.209679472621904}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.8320555116835389`, 3.1811994415300626`}, {
           1.8341257935634532`, 3.1811994415300626`}}], 
          
          LineBox[{{1.8341257935634532`, 3.1811994415300626`}, {
           1.8361917982298184`, 3.1811994415300626`}}]}, {
          
          LineBox[{{1.8341257935634532`, 3.1791291596501483`}, {
           1.8341257935634532`, 3.1811994415300626`}}], 
          LineBox[{{1.8341257935634532`, 3.1811994415300626`}, {
           1.8341257935634532`, 3.183265446196428}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.8602987833061444`, 3.137634623336735}, {
           1.8646689475238476`, 3.137634623336735}}], 
          
          LineBox[{{1.8646689475238476`, 3.137634623336735}, {
           1.8690200964759627`, 3.137634623336735}}]}, {
          
          LineBox[{{1.8646689475238476`, 3.1332644591190317`}, {
           1.8646689475238476`, 3.137634623336735}}], 
          
          LineBox[{{1.8646689475238476`, 3.137634623336735}, {
           1.8646689475238476`, 3.14198577228885}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.9087803448159104`, 3.080757128715833}, {
           1.9095741472128875`, 3.080757128715833}}], 
          
          LineBox[{{1.9095741472128875`, 3.080757128715833}, {
           1.9103673199873819`, 3.080757128715833}}]}, {
          
          LineBox[{{1.9095741472128875`, 3.0799633263188557`}, {
           1.9095741472128875`, 3.080757128715833}}], 
          
          LineBox[{{1.9095741472128875`, 3.080757128715833}, {
           1.9095741472128875`, 3.0815503014903274`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.9387616157338674`, 3.0483605012682866`}, {
           1.9396978767466753`, 3.0483605012682866`}}], 
          
          LineBox[{{1.9396978767466753`, 3.0483605012682866`}, {
           1.9406332619946793`, 3.0483605012682866`}}]}, {
          
          LineBox[{{1.9396978767466753`, 3.047424240255479}, {
           1.9396978767466753`, 3.0483605012682866`}}], 
          
          LineBox[{{1.9396978767466753`, 3.0483605012682866`}, {
           1.9396978767466753`, 3.0492958865162905`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{1.974766017802669, 2.9986389036924392`}, {
           1.976987656160458, 2.9986389036924392`}}], 
          
          LineBox[{{1.976987656160458, 2.9986389036924392`}, {
           1.9792043697802202`, 2.9986389036924392`}}]}, {
          
          LineBox[{{1.976987656160458, 2.9964172653346504`}, {
           1.976987656160458, 2.9986389036924392`}}], 
          
          LineBox[{{1.976987656160458, 2.9986389036924392`}, {
           1.976987656160458, 3.0008556173122014`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{2.031515189686909, 2.9491526909956365`}, {
           2.0328619591214814`, 2.9491526909956365`}}], 
          
          LineBox[{{2.0328619591214814`, 2.9491526909956365`}, {
           2.034206917207339, 2.9491526909956365`}}]}, {
          
          LineBox[{{2.0328619591214814`, 2.947805921561064}, {
           2.0328619591214814`, 2.9491526909956365`}}], 
          
          LineBox[{{2.0328619591214814`, 2.9491526909956365`}, {
           2.0328619591214814`, 2.9504976490814943`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{2.0833017524769883`, 2.904742913031858}, {
           2.0837623609620275`, 2.904742913031858}}], 
          
          LineBox[{{2.0837623609620275`, 2.904742913031858}, {
           2.084222757384564, 2.904742913031858}}]}, {
          
          LineBox[{{2.0837623609620275`, 2.9042823045468187`}, {
           2.0837623609620275`, 2.904742913031858}}], 
          
          LineBox[{{2.0837623609620275`, 2.904742913031858}, {
           2.0837623609620275`, 2.9052033094543948`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{2.157374038442815, 2.852576033502808}, {
           2.1594288529428627`, 2.852576033502808}}], 
          
          LineBox[{{2.1594288529428627`, 2.852576033502808}, {
           2.16147945383698, 2.852576033502808}}]}, {
          
          LineBox[{{2.1594288529428627`, 2.8505212190027605`}, {
           2.1594288529428627`, 2.852576033502808}}], 
          
          LineBox[{{2.1594288529428627`, 2.852576033502808}, {
           2.1594288529428627`, 2.8546266343969253`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          LineBox[{{2.2347328271732207`, 2.8152381521475296`}, {
           2.235419656894588, 2.8152381521475296`}}], 
          
          LineBox[{{2.235419656894588, 2.8152381521475296`}, {
           2.2361060152046495`, 2.8152381521475296`}}]}, {
          
          LineBox[{{2.235419656894588, 2.8145513224261625`}, {
           2.235419656894588, 2.8152381521475296`}}], 
          
          LineBox[{{2.235419656894588, 2.8152381521475296`}, {
           2.235419656894588, 2.8159245104575916`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{2.355140158133094, 2.772419745312284}, {
           2.3569043013506183`, 2.772419745312284}}], 
          
          LineBox[{{2.3569043013506183`, 2.772419745312284}, {
           2.358665337846748, 2.772419745312284}}]}, {
          
          LineBox[{{2.3569043013506183`, 2.7706556020947595`}, {
           2.3569043013506183`, 2.772419745312284}}], 
          
          LineBox[{{2.3569043013506183`, 2.772419745312284}, {
           2.3569043013506183`, 2.7741807818084134`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{2.4866307657896938`, 2.736325950248824}, {
           2.500603616727754, 2.736325950248824}}], 
          
          LineBox[{{2.500603616727754, 2.736325950248824}, {
           2.5143839145291076`, 2.736325950248824}}]}, {
          
          LineBox[{{2.500603616727754, 2.7223530993107636`}, {
           2.500603616727754, 2.736325950248824}}], 
          
          LineBox[{{2.500603616727754, 2.736325950248824}, {2.500603616727754,
            2.7501062480501774`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{2.686908954209786, 2.723466397476659}, {2.723466397476659,
            2.723466397476659}}], 
          
          LineBox[{{2.723466397476659, 2.723466397476659}, {
           2.7587343944141853`, 2.723466397476659}}]}, {
          
          LineBox[{{2.723466397476659, 2.686908954209786}, {2.723466397476659,
            2.723466397476659}}], 
          
          LineBox[{{2.723466397476659, 2.723466397476659}, {2.723466397476659,
            2.7587343944141853`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{3.3696348689796043`, 2.9135484469096875`}, {
           3.4845279934954254`, 2.9135484469096875`}}], 
          
          LineBox[{{3.4845279934954254`, 2.9135484469096875`}, {
           3.5875705519976817`, 2.9135484469096875`}}]}, {
          
          LineBox[{{3.4845279934954254`, 2.7986553223938664`}, {
           3.4845279934954254`, 2.9135484469096875`}}], 
          
          LineBox[{{3.4845279934954254`, 2.9135484469096875`}, {
           3.4845279934954254`, 3.016591005411944}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{3.489757619406613, 2.9737919633047474`}, {
           3.6261171493444375`, 2.9737919633047474`}}], 
          
          LineBox[{{3.6261171493444375`, 2.9737919633047474`}, {
           3.7460943309125856`, 2.9737919633047474`}}]}, {
          
          LineBox[{{3.6261171493444375`, 2.8374324333669225`}, {
           3.6261171493444375`, 2.9737919633047474`}}], 
          
          LineBox[{{3.6261171493444375`, 2.9737919633047474`}, {
           3.6261171493444375`, 3.0937691448728954`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{3.7737875548311646`, 3.1309292809259}, {
           3.9418594971422287`, 3.1309292809259}}], 
          
          LineBox[{{3.9418594971422287`, 3.1309292809259}, {4.085706111817984,
            3.1309292809259}}]}, {
          
          LineBox[{{3.9418594971422287`, 2.962857338614836}, {
           3.9418594971422287`, 3.1309292809259}}], 
          
          LineBox[{{3.9418594971422287`, 3.1309292809259}, {
           3.9418594971422287`, 3.2747758956016555`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{5.257652298326407, 4.113035103121429}, {5.421367922771608,
            4.113035103121429}}], 
          
          LineBox[{{5.421367922771608, 4.113035103121429}, {5.562013459283799,
            4.113035103121429}}]}, {
          LineBox[{{5.421367922771608, 3.949319478676228}, {5.421367922771608,
            4.113035103121429}}], 
          
          LineBox[{{5.421367922771608, 4.113035103121429}, {5.421367922771608,
            4.25368063963362}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {
          
          LineBox[{{5.610676105835088, 4.359892624805321}, {
           5.7461869859252115`, 4.359892624805321}}], 
          
          LineBox[{{5.7461869859252115`, 4.359892624805321}, {
           5.865506918506537, 4.359892624805321}}]}, {
          
          LineBox[{{5.7461869859252115`, 4.224381744715197}, {
           5.7461869859252115`, 4.359892624805321}}], 
          
          LineBox[{{5.7461869859252115`, 4.359892624805321}, {
           5.7461869859252115`, 4.479212557386647}}]}}}, {{
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.7426225071021928`, 3.349944778305967}, 
             Offset[{0, 3}, {1.7426225071021928`, 3.349944778305967}]}, {{
             1.7426225071021928`, 3.349944778305967}, 
             Offset[{0, -3}, {1.7426225071021928`, 3.349944778305967}]}, {{
             1.7383867392124894`, 3.349944778305967}, 
             Offset[{0, 3}, {1.7383867392124894`, 3.349944778305967}]}, {{
             1.7383867392124894`, 3.349944778305967}, 
             Offset[{0, -3}, {1.7383867392124894`, 3.349944778305967}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.7405068658718665`, 3.3520604195362935`}, 
             Offset[{3, 0}, {1.7405068658718665`, 3.3520604195362935`}]}, {{
             1.7405068658718665`, 3.3520604195362935`}, 
             Offset[{-3, 0}, {1.7405068658718665`, 3.3520604195362935`}]}, {{
             1.7405068658718665`, 3.3478246516465897`}, 
             Offset[{3, 0}, {1.7405068658718665`, 3.3478246516465897`}]}, {{
             1.7405068658718665`, 3.3478246516465897`}, 
             
             Offset[{-3, 0}, {1.7405068658718665`, 
              3.3478246516465897`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.759041200092738, 3.3182883547118407`}, 
             Offset[{0, 3}, {1.759041200092738, 3.3182883547118407`}]}, {{
             1.759041200092738, 3.3182883547118407`}, 
             Offset[{0, -3}, {1.759041200092738, 3.3182883547118407`}]}, {{
             1.756238048387379, 3.3182883547118407`}, 
             Offset[{0, 3}, {1.756238048387379, 3.3182883547118407`}]}, {{
             1.756238048387379, 3.3182883547118407`}, 
             Offset[{0, -3}, {1.756238048387379, 3.3182883547118407`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.7576406064471723`, 3.319688948357406}, 
             Offset[{3, 0}, {1.7576406064471723`, 3.319688948357406}]}, {{
             1.7576406064471723`, 3.319688948357406}, 
             Offset[{-3, 0}, {1.7576406064471723`, 3.319688948357406}]}, {{
             1.7576406064471723`, 3.3168857966520475`}, 
             Offset[{3, 0}, {1.7576406064471723`, 3.3168857966520475`}]}, {{
             1.7576406064471723`, 3.3168857966520475`}, 
             
             Offset[{-3, 0}, {1.7576406064471723`, 
              3.3168857966520475`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.778996673826091, 3.2899456156470905`}, 
             Offset[{0, 3}, {1.778996673826091, 3.2899456156470905`}]}, {{
             1.778996673826091, 3.2899456156470905`}, 
             Offset[{0, -3}, {1.778996673826091, 3.2899456156470905`}]}, {{
             1.7726289552657495`, 3.2899456156470905`}, 
             Offset[{0, 3}, {1.7726289552657495`, 3.2899456156470905`}]}, {{
             1.7726289552657495`, 3.2899456156470905`}, 
             
             Offset[{0, -3}, {1.7726289552657495`, 
              3.2899456156470905`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.775817883017315, 3.2931244064558665`}, 
             Offset[{3, 0}, {1.775817883017315, 3.2931244064558665`}]}, {{
             1.775817883017315, 3.2931244064558665`}, 
             Offset[{-3, 0}, {1.775817883017315, 3.2931244064558665`}]}, {{
             1.775817883017315, 3.286756687895525}, 
             Offset[{3, 0}, {1.775817883017315, 3.286756687895525}]}, {{
             1.775817883017315, 3.286756687895525}, 
             Offset[{-3, 0}, {1.775817883017315, 3.286756687895525}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.7923269801789057`, 3.2582273220980746`}, 
             Offset[{0, 3}, {1.7923269801789057`, 3.2582273220980746`}]}, {{
             1.7923269801789057`, 3.2582273220980746`}, 
             Offset[{0, -3}, {1.7923269801789057`, 3.2582273220980746`}]}, {{
             1.7847614144874286`, 3.2582273220980746`}, 
             Offset[{0, 3}, {1.7847614144874286`, 3.2582273220980746`}]}, {{
             1.7847614144874286`, 3.2582273220980746`}, 
             
             Offset[{0, -3}, {1.7847614144874286`, 
              3.2582273220980746`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.788551352039133, 3.2620029502378474`}, 
             Offset[{3, 0}, {1.788551352039133, 3.2620029502378474`}]}, {{
             1.788551352039133, 3.2620029502378474`}, 
             Offset[{-3, 0}, {1.788551352039133, 3.2620029502378474`}]}, {{
             1.788551352039133, 3.2544373845463705`}, 
             Offset[{3, 0}, {1.788551352039133, 3.2544373845463705`}]}, {{
             1.788551352039133, 3.2544373845463705`}, 
             Offset[{-3, 0}, {1.788551352039133, 3.2544373845463705`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.8233851115020128`, 3.2067996156146017`}, 
             Offset[{0, 3}, {1.8233851115020128`, 3.2067996156146017`}]}, {{
             1.8233851115020128`, 3.2067996156146017`}, 
             Offset[{0, -3}, {1.8233851115020128`, 3.2067996156146017`}]}, {{
             1.8176170799519487`, 3.2067996156146017`}, 
             Offset[{0, 3}, {1.8176170799519487`, 3.2067996156146017`}]}, {{
             1.8176170799519487`, 3.2067996156146017`}, 
             
             Offset[{0, -3}, {1.8176170799519487`, 
              3.2067996156146017`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.820505254494711, 3.209679472621904}, 
             Offset[{3, 0}, {1.820505254494711, 3.209679472621904}]}, {{
             1.820505254494711, 3.209679472621904}, 
             Offset[{-3, 0}, {1.820505254494711, 3.209679472621904}]}, {{
             1.820505254494711, 3.2039114410718397`}, 
             Offset[{3, 0}, {1.820505254494711, 3.2039114410718397`}]}, {{
             1.820505254494711, 3.2039114410718397`}, 
             Offset[{-3, 0}, {1.820505254494711, 3.2039114410718397`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.8361917982298184`, 3.1811994415300626`}, 
             Offset[{0, 3}, {1.8361917982298184`, 3.1811994415300626`}]}, {{
             1.8361917982298184`, 3.1811994415300626`}, 
             Offset[{0, -3}, {1.8361917982298184`, 3.1811994415300626`}]}, {{
             1.8320555116835389`, 3.1811994415300626`}, 
             Offset[{0, 3}, {1.8320555116835389`, 3.1811994415300626`}]}, {{
             1.8320555116835389`, 3.1811994415300626`}, 
             
             Offset[{0, -3}, {1.8320555116835389`, 
              3.1811994415300626`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8341257935634532`, 3.183265446196428}, 
             Offset[{3, 0}, {1.8341257935634532`, 3.183265446196428}]}, {{
             1.8341257935634532`, 3.183265446196428}, 
             Offset[{-3, 0}, {1.8341257935634532`, 3.183265446196428}]}, {{
             1.8341257935634532`, 3.1791291596501483`}, 
             Offset[{3, 0}, {1.8341257935634532`, 3.1791291596501483`}]}, {{
             1.8341257935634532`, 3.1791291596501483`}, 
             
             Offset[{-3, 0}, {1.8341257935634532`, 
              3.1791291596501483`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.8690200964759627`, 3.137634623336735}, 
             Offset[{0, 3}, {1.8690200964759627`, 3.137634623336735}]}, {{
             1.8690200964759627`, 3.137634623336735}, 
             Offset[{0, -3}, {1.8690200964759627`, 3.137634623336735}]}, {{
             1.8602987833061444`, 3.137634623336735}, 
             Offset[{0, 3}, {1.8602987833061444`, 3.137634623336735}]}, {{
             1.8602987833061444`, 3.137634623336735}, 
             Offset[{0, -3}, {1.8602987833061444`, 3.137634623336735}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.8646689475238476`, 3.14198577228885}, 
             Offset[{3, 0}, {1.8646689475238476`, 3.14198577228885}]}, {{
             1.8646689475238476`, 3.14198577228885}, 
             Offset[{-3, 0}, {1.8646689475238476`, 3.14198577228885}]}, {{
             1.8646689475238476`, 3.1332644591190317`}, 
             Offset[{3, 0}, {1.8646689475238476`, 3.1332644591190317`}]}, {{
             1.8646689475238476`, 3.1332644591190317`}, 
             
             Offset[{-3, 0}, {1.8646689475238476`, 
              3.1332644591190317`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.9103673199873819`, 3.080757128715833}, 
             Offset[{0, 3}, {1.9103673199873819`, 3.080757128715833}]}, {{
             1.9103673199873819`, 3.080757128715833}, 
             Offset[{0, -3}, {1.9103673199873819`, 3.080757128715833}]}, {{
             1.9087803448159104`, 3.080757128715833}, 
             Offset[{0, 3}, {1.9087803448159104`, 3.080757128715833}]}, {{
             1.9087803448159104`, 3.080757128715833}, 
             Offset[{0, -3}, {1.9087803448159104`, 3.080757128715833}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.9095741472128875`, 3.0815503014903274`}, 
             Offset[{3, 0}, {1.9095741472128875`, 3.0815503014903274`}]}, {{
             1.9095741472128875`, 3.0815503014903274`}, 
             Offset[{-3, 0}, {1.9095741472128875`, 3.0815503014903274`}]}, {{
             1.9095741472128875`, 3.0799633263188557`}, 
             Offset[{3, 0}, {1.9095741472128875`, 3.0799633263188557`}]}, {{
             1.9095741472128875`, 3.0799633263188557`}, 
             
             Offset[{-3, 0}, {1.9095741472128875`, 
              3.0799633263188557`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.9406332619946793`, 3.0483605012682866`}, 
             Offset[{0, 3}, {1.9406332619946793`, 3.0483605012682866`}]}, {{
             1.9406332619946793`, 3.0483605012682866`}, 
             Offset[{0, -3}, {1.9406332619946793`, 3.0483605012682866`}]}, {{
             1.9387616157338674`, 3.0483605012682866`}, 
             Offset[{0, 3}, {1.9387616157338674`, 3.0483605012682866`}]}, {{
             1.9387616157338674`, 3.0483605012682866`}, 
             
             Offset[{0, -3}, {1.9387616157338674`, 
              3.0483605012682866`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.9396978767466753`, 3.0492958865162905`}, 
             Offset[{3, 0}, {1.9396978767466753`, 3.0492958865162905`}]}, {{
             1.9396978767466753`, 3.0492958865162905`}, 
             Offset[{-3, 0}, {1.9396978767466753`, 3.0492958865162905`}]}, {{
             1.9396978767466753`, 3.047424240255479}, 
             Offset[{3, 0}, {1.9396978767466753`, 3.047424240255479}]}, {{
             1.9396978767466753`, 3.047424240255479}, 
             Offset[{-3, 0}, {1.9396978767466753`, 3.047424240255479}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{1.9792043697802202`, 2.9986389036924392`}, 
             Offset[{0, 3}, {1.9792043697802202`, 2.9986389036924392`}]}, {{
             1.9792043697802202`, 2.9986389036924392`}, 
             Offset[{0, -3}, {1.9792043697802202`, 2.9986389036924392`}]}, {{
             1.974766017802669, 2.9986389036924392`}, 
             Offset[{0, 3}, {1.974766017802669, 2.9986389036924392`}]}, {{
             1.974766017802669, 2.9986389036924392`}, 
             Offset[{0, -3}, {1.974766017802669, 2.9986389036924392`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.976987656160458, 3.0008556173122014`}, 
             Offset[{3, 0}, {1.976987656160458, 3.0008556173122014`}]}, {{
             1.976987656160458, 3.0008556173122014`}, 
             Offset[{-3, 0}, {1.976987656160458, 3.0008556173122014`}]}, {{
             1.976987656160458, 2.9964172653346504`}, 
             Offset[{3, 0}, {1.976987656160458, 2.9964172653346504`}]}, {{
             1.976987656160458, 2.9964172653346504`}, 
             Offset[{-3, 0}, {1.976987656160458, 2.9964172653346504`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{2.034206917207339, 2.9491526909956365`}, 
             Offset[{0, 3}, {2.034206917207339, 2.9491526909956365`}]}, {{
             2.034206917207339, 2.9491526909956365`}, 
             Offset[{0, -3}, {2.034206917207339, 2.9491526909956365`}]}, {{
             2.031515189686909, 2.9491526909956365`}, 
             Offset[{0, 3}, {2.031515189686909, 2.9491526909956365`}]}, {{
             2.031515189686909, 2.9491526909956365`}, 
             Offset[{0, -3}, {2.031515189686909, 2.9491526909956365`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.0328619591214814`, 2.9504976490814943`}, 
             Offset[{3, 0}, {2.0328619591214814`, 2.9504976490814943`}]}, {{
             2.0328619591214814`, 2.9504976490814943`}, 
             Offset[{-3, 0}, {2.0328619591214814`, 2.9504976490814943`}]}, {{
             2.0328619591214814`, 2.947805921561064}, 
             Offset[{3, 0}, {2.0328619591214814`, 2.947805921561064}]}, {{
             2.0328619591214814`, 2.947805921561064}, 
             Offset[{-3, 0}, {2.0328619591214814`, 2.947805921561064}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{2.084222757384564, 2.904742913031858}, 
             Offset[{0, 3}, {2.084222757384564, 2.904742913031858}]}, {{
             2.084222757384564, 2.904742913031858}, 
             Offset[{0, -3}, {2.084222757384564, 2.904742913031858}]}, {{
             2.0833017524769883`, 2.904742913031858}, 
             Offset[{0, 3}, {2.0833017524769883`, 2.904742913031858}]}, {{
             2.0833017524769883`, 2.904742913031858}, 
             Offset[{0, -3}, {2.0833017524769883`, 2.904742913031858}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.0837623609620275`, 2.9052033094543948`}, 
             Offset[{3, 0}, {2.0837623609620275`, 2.9052033094543948`}]}, {{
             2.0837623609620275`, 2.9052033094543948`}, 
             Offset[{-3, 0}, {2.0837623609620275`, 2.9052033094543948`}]}, {{
             2.0837623609620275`, 2.9042823045468187`}, 
             Offset[{3, 0}, {2.0837623609620275`, 2.9042823045468187`}]}, {{
             2.0837623609620275`, 2.9042823045468187`}, 
             
             Offset[{-3, 0}, {2.0837623609620275`, 
              2.9042823045468187`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{2.16147945383698, 2.852576033502808}, 
             Offset[{0, 3}, {2.16147945383698, 2.852576033502808}]}, {{
             2.16147945383698, 2.852576033502808}, 
             Offset[{0, -3}, {2.16147945383698, 2.852576033502808}]}, {{
             2.157374038442815, 2.852576033502808}, 
             Offset[{0, 3}, {2.157374038442815, 2.852576033502808}]}, {{
             2.157374038442815, 2.852576033502808}, 
             Offset[{0, -3}, {2.157374038442815, 2.852576033502808}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.1594288529428627`, 2.8546266343969253`}, 
             Offset[{3, 0}, {2.1594288529428627`, 2.8546266343969253`}]}, {{
             2.1594288529428627`, 2.8546266343969253`}, 
             Offset[{-3, 0}, {2.1594288529428627`, 2.8546266343969253`}]}, {{
             2.1594288529428627`, 2.8505212190027605`}, 
             Offset[{3, 0}, {2.1594288529428627`, 2.8505212190027605`}]}, {{
             2.1594288529428627`, 2.8505212190027605`}, 
             
             Offset[{-3, 0}, {2.1594288529428627`, 
              2.8505212190027605`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{2.2361060152046495`, 2.8152381521475296`}, 
             Offset[{0, 3}, {2.2361060152046495`, 2.8152381521475296`}]}, {{
             2.2361060152046495`, 2.8152381521475296`}, 
             Offset[{0, -3}, {2.2361060152046495`, 2.8152381521475296`}]}, {{
             2.2347328271732207`, 2.8152381521475296`}, 
             Offset[{0, 3}, {2.2347328271732207`, 2.8152381521475296`}]}, {{
             2.2347328271732207`, 2.8152381521475296`}, 
             
             Offset[{0, -3}, {2.2347328271732207`, 
              2.8152381521475296`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.235419656894588, 2.8159245104575916`}, 
             Offset[{3, 0}, {2.235419656894588, 2.8159245104575916`}]}, {{
             2.235419656894588, 2.8159245104575916`}, 
             Offset[{-3, 0}, {2.235419656894588, 2.8159245104575916`}]}, {{
             2.235419656894588, 2.8145513224261625`}, 
             Offset[{3, 0}, {2.235419656894588, 2.8145513224261625`}]}, {{
             2.235419656894588, 2.8145513224261625`}, 
             Offset[{-3, 0}, {2.235419656894588, 2.8145513224261625`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{2.358665337846748, 2.772419745312284}, 
             Offset[{0, 3}, {2.358665337846748, 2.772419745312284}]}, {{
             2.358665337846748, 2.772419745312284}, 
             Offset[{0, -3}, {2.358665337846748, 2.772419745312284}]}, {{
             2.355140158133094, 2.772419745312284}, 
             Offset[{0, 3}, {2.355140158133094, 2.772419745312284}]}, {{
             2.355140158133094, 2.772419745312284}, 
             Offset[{0, -3}, {2.355140158133094, 2.772419745312284}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.3569043013506183`, 2.7741807818084134`}, 
             Offset[{3, 0}, {2.3569043013506183`, 2.7741807818084134`}]}, {{
             2.3569043013506183`, 2.7741807818084134`}, 
             Offset[{-3, 0}, {2.3569043013506183`, 2.7741807818084134`}]}, {{
             2.3569043013506183`, 2.7706556020947595`}, 
             Offset[{3, 0}, {2.3569043013506183`, 2.7706556020947595`}]}, {{
             2.3569043013506183`, 2.7706556020947595`}, 
             
             Offset[{-3, 0}, {2.3569043013506183`, 
              2.7706556020947595`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{2.5143839145291076`, 2.736325950248824}, 
             Offset[{0, 3}, {2.5143839145291076`, 2.736325950248824}]}, {{
             2.5143839145291076`, 2.736325950248824}, 
             Offset[{0, -3}, {2.5143839145291076`, 2.736325950248824}]}, {{
             2.4866307657896938`, 2.736325950248824}, 
             Offset[{0, 3}, {2.4866307657896938`, 2.736325950248824}]}, {{
             2.4866307657896938`, 2.736325950248824}, 
             Offset[{0, -3}, {2.4866307657896938`, 2.736325950248824}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.500603616727754, 2.7501062480501774`}, 
             Offset[{3, 0}, {2.500603616727754, 2.7501062480501774`}]}, {{
             2.500603616727754, 2.7501062480501774`}, 
             Offset[{-3, 0}, {2.500603616727754, 2.7501062480501774`}]}, {{
             2.500603616727754, 2.7223530993107636`}, 
             Offset[{3, 0}, {2.500603616727754, 2.7223530993107636`}]}, {{
             2.500603616727754, 2.7223530993107636`}, 
             Offset[{-3, 0}, {2.500603616727754, 2.7223530993107636`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{2.7587343944141853`, 2.723466397476659}, 
             Offset[{0, 3}, {2.7587343944141853`, 2.723466397476659}]}, {{
             2.7587343944141853`, 2.723466397476659}, 
             Offset[{0, -3}, {2.7587343944141853`, 2.723466397476659}]}, {{
             2.686908954209786, 2.723466397476659}, 
             Offset[{0, 3}, {2.686908954209786, 2.723466397476659}]}, {{
             2.686908954209786, 2.723466397476659}, 
             Offset[{0, -3}, {2.686908954209786, 2.723466397476659}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.723466397476659, 2.7587343944141853`}, 
             Offset[{3, 0}, {2.723466397476659, 2.7587343944141853`}]}, {{
             2.723466397476659, 2.7587343944141853`}, 
             Offset[{-3, 0}, {2.723466397476659, 2.7587343944141853`}]}, {{
             2.723466397476659, 2.686908954209786}, 
             Offset[{3, 0}, {2.723466397476659, 2.686908954209786}]}, {{
             2.723466397476659, 2.686908954209786}, 
             Offset[{-3, 0}, {2.723466397476659, 2.686908954209786}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{3.5875705519976817`, 2.9135484469096875`}, 
             Offset[{0, 3}, {3.5875705519976817`, 2.9135484469096875`}]}, {{
             3.5875705519976817`, 2.9135484469096875`}, 
             Offset[{0, -3}, {3.5875705519976817`, 2.9135484469096875`}]}, {{
             3.3696348689796043`, 2.9135484469096875`}, 
             Offset[{0, 3}, {3.3696348689796043`, 2.9135484469096875`}]}, {{
             3.3696348689796043`, 2.9135484469096875`}, 
             
             Offset[{0, -3}, {3.3696348689796043`, 
              2.9135484469096875`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.4845279934954254`, 3.016591005411944}, 
             Offset[{3, 0}, {3.4845279934954254`, 3.016591005411944}]}, {{
             3.4845279934954254`, 3.016591005411944}, 
             Offset[{-3, 0}, {3.4845279934954254`, 3.016591005411944}]}, {{
             3.4845279934954254`, 2.7986553223938664`}, 
             Offset[{3, 0}, {3.4845279934954254`, 2.7986553223938664`}]}, {{
             3.4845279934954254`, 2.7986553223938664`}, 
             
             Offset[{-3, 0}, {3.4845279934954254`, 
              2.7986553223938664`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{3.7460943309125856`, 2.9737919633047474`}, 
             Offset[{0, 3}, {3.7460943309125856`, 2.9737919633047474`}]}, {{
             3.7460943309125856`, 2.9737919633047474`}, 
             Offset[{0, -3}, {3.7460943309125856`, 2.9737919633047474`}]}, {{
             3.489757619406613, 2.9737919633047474`}, 
             Offset[{0, 3}, {3.489757619406613, 2.9737919633047474`}]}, {{
             3.489757619406613, 2.9737919633047474`}, 
             Offset[{0, -3}, {3.489757619406613, 2.9737919633047474`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.6261171493444375`, 3.0937691448728954`}, 
             Offset[{3, 0}, {3.6261171493444375`, 3.0937691448728954`}]}, {{
             3.6261171493444375`, 3.0937691448728954`}, 
             Offset[{-3, 0}, {3.6261171493444375`, 3.0937691448728954`}]}, {{
             3.6261171493444375`, 2.8374324333669225`}, 
             Offset[{3, 0}, {3.6261171493444375`, 2.8374324333669225`}]}, {{
             3.6261171493444375`, 2.8374324333669225`}, 
             
             Offset[{-3, 0}, {3.6261171493444375`, 
              2.8374324333669225`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{4.085706111817984, 3.1309292809259}, 
             Offset[{0, 3}, {4.085706111817984, 3.1309292809259}]}, {{
             4.085706111817984, 3.1309292809259}, 
             Offset[{0, -3}, {4.085706111817984, 3.1309292809259}]}, {{
             3.7737875548311646`, 3.1309292809259}, 
             Offset[{0, 3}, {3.7737875548311646`, 3.1309292809259}]}, {{
             3.7737875548311646`, 3.1309292809259}, 
             Offset[{0, -3}, {3.7737875548311646`, 3.1309292809259}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.9418594971422287`, 3.2747758956016555`}, 
             Offset[{3, 0}, {3.9418594971422287`, 3.2747758956016555`}]}, {{
             3.9418594971422287`, 3.2747758956016555`}, 
             Offset[{-3, 0}, {3.9418594971422287`, 3.2747758956016555`}]}, {{
             3.9418594971422287`, 2.962857338614836}, 
             Offset[{3, 0}, {3.9418594971422287`, 2.962857338614836}]}, {{
             3.9418594971422287`, 2.962857338614836}, 
             Offset[{-3, 0}, {3.9418594971422287`, 2.962857338614836}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{5.562013459283799, 4.113035103121429}, 
             Offset[{0, 3}, {5.562013459283799, 4.113035103121429}]}, {{
             5.562013459283799, 4.113035103121429}, 
             Offset[{0, -3}, {5.562013459283799, 4.113035103121429}]}, {{
             5.257652298326407, 4.113035103121429}, 
             Offset[{0, 3}, {5.257652298326407, 4.113035103121429}]}, {{
             5.257652298326407, 4.113035103121429}, 
             Offset[{0, -3}, {5.257652298326407, 4.113035103121429}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.421367922771608, 4.25368063963362}, 
             Offset[{3, 0}, {5.421367922771608, 4.25368063963362}]}, {{
             5.421367922771608, 4.25368063963362}, 
             Offset[{-3, 0}, {5.421367922771608, 4.25368063963362}]}, {{
             5.421367922771608, 3.949319478676228}, 
             Offset[{3, 0}, {5.421367922771608, 3.949319478676228}]}, {{
             5.421367922771608, 3.949319478676228}, 
             Offset[{-3, 0}, {5.421367922771608, 3.949319478676228}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{{{5.865506918506537, 4.359892624805321}, 
             Offset[{0, 3}, {5.865506918506537, 4.359892624805321}]}, {{
             5.865506918506537, 4.359892624805321}, 
             Offset[{0, -3}, {5.865506918506537, 4.359892624805321}]}, {{
             5.610676105835088, 4.359892624805321}, 
             Offset[{0, 3}, {5.610676105835088, 4.359892624805321}]}, {{
             5.610676105835088, 4.359892624805321}, 
             Offset[{0, -3}, {5.610676105835088, 4.359892624805321}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5.7461869859252115`, 4.479212557386647}, 
             Offset[{3, 0}, {5.7461869859252115`, 4.479212557386647}]}, {{
             5.7461869859252115`, 4.479212557386647}, 
             Offset[{-3, 0}, {5.7461869859252115`, 4.479212557386647}]}, {{
             5.7461869859252115`, 4.224381744715197}, 
             Offset[{3, 0}, {5.7461869859252115`, 4.224381744715197}]}, {{
             5.7461869859252115`, 4.224381744715197}, 
             Offset[{-3, 0}, {5.7461869859252115`, 4.224381744715197}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7aFotkv25m97u+uCN9ef4XK49G/NQW/5P/aPqy4e
vtXN5TA50Zj5QOYfe92pxxjPB3I5mMw4zPpi7h/70ENVNTcFuBxuMavInVL4
a/9Urr+vbTmnQ/q6g55TIv7aT0qL3ihRzOnwfIu59Pqrf+2rrQr0HkhyOqgK
/Jw3t/ef/RO2sH/JSzkcTL9xL2Hg/G9f+mbWFa5kDoetD/6c27vwv33zr30p
Zn/ZHXrW1Cr6OjM4rHqyNfbudHaHQ3uPz+xeDeQLm916acPuEJ6bvajJjdHh
8m/NJOFLbA5iUys3Kz9idFiY1j9ldiubg9GlgiUfbjE5CJi6p7/SBcpfF6iw
YWRxiJaTufPvMatDWpj6gRUnEXRfZYFZwANuByf/bzWf/Ngd4g3tt3oy8TrI
Md8pCD7F7iBheXbh2w5+B9bguctUeDgdzvfMF6peL+pQfTmmcn+xgMO0/18K
JP6IOUgVmm1sLxB0AADjM5wu
          "]]}}}, {{}, {}}}}, {AxesLabel -> {
       FormBox["\"Nc\"", TraditionalForm], 
       FormBox["\"Ni\"", TraditionalForm]}, PlotLabel -> 
     FormBox["\"1D Paschen Curve Monte Carlo vs Literature\"", 
       TraditionalForm], DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, Ticks -> {
       Charting`ScaledTicks[
       "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
        RotateLabel -> 0], 
       Charting`ScaledTicks[
       "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
        RotateLabel -> 0]}, 
     AxesOrigin -> {1.0986122886681098`, 1.9459101490553132`}, FrameTicks -> {{
        Charting`ScaledTicks[
        "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
         RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[
        "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
         RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{1.3691423458729117`, 6.907755165782571}, {
        2.3691039133268355`, 11.534247498727346`}}, {{1.3691423458729117`, 
        6.907755165782571}, {2.3691039133268355`, 5.991464547107982}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {1.0986122886681098`, 1.9459101490553132`}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotRange -> {{1.0986122886681098`, 6.907755278982137}, {
      1.9459101490553132`, 5.991464547107982}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Literature paschen curve\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Mathematica 1D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Java 1D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.87219670717414*^9, 3.872196713872147*^9}, 
   3.876760309396003*^9, 3.8767603714460907`*^9, 3.87676042314464*^9, {
   3.876920060311512*^9, 3.876920067784862*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"f68daeb0-d026-4b13-b23d-2e6f67141f5b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindBreakdown3D", "[", 
   RowBox[{
   "d_", ",", "\[Gamma]_", ",", "tbound_", ",", "Ni0_", ",", "reps_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "region", ",", "list", ",", "i", ",", "errors", ",", "max", ",", 
      "params", ",", "fit", ",", "error", ",", "p1", ",", "p2", ",", "p3", 
      ",", "p4", ",", "f", ",", "vals", ",", "errorslist", ",", 
      "listForFit"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Ni", ",", 
          RowBox[{"AvgElectrons3D", "[", 
           RowBox[{
           "d", ",", "Ni", ",", "d", ",", "15", ",", "tbound", ",", "reps"}], 
           "]"}]}], " ", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Ni", ",", 
          RowBox[{"Ni0", "-", "3"}], ",", 
          RowBox[{"Ni0", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"listForFit", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
       "list"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorslist", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "&"}], "/@", "list"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"listForFit", ",", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"p2", " ", "x"}], "]"}]}], "+", "p3"}], ",", 
        RowBox[{"{", 
         RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], ",", " ", "x",
         ",", 
        RowBox[{"Weights", "->", 
         RowBox[{"1", "/", 
          RowBox[{"errorslist", "^", "2"}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "-", "p3"}], ")"}], "/", "p1"}], "]"}], "/", 
        "p2"}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p1"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p2"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], ".", 
        RowBox[{"fit", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p1"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p2"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], "]"}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"f", ",", 
        RowBox[{"Sqrt", "[", "error", "]"}]}], "]"}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.87373392721367*^9, 3.873733927421361*^9}, {
  3.874685874033209*^9, 3.874685981039052*^9}, {3.874927794135685*^9, 
  3.874927802265733*^9}, {3.874928135247306*^9, 3.874928137831574*^9}, {
  3.8749312723464327`*^9, 3.87493128641772*^9}, {3.87493277168056*^9, 
  3.874932771820609*^9}, {3.8752939395427027`*^9, 
  3.875293939647931*^9}},ExpressionUUID->"5ca12b3f-13be-4786-8f5f-\
84eef313abab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdown3Dv2", "[", 
  RowBox[{"4.5", ",", "50", ",", "0.8", ",", "30", ",", "3000"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8749315375448647`*^9, 3.874931539796081*^9}, {
  3.874931603223865*^9, 3.8749316296549397`*^9}, {3.8749317449477253`*^9, 
  3.874931748948107*^9}, {3.874931977990821*^9, 3.874931978148361*^9}, {
  3.874932090494624*^9, 3.874932092524126*^9}, {3.8749323128915367`*^9, 
  3.874932313491398*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"093aa060-f454-42b6-b555-affd5e593462"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"27", ",", 
     InterpretationBox[
      TemplateBox[{"45.5", "0.7"},
       "Around"],
      Around[45.538333333333334`, 0.7025072669491292]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", 
     InterpretationBox[
      TemplateBox[{"46.1", "0.7"},
       "Around"],
      Around[46.104, 0.7041007523870852]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", 
     InterpretationBox[
      TemplateBox[{"47.5", "0.7"},
       "Around"],
      Around[47.507, 0.746922391638396]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", 
     InterpretationBox[
      TemplateBox[{"48.5", "0.7"},
       "Around"],
      Around[48.546, 0.7354986612905923]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", 
     InterpretationBox[
      TemplateBox[{"48.7", "0.8"},
       "Around"],
      Around[48.67066666666667, 0.7511026771325722]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", 
     InterpretationBox[
      TemplateBox[{"49.9", "0.8"},
       "Around"],
      Around[49.919, 0.7856206970456814]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", 
     InterpretationBox[
      TemplateBox[{"51.3", "0.8"},
       "Around"],
      Around[51.27766666666667, 0.8294805481347861]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.874932073741417*^9, 3.874932199283972*^9, 
  3.874932629130622*^9},
 CellLabel->
  "During evaluation of \
In[102]:=",ExpressionUUID->"d5a4b526-6a44-44a1-8ba5-0ab44565a424"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"32.01", "0.21"},
   "Around"],
  Around[32.00887747715568, 0.2090212270896973]]], "Output",
 CellChangeTimes->{{3.874931544657946*^9, 3.8749315558623457`*^9}, 
   3.874931615757391*^9, 3.87493168021924*^9, 3.874931831693573*^9, 
   3.874931981143165*^9, 3.874932073749034*^9, 3.8749321992899847`*^9, 
   3.87493262913783*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"bda55259-561a-4fa1-82c6-c4494e980114"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"left", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"FindBreakdown3Dv2", "[", 
       RowBox[{"d", ",", "50", ",", "0.8", ",", "20", ",", "500"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "5", ",", "6", ",", "0.5"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.874931540061063*^9, 3.874931540610879*^9}, {
  3.87493248459448*^9, 3.874932508240403*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"ffb3a55b-e4f8-4844-8bbe-6b3f33c328fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.`", ",", 
     InterpretationBox[
      TemplateBox[{"21.2", "0.4"},
       "Around"],
      Around[21.249535010733165`, 0.3587648764653054]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", 
     InterpretationBox[
      TemplateBox[{"16.75", "0.35"},
       "Around"],
      Around[16.753871982234706`, 0.35221658582419113`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", 
     InterpretationBox[
      TemplateBox[{"11.", "5."},
       "Around"],
      Around[11.121270640396627`, 4.863662446476232]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.874932769460299*^9, 3.874933003456545*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"243445ee-9ba2-4a62-9832-0bd9551ce4f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"min", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"FindBreakdown3Dv2", "[", 
       RowBox[{"d", ",", "50", ",", "0.8", ",", "10", ",", "100"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "6", ",", "16.5", ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.874932515018569*^9, 3.874932532547421*^9}, {
  3.87493302304806*^9, 3.874933031738517*^9}, {3.874933193288863*^9, 
  3.874933193392414*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"cd483b33-c9eb-4f2d-91ae-d499f052c3e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6", ",", 
     InterpretationBox[
      TemplateBox[{"14.4", "0.4"},
       "Around"],
      Around[14.395300740236596`, 0.40429582862441155`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     InterpretationBox[
      TemplateBox[{"11.73", "0.13"},
       "Around"],
      Around[11.72692351252627, 0.13091608355134068`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"10.790", "0.034"},
       "Around"],
      Around[10.789808148557187`, 0.033822574515285475`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"10.60", "0.04"},
       "Around"],
      Around[10.603071281988178`, 0.0442667081515607]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"10.52", "0.07"},
       "Around"],
      Around[10.522773425501256`, 0.06640089558332794]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"10.70", "0.05"},
       "Around"],
      Around[10.70055745310513, 0.05481056636591952]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8749330302764482`*^9, 3.874933191517861*^9, 
  3.874933300215555*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"c678547a-2fcb-4921-8090-28a1124fc6ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"right2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"FindBreakdown3Dv2", "[", 
       RowBox[{"d", ",", "50", ",", "0.8", ",", "13", ",", "50"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "17", ",", "57", ",", "4"}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.874933656576888*^9, 3.874933681484837*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"b5db0b13-d75a-4fe8-873a-6fde09f1813a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"17", ",", 
     InterpretationBox[
      TemplateBox[{"10.81", "0.08"},
       "Around"],
      Around[10.811121210215422`, 0.08037071760392119]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", 
     InterpretationBox[
      TemplateBox[{"11.24", "0.04"},
       "Around"],
      Around[11.241563969504401`, 0.04175408902966684]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", 
     InterpretationBox[
      TemplateBox[{"12.07", "0.09"},
       "Around"],
      Around[12.074290051030074`, 0.08698677781776307]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", 
     InterpretationBox[
      TemplateBox[{"12.66", "0.05"},
       "Around"],
      Around[12.657232336986974`, 0.04521631056981309]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33", ",", 
     InterpretationBox[
      TemplateBox[{"13.45", "0.05"},
       "Around"],
      Around[13.448290841373243`, 0.05303456286861967]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", 
     InterpretationBox[
      TemplateBox[{"14.255", "0.029"},
       "Around"],
      Around[14.254647130239864`, 0.028656650178137795`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", 
     InterpretationBox[
      TemplateBox[{"14.939", "0.018"},
       "Around"],
      Around[14.939352542919078`, 0.018152333026775196`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"45", ",", 
     InterpretationBox[
      TemplateBox[{"15.66", "0.09"},
       "Around"],
      Around[15.662819885731587`, 0.09308846875867388]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", 
     InterpretationBox[
      TemplateBox[{"16.49", "0.22"},
       "Around"],
      Around[16.48712137978164, 0.21707387694330274`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", 
     InterpretationBox[
      TemplateBox[{"17.48", "0.09"},
       "Around"],
      Around[17.479724187062896`, 0.08819466229798106]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"57", ",", 
     InterpretationBox[
      TemplateBox[{"17.74", "0.30"},
       "Around"],
      Around[17.744045951741217`, 0.30330913101534845`]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8749336797944937`*^9, 3.874933798701167*^9, 
  3.8749342244085827`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"4da797e1-f20c-4012-bf35-f76e452c9e94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"right3", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"FindBreakdown3Dv2", "[", 
       RowBox[{"d", ",", "50", ",", "0.8", ",", "17", ",", "25"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "60", ",", "100", ",", "8"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.874934349502911*^9, 3.874934373700405*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"0a47eb40-6ad1-4f8f-b65f-b1502e624f8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"60", ",", 
     InterpretationBox[
      TemplateBox[{"18.52", "0.09"},
       "Around"],
      Around[18.515408249975085`, 0.09087091496280349]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", 
     InterpretationBox[
      TemplateBox[{"19.97", "0.07"},
       "Around"],
      Around[19.97455105780831, 0.06526467739784975]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", 
     InterpretationBox[
      TemplateBox[{"21.31", "0.35"},
       "Around"],
      Around[21.312329830114102`, 0.3507349619840609]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"84", ",", 
     InterpretationBox[
      TemplateBox[{"23.7", "1.2"},
       "Around"],
      Around[23.744574842865365`, 1.2185978894487601`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", 
     InterpretationBox[
      TemplateBox[{"24.7", "0.9"},
       "Around"],
      Around[24.71098505699217, 0.946297864091711]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", 
     InterpretationBox[
      TemplateBox[{"26.2", "1.4"},
       "Around"],
      Around[26.15834322887425, 1.418540391388958]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8749344258121347`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"45912aad-dbda-4caa-a5b1-c776e9ccdd4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bdfinal", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4.5", ",", 
      InterpretationBox[
       TemplateBox[{"32.01", "0.21"},
        "Around"],
       Around[32.00887747715568, 0.2090212270896973]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.`", ",", 
      InterpretationBox[
       TemplateBox[{"21.2", "0.4"},
        "Around"],
       Around[21.249535010733165`, 0.3587648764653054]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.5`", ",", 
      InterpretationBox[
       TemplateBox[{"16.75", "0.35"},
        "Around"],
       Around[16.753871982234706`, 0.35221658582419113`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", 
      InterpretationBox[
       TemplateBox[{"14.4", "0.4"},
        "Around"],
       Around[14.395300740236596`, 0.40429582862441155`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", 
      InterpretationBox[
       TemplateBox[{"11.73", "0.13"},
        "Around"],
       Around[11.72692351252627, 0.13091608355134068`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", 
      InterpretationBox[
       TemplateBox[{"10.790", "0.034"},
        "Around"],
       Around[10.789808148557187`, 0.033822574515285475`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", 
      InterpretationBox[
       TemplateBox[{"10.60", "0.04"},
        "Around"],
       Around[10.603071281988178`, 0.0442667081515607]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", 
      InterpretationBox[
       TemplateBox[{"10.52", "0.07"},
        "Around"],
       Around[10.522773425501256`, 0.06640089558332794]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", 
      InterpretationBox[
       TemplateBox[{"10.70", "0.05"},
        "Around"],
       Around[10.70055745310513, 0.05481056636591952]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", 
      InterpretationBox[
       TemplateBox[{"10.77", "0.06"},
        "Around"],
       Around[10.771538590599807`, 0.062153616235257655`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"20", ",", 
      InterpretationBox[
       TemplateBox[{"11.18", "0.06"},
        "Around"],
       Around[11.179888921936788`, 0.06317600812024013]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", 
      InterpretationBox[
       TemplateBox[{"11.64", "0.07"},
        "Around"],
       Around[11.636186848092176`, 0.07430333924143469]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"26", ",", 
      InterpretationBox[
       TemplateBox[{"12.21", "0.06"},
        "Around"],
       Around[12.209704032427933`, 0.06168984687877423]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"32", ",", 
      InterpretationBox[
       TemplateBox[{"13.27", "0.05"},
        "Around"],
       Around[13.270249442158871`, 0.052077859458310484`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"37", ",", 
      InterpretationBox[
       TemplateBox[{"14.255", "0.029"},
        "Around"],
       Around[14.254647130239864`, 0.028656650178137795`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"41", ",", 
      InterpretationBox[
       TemplateBox[{"14.939", "0.018"},
        "Around"],
       Around[14.939352542919078`, 0.018152333026775196`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"49", ",", 
      InterpretationBox[
       TemplateBox[{"16.49", "0.22"},
        "Around"],
       Around[16.48712137978164, 0.21707387694330274`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", 
      InterpretationBox[
       TemplateBox[{"18.52", "0.09"},
        "Around"],
       Around[18.515408249975085`, 0.09087091496280349]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"76", ",", 
      InterpretationBox[
       TemplateBox[{"21.31", "0.35"},
        "Around"],
       Around[21.312329830114102`, 0.3507349619840609]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"92", ",", 
      InterpretationBox[
       TemplateBox[{"24.7", "0.9"},
        "Around"],
       Around[24.71098505699217, 0.946297864091711]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"100", ",", 
      InterpretationBox[
       TemplateBox[{"26.2", "1.4"},
        "Around"],
       Around[26.15834322887425, 1.418540391388958]]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.874933770115885*^9, 3.874933798192494*^9}, {
   3.874934263169911*^9, 3.8749342712421827`*^9}, {3.874934615085434*^9, 
   3.874934618337791*^9}, 3.876761243927207*^9, {3.876922449435198*^9, 
   3.876922478501543*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"6d2d5923-8480-43ca-8fd3-4cb48df68f33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4.5`", ",", 
     InterpretationBox[
      TemplateBox[{"32.01", "0.21"},
       "Around"],
      Around[32.00887747715568, 0.2090212270896973]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", 
     InterpretationBox[
      TemplateBox[{"21.2", "0.4"},
       "Around"],
      Around[21.249535010733165`, 0.3587648764653054]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", 
     InterpretationBox[
      TemplateBox[{"16.75", "0.35"},
       "Around"],
      Around[16.753871982234706`, 0.35221658582419113`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     InterpretationBox[
      TemplateBox[{"14.4", "0.4"},
       "Around"],
      Around[14.395300740236596`, 0.40429582862441155`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     InterpretationBox[
      TemplateBox[{"11.73", "0.13"},
       "Around"],
      Around[11.72692351252627, 0.13091608355134068`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"10.790", "0.034"},
       "Around"],
      Around[10.789808148557187`, 0.033822574515285475`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"10.60", "0.04"},
       "Around"],
      Around[10.603071281988178`, 0.0442667081515607]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"10.52", "0.07"},
       "Around"],
      Around[10.522773425501256`, 0.06640089558332794]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"10.70", "0.05"},
       "Around"],
      Around[10.70055745310513, 0.05481056636591952]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     InterpretationBox[
      TemplateBox[{"10.77", "0.06"},
       "Around"],
      Around[10.771538590599807`, 0.062153616235257655`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     InterpretationBox[
      TemplateBox[{"11.18", "0.06"},
       "Around"],
      Around[11.179888921936788`, 0.06317600812024013]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     InterpretationBox[
      TemplateBox[{"11.64", "0.07"},
       "Around"],
      Around[11.636186848092176`, 0.07430333924143469]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     InterpretationBox[
      TemplateBox[{"12.21", "0.06"},
       "Around"],
      Around[12.209704032427933`, 0.06168984687877423]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", 
     InterpretationBox[
      TemplateBox[{"13.27", "0.05"},
       "Around"],
      Around[13.270249442158871`, 0.052077859458310484`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", 
     InterpretationBox[
      TemplateBox[{"14.255", "0.029"},
       "Around"],
      Around[14.254647130239864`, 0.028656650178137795`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", 
     InterpretationBox[
      TemplateBox[{"14.939", "0.018"},
       "Around"],
      Around[14.939352542919078`, 0.018152333026775196`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", 
     InterpretationBox[
      TemplateBox[{"16.49", "0.22"},
       "Around"],
      Around[16.48712137978164, 0.21707387694330274`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", 
     InterpretationBox[
      TemplateBox[{"18.52", "0.09"},
       "Around"],
      Around[18.515408249975085`, 0.09087091496280349]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", 
     InterpretationBox[
      TemplateBox[{"21.31", "0.35"},
       "Around"],
      Around[21.312329830114102`, 0.3507349619840609]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", 
     InterpretationBox[
      TemplateBox[{"24.7", "0.9"},
       "Around"],
      Around[24.71098505699217, 0.946297864091711]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", 
     InterpretationBox[
      TemplateBox[{"26.2", "1.4"},
       "Around"],
      Around[26.15834322887425, 1.418540391388958]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.87493379937775*^9, {3.874934263886877*^9, 3.874934271494947*^9}, 
   3.874934618605344*^9, 3.875322709172284*^9, 3.875498441085705*^9, 
   3.876761271012002*^9, 3.876920836956573*^9, {3.8769224645808897`*^9, 
   3.876922478741804*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"9fefd688-74f4-477b-8d93-31e5a09770d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bd3dold", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"2.325", "0.033"},
        "Around"],
       Around[2.324638980145359, 0.032644750797204414`]], ",", 
      InterpretationBox[
       TemplateBox[{"69.7", "1.0"},
        "Around"],
       Around[69.73916940436077, 0.9793425239161324]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"2.434", "0.034"},
        "Around"],
       Around[2.433515830434483, 0.03350978130549125]], ",", 
      InterpretationBox[
       TemplateBox[{"48.7", "0.7"},
        "Around"],
       Around[48.67031660868966, 0.6701956261098251]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"4.42", "0.06"},
        "Around"],
       Around[4.415333102130677, 0.057892083565991966`]], ",", 
      InterpretationBox[
       TemplateBox[{"14.72", "0.19"},
        "Around"],
       Around[14.717777007102256`, 0.1929736118866399]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"6.68", "0.10"},
        "Around"],
       Around[6.6815097827538, 0.09711014127822747]], ",", 
      InterpretationBox[
       TemplateBox[{"12.15", "0.18"},
        "Around"],
       Around[12.148199605006909`, 0.17656389323314084`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"9.10", "0.16"},
        "Around"],
       Around[9.099684571943136, 0.16321899968266557`]], ",", 
      InterpretationBox[
       TemplateBox[{"11.37", "0.20"},
        "Around"],
       Around[11.37460571492892, 0.20402374960333197`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"11.71", "0.24"},
        "Around"],
       Around[11.708267803829951`, 0.2444612844658334]], ",", 
      InterpretationBox[
       TemplateBox[{"11.15", "0.23"},
        "Around"],
       Around[11.15073124174281, 0.2328202709198413]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"15.4", "0.4"},
        "Around"],
       Around[15.369887552636886`, 0.43658069649682163`]], ",", 
      InterpretationBox[
       TemplateBox[{"11.82", "0.34"},
        "Around"],
       Around[11.822990425105298`, 0.3358313049975551]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"18.2", "0.6"},
        "Around"],
       Around[18.15461866231072, 0.574363436633348]], ",", 
      InterpretationBox[
       TemplateBox[{"11.7", "0.4"},
        "Around"],
       Around[11.712657201490787`, 0.37055705589248256`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"22.3", "0.9"},
        "Around"],
       Around[22.315365003661356`, 0.8697264001228904]], ",", 
      InterpretationBox[
       TemplateBox[{"12.4", "0.5"},
        "Around"],
       Around[12.397425002034087`, 0.4831813334016058]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"26.8", "1.3"},
        "Around"],
       Around[26.769954656063106`, 1.2604564829310947`]], ",", 
      InterpretationBox[
       TemplateBox[{"13.1", "0.6"},
        "Around"],
       Around[13.058514466372246`, 0.6148568209419975]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"32.8", "1.9"},
        "Around"],
       Around[32.81693352437339, 1.9083280061217627`]], ",", 
      InterpretationBox[
       TemplateBox[{"14.3", "0.8"},
        "Around"],
       Around[14.268231967118865`, 0.8297078287485924]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"36.7", "2.2"},
        "Around"],
       Around[36.70744375844305, 2.218128842422005]], ",", 
      InterpretationBox[
       TemplateBox[{"14.4", "0.9"},
        "Around"],
       Around[14.395075983703157`, 0.8698544480086294]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"47.", "4."},
        "Around"],
       Around[46.710135849760015`, 3.7038056446636363`]], ",", 
      InterpretationBox[
       TemplateBox[{"16.7", "1.3"},
        "Around"],
       Around[16.682191374914293`, 1.322787730237013]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"65.0", "2.0"},
        "Around"],
       Around[64.98572060782027, 2.034880362763547]], ",", 
      InterpretationBox[
       TemplateBox[{"20.0", "0.6"},
        "Around"],
       Around[19.995606340867777`, 0.6261170346964761]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"78.7", "2.9"},
        "Around"],
       Around[78.73278950540802, 2.8817741333235047`]], ",", 
      InterpretationBox[
       TemplateBox[{"22.5", "0.8"},
        "Around"],
       Around[22.49508271583086, 0.8233640380924299]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"109.", "5."},
        "Around"],
       Around[108.82152755171586`, 4.867145190626859]], ",", 
      InterpretationBox[
       TemplateBox[{"29.0", "1.3"},
        "Around"],
       Around[29.019074013790895`, 1.2979053841671624`]]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.873682312431058*^9, 3.873682352058545*^9}, {
  3.8736827137055607`*^9, 3.873682714184535*^9}, {3.874933818209322*^9, 
  3.874933818428348*^9}, {3.8749348047589006`*^9, 3.874934805092783*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"942d333d-2fff-4f0e-8b3b-2501b677477d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"2.325", "0.033"},
       "Around"],
      Around[2.324638980145359, 0.032644750797204414`]], ",", 
     InterpretationBox[
      TemplateBox[{"69.7", "1.0"},
       "Around"],
      Around[69.73916940436077, 0.9793425239161324]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"2.434", "0.034"},
       "Around"],
      Around[2.433515830434483, 0.03350978130549125]], ",", 
     InterpretationBox[
      TemplateBox[{"48.7", "0.7"},
       "Around"],
      Around[48.67031660868966, 0.6701956261098251]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"4.42", "0.06"},
       "Around"],
      Around[4.415333102130677, 0.057892083565991966`]], ",", 
     InterpretationBox[
      TemplateBox[{"14.72", "0.19"},
       "Around"],
      Around[14.717777007102256`, 0.1929736118866399]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.68", "0.10"},
       "Around"],
      Around[6.6815097827538, 0.09711014127822747]], ",", 
     InterpretationBox[
      TemplateBox[{"12.15", "0.18"},
       "Around"],
      Around[12.148199605006909`, 0.17656389323314084`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"9.10", "0.16"},
       "Around"],
      Around[9.099684571943136, 0.16321899968266557`]], ",", 
     InterpretationBox[
      TemplateBox[{"11.37", "0.20"},
       "Around"],
      Around[11.37460571492892, 0.20402374960333197`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"11.71", "0.24"},
       "Around"],
      Around[11.708267803829951`, 0.2444612844658334]], ",", 
     InterpretationBox[
      TemplateBox[{"11.15", "0.23"},
       "Around"],
      Around[11.15073124174281, 0.2328202709198413]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"15.4", "0.4"},
       "Around"],
      Around[15.369887552636886`, 0.43658069649682163`]], ",", 
     InterpretationBox[
      TemplateBox[{"11.82", "0.34"},
       "Around"],
      Around[11.822990425105298`, 0.3358313049975551]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"18.2", "0.6"},
       "Around"],
      Around[18.15461866231072, 0.574363436633348]], ",", 
     InterpretationBox[
      TemplateBox[{"11.7", "0.4"},
       "Around"],
      Around[11.712657201490787`, 0.37055705589248256`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"22.3", "0.9"},
       "Around"],
      Around[22.315365003661356`, 0.8697264001228904]], ",", 
     InterpretationBox[
      TemplateBox[{"12.4", "0.5"},
       "Around"],
      Around[12.397425002034087`, 0.4831813334016058]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"26.8", "1.3"},
       "Around"],
      Around[26.769954656063106`, 1.2604564829310947`]], ",", 
     InterpretationBox[
      TemplateBox[{"13.1", "0.6"},
       "Around"],
      Around[13.058514466372246`, 0.6148568209419975]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"32.8", "1.9"},
       "Around"],
      Around[32.81693352437339, 1.9083280061217627`]], ",", 
     InterpretationBox[
      TemplateBox[{"14.3", "0.8"},
       "Around"],
      Around[14.268231967118865`, 0.8297078287485924]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"36.7", "2.2"},
       "Around"],
      Around[36.70744375844305, 2.218128842422005]], ",", 
     InterpretationBox[
      TemplateBox[{"14.4", "0.9"},
       "Around"],
      Around[14.395075983703157`, 0.8698544480086294]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"47.", "4."},
       "Around"],
      Around[46.710135849760015`, 3.7038056446636363`]], ",", 
     InterpretationBox[
      TemplateBox[{"16.7", "1.3"},
       "Around"],
      Around[16.682191374914293`, 1.322787730237013]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"65.0", "2.0"},
       "Around"],
      Around[64.98572060782027, 2.034880362763547]], ",", 
     InterpretationBox[
      TemplateBox[{"20.0", "0.6"},
       "Around"],
      Around[19.995606340867777`, 0.6261170346964761]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"78.7", "2.9"},
       "Around"],
      Around[78.73278950540802, 2.8817741333235047`]], ",", 
     InterpretationBox[
      TemplateBox[{"22.5", "0.8"},
       "Around"],
      Around[22.49508271583086, 0.8233640380924299]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"109.", "5."},
       "Around"],
      Around[108.82152755171586`, 4.867145190626859]], ",", 
     InterpretationBox[
      TemplateBox[{"29.0", "1.3"},
       "Around"],
      Around[29.019074013790895`, 1.2979053841671624`]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8736823296762743`*^9, 3.873682352440987*^9}, 
   3.873682714835595*^9, 3.874933818642902*^9, 3.874933860378171*^9, 
   3.874934805345142*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"4ce2b76c-b5d2-4005-8bb9-d852d7b09a7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datav2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"3.9349346617986107`", ",", "0.004098654929587719"}], "]"}], 
      ",", "100"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"12.5973499575545", ",", "0.021042290566655936`"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"10.665900655226146`", ",", "0.01147892717515875"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"20.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"11.199362729457336`", ",", "0.0055071173430502485`"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"40.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"14.831063909226039`", ",", "0.011373607275817859`"}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"80.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"22.424620315119526`", ",", "0.003938560064511855"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"160.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"36.60786133347448", ",", "0.009721595486457082"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"320.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"62.54053716519399", ",", "0.01924587067710669"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"640.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"109.85816366329091`", ",", "0.022422691194965906`"}], "]"}]}],
      "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.874943904636829*^9, 3.874943907052659*^9}, {
  3.8749440350082407`*^9, 3.8749440450080633`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"78cc9182-5bec-4042-bb4b-fbfbf7fd8d27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"3.935", "0.004"},
       "Around"],
      Around[3.9349346617986107`, 0.004098654929587719]], ",", "100"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"7.`", ",", 
     InterpretationBox[
      TemplateBox[{"12.597", "0.021"},
       "Around"],
      Around[12.5973499575545, 0.021042290566655936`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", 
     InterpretationBox[
      TemplateBox[{"10.666", "0.011"},
       "Around"],
      Around[10.665900655226146`, 0.01147892717515875]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.`", ",", 
     InterpretationBox[
      TemplateBox[{"11.199", "0.006"},
       "Around"],
      Around[11.199362729457336`, 0.0055071173430502485`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40.`", ",", 
     InterpretationBox[
      TemplateBox[{"14.831", "0.011"},
       "Around"],
      Around[14.831063909226039`, 0.011373607275817859`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80.`", ",", 
     InterpretationBox[
      TemplateBox[{"22.425", "0.004"},
       "Around"],
      Around[22.424620315119526`, 0.003938560064511855]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"160.`", ",", 
     InterpretationBox[
      TemplateBox[{"36.608", "0.010"},
       "Around"],
      Around[36.60786133347448, 0.009721595486457082]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"320.`", ",", 
     InterpretationBox[
      TemplateBox[{"62.541", "0.019"},
       "Around"],
      Around[62.54053716519399, 0.01924587067710669]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"640.`", ",", 
     InterpretationBox[
      TemplateBox[{"109.858", "0.022"},
       "Around"],
      Around[109.85816366329091`, 0.022422691194965906`]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.874944045354875*^9, 3.876761279283513*^9, 
  3.876920838300837*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"e5b80561-dc5e-4ffe-99d6-87ce322e48c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"javabd", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "21.273"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "10.727"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"20", ",", "11.164"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"50", ",", "16.745"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"75", ",", "21.4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"110", ",", "28.18"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.876921014779245*^9, 3.876921029761866*^9}, {
   3.876921811559169*^9, 3.876921816898643*^9}, {3.876922071648375*^9, 
   3.8769220732119093`*^9}, {3.876922172307678*^9, 3.876922173602129*^9}, {
   3.876922418262698*^9, 3.876922419810809*^9}, {3.876922609428934*^9, 
   3.8769226139764223`*^9}, {3.876922893583825*^9, 3.87692293535287*^9}, 
   3.876923050498555*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"34359d0d-d43d-41f2-8dd1-9a007a232b72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "21.273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "10.727`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "11.164`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "16.745`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"75", ",", "21.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"110", ",", "28.18`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8769220739179983`*^9, 3.876922420107821*^9, 3.8769226146751213`*^9, {
   3.8769229305306168`*^9, 3.8769229360735607`*^9}, 3.8769230508125668`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"89772e5a-13a6-4f43-b0e3-0c6217df4e2f"]
}, Open  ]],

Cell["\<\
Try shifting this (plat with b)- higher + wider in the middle \
\>", "Text",
 CellChangeTimes->{{3.876761182667418*^9, 
  3.876761219416741*^9}},ExpressionUUID->"544edde2-2d1b-4749-9d42-\
9376d22b9f22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"bdfinal", ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Mathematica 3D MC\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", "Orange"}]}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"javabd", ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Java 3D MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"0.86", "*", 
      RowBox[{"Nc", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "Nc", "]"}], "-", 
         RowBox[{"Log", "[", 
          RowBox[{"Log", "[", "51", "]"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", "3.9", ",", "300"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Purple"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Literature paschen curve\>\"", "}"}]}]}], "]"}], ",", 
   
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "->", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"N", ",", "c"}], "]"}], ",", 
      RowBox[{"Subscript", "[", 
       RowBox[{"N", ",", "i"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Parallel Plate Breakdown\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874943745443263*^9, 3.874943745727672*^9}, {
  3.874943916677835*^9, 3.874943965809845*^9}, {3.87676127440954*^9, 
  3.8767613029043207`*^9}, {3.8769208416886797`*^9, 3.876920855828533*^9}, {
  3.87692208341746*^9, 3.876922139085416*^9}, {3.876922485682455*^9, 
  3.876922488460269*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"d04500d5-9a90-4e34-bb0c-8da3ab9f1adb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{1.5040773967762742`, 3.459461769337737}, {
           1.5040773967762742`, 3.4660132854867065`}}], 
          
          LineBox[{{1.5040773967762742`, 3.4660132854867065`}, {
           1.5040773967762742`, 3.472522158497499}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{1.6094379124341003`, 3.039307441057812}, {
           1.6094379124341003`, 3.0563350132831637`}}], 
          
          LineBox[{{1.6094379124341003`, 3.0563350132831637`}, {
           1.6094379124341003`, 3.0730774949204096`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{1.7047480922384253`, 2.797382268541693}, {
           1.7047480922384253`, 2.8186293946754883`}}], 
          
          LineBox[{{1.7047480922384253`, 2.8186293946754883`}, {
           1.7047480922384253`, 2.8394344567471324`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{1.791759469228055, 2.6384146168062075`}, {
           1.791759469228055, 2.666901815838721}}], 
          
          LineBox[{{1.791759469228055, 2.666901815838721}, {1.791759469228055,
            2.694599921537797}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{2.0794415416798357`, 2.450660851708991}, {
           2.0794415416798357`, 2.4618873531182923`}}], 
          
          LineBox[{{2.0794415416798357`, 2.4618873531182923`}, {
           2.0794415416798357`, 2.4729892181298974`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{2.302585092994046, 2.3754623972047058`}, {
           2.302585092994046, 2.378601998626073}}], 
          
          LineBox[{{2.302585092994046, 2.378601998626073}, {2.302585092994046,
            2.3817317737928323`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{2.4849066497880004`, 2.3569600686349768`}, {
           2.4849066497880004`, 2.361143702734246}}], 
          
          LineBox[{{2.4849066497880004`, 2.361143702734246}, {
           2.4849066497880004`, 2.365309906934243}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{2.6390573296152584`, 2.3472116040267577`}, {
           2.6390573296152584`, 2.353541806167113}}], 
          
          LineBox[{{2.6390573296152584`, 2.353541806167113}, {
           2.6390573296152584`, 2.3598321887818448`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{2.772588722239781, 2.3651604590348247`}, {
           2.772588722239781, 2.370295838531825}}], 
          
          LineBox[{{2.772588722239781, 2.370295838531825}, {2.772588722239781,
            2.3754049805880952`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{2.833213344056216, 2.371120457447971}, {2.833213344056216,
            2.376907339887849}}], 
          
          LineBox[{{2.833213344056216, 2.376907339887849}, {2.833213344056216,
            2.3826609269036774`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{2.995732273553991, 2.4084496438482774`}, {
           2.995732273553991, 2.414116532251549}}], 
          
          LineBox[{{2.995732273553991, 2.414116532251549}, {2.995732273553991,
            2.4197514879050006`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{3.1354942159291497`, 2.447713783263631}, {
           3.1354942159291497`, 2.4541197982637573`}}], 
          
          LineBox[{{3.1354942159291497`, 2.4541197982637573`}, {
           3.1354942159291497`, 2.4604850373085276`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{3.258096538021482, 2.4971657149099493`}, {
           3.258096538021482, 2.5022310480604335`}}], 
          
          LineBox[{{3.258096538021482, 2.5022310480604335`}, {
           3.258096538021482, 2.507270852866255}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{3.4657359027997265`, 2.5815925179520978`}, {
           3.4657359027997265`, 2.585524645617248}}], 
          
          LineBox[{{3.4657359027997265`, 2.585524645617248}, {
           3.4657359027997265`, 2.589441372193704}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{3.6109179126442243`, 2.6550706071181938`}, {
           3.6109179126442243`, 2.657082967953713}}], 
          
          LineBox[{{3.6109179126442243`, 2.657082967953713}, {
           3.6109179126442243`, 2.6590912873246237`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{3.713572066704308, 2.702783034562521}, {3.713572066704308,
            2.703998841611579}}], 
          
          LineBox[{{3.713572066704308, 2.703998841611579}, {3.713572066704308,
            2.7052131722686825`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{3.8918202981106265`, 2.7893258408848487`}, {
           3.8918202981106265`, 2.802579553702826}}], 
          
          LineBox[{{3.8918202981106265`, 2.802579553702826}, {
           3.8918202981106265`, 2.8156599008515544`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{4.0943445622221, 2.913683327041656}, {4.0943445622221, 
           2.9186032638105806`}}], 
          
          LineBox[{{4.0943445622221, 2.9186032638105806`}, {4.0943445622221, 
           2.923499113261427}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{4.330733340286331, 3.042691947594804}, {4.330733340286331,
            3.059285770501084}}], 
          
          LineBox[{{4.330733340286331, 3.059285770501084}, {4.330733340286331,
            3.0756087270433663`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{4.5217885770490405`, 3.1682007474672678`}, {
           4.5217885770490405`, 3.207247883916269}}], 
          
          LineBox[{{4.5217885770490405`, 3.207247883916269}, {
           4.5217885770490405`, 3.244827465860175}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], {}, {
          
          LineBox[{{4.605170185988092, 3.2084133975504234`}, {
           4.605170185988092, 3.26416819235385}}], 
          
          LineBox[{{4.605170185988092, 3.26416819235385}, {4.605170185988092, 
           3.3169778717916802`}}]}}}, {{Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.5040773967762742`, 3.472522158497499}, 
             Offset[{3, 0}, {1.5040773967762742`, 3.472522158497499}]}, {{
             1.5040773967762742`, 3.472522158497499}, 
             Offset[{-3, 0}, {1.5040773967762742`, 3.472522158497499}]}, {{
             1.5040773967762742`, 3.459461769337737}, 
             Offset[{3, 0}, {1.5040773967762742`, 3.459461769337737}]}, {{
             1.5040773967762742`, 3.459461769337737}, 
             Offset[{-3, 0}, {1.5040773967762742`, 3.459461769337737}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.6094379124341003`, 3.0730774949204096`}, 
             Offset[{3, 0}, {1.6094379124341003`, 3.0730774949204096`}]}, {{
             1.6094379124341003`, 3.0730774949204096`}, 
             Offset[{-3, 0}, {1.6094379124341003`, 3.0730774949204096`}]}, {{
             1.6094379124341003`, 3.039307441057812}, 
             Offset[{3, 0}, {1.6094379124341003`, 3.039307441057812}]}, {{
             1.6094379124341003`, 3.039307441057812}, 
             Offset[{-3, 0}, {1.6094379124341003`, 3.039307441057812}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.7047480922384253`, 2.8394344567471324`}, 
             Offset[{3, 0}, {1.7047480922384253`, 2.8394344567471324`}]}, {{
             1.7047480922384253`, 2.8394344567471324`}, 
             Offset[{-3, 0}, {1.7047480922384253`, 2.8394344567471324`}]}, {{
             1.7047480922384253`, 2.797382268541693}, 
             Offset[{3, 0}, {1.7047480922384253`, 2.797382268541693}]}, {{
             1.7047480922384253`, 2.797382268541693}, 
             Offset[{-3, 0}, {1.7047480922384253`, 2.797382268541693}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{1.791759469228055, 2.694599921537797}, 
             Offset[{3, 0}, {1.791759469228055, 2.694599921537797}]}, {{
             1.791759469228055, 2.694599921537797}, 
             Offset[{-3, 0}, {1.791759469228055, 2.694599921537797}]}, {{
             1.791759469228055, 2.6384146168062075`}, 
             Offset[{3, 0}, {1.791759469228055, 2.6384146168062075`}]}, {{
             1.791759469228055, 2.6384146168062075`}, 
             Offset[{-3, 0}, {1.791759469228055, 2.6384146168062075`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.0794415416798357`, 2.4729892181298974`}, 
             Offset[{3, 0}, {2.0794415416798357`, 2.4729892181298974`}]}, {{
             2.0794415416798357`, 2.4729892181298974`}, 
             Offset[{-3, 0}, {2.0794415416798357`, 2.4729892181298974`}]}, {{
             2.0794415416798357`, 2.450660851708991}, 
             Offset[{3, 0}, {2.0794415416798357`, 2.450660851708991}]}, {{
             2.0794415416798357`, 2.450660851708991}, 
             Offset[{-3, 0}, {2.0794415416798357`, 2.450660851708991}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.302585092994046, 2.3817317737928323`}, 
             Offset[{3, 0}, {2.302585092994046, 2.3817317737928323`}]}, {{
             2.302585092994046, 2.3817317737928323`}, 
             Offset[{-3, 0}, {2.302585092994046, 2.3817317737928323`}]}, {{
             2.302585092994046, 2.3754623972047058`}, 
             Offset[{3, 0}, {2.302585092994046, 2.3754623972047058`}]}, {{
             2.302585092994046, 2.3754623972047058`}, 
             Offset[{-3, 0}, {2.302585092994046, 2.3754623972047058`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.4849066497880004`, 2.365309906934243}, 
             Offset[{3, 0}, {2.4849066497880004`, 2.365309906934243}]}, {{
             2.4849066497880004`, 2.365309906934243}, 
             Offset[{-3, 0}, {2.4849066497880004`, 2.365309906934243}]}, {{
             2.4849066497880004`, 2.3569600686349768`}, 
             Offset[{3, 0}, {2.4849066497880004`, 2.3569600686349768`}]}, {{
             2.4849066497880004`, 2.3569600686349768`}, 
             
             Offset[{-3, 0}, {2.4849066497880004`, 
              2.3569600686349768`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.6390573296152584`, 2.3598321887818448`}, 
             Offset[{3, 0}, {2.6390573296152584`, 2.3598321887818448`}]}, {{
             2.6390573296152584`, 2.3598321887818448`}, 
             Offset[{-3, 0}, {2.6390573296152584`, 2.3598321887818448`}]}, {{
             2.6390573296152584`, 2.3472116040267577`}, 
             Offset[{3, 0}, {2.6390573296152584`, 2.3472116040267577`}]}, {{
             2.6390573296152584`, 2.3472116040267577`}, 
             
             Offset[{-3, 0}, {2.6390573296152584`, 
              2.3472116040267577`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.772588722239781, 2.3754049805880952`}, 
             Offset[{3, 0}, {2.772588722239781, 2.3754049805880952`}]}, {{
             2.772588722239781, 2.3754049805880952`}, 
             Offset[{-3, 0}, {2.772588722239781, 2.3754049805880952`}]}, {{
             2.772588722239781, 2.3651604590348247`}, 
             Offset[{3, 0}, {2.772588722239781, 2.3651604590348247`}]}, {{
             2.772588722239781, 2.3651604590348247`}, 
             Offset[{-3, 0}, {2.772588722239781, 2.3651604590348247`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.833213344056216, 2.3826609269036774`}, 
             Offset[{3, 0}, {2.833213344056216, 2.3826609269036774`}]}, {{
             2.833213344056216, 2.3826609269036774`}, 
             Offset[{-3, 0}, {2.833213344056216, 2.3826609269036774`}]}, {{
             2.833213344056216, 2.371120457447971}, 
             Offset[{3, 0}, {2.833213344056216, 2.371120457447971}]}, {{
             2.833213344056216, 2.371120457447971}, 
             Offset[{-3, 0}, {2.833213344056216, 2.371120457447971}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{2.995732273553991, 2.4197514879050006`}, 
             Offset[{3, 0}, {2.995732273553991, 2.4197514879050006`}]}, {{
             2.995732273553991, 2.4197514879050006`}, 
             Offset[{-3, 0}, {2.995732273553991, 2.4197514879050006`}]}, {{
             2.995732273553991, 2.4084496438482774`}, 
             Offset[{3, 0}, {2.995732273553991, 2.4084496438482774`}]}, {{
             2.995732273553991, 2.4084496438482774`}, 
             Offset[{-3, 0}, {2.995732273553991, 2.4084496438482774`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.1354942159291497`, 2.4604850373085276`}, 
             Offset[{3, 0}, {3.1354942159291497`, 2.4604850373085276`}]}, {{
             3.1354942159291497`, 2.4604850373085276`}, 
             Offset[{-3, 0}, {3.1354942159291497`, 2.4604850373085276`}]}, {{
             3.1354942159291497`, 2.447713783263631}, 
             Offset[{3, 0}, {3.1354942159291497`, 2.447713783263631}]}, {{
             3.1354942159291497`, 2.447713783263631}, 
             Offset[{-3, 0}, {3.1354942159291497`, 2.447713783263631}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.258096538021482, 2.507270852866255}, 
             Offset[{3, 0}, {3.258096538021482, 2.507270852866255}]}, {{
             3.258096538021482, 2.507270852866255}, 
             Offset[{-3, 0}, {3.258096538021482, 2.507270852866255}]}, {{
             3.258096538021482, 2.4971657149099493`}, 
             Offset[{3, 0}, {3.258096538021482, 2.4971657149099493`}]}, {{
             3.258096538021482, 2.4971657149099493`}, 
             Offset[{-3, 0}, {3.258096538021482, 2.4971657149099493`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.4657359027997265`, 2.589441372193704}, 
             Offset[{3, 0}, {3.4657359027997265`, 2.589441372193704}]}, {{
             3.4657359027997265`, 2.589441372193704}, 
             Offset[{-3, 0}, {3.4657359027997265`, 2.589441372193704}]}, {{
             3.4657359027997265`, 2.5815925179520978`}, 
             Offset[{3, 0}, {3.4657359027997265`, 2.5815925179520978`}]}, {{
             3.4657359027997265`, 2.5815925179520978`}, 
             
             Offset[{-3, 0}, {3.4657359027997265`, 
              2.5815925179520978`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.6109179126442243`, 2.6590912873246237`}, 
             Offset[{3, 0}, {3.6109179126442243`, 2.6590912873246237`}]}, {{
             3.6109179126442243`, 2.6590912873246237`}, 
             Offset[{-3, 0}, {3.6109179126442243`, 2.6590912873246237`}]}, {{
             3.6109179126442243`, 2.6550706071181938`}, 
             Offset[{3, 0}, {3.6109179126442243`, 2.6550706071181938`}]}, {{
             3.6109179126442243`, 2.6550706071181938`}, 
             
             Offset[{-3, 0}, {3.6109179126442243`, 
              2.6550706071181938`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.713572066704308, 2.7052131722686825`}, 
             Offset[{3, 0}, {3.713572066704308, 2.7052131722686825`}]}, {{
             3.713572066704308, 2.7052131722686825`}, 
             Offset[{-3, 0}, {3.713572066704308, 2.7052131722686825`}]}, {{
             3.713572066704308, 2.702783034562521}, 
             Offset[{3, 0}, {3.713572066704308, 2.702783034562521}]}, {{
             3.713572066704308, 2.702783034562521}, 
             Offset[{-3, 0}, {3.713572066704308, 2.702783034562521}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.8918202981106265`, 2.8156599008515544`}, 
             Offset[{3, 0}, {3.8918202981106265`, 2.8156599008515544`}]}, {{
             3.8918202981106265`, 2.8156599008515544`}, 
             Offset[{-3, 0}, {3.8918202981106265`, 2.8156599008515544`}]}, {{
             3.8918202981106265`, 2.7893258408848487`}, 
             Offset[{3, 0}, {3.8918202981106265`, 2.7893258408848487`}]}, {{
             3.8918202981106265`, 2.7893258408848487`}, 
             
             Offset[{-3, 0}, {3.8918202981106265`, 
              2.7893258408848487`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.0943445622221, 2.923499113261427}, 
             Offset[{3, 0}, {4.0943445622221, 2.923499113261427}]}, {{
             4.0943445622221, 2.923499113261427}, 
             Offset[{-3, 0}, {4.0943445622221, 2.923499113261427}]}, {{
             4.0943445622221, 2.913683327041656}, 
             Offset[{3, 0}, {4.0943445622221, 2.913683327041656}]}, {{
             4.0943445622221, 2.913683327041656}, 
             Offset[{-3, 0}, {4.0943445622221, 2.913683327041656}]}}], {{{1., 
           0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.330733340286331, 3.0756087270433663`}, 
             Offset[{3, 0}, {4.330733340286331, 3.0756087270433663`}]}, {{
             4.330733340286331, 3.0756087270433663`}, 
             Offset[{-3, 0}, {4.330733340286331, 3.0756087270433663`}]}, {{
             4.330733340286331, 3.042691947594804}, 
             Offset[{3, 0}, {4.330733340286331, 3.042691947594804}]}, {{
             4.330733340286331, 3.042691947594804}, 
             Offset[{-3, 0}, {4.330733340286331, 3.042691947594804}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.5217885770490405`, 3.244827465860175}, 
             Offset[{3, 0}, {4.5217885770490405`, 3.244827465860175}]}, {{
             4.5217885770490405`, 3.244827465860175}, 
             Offset[{-3, 0}, {4.5217885770490405`, 3.244827465860175}]}, {{
             4.5217885770490405`, 3.1682007474672678`}, 
             Offset[{3, 0}, {4.5217885770490405`, 3.1682007474672678`}]}, {{
             4.5217885770490405`, 3.1682007474672678`}, 
             
             Offset[{-3, 0}, {4.5217885770490405`, 
              3.1682007474672678`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0.5, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.605170185988092, 3.3169778717916802`}, 
             Offset[{3, 0}, {4.605170185988092, 3.3169778717916802`}]}, {{
             4.605170185988092, 3.3169778717916802`}, 
             Offset[{-3, 0}, {4.605170185988092, 3.3169778717916802`}]}, {{
             4.605170185988092, 3.2084133975504234`}, 
             Offset[{3, 0}, {4.605170185988092, 3.2084133975504234`}]}, {{
             4.605170185988092, 3.2084133975504234`}, 
             Offset[{-3, 0}, {4.605170185988092, 3.2084133975504234`}]}}], {{{
           1., 0.}, {0., 1.}}, {0., 0.}}]}}}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         PointBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAHuncdbMQ+D/YVWUsZboLQDON7fdB
wPk/CF59xV9zCECgUYHvpUb7P2xnbZGNjAZAAiAq+gur/D/SXIWe0FUFQHOr
Oz+yogBA76Eg//GxA0AWVbW7sWsCQM5kEnxgBwNAfZ7TvBbhA0AQM0NPn+MC
QKe71xbKHAVAWw36uQ3UAkDvOfr+Qi4GQHK2Iqpd9gJAen/6wWuqBkB9htP+
5wMDQJHjc3tC9wdA0wYWVBxQA0Dws9H9fRUJQFcSkI8JogNAzRrw6pQQCkCX
pDO2kQQEQGvIuL7TuQtAsGyfiyevBEC9xzruKOMMQGH1ELe0QQVATqyORWW1
DUAgJgklyqEFQFdaMq5yIg9APbw81K5rBkCLMmXcm2AQQL6FAKtMWQdAEujA
wqtSEUDPXGvRankIQHRop75PFhJARK8clHGoCUAWVbW7sWsSQABtljYEHQpA
6J+PpA==
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{1.6094379124341003`, 3.0574386629899695`}, {
          2.302585092994046, 2.372763927615292}, {2.995732273553991, 
          2.412694315674076}, {3.912023005428146, 2.818099706246168}, {
          4.31748811353631, 3.0633909220278057`}, {4.700480365792417, 
          3.3386125064705343`}}]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1: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
+pRNYRsTDJes/3I9wID/A68KWpQ=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$1395471#1"]& ]}}, {}}}, {
    PlotRange -> {1, 5}, AxesOrigin -> {0.5, 1}, AxesLabel -> {
       FormBox[
        SubscriptBox["N", "c"], TraditionalForm], 
       FormBox[
        SubscriptBox["N", "i"], TraditionalForm]}, PlotLabel -> 
     FormBox["\"Parallel Plate Breakdown\"", TraditionalForm], 
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {1.373519236813801, 2.2591496669684195`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{1.373519236813801, 4.605170185988092}, {
      2.2591496669684195`, 3.472522158497499}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Mathematica 3D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Java 3D MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Literature paschen curve\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8749437473290033`*^9, {3.8749439290151587`*^9, 3.874943935622859*^9}, 
   3.8749439662817*^9, 3.8749440466239653`*^9, {3.876761276283311*^9, 
   3.876761303330708*^9}, {3.876920839459291*^9, 3.876920866764236*^9}, {
   3.876922090692751*^9, 3.876922139558977*^9}, 3.876922422042708*^9, {
   3.876922466279399*^9, 3.876922489574051*^9}, 3.876922615835747*^9, {
   3.876922931783862*^9, 3.876922937924241*^9}, 3.876923053126273*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"c74f2ac8-7903-4a1c-9182-de72d1b5ee48"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.876920877856497*^9, 
  3.876920878871871*^9}},ExpressionUUID->"7139d9de-d6dc-4f26-a0c2-\
1cbf19206b3a"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.876920884052595*^9, 
  3.876920886236949*^9}},ExpressionUUID->"61d67161-531b-4114-bd02-\
9fa4353f8d11"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Concentric sphere experiments", "Section",
 CellChangeTimes->{{3.8645634148255577`*^9, 3.864563421727064*^9}, {
  3.867085435377643*^9, 3.8670854372402287`*^9}, {3.875292986983927*^9, 
  3.8752929891558647`*^9}},ExpressionUUID->"5fbd51c4-c1a1-4b90-bcf3-\
2b6281f7853a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"AvgElectronsEuler", "[", 
     RowBox[{"Nc", ",", 
      RowBox[{"1", "*", "Nc"}], ",", "5", ",", "15", ",", "0.5", ",", "0.8", 
      ",", "False", ",", "200"}], "]"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "0.25", ",", "8.25"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.870712687833654*^9, 3.870712692625424*^9}, {
  3.875293031700973*^9, 3.875293061569832*^9}, {3.8752931101257267`*^9, 
  3.875293126926791*^9}, {3.875293169969655*^9, 3.875293210168199*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"1b5fcf15-f465-459f-a766-41c5027276be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   InterpretationBox[
    TemplateBox[{"1.325", "0.033"},
     "Around"],
    Around[1.325, 0.033202212797844764`]], ",", 
   InterpretationBox[
    TemplateBox[{"2.02", "0.05"},
     "Around"],
    Around[2.015, 0.04620116598846253]], ",", 
   InterpretationBox[
    TemplateBox[{"2.82", "0.06"},
     "Around"],
    Around[2.82, 0.06005023023064748]], ",", 
   InterpretationBox[
    TemplateBox[{"4.38", "0.11"},
     "Around"],
    Around[4.375, 0.10969063394784168`]], ",", 
   InterpretationBox[
    TemplateBox[{"6.34", "0.17"},
     "Around"],
    Around[6.34, 0.16915991066705025`]], ",", 
   InterpretationBox[
    TemplateBox[{"8.86", "0.25"},
     "Around"],
    Around[8.86, 0.24912308515629164`]], ",", 
   InterpretationBox[
    TemplateBox[{"12.98", "0.35"},
     "Around"],
    Around[12.975, 0.34997756568444793`]], ",", 
   InterpretationBox[
    TemplateBox[{"18.8", "0.6"},
     "Around"],
    Around[18.75, 0.5595560875152524]]}], "}"}]], "Output",
 CellChangeTimes->{{3.875293156311899*^9, 3.875293208057548*^9}, 
   3.875293362050426*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"3f211ed1-6048-487b-841a-262d445a9815"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t1", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"Nc", ",", 
       RowBox[{"{", 
        RowBox[{"Nc", ",", "0.25", ",", "8.25"}], "}"}]}], "]"}], ",", "t1"}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8752937077535057`*^9, 3.875293709714478*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"96571f3c-34a2-4c76-8c9f-a5a6e400332b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     InterpretationBox[
      TemplateBox[{"1.325", "0.033"},
       "Around"],
      Around[1.325, 0.033202212797844764`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", 
     InterpretationBox[
      TemplateBox[{"2.02", "0.05"},
       "Around"],
      Around[2.015, 0.04620116598846253]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", 
     InterpretationBox[
      TemplateBox[{"2.82", "0.06"},
       "Around"],
      Around[2.82, 0.06005023023064748]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.25`", ",", 
     InterpretationBox[
      TemplateBox[{"4.38", "0.11"},
       "Around"],
      Around[4.375, 0.10969063394784168`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.25`", ",", 
     InterpretationBox[
      TemplateBox[{"6.34", "0.17"},
       "Around"],
      Around[6.34, 0.16915991066705025`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.25`", ",", 
     InterpretationBox[
      TemplateBox[{"8.86", "0.25"},
       "Around"],
      Around[8.86, 0.24912308515629164`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.25`", ",", 
     InterpretationBox[
      TemplateBox[{"12.98", "0.35"},
       "Around"],
      Around[12.975, 0.34997756568444793`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.25`", ",", 
     InterpretationBox[
      TemplateBox[{"18.8", "0.6"},
       "Around"],
      Around[18.75, 0.5595560875152524]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.875293712519947*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"2a045477-8a34-4e10-a24c-ffa61568642d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", "t1", "]"}]], "Input",
 CellChangeTimes->{{3.8752931627849827`*^9, 3.875293180272118*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"888fee82-74ae-4773-bc7c-590e21a5b123"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{1.25, 0.25603488165777416`}, {1.25, 0.2814124594381855}}], 
         LineBox[{{1.25, 0.2814124594381855}, {1.25, 0.3061619229097777}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{2.25, 0.6774236278614667}, {2.25, 0.7006191953986464}}], 
         LineBox[{{2.25, 0.7006191953986464}, {2.25, 0.7232889031560641}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{3.25, 1.0152124802045182`}, {3.25, 1.0367368849500223`}}], 
         LineBox[{{3.25, 1.0367368849500223`}, {3.25, 1.0578077350480695`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{4.25, 1.4505147143158845`}, {4.25, 1.4759065198095778`}}], 
         LineBox[{{4.25, 1.4759065198095778`}, {4.25, 1.5006695151936211`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{5.25, 1.819834985752965}, {5.25, 1.8468787684491346`}}], 
         LineBox[{{5.25, 1.8468787684491346`}, {5.25, 1.873210401912845}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{6.25, 2.1530261616673454`}, {6.25, 2.1815467646169897`}}], 
         LineBox[{{6.25, 2.1815467646169897`}, {6.25, 2.2092764481487426`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{7.25, 2.5356807521353337`}, {7.25, 2.563024429051952}}], 
         LineBox[{{7.25, 2.563024429051952}, {7.25, 2.589640286424558}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{8.25, 2.9008963964370222`}, {8.25, 2.9311937524164198`}}], 
         LineBox[{{8.25, 2.9311937524164198`}, {8.25, 2.9606001074405617`}}]}},
       Antialiasing->False]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.25, 0.3061619229097777}, 
            Offset[{3, 0}, {1.25, 0.3061619229097777}]}, {{1.25, 
            0.3061619229097777}, 
            Offset[{-3, 0}, {1.25, 0.3061619229097777}]}, {{1.25, 
            0.25603488165777416`}, 
            Offset[{3, 0}, {1.25, 0.25603488165777416`}]}, {{1.25, 
            0.25603488165777416`}, 
            Offset[{-3, 0}, {1.25, 0.25603488165777416`}]}}], {{{1., 0.}, {0.,
           1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.25, 0.7232889031560641}, 
            Offset[{3, 0}, {2.25, 0.7232889031560641}]}, {{2.25, 
            0.7232889031560641}, 
            Offset[{-3, 0}, {2.25, 0.7232889031560641}]}, {{2.25, 
            0.6774236278614667}, 
            Offset[{3, 0}, {2.25, 0.6774236278614667}]}, {{2.25, 
            0.6774236278614667}, 
            Offset[{-3, 0}, {2.25, 0.6774236278614667}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3.25, 1.0578077350480695`}, 
            Offset[{3, 0}, {3.25, 1.0578077350480695`}]}, {{3.25, 
            1.0578077350480695`}, 
            Offset[{-3, 0}, {3.25, 1.0578077350480695`}]}, {{3.25, 
            1.0152124802045182`}, 
            Offset[{3, 0}, {3.25, 1.0152124802045182`}]}, {{3.25, 
            1.0152124802045182`}, 
            Offset[{-3, 0}, {3.25, 1.0152124802045182`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{4.25, 1.5006695151936211`}, 
            Offset[{3, 0}, {4.25, 1.5006695151936211`}]}, {{4.25, 
            1.5006695151936211`}, 
            Offset[{-3, 0}, {4.25, 1.5006695151936211`}]}, {{4.25, 
            1.4505147143158845`}, 
            Offset[{3, 0}, {4.25, 1.4505147143158845`}]}, {{4.25, 
            1.4505147143158845`}, 
            Offset[{-3, 0}, {4.25, 1.4505147143158845`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{5.25, 1.873210401912845}, 
            Offset[{3, 0}, {5.25, 1.873210401912845}]}, {{5.25, 
            1.873210401912845}, 
            Offset[{-3, 0}, {5.25, 1.873210401912845}]}, {{5.25, 
            1.819834985752965}, Offset[{3, 0}, {5.25, 1.819834985752965}]}, {{
            5.25, 1.819834985752965}, 
            Offset[{-3, 0}, {5.25, 1.819834985752965}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{6.25, 2.2092764481487426`}, 
            Offset[{3, 0}, {6.25, 2.2092764481487426`}]}, {{6.25, 
            2.2092764481487426`}, 
            Offset[{-3, 0}, {6.25, 2.2092764481487426`}]}, {{6.25, 
            2.1530261616673454`}, 
            Offset[{3, 0}, {6.25, 2.1530261616673454`}]}, {{6.25, 
            2.1530261616673454`}, 
            Offset[{-3, 0}, {6.25, 2.1530261616673454`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{7.25, 2.589640286424558}, 
            Offset[{3, 0}, {7.25, 2.589640286424558}]}, {{7.25, 
            2.589640286424558}, 
            Offset[{-3, 0}, {7.25, 2.589640286424558}]}, {{7.25, 
            2.5356807521353337`}, 
            Offset[{3, 0}, {7.25, 2.5356807521353337`}]}, {{7.25, 
            2.5356807521353337`}, 
            Offset[{-3, 0}, {7.25, 2.5356807521353337`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{8.25, 2.9606001074405617`}, 
            Offset[{3, 0}, {8.25, 2.9606001074405617`}]}, {{8.25, 
            2.9606001074405617`}, 
            Offset[{-3, 0}, {8.25, 2.9606001074405617`}]}, {{8.25, 
            2.9008963964370222`}, 
            Offset[{3, 0}, {8.25, 2.9008963964370222`}]}, {{8.25, 
            2.9008963964370222`}, 
            Offset[{-3, 0}, {8.25, 2.9008963964370222`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0.25, 0.}, {1.25, 0.2814124594381855}, {2.25, 
     0.7006191953986464}, {3.25, 1.0367368849500223`}, {4.25, 
     1.4759065198095778`}, {5.25, 1.8468787684491346`}, {6.25, 
     2.1815467646169897`}, {7.25, 2.563024429051952}, {8.25, 
     2.9311937524164198`}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.2316837599012621},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8.25}, {-0.2316837599012621, 2.9606001074405617`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
       FormBox["20", TraditionalForm], {0.01, 0.}}, {-1.7719568419318752`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.7147984280919266`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6607312068216509`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.4054651081081644, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.70805020110221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.007333185232471, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.174387269895637, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.875293165853704*^9, 3.8752933671593847`*^9, 
  3.875293714736801*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"0eb433fc-63aa-4414-9abb-fa54956080cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"AvgElectronsEuler", "[", 
     RowBox[{"Nc", ",", 
      RowBox[{"2", "*", "Nc"}], ",", "5", ",", "15", ",", "0.5", ",", "0.8", 
      ",", "False", ",", "100"}], "]"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "0.25", ",", "8.25"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87529303444969*^9, 3.875293037572019*^9}, {
  3.87529337244736*^9, 3.8752933841970673`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"32e1de01-0f28-4a90-a9b2-9fd216944757"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   InterpretationBox[
    TemplateBox[{"1.82", "0.08"},
     "Around"],
    Around[1.82, 0.07962031109832428]], ",", 
   InterpretationBox[
    TemplateBox[{"3.31", "0.16"},
     "Around"],
    Around[3.31, 0.1631105468847754]], ",", 
   InterpretationBox[
    TemplateBox[{"5.63", "0.30"},
     "Around"],
    Around[5.63, 0.29904055331217627`]], ",", 
   InterpretationBox[
    TemplateBox[{"10.2", "0.6"},
     "Around"],
    Around[10.18, 0.6366547674598008]], ",", 
   InterpretationBox[
    TemplateBox[{"18.1", "1.1"},
     "Around"],
    Around[18.11, 1.1496942940177488`]], ",", 
   InterpretationBox[
    TemplateBox[{"28.6", "2.0"},
     "Around"],
    Around[28.63, 2.035376767544178]], ",", 
   InterpretationBox[
    TemplateBox[{"52.", "4."},
     "Around"],
    Around[51.89, 4.066763411665922]], ",", 
   InterpretationBox[
    TemplateBox[{"93.", "7."},
     "Around"],
    Around[92.86, 6.82280815435339]]}], "}"}]], "Output",
 CellChangeTimes->{3.875293535512123*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"516d8bf6-1d94-4637-a2ce-35e697991431"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"Nc", ",", 
       RowBox[{"{", 
        RowBox[{"Nc", ",", "0.25", ",", "8.25"}], "}"}]}], "]"}], ",", "t2"}],
     "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8752936838516273`*^9, 3.87529369847792*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"17eaedc6-9a7b-460c-a819-26ae224416ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     InterpretationBox[
      TemplateBox[{"1.82", "0.08"},
       "Around"],
      Around[1.82, 0.07962031109832428]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", 
     InterpretationBox[
      TemplateBox[{"3.31", "0.16"},
       "Around"],
      Around[3.31, 0.1631105468847754]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", 
     InterpretationBox[
      TemplateBox[{"5.63", "0.30"},
       "Around"],
      Around[5.63, 0.29904055331217627`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.25`", ",", 
     InterpretationBox[
      TemplateBox[{"10.2", "0.6"},
       "Around"],
      Around[10.18, 0.6366547674598008]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.25`", ",", 
     InterpretationBox[
      TemplateBox[{"18.1", "1.1"},
       "Around"],
      Around[18.11, 1.1496942940177488`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.25`", ",", 
     InterpretationBox[
      TemplateBox[{"28.6", "2.0"},
       "Around"],
      Around[28.63, 2.035376767544178]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.25`", ",", 
     InterpretationBox[
      TemplateBox[{"52.", "4."},
       "Around"],
      Around[51.89, 4.066763411665922]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.25`", ",", 
     InterpretationBox[
      TemplateBox[{"93.", "7."},
       "Around"],
      Around[92.86, 6.82280815435339]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.87529369880476*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"c4eb368e-22ed-4db2-86e1-cc4410c83901"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", "t2", "]"}]], "Input",
 CellChangeTimes->{{3.875293659605331*^9, 3.875293669745336*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"c90c15ae-2d2a-4d24-8713-5a96ee7f854a"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{1.25, 0.5541033014341168}, {1.25, 0.598836501088704}}], 
         LineBox[{{1.25, 0.598836501088704}, {1.25, 0.6416540299384282}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{2.25, 1.1464144897611863`}, {2.25, 1.1969481893889715`}}], 
         LineBox[{{2.25, 1.1969481893889715`}, {2.25, 1.2450506036281732`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{3.25, 1.673531230737562}, {3.25, 1.728109442151599}}], 
         LineBox[{{3.25, 1.728109442151599}, {3.25, 1.7798624045251106`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{4.25, 2.255844077301793}, {4.25, 2.3204250111223765`}}], 
         LineBox[{{4.25, 2.3204250111223765`}, {4.25, 2.381087054400626}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{5.25, 2.830875655318185}, {5.25, 2.896464271895322}}], 
         LineBox[{{5.25, 2.896464271895322}, {5.25, 2.9580145336592607`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{6.25, 3.280709061237597}, {6.25, 3.354455119110024}}], 
         LineBox[{{6.25, 3.354455119110024}, {6.25, 3.4231342255683956`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{7.25, 3.8675116424736844`}, {7.25, 3.949126093379648}}], 
         LineBox[{{7.25, 3.949126093379648}, {7.25, 4.024579310591851}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{8.25, 4.45477966608967}, {8.25, 4.531092982591776}}], 
         LineBox[{{8.25, 4.531092982591776}, {8.25, 4.6019932263352805`}}]}},
       Antialiasing->False]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1.25, 0.6416540299384282}, 
            Offset[{3, 0}, {1.25, 0.6416540299384282}]}, {{1.25, 
            0.6416540299384282}, 
            Offset[{-3, 0}, {1.25, 0.6416540299384282}]}, {{1.25, 
            0.5541033014341168}, 
            Offset[{3, 0}, {1.25, 0.5541033014341168}]}, {{1.25, 
            0.5541033014341168}, 
            Offset[{-3, 0}, {1.25, 0.5541033014341168}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.25, 1.2450506036281732`}, 
            Offset[{3, 0}, {2.25, 1.2450506036281732`}]}, {{2.25, 
            1.2450506036281732`}, 
            Offset[{-3, 0}, {2.25, 1.2450506036281732`}]}, {{2.25, 
            1.1464144897611863`}, 
            Offset[{3, 0}, {2.25, 1.1464144897611863`}]}, {{2.25, 
            1.1464144897611863`}, 
            Offset[{-3, 0}, {2.25, 1.1464144897611863`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3.25, 1.7798624045251106`}, 
            Offset[{3, 0}, {3.25, 1.7798624045251106`}]}, {{3.25, 
            1.7798624045251106`}, 
            Offset[{-3, 0}, {3.25, 1.7798624045251106`}]}, {{3.25, 
            1.673531230737562}, Offset[{3, 0}, {3.25, 1.673531230737562}]}, {{
            3.25, 1.673531230737562}, 
            Offset[{-3, 0}, {3.25, 1.673531230737562}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{4.25, 2.381087054400626}, 
            Offset[{3, 0}, {4.25, 2.381087054400626}]}, {{4.25, 
            2.381087054400626}, 
            Offset[{-3, 0}, {4.25, 2.381087054400626}]}, {{4.25, 
            2.255844077301793}, Offset[{3, 0}, {4.25, 2.255844077301793}]}, {{
            4.25, 2.255844077301793}, 
            Offset[{-3, 0}, {4.25, 2.255844077301793}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{5.25, 2.9580145336592607`}, 
            Offset[{3, 0}, {5.25, 2.9580145336592607`}]}, {{5.25, 
            2.9580145336592607`}, 
            Offset[{-3, 0}, {5.25, 2.9580145336592607`}]}, {{5.25, 
            2.830875655318185}, Offset[{3, 0}, {5.25, 2.830875655318185}]}, {{
            5.25, 2.830875655318185}, 
            Offset[{-3, 0}, {5.25, 2.830875655318185}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{6.25, 3.4231342255683956`}, 
            Offset[{3, 0}, {6.25, 3.4231342255683956`}]}, {{6.25, 
            3.4231342255683956`}, 
            Offset[{-3, 0}, {6.25, 3.4231342255683956`}]}, {{6.25, 
            3.280709061237597}, Offset[{3, 0}, {6.25, 3.280709061237597}]}, {{
            6.25, 3.280709061237597}, 
            Offset[{-3, 0}, {6.25, 3.280709061237597}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{7.25, 4.024579310591851}, 
            Offset[{3, 0}, {7.25, 4.024579310591851}]}, {{7.25, 
            4.024579310591851}, 
            Offset[{-3, 0}, {7.25, 4.024579310591851}]}, {{7.25, 
            3.8675116424736844`}, 
            Offset[{3, 0}, {7.25, 3.8675116424736844`}]}, {{7.25, 
            3.8675116424736844`}, 
            Offset[{-3, 0}, {7.25, 3.8675116424736844`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{8.25, 4.6019932263352805`}, 
            Offset[{3, 0}, {8.25, 4.6019932263352805`}]}, {{8.25, 
            4.6019932263352805`}, 
            Offset[{-3, 0}, {8.25, 4.6019932263352805`}]}, {{8.25, 
            4.45477966608967}, Offset[{3, 0}, {8.25, 4.45477966608967}]}, {{
            8.25, 4.45477966608967}, 
            Offset[{-3, 0}, {8.25, 4.45477966608967}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0.25, 0.}, {1.25, 0.598836501088704}, {2.25, 
     1.1969481893889715`}, {3.25, 1.728109442151599}, {4.25, 
     2.3204250111223765`}, {5.25, 2.896464271895322}, {6.25, 
     3.354455119110024}, {7.25, 3.949126093379648}, {8.25, 
     4.531092982591776}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.3601320864097494},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8.25}, {-0.3601320864097494, 4.6019932263352805`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.875293670339344*^9, 3.875293700828631*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"0daa62c4-8645-4abd-8c88-dc7c5f125774"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t3", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nc", ",", 
      RowBox[{"AvgElectronsEuler", "[", 
       RowBox[{"Nc", ",", 
        RowBox[{"0.5", "*", "Nc"}], ",", "5", ",", "15", ",", "0.5", ",", 
        "0.8", ",", "False", ",", "200"}], "]"}]}], "}"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "0.25", ",", "8.25"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.875293677957415*^9, 3.875293678061569*^9}, {
  3.87529371877942*^9, 3.875293722613998*^9}, {3.875293828094276*^9, 
  3.8752938300004263`*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"14dc4396-905f-416a-a107-04dc7628df70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", 
     InterpretationBox[
      TemplateBox[{"1.150", "0.025"},
       "Around"],
      Around[1.15, 0.025312121949531214`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", 
     InterpretationBox[
      TemplateBox[{"1.530", "0.035"},
       "Around"],
      Around[1.53, 0.035380203419000424`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.25`", ",", 
     InterpretationBox[
      TemplateBox[{"1.87", "0.04"},
       "Around"],
      Around[1.87, 0.039665688373843384`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.25`", ",", 
     InterpretationBox[
      TemplateBox[{"2.31", "0.05"},
       "Around"],
      Around[2.305, 0.05072217161624033]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.25`", ",", 
     InterpretationBox[
      TemplateBox[{"2.71", "0.06"},
       "Around"],
      Around[2.705, 0.06130797942934136]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.25`", ",", 
     InterpretationBox[
      TemplateBox[{"3.49", "0.07"},
       "Around"],
      Around[3.485, 0.07016760265472632]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.25`", ",", 
     InterpretationBox[
      TemplateBox[{"4.07", "0.09"},
       "Around"],
      Around[4.065, 0.08596993163733845]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8752938254899282`*^9, 3.875293924598345*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"81021766-218d-4e8b-8586-cdbbb16a6c7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", "t3", "]"}]], "Input",
 CellChangeTimes->{{3.8752937249903517`*^9, 3.875293727588039*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"44d54bc6-b91a-4194-8090-bd8ecba5b93c"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{2.25, 0.11750555542938915`}, {2.25, 
          0.13976194237515863`}}], 
         LineBox[{{2.25, 0.13976194237515863`}, {2.25, 
          0.16153374802293455`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{3.25, 0.40187185783045426`}, {3.25, 0.4252677354043441}}], 
         LineBox[{{3.25, 0.4252677354043441}, {3.25, 0.44812873596840286`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{4.25, 0.6044986341173686}, {4.25, 0.6259384308664954}}], 
         LineBox[{{4.25, 0.6259384308664954}, {4.25, 0.6469281944736005}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{5.25, 0.8128296681741872}, {5.25, 0.835080676448612}}], 
         LineBox[{{5.25, 0.835080676448612}, {5.25, 0.8568473350735798}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{6.25, 0.9721764328185534}, {6.25, 0.9951019122984449}}], 
         LineBox[{{6.25, 0.9951019122984449}, {6.25, 1.0175135717402801`}}]}},
       
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{7.25, 1.2281284134421695`}, {7.25, 1.2484680442124871`}}], 
         LineBox[{{7.25, 1.2484680442124871`}, {7.25, 1.2684022077570285`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{8.25, 1.3810380881799142`}, {8.25, 1.402413742999774}}], 
         LineBox[{{8.25, 1.402413742999774}, {8.25, 1.4233420254015294`}}]}},
       Antialiasing->False]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2.25, 0.16153374802293455`}, 
            Offset[{3, 0}, {2.25, 0.16153374802293455`}]}, {{2.25, 
            0.16153374802293455`}, 
            Offset[{-3, 0}, {2.25, 0.16153374802293455`}]}, {{2.25, 
            0.11750555542938915`}, 
            Offset[{3, 0}, {2.25, 0.11750555542938915`}]}, {{2.25, 
            0.11750555542938915`}, 
            Offset[{-3, 0}, {2.25, 0.11750555542938915`}]}}], {{{1., 0.}, {0.,
           1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3.25, 0.44812873596840286`}, 
            Offset[{3, 0}, {3.25, 0.44812873596840286`}]}, {{3.25, 
            0.44812873596840286`}, 
            Offset[{-3, 0}, {3.25, 0.44812873596840286`}]}, {{3.25, 
            0.40187185783045426`}, 
            Offset[{3, 0}, {3.25, 0.40187185783045426`}]}, {{3.25, 
            0.40187185783045426`}, 
            Offset[{-3, 0}, {3.25, 0.40187185783045426`}]}}], {{{1., 0.}, {0.,
           1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{4.25, 0.6469281944736005}, 
            Offset[{3, 0}, {4.25, 0.6469281944736005}]}, {{4.25, 
            0.6469281944736005}, 
            Offset[{-3, 0}, {4.25, 0.6469281944736005}]}, {{4.25, 
            0.6044986341173686}, 
            Offset[{3, 0}, {4.25, 0.6044986341173686}]}, {{4.25, 
            0.6044986341173686}, 
            Offset[{-3, 0}, {4.25, 0.6044986341173686}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{5.25, 0.8568473350735798}, 
            Offset[{3, 0}, {5.25, 0.8568473350735798}]}, {{5.25, 
            0.8568473350735798}, 
            Offset[{-3, 0}, {5.25, 0.8568473350735798}]}, {{5.25, 
            0.8128296681741872}, 
            Offset[{3, 0}, {5.25, 0.8128296681741872}]}, {{5.25, 
            0.8128296681741872}, 
            Offset[{-3, 0}, {5.25, 0.8128296681741872}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{6.25, 1.0175135717402801`}, 
            Offset[{3, 0}, {6.25, 1.0175135717402801`}]}, {{6.25, 
            1.0175135717402801`}, 
            Offset[{-3, 0}, {6.25, 1.0175135717402801`}]}, {{6.25, 
            0.9721764328185534}, 
            Offset[{3, 0}, {6.25, 0.9721764328185534}]}, {{6.25, 
            0.9721764328185534}, 
            Offset[{-3, 0}, {6.25, 0.9721764328185534}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{7.25, 1.2684022077570285`}, 
            Offset[{3, 0}, {7.25, 1.2684022077570285`}]}, {{7.25, 
            1.2684022077570285`}, 
            Offset[{-3, 0}, {7.25, 1.2684022077570285`}]}, {{7.25, 
            1.2281284134421695`}, 
            Offset[{3, 0}, {7.25, 1.2281284134421695`}]}, {{7.25, 
            1.2281284134421695`}, 
            Offset[{-3, 0}, {7.25, 1.2281284134421695`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{8.25, 1.4233420254015294`}, 
            Offset[{3, 0}, {8.25, 1.4233420254015294`}]}, {{8.25, 
            1.4233420254015294`}, 
            Offset[{-3, 0}, {8.25, 1.4233420254015294`}]}, {{8.25, 
            1.3810380881799142`}, 
            Offset[{3, 0}, {8.25, 1.3810380881799142`}]}, {{8.25, 
            1.3810380881799142`}, 
            Offset[{-3, 0}, {8.25, 1.3810380881799142`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0.25, 0.}, {1.25, 0.}, {2.25, 0.13976194237515863`}, {3.25, 
     0.4252677354043441}, {4.25, 0.6259384308664954}, {5.25, 
     0.835080676448612}, {6.25, 0.9951019122984449}, {7.25, 
     1.2484680442124871`}, {8.25, 1.402413742999774}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.1113845909961768},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8.25}, {-0.1113845909961768, 1.4233420254015294`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
       FormBox["2", TraditionalForm], {0.01, 0.}}, {1.0986122886681098`, 
       FormBox["3", TraditionalForm], {0.01, 0.}}, {1.3862943611198906`, 
       FormBox["4", TraditionalForm], {0.01, 0.}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.1823215567939546, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.3364722366212129, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.47000362924573563`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.5877866649021191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.7884573603642703, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.8754687373538999, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.9555114450274363, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0296194171811581`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.1631508098056809`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.2237754316221157`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.2809338454620642`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.33500106673234, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.4350845252893227`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.4816045409242156`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.5260563034950492`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.5686159179138452`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.875293928604826*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"f01d404f-f0d2-4649-a2c6-4e5f3abdea4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AvgElectronsEuler", "[", 
  RowBox[{
  "15", ",", "15", ",", "5", ",", "15", ",", "0.5", ",", "0.8", ",", "False", 
   ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.875403351369979*^9, 3.8754033557528677`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"08e66260-6132-4fbb-8870-8b17b07ebc59"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"11.47", "0.21"},
   "Around"],
  Around[11.47, 0.20862948647365895`]]], "Output",
 CellChangeTimes->{3.875403357593968*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"2926801b-b424-4ffb-9d11-c9bd2ae215f9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindBreakdownSS", "[", 
   RowBox[{"Nc_", ",", "\[Gamma]_", ",", "Ni0_", ",", "dt_", ",", "reps_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "region", ",", "list", ",", "i", ",", "errors", ",", "max", ",", 
      "params", ",", "fit", ",", "error", ",", "p1", ",", "p2", ",", "p3", 
      ",", "p4", ",", "f", ",", "vals", ",", "errorslist", ",", 
      "listForFit"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Ni", ",", 
          RowBox[{"AvgElectronsEuler", "[", 
           RowBox[{"Nc", ",", "Ni", ",", "5", ",", "15", ",", "dt", ",", 
            RowBox[{"4", "/", "5"}], ",", "False", ",", "reps"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Ni", ",", 
          RowBox[{"Ni0", "-", "3"}], ",", 
          RowBox[{"Ni0", "+", "2"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "list", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"listForFit", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
       "list"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorslist", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "&"}], "/@", "list"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"listForFit", ",", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"p2", " ", "x"}], "]"}]}], "+", "p3"}], ",", 
        RowBox[{"{", 
         RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], ",", " ", "x",
         ",", 
        RowBox[{"Weights", "->", 
         RowBox[{"1", "/", 
          RowBox[{"errorslist", "^", "2"}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "-", "p3"}], ")"}], "/", "p1"}], "]"}], "/", 
        "p2"}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p1"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p2"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], ".", 
        RowBox[{"fit", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p1"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p2"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], "]"}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"f", ",", 
        RowBox[{"Sqrt", "[", "error", "]"}]}], "]"}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.875293955898679*^9, 3.875293969739236*^9}, {
   3.875294033890654*^9, 3.8752940548858137`*^9}, {3.8752951608847637`*^9, 
   3.875295171068759*^9}, {3.875404091592125*^9, 3.8754040916828003`*^9}, {
   3.877285716348557*^9, 3.877285717189972*^9}, {3.877285786847108*^9, 
   3.877285787147334*^9}, {3.8772858665218067`*^9, 3.8772858670116577`*^9}, 
   3.8783873929078493`*^9, {3.8783874538712683`*^9, 3.8783874807710333`*^9}, {
   3.878389047311886*^9, 3.878389051728755*^9}, {3.879168815187849*^9, 
   3.879168816723343*^9}, {3.8791691904764633`*^9, 3.879169209132238*^9}, {
   3.8791696201688004`*^9, 3.879169623334654*^9}, {3.8791739550946198`*^9, 
   3.87917395528893*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"6babf8bd-7a54-4343-ade2-9bac01c07a35"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindNC", "[", 
   RowBox[{"Ni_", ",", "\[Gamma]_", ",", "Nc0_", ",", "dt_", ",", "reps_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "region", ",", "list", ",", "i", ",", "errors", ",", "max", ",", 
      "params", ",", "fit", ",", "error", ",", "p1", ",", "p2", ",", "p3", 
      ",", "p4", ",", "f", ",", "vals", ",", "errorslist", ",", 
      "listForFit"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Nc", ",", 
          RowBox[{"AvgElectronsEuler", "[", 
           RowBox[{"Nc", ",", "Ni", ",", "5", ",", "15", ",", "dt", ",", 
            RowBox[{"4", "/", "5"}], ",", "False", ",", "reps"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Nc", ",", 
          RowBox[{"Nc0", "-", "1"}], ",", 
          RowBox[{"Nc0", "+", "1"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "list", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"listForFit", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
       "list"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorslist", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "&"}], "/@", "list"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"listForFit", ",", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"p2", " ", "x"}], "]"}]}], "+", "p3"}], ",", 
        RowBox[{"{", 
         RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], ",", " ", "x",
         ",", 
        RowBox[{"Weights", "->", 
         RowBox[{"1", "/", 
          RowBox[{"errorslist", "^", "2"}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "-", "p3"}], ")"}], "/", "p1"}], "]"}], "/", 
        "p2"}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p1"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p2"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], ".", 
        RowBox[{"fit", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p1"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p2"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], "]"}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"f", ",", 
        RowBox[{"Sqrt", "[", "error", "]"}]}], "]"}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.879181268967825*^9, 3.879181285288169*^9}, {
  3.879181499741873*^9, 3.8791814998908854`*^9}, {3.879200143031686*^9, 
  3.879200143142461*^9}, {3.879200342471664*^9, 3.87920034569978*^9}, {
  3.87920040712061*^9, 3.8792004077786007`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"329ed929-8429-4708-befd-e14c02aabb03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindNC", "[", 
  RowBox[{"100", ",", "50", ",", "4", ",", 
   RowBox[{"1", "/", "5"}], ",", "300"}], "]"}]], "Input",
 CellChangeTimes->{{3.879181297188284*^9, 3.879181319965105*^9}, {
  3.879181502569708*^9, 3.879181503284596*^9}, {3.879200351473444*^9, 
  3.879200355211244*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"66e4560f-a5b1-4eef-b055-9751da53449c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      TemplateBox[{"18.9", "1.2"},
       "Around"],
      Around[18.9, 1.21126724504028]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "2"], ",", 
     InterpretationBox[
      TemplateBox[{"34.4", "1.9"},
       "Around"],
      Around[34.403333333333336`, 1.8658528545326785`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     InterpretationBox[
      TemplateBox[{"50.1", "2.8"},
       "Around"],
      Around[50.086666666666666`, 2.826048895493066]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "2"], ",", 
     InterpretationBox[
      TemplateBox[{"77.", "4."},
       "Around"],
      Around[76.94, 4.126036804264466]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     InterpretationBox[
      TemplateBox[{"130.", "7."},
       "Around"],
      Around[129.54333333333332`, 7.274432890327779]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.8792014105594473`*^9, 3.879333862512809*^9, 
  3.879346303449441*^9},
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"7e4dd980-8947-4227-9fda-15ca588297d0"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"3.97", "0.05"},
   "Around"],
  Around[3.9704332417494967`, 0.051390712024077655`]]], "Output",
 CellChangeTimes->{
  3.8791813160617523`*^9, 3.879181486506621*^9, 3.879182237365973*^9, {
   3.8792003535019407`*^9, 3.8792003951377697`*^9}, 3.879201410583025*^9, 
   3.87933386257572*^9, 3.879346303458413*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"5e1e4541-fe86-4909-a64e-6e5f5959bcaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vals2", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879352786588805*^9, 3.879352788333716*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"dc37cacb-9e05-4b2f-8d52-0f57ab50ebcb"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"3\\\", \\\",\\\", \
InterpretationBox[TemplateBox[List[\\\"18.9\\\", \\\"1.2\\\"], \
\\\"Around\\\", Rule[SyntaxForm, PlusMinus]], Around[18.9`, \
1.21126724504028`]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"7\\\", \\\"2\\\"], \\\",\\\", \
InterpretationBox[TemplateBox[List[\\\"34.4\\\", \\\"1.9\\\"], \
\\\"Around\\\", Rule[SyntaxForm, PlusMinus]], Around[34.403333333333336`, \
1.8658528545326785`]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4\\\", \\\",\\\", \
InterpretationBox[TemplateBox[List[\\\"50.1\\\", \\\"2.8\\\"], \
\\\"Around\\\", Rule[SyntaxForm, PlusMinus]], Around[50.086666666666666`, \
2.826048895493066`]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"9\\\", \\\"2\\\"], \\\",\\\", \
InterpretationBox[TemplateBox[List[\\\"77.\\\", \\\"4.\\\"], \\\"Around\\\", \
Rule[SyntaxForm, PlusMinus]], Around[76.94`, 4.126036804264466`]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5\\\", \\\",\\\", \
InterpretationBox[TemplateBox[List[\\\"130.\\\", \\\"7.\\\"], \\\"Around\\\", \
Rule[SyntaxForm, PlusMinus]], Around[129.54333333333332`, \
7.274432890327779`]]}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\) does not \
exist.\"", 2, 50, 16, 24620266166482083741, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879352788599115*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"af3ddb6f-9e11-440b-8a60-0ec70a5d25a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", 
       InterpretationBox[
        TemplateBox[{"18.9", "1.2"},
         "Around"],
        Around[18.9, 1.21126724504028]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "2"], ",", 
       InterpretationBox[
        TemplateBox[{"34.4", "1.9"},
         "Around"],
        Around[34.403333333333336`, 1.8658528545326785`]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       InterpretationBox[
        TemplateBox[{"50.1", "2.8"},
         "Around"],
        Around[50.086666666666666`, 2.826048895493066]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "2"], ",", 
       InterpretationBox[
        TemplateBox[{"77.", "4."},
         "Around"],
        Around[76.94, 4.126036804264466]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       InterpretationBox[
        TemplateBox[{"130.", "7."},
         "Around"],
        Around[129.54333333333332`, 7.274432890327779]]}], "}"}]}], "}"}], 
   "}"}], "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.879352788609069*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"03e18710-f361-4863-8417-d6cae1014035"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "2"}], "]"}], "]"}], "&"}], "/@", "vals2"}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"8a888666-55b6-4086-8cd0-eda9f6f5284e"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   TemplateBox[{"34.4", "1.9"},
    "Around"],
   Around[34.403333333333336`, 1.8658528545326785`]], "}"}]], "Output",
 CellChangeTimes->{3.8793527816984253`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"816171f5-7516-4bad-a4e0-372272e7f4cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vals2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", 
       InterpretationBox[
        TemplateBox[{"18.9", "1.2"},
         "Around"],
        Around[18.9, 1.21126724504028]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "2"], ",", 
       InterpretationBox[
        TemplateBox[{"34.4", "1.9"},
         "Around"],
        Around[34.403333333333336`, 1.8658528545326785`]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", 
       InterpretationBox[
        TemplateBox[{"50.1", "2.8"},
         "Around"],
        Around[50.086666666666666`, 2.826048895493066]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "2"], ",", 
       InterpretationBox[
        TemplateBox[{"77.", "4."},
         "Around"],
        Around[76.94, 4.126036804264466]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       InterpretationBox[
        TemplateBox[{"130.", "7."},
         "Around"],
        Around[129.54333333333332`, 7.274432890327779]]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
      "vals2"}], ",", 
     RowBox[{
      RowBox[{"p1", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"p2", " ", "x"}], "]"}]}], "+", "p3"}], ",", 
     RowBox[{"{", 
      RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], ",", " ", "x", 
     ",", 
     RowBox[{"Weights", "->", 
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "&"}], "/@", "vals2"}], 
         ")"}], "^", "2"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "vals2", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fit", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "3", ",", "5"}], "}"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.879342883941503*^9, 3.8793429399751577`*^9}, {
  3.879349713465191*^9, 3.879349714396209*^9}, {3.8793527592363367`*^9, 
  3.87935279522442*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"17483725-a42b-4dea-83c1-b7c8bd2850be"],

Cell[BoxData[
 GraphicsBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{3., 17.68873275495972}, {3., 18.9}}], 
          LineBox[{{3., 18.9}, {3., 20.111267245040278`}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{3.5, 32.53748047880066}, {3.5, 34.403333333333336`}}], 
          LineBox[{{3.5, 34.403333333333336`}, {3.5, 36.26918618786601}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{4., 47.2606177711736}, {4., 50.086666666666666`}}], 
          LineBox[{{4., 50.086666666666666`}, {4., 52.91271556215973}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {LineBox[{{4.5, 72.81396319573554}, {4.5, 76.94}}], 
          LineBox[{{4.5, 76.94}, {4.5, 81.06603680426446}}]}},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{{}, {
          LineBox[{{5., 122.26890044300555`}, {5., 129.54333333333332`}}], 
          LineBox[{{5., 129.54333333333332`}, {5., 136.8177662236611}}]}},
        Antialiasing->False]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3., 20.111267245040278`}, 
             Offset[{3, 0}, {3., 20.111267245040278`}]}, {{3., 
             20.111267245040278`}, 
             Offset[{-3, 0}, {3., 20.111267245040278`}]}, {{3., 
             17.68873275495972}, Offset[{3, 0}, {3., 17.68873275495972}]}, {{
             3., 17.68873275495972}, 
             Offset[{-3, 0}, {3., 17.68873275495972}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{3.5, 36.26918618786601}, 
             Offset[{3, 0}, {3.5, 36.26918618786601}]}, {{3.5, 
             36.26918618786601}, 
             Offset[{-3, 0}, {3.5, 36.26918618786601}]}, {{3.5, 
             32.53748047880066}, Offset[{3, 0}, {3.5, 32.53748047880066}]}, {{
             3.5, 32.53748047880066}, 
             Offset[{-3, 0}, {3.5, 32.53748047880066}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4., 52.91271556215973}, 
             Offset[{3, 0}, {4., 52.91271556215973}]}, {{4., 
             52.91271556215973}, Offset[{-3, 0}, {4., 52.91271556215973}]}, {{
             4., 47.2606177711736}, 
             Offset[{3, 0}, {4., 47.2606177711736}]}, {{4., 47.2606177711736},
              Offset[{-3, 0}, {4., 47.2606177711736}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{4.5, 81.06603680426446}, 
             Offset[{3, 0}, {4.5, 81.06603680426446}]}, {{4.5, 
             81.06603680426446}, 
             Offset[{-3, 0}, {4.5, 81.06603680426446}]}, {{4.5, 
             72.81396319573554}, Offset[{3, 0}, {4.5, 72.81396319573554}]}, {{
             4.5, 72.81396319573554}, 
             Offset[{-3, 0}, {4.5, 72.81396319573554}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       StyleBox[{
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{5., 136.8177662236611}, 
             Offset[{3, 0}, {5., 136.8177662236611}]}, {{5., 
             136.8177662236611}, Offset[{-3, 0}, {5., 136.8177662236611}]}, {{
             5., 122.26890044300555`}, 
             Offset[{3, 0}, {5., 122.26890044300555`}]}, {{5., 
             122.26890044300555`}, 
             Offset[{-3, 0}, {5., 122.26890044300555`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]},
        Antialiasing->False]}}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{3., 18.9}, {3.5, 34.403333333333336`}, {4., 
      50.086666666666666`}, {4.5, 76.94}, {5., 
      129.54333333333332`}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVz3s0lAkABfBBal6YmY+trITIa0k7YYZWd5DHeoRoKtM3EtJGedZETUf0
0EOaKLWhmhZLUzh10Nrd0hYJm40i54g1SOUghdKws3/cc8/vv3tNI/eGRGtS
KJQAdf7vNQlp2hQKFdt6L1WMJ3JxQ2O6UKBBRRQ9xNQqlQv988lOmZpUpMZn
akZIuJi8G7dzoTYVRlPZi9qlXFTPkk+YdCr8199eVnuKC4fjHmeW6lNx8HD5
scu/cGFbxDTgWlHhZi64VdnNhVlLkXlMEBXumhMJFh5r8JR+6OjZUipCKpqt
nto54rOe0uXDDBXVU1P3j7CcQAzmuNX70OBqGz9jM+WEN1cmM32LaSjoiMp/
Oe0M92/7l7HGadCbsOAXj/MgPHji8yVvOsSVC18XLHLBFkXyilOFdHze9HyP
3wpX9N0YvnZ3lI4x6/mVc2vWwuywQaTck4FW2ZJXWrE/YGR5y77mfAaqcnLk
53PdcCX3cffmQQbma6T88fp1oCvTpOWuTJhd+Hpg7higUtXsdzzNRP+giaLU
WoCKL7eqMweY2FY1QjfoE8CrccSVz9eBt+D4Utkld0RvVSy1ytZBaftNW4m/
B/DMhv/qtQ6cAgfs7Aw8UcxcrXjkoIvSubgY1QtP3LOdiEw5oYvoh6OhGyrX
44Hhp5iTvboIaqhYFHrGCwHPMv7sttcDW1LiVBDpjbzYpi3vj+rhIcu1pS3Y
BxGNF314L/WQuNkvdITnC2Z6Z0MqwUIbre7cvNmPeKS1VrPKjQVRq4aq1NoP
D8aG3lF3slA2cdOLZ+kPw9Y9+xpkLBD8F00yjwDski0pu/07C4XC9Yl1UYGY
vbcwq26QBXaxpXlp+ga87WinWLDZsG8/lOC9NQhGIf2WCj4bbP0jaZETQfCs
4UzFbmdD87vp4Z9OBqNZxzT62Gk2aLZkz0qnEMgak6X377CR+kNqpLInBLVJ
cp6oj43O63LXpvyNMMlYXKhP46DY06g/xjcU0v2KMspqDjSGDSTh86FwEZuE
BYo48KBbMTKehoFX/rKiNouDmfBgVlHuJuQN7ZZnVXKQoOW2oCReiCG6mXtW
Dwd5gZQ/4gM3I11mdOqqFoFd22PpAZZbEM/4mGK8ioC0S2gjM9yK68N6tDoh
gY3XpAfPaYejtSLA8/hhAnXB8q78yXCEbY81qSknEBgbXFU+J4JJWmOJ1nMC
DTPLJyUUEsKdpgU1aq/zqhYxtEnkhKZn7+4gUBzlnFhEI/HVflXc804CgulD
Pz/mkOgeuLBa3kWAI6mdNrYgIQuIqXfvJRC54G/lmC8JLVPtfzJGCAQ1ygVE
HgkXXfFDx7cEDkidXX4rIJE0W3tnRG2f5cq+HYUk+jrjLga/J2DZNcqrKSFR
f7JDZDpGoE3v9DcxdSRSPsqH738kMM7xLlL2kqjoV3WlfCJweUyUdXGAxL9t
wmarKQLkBnNDvzckgn5lKHKn1XsE9mF3JkjYkclJEV8IfI2YY5xdIEaUX+sO
/VkCxrf2JnnTxLjCswxrUtvh+4hsiq4YdKLH2UGl3kdZ+SRlsRgCiqO1Uu0k
pf2HVUZiSEZzDAvmCFzlGre8MxHj9qs3DP959d+/dIRlFmIMNbqr5tWuT1h8
PtpGjP8AkkgIIQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$613028#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.9583333333333406`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{2.9583333333333406`, 5.}, {0, 136.8177662236611}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.879342937143198*^9, 3.879342940310225*^9}, {
  3.879349714808416*^9, 3.879349728542378*^9}, {3.8793527664479628`*^9, 
  3.879352795862651*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"cb67529f-04a5-4ca2-b0dd-9d9cec6611ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSS", "[", 
  RowBox[{"5", ",", "50", ",", "25", ",", 
   RowBox[{"2", "/", "5"}], ",", "300"}], "]"}]], "Input",
 CellChangeTimes->{{3.879172083225151*^9, 3.8791720857901278`*^9}, {
  3.8791723437096233`*^9, 3.8791723451998262`*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"7f36a2c9-789c-4327-a103-87bc1677c8b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"22", ",", 
     InterpretationBox[
      TemplateBox[{"47.0", "2.2"},
       "Around"],
      Around[46.97, 2.2223721344826255`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     InterpretationBox[
      TemplateBox[{"44.0", "2.2"},
       "Around"],
      Around[44.04, 2.197595523966256]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", 
     InterpretationBox[
      TemplateBox[{"45.9", "2.5"},
       "Around"],
      Around[45.92333333333333, 2.516348411366675]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", 
     InterpretationBox[
      TemplateBox[{"50.3", "2.3"},
       "Around"],
      Around[50.266666666666666`, 2.34177958483108]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     InterpretationBox[
      TemplateBox[{"53.8", "2.6"},
       "Around"],
      Around[53.77, 2.6108066514465333`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", 
     InterpretationBox[
      TemplateBox[{"50.6", "2.8"},
       "Around"],
      Around[50.61333333333334, 2.773961478045374]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", 
     InterpretationBox[
      TemplateBox[{"58.9", "3.2"},
       "Around"],
      Around[58.93333333333333, 3.17023620913363]]}], "}"}]}], "}"}]], "Print",\

 CellChangeTimes->{3.879172327469489*^9, 3.8791736781040287`*^9},
 CellLabel->
  "During evaluation of \
In[325]:=",ExpressionUUID->"6dc268f6-d719-4250-8f30-886feaab808f"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"25.6", "0.8"},
   "Around"],
  Around[25.55431233806306, 0.756639956730665]]], "Output",
 CellChangeTimes->{3.879172327479903*^9, 3.879173678111562*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"c0fe457e-61ce-4266-b87e-d668c2f40934"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSS", "[", 
  RowBox[{"7", ",", "50", ",", "15", ",", 
   RowBox[{"2", "/", "5"}], ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.878391779292721*^9, 3.8783918080558*^9}, {
  3.8783918874076757`*^9, 3.8783918924327307`*^9}, {3.879167647587861*^9, 
  3.879167674556775*^9}, {3.879167713349009*^9, 3.879167721514433*^9}, {
  3.8791683084260817`*^9, 3.879168320351841*^9}, {3.879171308327753*^9, 
  3.879171316087392*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"290813c5-bd72-4e5c-b491-4f28b1c377d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"38.2", "3.4"},
       "Around"],
      Around[38.24, 3.41850426774217]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"45.", "4."},
       "Around"],
      Around[45.42, 4.100979474840275]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"53.", "6."},
       "Around"],
      Around[53.24, 5.842739083683268]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     InterpretationBox[
      TemplateBox[{"58.", "6."},
       "Around"],
      Around[57.66, 6.405521215390387]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"81.", "8."},
       "Around"],
      Around[81.4, 7.52459911468609]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     InterpretationBox[
      TemplateBox[{"73.", "9."},
       "Around"],
      Around[72.7, 8.719354497733354]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", 
     InterpretationBox[
      TemplateBox[{"93.", "8."},
       "Around"],
      Around[92.52, 7.757458030955812]]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.879168855484079*^9, 3.879169550861993*^9, 
  3.879171791420471*^9},
 CellLabel->
  "During evaluation of \
In[322]:=",ExpressionUUID->"acf38d56-5074-465c-993a-bf808a861a2a"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"13.58", "0.31"},
   "Around"],
  Around[13.584056430632014`, 0.30945062592005546`]]], "Output",
 CellChangeTimes->{3.8791683034181833`*^9, 3.879168811424596*^9, 
  3.8791691883985023`*^9, 3.879169550992197*^9, 3.879171791434987*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"4ac1376a-c5e5-4d11-8d67-bdf645cf625b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSS", "[", 
  RowBox[{"12", ",", "50", ",", "8", ",", 
   RowBox[{"2", "/", "5"}], ",", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.8791736936211357`*^9, 3.879173702215804*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"3608b168-bbec-46b0-afb3-2032f418e99c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     InterpretationBox[
      TemplateBox[{"4.92", "0.18"},
       "Around"],
      Around[4.92, 0.18033981529210857`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     InterpretationBox[
      TemplateBox[{"7.76", "0.29"},
       "Around"],
      Around[7.76, 0.289348317741078]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     InterpretationBox[
      TemplateBox[{"12.6", "0.5"},
       "Around"],
      Around[12.62, 0.5321423777562557]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     InterpretationBox[
      TemplateBox[{"18.2", "0.7"},
       "Around"],
      Around[18.18, 0.6979211112661806]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     InterpretationBox[
      TemplateBox[{"25.8", "1.2"},
       "Around"],
      Around[25.82, 1.2070168995993251`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"40.9", "2.5"},
       "Around"],
      Around[40.9, 2.480659885874675]]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.8791743424112997`*^9},
 CellLabel->
  "During evaluation of \
In[328]:=",ExpressionUUID->"8cdbd134-6d39-4201-9226-0c933ac96da6"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"10.65", "0.15"},
   "Around"],
  Around[10.65062016532143, 0.14980431119468499`]]], "Output",
 CellChangeTimes->{3.879173953501923*^9, 3.8791743424317713`*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"54a2942c-0c19-4b83-ab97-e90d256d3e3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSS", "[", 
  RowBox[{"30", ",", "50", ",", "13", ",", 
   RowBox[{"2", "/", "5"}], ",", "30"}], "]"}]], "Input",
 CellChangeTimes->{{3.879174791898934*^9, 3.87917479806286*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"a34a6f68-be1b-417e-b87b-c24efc6eca25"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"16.9", "1.1"},
       "Around"],
      Around[16.9, 1.0541107272423311`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     InterpretationBox[
      TemplateBox[{"27.4", "1.5"},
       "Around"],
      Around[27.366666666666667`, 1.5361418556781412`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"43.0", "2.8"},
       "Around"],
      Around[43.03333333333333, 2.820892225908599]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"66.", "4."},
       "Around"],
      Around[66.46666666666667, 3.6507701386644413`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"99.", "6."},
       "Around"],
      Around[98.66666666666667, 5.525974888418599]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     InterpretationBox[
      TemplateBox[{"160.", "9."},
       "Around"],
      Around[160.16666666666666`, 9.360725403334314]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.879175915432233*^9},
 CellLabel->
  "During evaluation of \
In[329]:=",ExpressionUUID->"c991e5a9-41f6-49c6-9114-02df909fb7d4"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"12.36", "0.04"},
   "Around"],
  Around[12.361240546136386`, 0.036329426693029784`]]], "Output",
 CellChangeTimes->{3.87917591543532*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"5ff5a6e9-45b4-4b25-9b94-3969c6b3e093"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSS", "[", 
  RowBox[{"50", ",", "50", ",", "15", ",", 
   RowBox[{"2", "/", "5"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.879175969191473*^9, 3.879175979148888*^9}, {
  3.8791762030309143`*^9, 3.8791762031801243`*^9}, {3.879178299213127*^9, 
  3.879178299588036*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"f0720382-fea9-4e28-b31b-6a3779124e67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"13.4", "0.9"},
       "Around"],
      Around[13.35, 0.9438861438921429]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"21.9", "1.6"},
       "Around"],
      Around[21.9, 1.5692774066261734`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"31.3", "2.2"},
       "Around"],
      Around[31.25, 2.1568434538024603`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     InterpretationBox[
      TemplateBox[{"59.", "4."},
       "Around"],
      Around[58.5, 3.552982438814793]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"87.", "5."},
       "Around"],
      Around[86.95, 5.387351170248599]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     InterpretationBox[
      TemplateBox[{"129.", "11."},
       "Around"],
      Around[128.6, 11.23303399049335]]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.879176121498333*^9, 3.8791764514645233`*^9, 
  3.8791808655095797`*^9},
 CellLabel->
  "During evaluation of \
In[340]:=",ExpressionUUID->"5b1d7877-d073-4374-b02a-eebd31836aa3"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"14.83", "0.09"},
   "Around"],
  Around[14.825563858853945`, 0.09212112350170171]]], "Output",
 CellChangeTimes->{3.879176121501741*^9, 3.879176451469342*^9, 
  3.879180865512822*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"d923d179-2e1d-42a3-9d7c-483aab94454f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSS", "[", 
  RowBox[{"90", ",", "50", ",", "19", ",", 
   RowBox[{"2", "/", "5"}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.87917599826991*^9, 3.879176001286216*^9}, {
  3.8791762074382267`*^9, 3.879176208376176*^9}, {3.879176482882718*^9, 
  3.879176484359956*^9}, {3.879178289046483*^9, 3.879178291305962*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"d242564b-9c72-4c4e-b5a9-d782e91f7b7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"13.4", "1.4"},
       "Around"],
      Around[13.4, 1.4]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     InterpretationBox[
      TemplateBox[{"21.4", "1.8"},
       "Around"],
      Around[21.4, 1.8186171727586409`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", 
     InterpretationBox[
      TemplateBox[{"36.9", "2.3"},
       "Around"],
      Around[36.85, 2.3320140380547048`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", 
     InterpretationBox[
      TemplateBox[{"45.6", "3.0"},
       "Around"],
      Around[45.55, 2.9589071595687773`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     InterpretationBox[
      TemplateBox[{"71.", "5."},
       "Around"],
      Around[71.3, 5.0456338603421855`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", 
     InterpretationBox[
      TemplateBox[{"110.", "8."},
       "Around"],
      Around[109.9, 8.049812027880561]]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.879176713927191*^9, 3.8791800212860003`*^9},
 CellLabel->
  "During evaluation of \
In[339]:=",ExpressionUUID->"9f51c00b-4a9d-4132-a977-43dc49aeaf47"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"19.03", "0.12"},
   "Around"],
  Around[19.02837249512115, 0.12081491424598563`]]], "Output",
 CellChangeTimes->{3.8791761863022013`*^9, 3.879176479341483*^9, 
  3.879176713929892*^9, 3.8791800212913227`*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"f9b60f00-45fd-4eb6-9cc9-e7aafbe42119"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSS", "[", 
  RowBox[{"150", ",", "50", ",", "24", ",", 
   RowBox[{"2", "/", "5"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.8791760077893353`*^9, 3.8791760118477077`*^9}, {
  3.879176215660247*^9, 3.879176216677271*^9}, {3.879176486292873*^9, 
  3.879176486776*^9}, {3.879178104333235*^9, 3.879178107069816*^9}, {
  3.879178283847877*^9, 3.879178284501501*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"d20c8fd9-bc60-4c34-8f97-0b534699d892"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"21", ",", 
     InterpretationBox[
      TemplateBox[{"14.8", "2.5"},
       "Around"],
      Around[14.8, 2.5157283018817607`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     InterpretationBox[
      TemplateBox[{"20.5", "1.5"},
       "Around"],
      Around[20.5, 1.5438048235879214`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     InterpretationBox[
      TemplateBox[{"23.", "5."},
       "Around"],
      Around[23.1, 4.63429246667349]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", 
     InterpretationBox[
      TemplateBox[{"37.", "5."},
       "Around"],
      Around[37.2, 4.516143881183986]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", 
     InterpretationBox[
      TemplateBox[{"42.", "7."},
       "Around"],
      Around[41.5, 7.49851837217045]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     InterpretationBox[
      TemplateBox[{"81.", "11."},
       "Around"],
      Around[80.5, 11.1656715974554]]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.879176769446253*^9, 3.87917824691289*^9, 
  3.8791788011771*^9},
 CellLabel->
  "During evaluation of \
In[338]:=",ExpressionUUID->"89fdbf5e-1771-4a29-8379-7f6c88e7569c"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"25.00", "0.20"},
   "Around"],
  Around[25.001745825698688`, 0.20382194620352528`]]], "Output",
 CellChangeTimes->{3.879176199848794*^9, 3.8791767694487886`*^9, 
  3.879178246918064*^9, 3.879178801179871*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"1222fbb9-3a50-4edd-8ded-b3ec16f63b9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ssbd", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       TemplateBox[{"4.036", "0.018"},
        "Around"],
       Around[4.036408775151604, 0.0183384264816501]], ",", "100"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      InterpretationBox[
       TemplateBox[{"25.6", "0.8"},
        "Around"],
       Around[25.55431233806306, 0.756639956730665]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", 
      InterpretationBox[
       TemplateBox[{"13.58", "0.31"},
        "Around"],
       Around[13.584056430632014`, 0.30945062592005546`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", 
      InterpretationBox[
       TemplateBox[{"10.65", "0.15"},
        "Around"],
       Around[10.65062016532143, 0.14980431119468499`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", 
      InterpretationBox[
       TemplateBox[{"12.36", "0.04"},
        "Around"],
       Around[12.361240546136386`, 0.036329426693029784`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"50", ",", 
      InterpretationBox[
       TemplateBox[{"14.83", "0.09"},
        "Around"],
       Around[14.825563858853945`, 0.09212112350170171]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", 
      InterpretationBox[
       TemplateBox[{"19.03", "0.12"},
        "Around"],
       Around[19.02837249512115, 0.12081491424598563`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", 
      InterpretationBox[
       TemplateBox[{"25.00", "0.20"},
        "Around"],
       Around[25.001745825698688`, 0.20382194620352528`]]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{
  3.879180878675989*^9, {3.879182269974227*^9, 3.879182275062199*^9}, 
   3.87926194592209*^9},
 CellLabel->
  "In[407]:=",ExpressionUUID->"b3608654-f852-42c0-9b7e-93188f3685b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"4.036", "0.018"},
       "Around"],
      Around[4.036408775151604, 0.0183384264816501]], ",", "100"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     InterpretationBox[
      TemplateBox[{"25.6", "0.8"},
       "Around"],
      Around[25.55431233806306, 0.756639956730665]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     InterpretationBox[
      TemplateBox[{"13.58", "0.31"},
       "Around"],
      Around[13.584056430632014`, 0.30945062592005546`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"10.65", "0.15"},
       "Around"],
      Around[10.65062016532143, 0.14980431119468499`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", 
     InterpretationBox[
      TemplateBox[{"12.36", "0.04"},
       "Around"],
      Around[12.361240546136386`, 0.036329426693029784`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", 
     InterpretationBox[
      TemplateBox[{"14.83", "0.09"},
       "Around"],
      Around[14.825563858853945`, 0.09212112350170171]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", 
     InterpretationBox[
      TemplateBox[{"19.03", "0.12"},
       "Around"],
      Around[19.02837249512115, 0.12081491424598563`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", 
     InterpretationBox[
      TemplateBox[{"25.00", "0.20"},
       "Around"],
      Around[25.001745825698688`, 0.20382194620352528`]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.87918087921144*^9, 3.879182275375412*^9, 
  3.8792619463657827`*^9},
 CellLabel->
  "Out[407]=",ExpressionUUID->"549e5cd0-a39b-4190-9879-949544d4eff7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drwhitmerdata", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"6.493842531696711", ",", "0.01909423908773717"}], "]"}], ",", 
      "15."}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"5.4686353869333395`", ",", "0.01696900035426949"}], "]"}], 
      ",", "20."}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"11.227349536224285`", ",", "0.008038281981665136"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17.8", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"11.026218496315959`", ",", "0.009280574753727079"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"31.6", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"12.63630851252148", ",", "0.0064036079281363555`"}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"56.2", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"15.557728814524392`", ",", "0.019598274560290126`"}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"100.", ",", 
      RowBox[{"Around", "[", 
       RowBox[{"20.349828658711385`", ",", "0.024648429700286353`"}], "]"}]}],
      "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8791805478689938`*^9, 3.87918055090199*^9}},
 CellLabel->
  "In[342]:=",ExpressionUUID->"90ed1835-e4d5-41d0-8121-c71132660d59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"6.494", "0.019"},
       "Around"],
      Around[6.493842531696711, 0.01909423908773717]], ",", "15.`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      TemplateBox[{"5.469", "0.017"},
       "Around"],
      Around[5.4686353869333395`, 0.01696900035426949]], ",", "20.`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"11.227", "0.008"},
       "Around"],
      Around[11.227349536224285`, 0.008038281981665136]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.8`", ",", 
     InterpretationBox[
      TemplateBox[{"11.026", "0.009"},
       "Around"],
      Around[11.026218496315959`, 0.009280574753727079]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31.6`", ",", 
     InterpretationBox[
      TemplateBox[{"12.636", "0.006"},
       "Around"],
      Around[12.63630851252148, 0.0064036079281363555`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56.2`", ",", 
     InterpretationBox[
      TemplateBox[{"15.558", "0.020"},
       "Around"],
      Around[15.557728814524392`, 0.019598274560290126`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100.`", ",", 
     InterpretationBox[
      TemplateBox[{"20.350", "0.025"},
       "Around"],
      Around[20.349828658711385`, 0.024648429700286353`]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.879180880391245*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"aacd40a6-dfb5-4c1f-923a-01b3b4efc3c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"ssbd", ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Mathematiac MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"drwhitmerdata", ",", 
     RowBox[{"PlotStyle", "->", "Orange"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<C++ MC\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"Nc", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", "Nc", "]"}], "-", 
        RowBox[{"Log", "[", 
         RowBox[{"Log", "[", "51", "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Nc", ",", "5", ",", "300"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Purple"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{
      "{", "\"\<Literature parallel plate paschen curve\>\"", "}"}]}]}], 
    "]"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"Nc", ",", "Ni"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Sphere-in-sphere Paschen Curve\>\""}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8791805551382*^9, 3.879180611290719*^9}, {
  3.879180886630986*^9, 3.8791808951736298`*^9}, {3.879181114091608*^9, 
  3.879181213978883*^9}},
 CellLabel->
  "In[408]:=",ExpressionUUID->"a10669cf-de10-479f-a842-b9753314e15e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{
            
            LineBox[{{1.3908017746192523`, 4.605170185988092}, {
             1.395355379610334, 4.605170185988092}}], 
            
            LineBox[{{1.395355379610334, 4.605170185988092}, {
             1.3998883432401013`, 4.605170185988092}}]}, {}}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{}, {
            
            LineBox[{{1.6094379124341003`, 3.2107497931747893`}, {
             1.6094379124341003`, 3.2408060827626306`}}], 
            
            LineBox[{{1.6094379124341003`, 3.2408060827626306`}, {
             1.6094379124341003`, 3.2699852895622703`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{}, {
            
            LineBox[{{1.9459101490553132`, 2.585852872126806}, {
             1.9459101490553132`, 2.6088967837588326`}}], 
            
            LineBox[{{1.9459101490553132`, 2.6088967837588326`}, {
             1.9459101490553132`, 2.631421612769273}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{}, {
            
            LineBox[{{2.4849066497880004`, 2.351452954537982}, {
             2.4849066497880004`, 2.3656181219456274`}}], 
            
            LineBox[{{2.4849066497880004`, 2.3656181219456274`}, {
             2.4849066497880004`, 2.3795854367389384`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{}, {
            
            LineBox[{{3.4011973816621555`, 2.5116225084985615`}, {
             3.4011973816621555`, 2.5145658148034205`}}], 
            
            LineBox[{{3.4011973816621555`, 2.5145658148034205`}, {
             3.4011973816621555`, 2.5175004834732633`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{}, {
            
            LineBox[{{3.912023005428146, 2.69011992586437}, {
             3.912023005428146, 2.696352978484546}}], 
            
            LineBox[{{3.912023005428146, 2.696352978484546}, {
             3.912023005428146, 2.7025474206962334`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{}, {
            
            LineBox[{{4.499809670330265, 2.9395617141420707`}, {
             4.499809670330265, 2.945931154535727}}], 
            
            LineBox[{{4.499809670330265, 2.945931154535727}, {
             4.499809670330265, 2.952260281795133}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{{}, {
            
            LineBox[{{5.0106352940962555`, 3.210759935130194}, {
             5.0106352940962555`, 3.218945655457936}}], 
            
            LineBox[{{5.0106352940962555`, 3.218945655457936}, {
             5.0106352940962555`, 3.227064913442448}}]}}, Antialiasing -> 
          False]}}, {{
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{{{1.3998883432401013`, 4.605170185988092}, 
               Offset[{0, 3}, {1.3998883432401013`, 4.605170185988092}]}, {{
               1.3998883432401013`, 4.605170185988092}, 
               Offset[{0, -3}, {1.3998883432401013`, 4.605170185988092}]}, {{
               1.3908017746192523`, 4.605170185988092}, 
               Offset[{0, 3}, {1.3908017746192523`, 4.605170185988092}]}, {{
               1.3908017746192523`, 4.605170185988092}, 
               
               Offset[{0, -3}, {1.3908017746192523`, 
                4.605170185988092}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, Antialiasing -> 
          False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{1.6094379124341003`, 3.2699852895622703`}, 
               Offset[{3, 0}, {1.6094379124341003`, 3.2699852895622703`}]}, {{
               1.6094379124341003`, 3.2699852895622703`}, 
               Offset[{-3, 0}, {1.6094379124341003`, 
                3.2699852895622703`}]}, {{1.6094379124341003`, 
               3.2107497931747893`}, 
               Offset[{3, 0}, {1.6094379124341003`, 3.2107497931747893`}]}, {{
               1.6094379124341003`, 3.2107497931747893`}, 
               
               Offset[{-3, 0}, {1.6094379124341003`, 
                3.2107497931747893`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{1.9459101490553132`, 2.631421612769273}, 
               Offset[{3, 0}, {1.9459101490553132`, 2.631421612769273}]}, {{
               1.9459101490553132`, 2.631421612769273}, 
               Offset[{-3, 0}, {1.9459101490553132`, 2.631421612769273}]}, {{
               1.9459101490553132`, 2.585852872126806}, 
               Offset[{3, 0}, {1.9459101490553132`, 2.585852872126806}]}, {{
               1.9459101490553132`, 2.585852872126806}, 
               
               Offset[{-3, 0}, {1.9459101490553132`, 
                2.585852872126806}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{2.4849066497880004`, 2.3795854367389384`}, 
               Offset[{3, 0}, {2.4849066497880004`, 2.3795854367389384`}]}, {{
               2.4849066497880004`, 2.3795854367389384`}, 
               
               Offset[{-3, 0}, {2.4849066497880004`, 
                2.3795854367389384`}]}, {{2.4849066497880004`, 
               2.351452954537982}, 
               Offset[{3, 0}, {2.4849066497880004`, 2.351452954537982}]}, {{
               2.4849066497880004`, 2.351452954537982}, 
               
               Offset[{-3, 0}, {2.4849066497880004`, 
                2.351452954537982}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{3.4011973816621555`, 2.5175004834732633`}, 
               Offset[{3, 0}, {3.4011973816621555`, 2.5175004834732633`}]}, {{
               3.4011973816621555`, 2.5175004834732633`}, 
               
               Offset[{-3, 0}, {3.4011973816621555`, 
                2.5175004834732633`}]}, {{3.4011973816621555`, 
               2.5116225084985615`}, 
               Offset[{3, 0}, {3.4011973816621555`, 2.5116225084985615`}]}, {{
               3.4011973816621555`, 2.5116225084985615`}, 
               
               Offset[{-3, 0}, {3.4011973816621555`, 
                2.5116225084985615`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{3.912023005428146, 2.7025474206962334`}, 
               Offset[{3, 0}, {3.912023005428146, 2.7025474206962334`}]}, {{
               3.912023005428146, 2.7025474206962334`}, 
               Offset[{-3, 0}, {3.912023005428146, 2.7025474206962334`}]}, {{
               3.912023005428146, 2.69011992586437}, 
               Offset[{3, 0}, {3.912023005428146, 2.69011992586437}]}, {{
               3.912023005428146, 2.69011992586437}, 
               Offset[{-3, 0}, {3.912023005428146, 2.69011992586437}]}}], {{{
             1., 0.}, {0., 1.}}, {0., 0.}}]}, Antialiasing -> False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{4.499809670330265, 2.952260281795133}, 
               Offset[{3, 0}, {4.499809670330265, 2.952260281795133}]}, {{
               4.499809670330265, 2.952260281795133}, 
               Offset[{-3, 0}, {4.499809670330265, 2.952260281795133}]}, {{
               4.499809670330265, 2.9395617141420707`}, 
               Offset[{3, 0}, {4.499809670330265, 2.9395617141420707`}]}, {{
               4.499809670330265, 2.9395617141420707`}, 
               
               Offset[{-3, 0}, {4.499809670330265, 
                2.9395617141420707`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[0.368417, 0.506779, 0.709798], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{5.0106352940962555`, 3.227064913442448}, 
               Offset[{3, 0}, {5.0106352940962555`, 3.227064913442448}]}, {{
               5.0106352940962555`, 3.227064913442448}, 
               Offset[{-3, 0}, {5.0106352940962555`, 3.227064913442448}]}, {{
               5.0106352940962555`, 3.210759935130194}, 
               Offset[{3, 0}, {5.0106352940962555`, 3.210759935130194}]}, {{
               5.0106352940962555`, 3.210759935130194}, 
               
               Offset[{-3, 0}, {5.0106352940962555`, 
                3.210759935130194}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}}}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[0.012833333333333334`], 
       AbsoluteThickness[1.6], 
       PointBox[{{1.395355379610334, 4.605170185988092}, {1.6094379124341003`,
         3.2408060827626306`}, {1.9459101490553132`, 2.6088967837588326`}, {
        2.4849066497880004`, 2.3656181219456274`}, {3.4011973816621555`, 
        2.5145658148034205`}, {3.912023005428146, 2.696352978484546}, {
        4.499809670330265, 2.945931154535727}, {5.0106352940962555`, 
        3.218945655457936}}]}, {{}, {}}}, {{{{
         RGBColor[1, 0.5, 0], 
         StyleBox[{{
            
            LineBox[{{1.8679097331016548`, 2.70805020110221}, {
             1.8708544251108226`, 2.70805020110221}}], 
            
            LineBox[{{1.8708544251108226`, 2.70805020110221}, {
             1.8737904713618274`, 2.70805020110221}}]}, {}}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{{
            
            LineBox[{{1.6959213209457282`, 2.995732273553991}, {
             1.6990291130862658`, 2.995732273553991}}], 
            
            LineBox[{{1.6990291130862658`, 2.995732273553991}, {
             1.7021272767703302`, 2.995732273553991}}]}, {}}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{{}, {
            
            LineBox[{{2.302585092994046, 2.4176365126705077`}, {
             2.302585092994046, 2.4183527245293948`}}], 
            
            LineBox[{{2.302585092994046, 2.4183527245293948`}, {
             2.302585092994046, 2.4190684237959577`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{{}, {
            
            LineBox[{{2.8791984572980396`, 2.3994338995560156`}, {
             2.8791984572980396`, 2.4002759364336876`}}], 
            
            LineBox[{{2.8791984572980396`, 2.4002759364336876`}, {
             2.8791984572980396`, 2.4011172648817385`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{{}, {
            
            LineBox[{{3.4531571205928664`, 2.5360674070065277`}, {
             3.4531571205928664`, 2.536574298004362}}], 
            
            LineBox[{{3.4531571205928664`, 2.536574298004362}, {
             3.4531571205928664`, 2.5370809321938808`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{{}, {
            
            LineBox[{{4.028916756899646, 2.743297037829281}, {
             4.028916756899646, 2.7445575450197603`}}], 
            
            LineBox[{{4.028916756899646, 2.7445575450197603`}, {
             4.028916756899646, 2.7458164653319237`}}]}}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{{}, {
            
            LineBox[{{4.605170185988092, 3.0118605227505792`}, {
             4.605170185988092, 3.0130724921338157`}}], 
            LineBox[{{4.605170185988092, 3.0130724921338157`}, {
             4.605170185988092, 3.0142829944251575`}}]}}, Antialiasing -> 
          False]}}, {{
         RGBColor[1, 0.5, 0], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{{{1.8737904713618274`, 2.70805020110221}, 
               Offset[{0, 3}, {1.8737904713618274`, 2.70805020110221}]}, {{
               1.8737904713618274`, 2.70805020110221}, 
               Offset[{0, -3}, {1.8737904713618274`, 2.70805020110221}]}, {{
               1.8679097331016548`, 2.70805020110221}, 
               Offset[{0, 3}, {1.8679097331016548`, 2.70805020110221}]}, {{
               1.8679097331016548`, 2.70805020110221}, 
               
               Offset[{0, -3}, {1.8679097331016548`, 
                2.70805020110221}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{{{1.7021272767703302`, 2.995732273553991}, 
               Offset[{0, 3}, {1.7021272767703302`, 2.995732273553991}]}, {{
               1.7021272767703302`, 2.995732273553991}, 
               Offset[{0, -3}, {1.7021272767703302`, 2.995732273553991}]}, {{
               1.6959213209457282`, 2.995732273553991}, 
               Offset[{0, 3}, {1.6959213209457282`, 2.995732273553991}]}, {{
               1.6959213209457282`, 2.995732273553991}, 
               
               Offset[{0, -3}, {1.6959213209457282`, 
                2.995732273553991}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, Antialiasing -> 
          False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{2.302585092994046, 2.4190684237959577`}, 
               Offset[{3, 0}, {2.302585092994046, 2.4190684237959577`}]}, {{
               2.302585092994046, 2.4190684237959577`}, 
               Offset[{-3, 0}, {2.302585092994046, 2.4190684237959577`}]}, {{
               2.302585092994046, 2.4176365126705077`}, 
               Offset[{3, 0}, {2.302585092994046, 2.4176365126705077`}]}, {{
               2.302585092994046, 2.4176365126705077`}, 
               
               Offset[{-3, 0}, {2.302585092994046, 
                2.4176365126705077`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{2.8791984572980396`, 2.4011172648817385`}, 
               Offset[{3, 0}, {2.8791984572980396`, 2.4011172648817385`}]}, {{
               2.8791984572980396`, 2.4011172648817385`}, 
               
               Offset[{-3, 0}, {2.8791984572980396`, 
                2.4011172648817385`}]}, {{2.8791984572980396`, 
               2.3994338995560156`}, 
               Offset[{3, 0}, {2.8791984572980396`, 2.3994338995560156`}]}, {{
               2.8791984572980396`, 2.3994338995560156`}, 
               
               Offset[{-3, 0}, {2.8791984572980396`, 
                2.3994338995560156`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{3.4531571205928664`, 2.5370809321938808`}, 
               Offset[{3, 0}, {3.4531571205928664`, 2.5370809321938808`}]}, {{
               3.4531571205928664`, 2.5370809321938808`}, 
               
               Offset[{-3, 0}, {3.4531571205928664`, 
                2.5370809321938808`}]}, {{3.4531571205928664`, 
               2.5360674070065277`}, 
               Offset[{3, 0}, {3.4531571205928664`, 2.5360674070065277`}]}, {{
               3.4531571205928664`, 2.5360674070065277`}, 
               Offset[{-3, 0}, {3.4531571205928664`, 
                2.5360674070065277`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{4.028916756899646, 2.7458164653319237`}, 
               Offset[{3, 0}, {4.028916756899646, 2.7458164653319237`}]}, {{
               4.028916756899646, 2.7458164653319237`}, 
               Offset[{-3, 0}, {4.028916756899646, 2.7458164653319237`}]}, {{
               4.028916756899646, 2.743297037829281}, 
               Offset[{3, 0}, {4.028916756899646, 2.743297037829281}]}, {{
               4.028916756899646, 2.743297037829281}, 
               Offset[{-3, 0}, {4.028916756899646, 2.743297037829281}]}}], {{{
             1., 0.}, {0., 1.}}, {0., 0.}}]}, Antialiasing -> False]}, {
         RGBColor[1, 0.5, 0], 
         StyleBox[{
           GeometricTransformationBox[
            LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
           GeometricTransformationBox[
            LineBox[{{{4.605170185988092, 3.0142829944251575`}, 
               Offset[{3, 0}, {4.605170185988092, 3.0142829944251575`}]}, {{
               4.605170185988092, 3.0142829944251575`}, 
               Offset[{-3, 0}, {4.605170185988092, 3.0142829944251575`}]}, {{
               4.605170185988092, 3.0118605227505792`}, 
               Offset[{3, 0}, {4.605170185988092, 3.0118605227505792`}]}, {{
               4.605170185988092, 3.0118605227505792`}, 
               
               Offset[{-3, 0}, {4.605170185988092, 
                3.0118605227505792`}]}}], {{{1., 0.}, {0., 1.}}, {0., 0.}}]}, 
          Antialiasing -> False]}}}, {
       RGBColor[1, 0.5, 0], 
       PointSize[0.012833333333333334`], 
       AbsoluteThickness[1.6], 
       PointBox[{{1.8708544251108226`, 2.70805020110221}, {
        1.6990291130862658`, 2.995732273553991}, {2.302585092994046, 
        2.4183527245293948`}, {2.8791984572980396`, 2.4002759364336876`}, {
        3.4531571205928664`, 2.536574298004362}, {4.028916756899646, 
        2.7445575450197603`}, {4.605170185988092, 
        3.0130724921338157`}}]}, {{}, {}}}, {{{}, {}, 
       TagBox[{
         RGBColor[0.5, 0, 0.5], 
         AbsoluteThickness[1.6], 
         Opacity[1.], 
         LineBox[CompressedData["
1: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
WXCbr9biQTMbtmW4hH2aYMH/Afytr80=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$5002353#1"]& ]}, {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox["Nc", TraditionalForm], 
      FormBox["Ni", TraditionalForm]}, 
    AxesOrigin -> {1.2384042696759958`, 2.1750867912644125`}, DisplayFunction -> 
    Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
    GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> {423.62109375, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Sphere-in-sphere Paschen Curve\"", TraditionalForm], PlotRange -> 
    All, PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> FrontEndValueCache[{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}, {{{1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
         FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.703782474656201, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.991464547107982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.214608098422191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.396929655216146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.551080335043404, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
        2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
         FormBox["20", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
         FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
         FormBox["100", TraditionalForm], {0.01, 0.}}, {0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.70805020110221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.0106352940962555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.703782474656201, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        5.991464547107982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        6.214608098422191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}]], 
   
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Mathematiac MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"C++ MC\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Literature parallel plate paschen curve\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.879180881946169*^9, 3.879180895448345*^9}, {
   3.879181130413333*^9, 3.879181214335868*^9}, 3.879182276932576*^9, 
   3.879261947716*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"b895e1f2-3ab8-45c5-b887-b7b2ad046891"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindBreakdownSC", "[", 
   RowBox[{"\[Lambda]_", ",", "\[Gamma]_", ",", "Ni0_", ",", "reps_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "region", ",", "list", ",", "i", ",", "errors", ",", "max", ",", 
      "params", ",", "fit", ",", "error", ",", "p1", ",", "p2", ",", "p3", 
      ",", "p4", ",", "f", ",", "vals", ",", "errorslist", ",", 
      "listForFit"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", " ", "=", " ", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Ni", ",", 
          RowBox[{"MaxElectronsNew", "[", 
           RowBox[{"\[Lambda]", ",", "Ni", ",", "reps"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Ni", ",", 
          RowBox[{"Ni0", "-", "2"}], ",", 
          RowBox[{"Ni0", "+", "2"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "list", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"listForFit", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
       "list"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorslist", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "&"}], "/@", "list"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"fit", "=", 
      RowBox[{"NonlinearModelFit", "[", 
       RowBox[{"listForFit", ",", 
        RowBox[{
         RowBox[{"p1", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"p2", " ", "x"}], "]"}]}], "+", "p3"}], ",", 
        RowBox[{"{", 
         RowBox[{"p1", ",", " ", "p2", ",", " ", "p3"}], "}"}], ",", " ", "x",
         ",", 
        RowBox[{"Weights", "->", 
         RowBox[{"1", "/", 
          RowBox[{"errorslist", "^", "2"}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "-", "p3"}], ")"}], "/", "p1"}], "]"}], "/", 
        "p2"}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p1"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p2"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], ".", 
        RowBox[{"fit", "[", "\"\<CovarianceMatrix\>\"", "]"}], ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p1"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p2"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"f", ",", "p3"}], "]"}]}], "}"}], "]"}]}], "/.", 
       RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"f", ",", 
        RowBox[{"Sqrt", "[", "error", "]"}]}], "]"}], "/.", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.882148221907324*^9, 3.882148227129281*^9}, {
  3.882151855101749*^9, 3.882151882327153*^9}, {3.882151982283687*^9, 
  3.882151985801445*^9}, {3.882152227566423*^9, 3.8821522277176332`*^9}, {
  3.882153074928735*^9, 3.882153075416485*^9}, {3.882796597696953*^9, 
  3.8827966028034077`*^9}, {3.882796786275175*^9, 3.882796786474092*^9}, {
  3.885174023615801*^9, 3.8851740345247183`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"c4211bed-f905-4563-a93e-01d3892bc8c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"6", "/", "5"}], ",", "50", ",", "21", ",", "500"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.885174792652755*^9, 3.885174795983036*^9}, {
  3.8851780914984627`*^9, 3.885178096445939*^9}, {3.885218869980949*^9, 
  3.8852188714175053`*^9}, {3.8852189949354877`*^9, 3.88521899499681*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"d8a2386a-3c4f-4fba-8be2-64b20c9876ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"19", ",", 
     InterpretationBox[
      TemplateBox[{"47.3", "3.1"},
       "Around"],
      Around[47.33095216767779, 3.102356122587504]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     InterpretationBox[
      TemplateBox[{"50.7", "3.1"},
       "Around"],
      Around[50.72726856666021, 3.1104169134926614`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", 
     InterpretationBox[
      TemplateBox[{"53.4", "3.4"},
       "Around"],
      Around[53.42691305488483, 3.443133129570565]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     InterpretationBox[
      TemplateBox[{"53.4", "3.3"},
       "Around"],
      Around[53.382757814970034`, 3.3306281986574082`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     InterpretationBox[
      TemplateBox[{"66.0", "3.4"},
       "Around"],
      Around[65.95031416548917, 3.36878741548636]]}], "}"}]}], "}"}]], "Print",\

 CellChangeTimes->{3.885220596742463*^9},
 CellLabel->
  "During evaluation of \
In[204]:=",ExpressionUUID->"e8b4bc31-eca4-4426-9abc-104ca932df5d"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"20.3", "1.0"},
   "Around"],
  Around[20.34916524193728, 1.0494025269585117`]]], "Output",
 CellChangeTimes->{3.8851749506943293`*^9, 3.885175711327279*^9, 
  3.8851792103612633`*^9, 3.885218954341446*^9, 3.885220596756768*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"0a74822e-12a9-4ecd-8909-d47af32c5847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{"1", ",", "50", ",", "15", ",", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.8851747716228733`*^9, 3.885174785046777*^9}, {
  3.885175387832696*^9, 3.8851753880421753`*^9}, {3.885178103009049*^9, 
  3.885178106477668*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"c8d78e0c-076c-4f32-b2c9-300bb0ed7c07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"46.", "4."},
       "Around"],
      Around[46.388730765412205`, 3.958530836140947]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"41.1", "3.5"},
       "Around"],
      Around[41.0615907824784, 3.5366190594156746`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     InterpretationBox[
      TemplateBox[{"52.", "5."},
       "Around"],
      Around[51.904465133583024`, 5.4778984145414995`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"55.", "6."},
       "Around"],
      Around[54.609329538467044`, 5.634216388376334]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     InterpretationBox[
      TemplateBox[{"75.", "6."},
       "Around"],
      Around[75.35778960414129, 6.236266378682686]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.885180000135281*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"050c4d42-b227-4aee-b266-0057325ec3b7"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"15.4", "0.6"},
   "Around"],
  Around[15.429167215405755`, 0.5809504421373872]]], "Output",
 CellChangeTimes->{3.885180000144361*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"ec7199d3-17a3-4bc3-aca8-d8fbcea17605"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"1", "/", "2"}], ",", "50", ",", "11", ",", "100"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.882152717247649*^9, 3.8821527274580183`*^9}, {
  3.885174064228441*^9, 3.885174065149906*^9}, {3.885174721964137*^9, 
  3.885174723646443*^9}, {3.885218978509171*^9, 3.885218980145383*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"2de3547f-ee55-4015-aebb-6651625af0af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", 
     InterpretationBox[
      TemplateBox[{"28.0", "2.5"},
       "Around"],
      Around[27.95834779113729, 2.4963933955083535`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"35.6", "3.5"},
       "Around"],
      Around[35.61480699034931, 3.493437154167043]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     InterpretationBox[
      TemplateBox[{"53.0", "3.3"},
       "Around"],
      Around[53.033008048911725`, 3.3489870403841024`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"78.", "7."},
       "Around"],
      Around[78.23843198781964, 7.388386526781666]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"97.", "28."},
       "Around"],
      Around[97.36179595822864, 27.526146538605317`]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.885221292844108*^9},
 CellLabel->
  "During evaluation of \
In[205]:=",ExpressionUUID->"e630a600-15cf-460e-831d-a1b73de77662"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"10.86", "0.09"},
   "Around"],
  Around[10.856959324370656`, 0.08997584137236694]]], "Output",
 CellChangeTimes->{3.885221292845704*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"56660b25-d845-4311-97e4-4da6b8920824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"1", "/", "3"}], ",", "50", ",", "10", ",", "100"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.885218973281549*^9, 3.8852189817160673`*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"a72ca4cb-d70d-4a62-8160-5237c7767dce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", 
     InterpretationBox[
      TemplateBox[{"14.8", "0.8"},
       "Around"],
      Around[14.83925906583167, 0.7688819949353078]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     InterpretationBox[
      TemplateBox[{"24.5", "1.9"},
       "Around"],
      Around[24.469532159458407`, 1.931665526487754]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"36.8", "1.6"},
       "Around"],
      Around[36.751798237341, 1.614920104667302]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     InterpretationBox[
      TemplateBox[{"53.", "9."},
       "Around"],
      Around[52.8013958212439, 9.251404045220392]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"88.", "8."},
       "Around"],
      Around[88.26880896560121, 7.517317745148917]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.885222292210064*^9},
 CellLabel->
  "During evaluation of \
In[206]:=",ExpressionUUID->"9649e363-2d04-4e5b-9c7f-b030d166e217"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"10.70", "0.04"},
   "Around"],
  Around[10.699265861718269`, 0.04173418107563299]]], "Output",
 CellChangeTimes->{3.885222292218347*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"149d19c7-0859-4d82-9f7d-eeaa726e29b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"1", "/", "4"}], ",", "50", ",", "11", ",", "50"}], "]"}]], "Input",\

 CellChangeTimes->{{3.8821519083695993`*^9, 3.8821519249804697`*^9}, {
  3.8821522130973883`*^9, 3.882152217147738*^9}, {3.882152307492597*^9, 
  3.882152315583755*^9}, {3.885174441486351*^9, 3.885174443657361*^9}, {
  3.885174639665504*^9, 3.885174643388071*^9}, {3.8851753950381327`*^9, 
  3.885175420673414*^9}, {3.88521898309903*^9, 3.885218999411625*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"78d4a2cd-9b34-4c0d-8686-4507aafe0827"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", 
     InterpretationBox[
      TemplateBox[{"18.0", "1.6"},
       "Around"],
      Around[17.966082889177112`, 1.5913023012430554`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"29.8", "1.7"},
       "Around"],
      Around[29.789680812695163`, 1.7131186899929913`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     InterpretationBox[
      TemplateBox[{"49.", "4."},
       "Around"],
      Around[48.9914752055512, 3.635761605040856]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"68.", "9."},
       "Around"],
      Around[68.06322413833561, 8.609514119985718]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"113.", "35."},
       "Around"],
      Around[112.66276057183077`, 35.46974780254527]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.8851763858512297`*^9, 3.885222947421566*^9},
 CellLabel->
  "During evaluation of \
In[207]:=",ExpressionUUID->"d905fef7-89f6-4971-a7de-03d64cd53551"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"11.13", "0.06"},
   "Around"],
  Around[11.125424567773873`, 0.05805192844510644]]], "Output",
 CellChangeTimes->{3.885176385859313*^9, 3.885222947435606*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"d3133595-65c7-4a0a-9966-171bb4437bac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"1", "/", "6"}], ",", "50", ",", "12", ",", "30"}], "]"}]], "Input",\

 CellChangeTimes->{{3.885175400586658*^9, 3.8851754162452793`*^9}, {
  3.88521898473099*^9, 3.885219001073574*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"0ea52185-acf6-450e-a638-08111e770687"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"14.3", "1.6"},
       "Around"],
      Around[14.255729002415833`, 1.568558535861333]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     InterpretationBox[
      TemplateBox[{"28.", "4."},
       "Around"],
      Around[28.295018393725027`, 3.6103772817638706`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"43.", "5."},
       "Around"],
      Around[43.138620891954155`, 4.921697173321615]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"144.", "44."},
       "Around"],
      Around[143.59015931324257`, 44.273573146209976`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"138.", "38."},
       "Around"],
      Around[138.0628524675154, 38.468155291604845`]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.885176514447115*^9, 3.885223434587141*^9},
 CellLabel->
  "During evaluation of \
In[208]:=",ExpressionUUID->"4f96848d-e389-4928-8fac-a3e63c1506e1"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"12.14", "0.19"},
   "Around"],
  Around[12.142954622062913`, 0.18799421376865977`]]], "Output",
 CellChangeTimes->{3.88517651445839*^9, 3.88522343459402*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"111afb89-4668-4fb6-a692-07bd480ed6a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"1", "/", "8"}], ",", "50", ",", "14", ",", "20"}], "]"}]], "Input",\

 CellChangeTimes->{{3.885175409220648*^9, 3.88517542324441*^9}, {
  3.8851781145834503`*^9, 3.8851781195991707`*^9}, {3.885218987578081*^9, 
  3.885219002967503*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"ea5a6862-1992-44f8-b7bc-0ddc07a8b5ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"27.", "6."},
       "Around"],
      Around[26.6110499404217, 5.563058302543346]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     InterpretationBox[
      TemplateBox[{"35.", "6."},
       "Around"],
      Around[35.021444943219436`, 6.19473322027233]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"53.", "9."},
       "Around"],
      Around[52.84339338810765, 9.367931106557718]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     InterpretationBox[
      TemplateBox[{"85.", "17."},
       "Around"],
      Around[85.03835745603651, 16.80191174420232]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"150.", "133."},
       "Around"],
      Around[149.53384105443428`, 132.59107922515472`]]}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.885176672630373*^9, 3.8851802783651237`*^9, 
  3.885223994492872*^9},
 CellLabel->
  "During evaluation of \
In[209]:=",ExpressionUUID->"c601819c-fa47-45e3-ac40-f901ed14ef8c"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"13.894", "0.017"},
   "Around"],
  Around[13.893843930972338`, 0.016641541345357624`]]], "Output",
 CellChangeTimes->{3.885176672670224*^9, 3.8851802783780937`*^9, 
  3.885223994499508*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"5dadac47-049d-4979-83ef-4441fc3e7357"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"1", "/", "9"}], ",", "50", ",", "15", ",", "30"}], "]"}]], "Input",\

 CellChangeTimes->{{3.885178133862502*^9, 3.885178139406382*^9}, {
  3.8852189896804523`*^9, 3.8852189899731092`*^9}, {3.885226427873608*^9, 
  3.885226434830847*^9}, {3.885226545459951*^9, 3.885226545642335*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"3c04772a-729d-4ae2-bd62-c2670f3d9a9a"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.885174796376746*^9, 3.885176222163671*^9, 
  3.88518101457819*^9, 3.885224338612709*^9, 3.885226438452013*^9, 
  3.885226543331719*^9, 3.8852273746981497`*^9, 3.885228407499689*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"b1298b93-c7ea-4442-978e-5a22a2e0fc88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindBreakdownSC", "[", 
  RowBox[{
   RowBox[{"1", "/", "11"}], ",", "50", ",", "20", ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.885175411875502*^9, 3.885175425225278*^9}, {
  3.885178124639811*^9, 3.88517812935995*^9}, {3.885218991512146*^9, 
  3.885219006921403*^9}, {3.885225421105117*^9, 3.8852254225886602`*^9}, {
  3.885226537957007*^9, 3.885226549929645*^9}, {3.885227427884571*^9, 
  3.885227428503798*^9}},ExpressionUUID->"b4a98f70-b356-4b94-9829-\
6402c7c026aa"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.882152218160964*^9, 3.882152250640588*^9, 
  3.882152314251233*^9, 3.882152387260504*^9, 3.8851744129526367`*^9, 
  3.8851746041740522`*^9, 3.885174719307681*^9, 3.885176940996312*^9, 
  3.885180727524912*^9, 3.885224515456979*^9, 3.885225490775318*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"098af9d0-a5d9-4628-b155-3a3dfee61206"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scbreakdown", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "1.2"}], ",", 
      InterpretationBox[
       TemplateBox[{"20.3", "1.0"},
        "Around"],
       Around[20.34916524193728, 1.0494025269585117`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      InterpretationBox[
       TemplateBox[{"15.4", "0.6"},
        "Around"],
       Around[15.429167215405755`, 0.5809504421373872]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      InterpretationBox[
       TemplateBox[{"10.86", "0.09"},
        "Around"],
       Around[10.856959324370656`, 0.08997584137236694]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", 
      InterpretationBox[
       TemplateBox[{"10.70", "0.04"},
        "Around"],
       Around[10.699265861718269`, 0.04173418107563299]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", 
      InterpretationBox[
       TemplateBox[{"11.13", "0.06"},
        "Around"],
       Around[11.125424567773873`, 0.05805192844510644]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", 
      InterpretationBox[
       TemplateBox[{"12.14", "0.19"},
        "Around"],
       Around[12.142954622062913`, 0.18799421376865977`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", 
      InterpretationBox[
       TemplateBox[{"13.894", "0.017"},
        "Around"],
       Around[13.893843930972338`, 0.016641541345357624`]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", 
      InterpretationBox[
       TemplateBox[{"14.43", "0.05"},
        "Around"],
       Around[14.428188531251738`, 0.05422891782647422]]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.885218875690156*^9, 3.88521895293823*^9}, {
  3.885226351053673*^9, 3.8852264145778513`*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"61250728-6d46-4e85-9b71-464c24f74f3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.8333333333333334`", ",", 
     InterpretationBox[
      TemplateBox[{"20.3", "1.0"},
       "Around"],
      Around[20.34916524193728, 1.0494025269585117`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     InterpretationBox[
      TemplateBox[{"15.4", "0.6"},
       "Around"],
      Around[15.429167215405755`, 0.5809504421373872]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     InterpretationBox[
      TemplateBox[{"10.86", "0.09"},
       "Around"],
      Around[10.856959324370656`, 0.08997584137236694]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     InterpretationBox[
      TemplateBox[{"10.70", "0.04"},
       "Around"],
      Around[10.699265861718269`, 0.04173418107563299]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     InterpretationBox[
      TemplateBox[{"11.13", "0.06"},
       "Around"],
      Around[11.125424567773873`, 0.05805192844510644]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     InterpretationBox[
      TemplateBox[{"12.14", "0.19"},
       "Around"],
      Around[12.142954622062913`, 0.18799421376865977`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     InterpretationBox[
      TemplateBox[{"13.894", "0.017"},
       "Around"],
      Around[13.893843930972338`, 0.016641541345357624`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     InterpretationBox[
      TemplateBox[{"14.43", "0.05"},
       "Around"],
      Around[14.428188531251738`, 0.05422891782647422]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8852189549292507`*^9, {3.885226402225357*^9, 3.88522641497785*^9}},
 CellLabel->
  "Out[329]=",ExpressionUUID->"f2579e0f-dec2-408f-aac4-1c21488958c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", "scbreakdown", "]"}]], "Input",
 CellChangeTimes->{{3.8852189555531054`*^9, 3.885218958004195*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"f30beb5e-cd6f-4a84-ba0b-9cd4d401d75c"],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{0.8333333333333334, 2.9600928012745755`}, {
          0.8333333333333334, 3.0130398909950364`}}], 
         LineBox[{{0.8333333333333334, 3.0130398909950364`}, {
          0.8333333333333334, 3.063323993101003}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{1., 2.6978797754300246`}, {1., 2.736259693136671}}], 
         LineBox[{{1., 2.736259693136671}, {1., 2.773220875984939}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{2., 2.3764843667930506`}, {2., 2.3848062867538564`}}], 
         LineBox[{{2., 2.3848062867538564`}, {2., 2.3930595235455527`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{3., 2.366266842267648}, {3., 2.370175128059647}}], 
         LineBox[{{3., 2.370175128059647}, {3., 2.3740681986000736`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{4., 2.4040013779300957`}, {4., 2.4092329907195045`}}], 
         LineBox[{{4., 2.4092329907195045`}, {4., 2.4144373761179247`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{6., 2.481146289177013}, {6., 2.49674913510208}}], 
         LineBox[{{6., 2.49674913510208}, {6., 2.512112267648707}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{8., 2.630247377820027}, {8., 2.6314458593712926`}}], 
         LineBox[{{8., 2.6314458593712926`}, {8., 2.6326429062837464`}}]}},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{{}, {
         LineBox[{{9., 2.6654182093459955`}, {9., 2.669183829995824}}], 
         LineBox[{{9., 2.669183829995824}, {9., 2.6729353239260107`}}]}},
       Antialiasing->False]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{0.8333333333333334, 3.063323993101003}, 
            Offset[{3, 0}, {0.8333333333333334, 3.063323993101003}]}, {{
            0.8333333333333334, 3.063323993101003}, 
            Offset[{-3, 0}, {0.8333333333333334, 3.063323993101003}]}, {{
            0.8333333333333334, 2.9600928012745755`}, 
            Offset[{3, 0}, {0.8333333333333334, 2.9600928012745755`}]}, {{
            0.8333333333333334, 2.9600928012745755`}, 
            Offset[{-3, 0}, {0.8333333333333334, 2.9600928012745755`}]}}], {{{
          1., 0.}, {0., 1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{1., 2.773220875984939}, 
            Offset[{3, 0}, {1., 2.773220875984939}]}, {{1., 
            2.773220875984939}, Offset[{-3, 0}, {1., 2.773220875984939}]}, {{
            1., 2.6978797754300246`}, 
            Offset[{3, 0}, {1., 2.6978797754300246`}]}, {{1., 
            2.6978797754300246`}, 
            Offset[{-3, 0}, {1., 2.6978797754300246`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{2., 2.3930595235455527`}, 
            Offset[{3, 0}, {2., 2.3930595235455527`}]}, {{2., 
            2.3930595235455527`}, 
            Offset[{-3, 0}, {2., 2.3930595235455527`}]}, {{2., 
            2.3764843667930506`}, 
            Offset[{3, 0}, {2., 2.3764843667930506`}]}, {{2., 
            2.3764843667930506`}, 
            Offset[{-3, 0}, {2., 2.3764843667930506`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{3., 2.3740681986000736`}, 
            Offset[{3, 0}, {3., 2.3740681986000736`}]}, {{3., 
            2.3740681986000736`}, 
            Offset[{-3, 0}, {3., 2.3740681986000736`}]}, {{3., 
            2.366266842267648}, Offset[{3, 0}, {3., 2.366266842267648}]}, {{
            3., 2.366266842267648}, 
            Offset[{-3, 0}, {3., 2.366266842267648}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{4., 2.4144373761179247`}, 
            Offset[{3, 0}, {4., 2.4144373761179247`}]}, {{4., 
            2.4144373761179247`}, 
            Offset[{-3, 0}, {4., 2.4144373761179247`}]}, {{4., 
            2.4040013779300957`}, 
            Offset[{3, 0}, {4., 2.4040013779300957`}]}, {{4., 
            2.4040013779300957`}, 
            Offset[{-3, 0}, {4., 2.4040013779300957`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{6., 2.512112267648707}, 
            Offset[{3, 0}, {6., 2.512112267648707}]}, {{6., 
            2.512112267648707}, Offset[{-3, 0}, {6., 2.512112267648707}]}, {{
            6., 2.481146289177013}, 
            Offset[{3, 0}, {6., 2.481146289177013}]}, {{6., 
            2.481146289177013}, 
            Offset[{-3, 0}, {6., 2.481146289177013}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{8., 2.6326429062837464`}, 
            Offset[{3, 0}, {8., 2.6326429062837464`}]}, {{8., 
            2.6326429062837464`}, 
            Offset[{-3, 0}, {8., 2.6326429062837464`}]}, {{8., 
            2.630247377820027}, Offset[{3, 0}, {8., 2.630247377820027}]}, {{
            8., 2.630247377820027}, 
            Offset[{-3, 0}, {8., 2.630247377820027}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        GeometricTransformationBox[
         LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
        GeometricTransformationBox[
         LineBox[{{{9., 2.6729353239260107`}, 
            Offset[{3, 0}, {9., 2.6729353239260107`}]}, {{9., 
            2.6729353239260107`}, 
            Offset[{-3, 0}, {9., 2.6729353239260107`}]}, {{9., 
            2.6654182093459955`}, 
            Offset[{3, 0}, {9., 2.6654182093459955`}]}, {{9., 
            2.6654182093459955`}, 
            Offset[{-3, 0}, {9., 2.6654182093459955`}]}}], {{{1., 0.}, {0., 
          1.}}, {0., 0.}}]},
       Antialiasing->False]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{0.8333333333333334, 3.0130398909950364`}, {1., 
     2.736259693136671}, {2., 2.3848062867538564`}, {3., 2.370175128059647}, {
     4., 2.4092329907195045`}, {6., 2.49674913510208}, {8., 
     2.6314458593712926`}, {9., 2.669183829995824}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.311718164394793},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9.}, {2.311718164394793, 3.063323993101003}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {
    Automatic, {{2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {2.4849066497880004`, 
       FormBox["12", TraditionalForm], {0.01, 0.}}, {2.70805020110221, 
       FormBox["15", TraditionalForm], {0.01, 0.}}, {2.8903717578961645`, 
       FormBox["18", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
       FormBox["20", TraditionalForm], {0.01, 0.}}, {3.091042453358316, 
       FormBox["22", TraditionalForm], {0.01, 0.}}, {2.0149030205422647`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.028148247292285, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0412203288596382`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0541237336955462`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.066862759472976, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1400661634962708`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.2512917986064953`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.3513752571634776`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.3978952727983707`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.4423470353692043`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.5649493574615367`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.6390573296152584`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.772588722239781, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.833213344056216, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.917770732084279, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.9444389791664403`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.970414465569701, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.0204248861443626`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.044522437723423, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.068052935133617, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.095577608523707, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.100092288878234, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.104586678466073, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.109060958860994, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.1135153092103742`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{
  3.885218958223096*^9, {3.8852264038627443`*^9, 3.885226417663002*^9}},
 CellLabel->
  "Out[330]=",ExpressionUUID->"5bb58193-5a7c-4f3c-b96f-9763e2fcdfd3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting fusor data", "Section",
 CellChangeTimes->{{3.864518719164466*^9, 
  3.864518722619115*^9}},ExpressionUUID->"0ed3f740-3492-4adb-a304-\
da33ce708d85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\</Users/wbowers/Downloads/RAWpashendata.txt\>\"", ",", 
      "\"\<Table\>\""}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.862877692526726*^9, 3.8628777172385397`*^9}, {
  3.885227389793478*^9, 3.8852274033756113`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"846a5b25-e94a-4808-a80a-ff6e125b2634"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"17.4373`", ",", "2086.77`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.4627`", ",", "2052.92`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.4878`", ",", "2069.5`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.5153`", ",", "2036.34`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.549`", ",", "2081.93`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.5836`", ",", "2041.17`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.6141`", ",", "2037.03`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.641`", ",", "2048.08`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.6684`", ",", "2031.5`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.7051`", ",", "2051.54`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.7484`", ",", "1998.34`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.7916`", ",", "2043.25`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.8291`", ",", "2030.12`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.8664`", ",", "1991.44`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.9028`", ",", "1962.42`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17.9676`", ",", "1967.26`"}], "}"}], ",", 
           TemplateBox[{"7141"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"16656.5`", ",", "2019.76`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16660", ",", "2057.06`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16660", ",", "2035.65`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16660", ",", "2054.99`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16660", ",", "2073.64`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16660", ",", "2073.64`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16660", ",", "2073.64`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16663.4`", ",", "2073.64`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16666.9`", ",", "2081.24`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16670.7`", ",", "2081.24`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16677.3`", ",", "2079.17`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16684", ",", "2102.66`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16690.9`", ",", "2073.64`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16697.9`", ",", "2077.79`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16704.9`", ",", "2082.62`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"----------\"\>", ",", "\<\"--------\"\>"}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 389, 24658508578038082259, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 389, 24658508578038082259, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 389, 24658508578038082259, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[24658508578038082259 === $SessionID, 
   Out[389], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.862877717545784*^9, 3.863435820254919*^9, {3.885227375578792*^9, 
   3.88522740370804*^9}},
 CellLabel->
  "Out[389]=",ExpressionUUID->"118d394d-4332-476d-af09-e07ac3c7fc62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.862877721422977*^9, 3.862877723938243*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"2613a5fa-ba51-43f3-a614-4ab8ae7601c2"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     NCache[
      Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
3rgeAyoEVZ8NnddL4v5Hkr6GVBzvy2peb3xjRIVT79ISuINMqKRTWfI7qLjf
2FlhEq1iQgVioPhgdB0T7t3IEd6/i4rPs4r7+QfPm1Eh/4NLAn2GCSn2pEEJ
c7Sfdot7C9ItUL9agn+bsfdSYTIpvWtgPTa/cv8eldxHBfN04TBBrB/8x3S2
a1hTcT++cZ98r6ktqudHJwV6qB32vqae3fgUE14bXL55354K9/V1S10bmXBE
ui6z1ZEKo7VJAR6mLPhiZCGx1BntV+dB86sgF9RfSu20o9AhKjS6LSDNz/MB
Oz6/WTcqTPRa63/9wAQp+YML3ntQweTtb1/KKBOMJ8n7W7xQvVaspQ999cHw
N0iMyZFjwRGLXVKCvlQ48W237BSBBZozqrkdRxGe9ygM+Vj6o/3ezKzY0nKM
is+zE7IyJx4GUuGNMERv7mDC9CO7bwXBVHx+f7Gpk3oaSsXnwUXdGce2MCo+
f0WlDt4ViKDCBcbEF+d3TPBJk61dE0mFtb5Cl1pXYX5N+9Hkg1PY+m6vynKG
mTDpUSdPjqLi+hZE5btjFU2F9XMKBvN6GiCSlqATi+qRGLlB3zieCrWS4hnS
mL6ryHmnG51B/Wzf6M1sP0vF58vZ25tcd57H+EIoPb8jnwlT1X8S+xKp+PyH
98Le4skYfkTsOdnvmZAUtzlGKRXxcQ/rsb9ZGhVq+Pnb5/U4TK0oy+YyFfeL
FoRKB+erVNjm1GvzZYgJdwjjDzZfR/rJuHg2NvMG4t+6JxdCiBlU2Ou0Z04Q
82eG7ReJZzLR+i4pMV3XbqF8SiknWA9vo/pvufrAyDYH7Wf7hSM6sblI76I3
KBgV5VHx+RtqY6UZeZcKs18OL/3Ch50Xz2fmXS2gwvkwwxJPTJ9PV3k9vXMf
+x6dpjKvL0O6QtdqH6L6VVX1z356hPp137Wz81cxFfdLm95SX+wvQf3OrJRO
zy6lgtIC/8VsJgsOWMffni6jwmVjweFLgph/2jagSCpH9Z2Tf0fdUUnF/aBc
0GW3Q1WIX7svui0peo76laRYoESopsLZUv/taSswPMnGKTrVUHH/8/zidJt/
Hfp+pow5JaoBfe9jnmKLXRMVn/87U8o2nH+J6du1M+n3/zKhJubgleevqPC1
VPzgPJ6u6p2WXfMG06O/mgtW8rJA71eUgEoLFfqyt2/e/YcJhGBvU8W3iN9b
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
+pUldedyxirA3/e3qby8dRvqpbvSWJNVJVxvf+A51xrM5Plu9yz/kcVV4O+A
Fufya1Ww/5ZtrqMm1RDf7o/Ltd5hflAqXBfjgPtLo8rnCjUiqPnradqLZbj/
UKzlcsBMnvcaLtRSPVoD9cpwycNe6Tsi1POyDYd5qivvQHw6vfsotbkW4vm9
ecXZr7Vg79FG+WkH6kTQEx7eEj8dXL9foxci9aBPzB85HvmYO2S3Dj/UxvNy
ZV4TaoB6vkT2wtijBuhPhuh776jdFaGet425sYVO3AV9TRbh9Jm4C/mhmnyu
bkujCPX82jTMJuNWI/QTHb0pFUvuQTzSKgwV6u7BfLzys/IBm/uQ//41OWOv
78P7D/wa99d5AK8nDIo05zyA+8ct+XRG/CG8f1ZQh9LFh3Dec04r5/CqR+C/
SSmrtpZHoH9JeZP8ux7D/vaaPTWc/gT0ZqvFcGrgE8iHJovVse1PoP5/rc73
XvUU1qOlba6Z8RTq1bqzSz9xNkF9UJn+3cit6Z/+/3Fow9cmqAe+9UuU9j+D
/A6PuXKU0QzXG/TLMY5ohnlls/Gw29tmqK/LzqVlrHr+z3nPq+qYvOcQb2ka
CV/5XkC+RL6Zk+n5AvTdKLJ1ptZLmO+NX/QnT28BvY6/sdjiUgvkj+i0kfj2
FqhPNUeuKwi0QrxujBu5aNwK+eSfFb3kaivMe45m2fZz20DfogY7RH3boP66
lj/60NIG17N32nFN5xX4+3pFu3vZK4injQ9+vjV+DfPQ0erctlevIb7vjz+j
mbeDHg49CJpT1g72iWAOus7vgPUs8hArP98Bn6cf7NPQ6oR+ItyPS/l+J/hv
a4RAgc0bsEe2rl3owBuw33zhuIP+XTB/G31s3NfZBestM3CbtuYt9CfXnEWz
Ct6Cfy6HhGYJvoPz7qLchzV+7yA/cAOb9v4d+K+zNUPY9z3c//CWMRmubtjP
XPM1abHdoCdtUsrdHzHvn7zMN5Ufq1K3bl7fA/a4GTchnt8D+m/4blxgZi+c
v74bHf/h3gvriTV59/NrL5zPHfqccrGiD/YfKz339P4PIqjnvJPe1OfT9PoX
Dn+AfDlU+dOZ3Q/353+du2xDP9Qr12ieu1mYyfeZtFOeVv7o/6ffrvdav2UA
8jPb1xHdGYD6oL7jyDeFj3C/c3tzco5/BHt8boqTlhsEfWB12dQUD4L/x6Q+
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
UvPnzXihREP31hS9/uQIr1/vf/xztYskpbdHtl7cusJdEr256PrxqgUNFVmM
Jq/YAfbyfletj3zg8wKfu0+e8wf7tjhpHB4MkUSCP7ebainS0Mv0Ca2vEdgf
juUXY5fg/RrFWM6NhvW+q/emGcZKoqQSA4MSaxoqdXaLkUyURFeF5qp/xHXt
ckjxg7FkSSr+haX82wOPSaK0yzsVhXRw/NJu83qmS1L64Kp5xX5VpiR67lHT
lbmMhgbPiP6+lYPvv227uuN6nF/bmlOv50miVRZKK8+Z4terrl/IuSiJVi6Y
fVfVgYZo1y+dL70C628V8TPhLpJEqsyUNx824PjKt+g1uylJ5av/eLSRU4Uk
ClCauzDEgIbiglfPoVWDvxpvWct01mL7vn7H2LuChngXZsidvitJ6ddJxx2p
Rg8k0WsBzQEfR2xvXrlSvidg7+PBz20Kn8H++gs/Zzx7CfZ24eVdOPRKEk23
H6pjmOA6slDJKbUT7LdTYpmx5jtJND9LIzLAjobUYhf2tPbA/rjsGhUf90si
3UWJwy3GNLQi/Jf/iyFJFNLDypU3x/H/vGT6k89w/YHUI2sef8X7LVZ81aiN
7fHt+ZPoCbj+LBsxQcffYA/XzpJpQtMZSCXs8fiXTTRkenFTdCEXg/r8l+C3
NZa8DMpeZvdetbXwMRD78G43f9ynDHWzAk3mMNBMkeG3qvo0dGbNKb9qIQYV
Lxp/bKwSxBjotZbghJAU7hdU4wuM6AyI348GhsNMBhrMHUZjW2loeXLwFbt5
DOS8siUtB9FQNL+4U5MMg4rPUhEDsS1yDLTg46yDF2VxX7Z10GqHAoOKj4fB
z4N1lRm4L00dqw2iIT/RwCsC6gzKX1l95bfClzGQNFf4sg53GvoREZjyYTkD
pVgsW83hTUOLZq3k0NcB1p+4+i5jFQM9zA7kXh45VU8+m3cbMJBZIPv85gBc
nycX7HZby0Dn36kH8WA9oh1R2cJlwqDiT6h2HbtoA4Pyp1HyGmWGBdhrRpnN
0q2WDPT7aaXbVPyqnl7JfdyGgda+YWV64T5Nms8xcakdg9KbTXpiCS+3Mig9
G/cLjwx3ZEA+Pno8WujCQNt/VRZKeGI93Dx5pMmDgXju5RdcdqIhh8PXKrq8
wN6ph57kIl8GFd8nHvZFFewBe1ry21xtCsT2iMpOOXKYhjgzlKK+hzDQ6v5T
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
v15QyccwhvVkzk51O7gO4mv0bF+I6Hq4v+kJy/tvTNlo8Z+yzKn4WRDWsv+y
Gax//eLPlzw2gv2/NeWXq28Ce6cWyX/5vZlN5VfoydC6MCuI93PXPTXfW7OR
8r5sh9o6PE9HCBiZbGFT+jTz4s5bI7Zg7z9LcsZy7NnowLKggcrfeD+RPgom
2/D9DnE/T/iB9ar3yp2vDmzUnOt1TLSJhoZOe9/JdmJT9cNg47ZxY2eIt2hN
ie+vXOB+60se2nu6sdFQnmTZKM6/EAnFC53ubKTLb9R4doiGaHy2Da6ebNTn
tCVm6v47MuNV+naw0Yvl363FaXS0/4XdqSQvNtWf5cfaN1l7w36/c2Vpy/iy
Kf3ZaCe5t3E3GykVN9DGPuP86xF4v3EPm9Jry7iu4i5/8J/VwN06k0DYz8HJ
Y7Z3gtiouLLl0p5ZdHQ61shzWQjk48TEhaEToWx0kbXm8VS+ymd1fhsLY6Pu
38cKAj7S0N2LDknrI4CdvQvXMPfh9btUzWJz0ZFTf6rQtCiIB8Vqmd9d0fC6
xJ94Ob0YNnKRPo3eC9PRsB198NQB8I97v4rmeCwbeai/lc4QoKP6szFj5+Jx
fpTHmEmO4fni7dpB64NspD/gKDAyjY7SnhSOvE4Efz47ISbldQji/U3ct/qJ
wzhfOXJEBSTo6ID4wvijR2B9nPliKcpH4f0WVvUz7qey0Z963vpV41P9Vt23
pWk4fn1X6R/mp6NHq7NmHzwO8Wv85VJR5wnQLx9He1XjdNgvF8+0wvpTEC8K
NWP79E+zUZnQtJ6giSl92+D08AwbOW47lKI9g46EEwKKDmb9E7+RH5P0stlo
347p+XM46Yi2zrmkLoeNghkVdm4z6cg9zFvf8Byb6id+8xQuu34e/P9/ywGH
0ySK/2FWwJp+gwtg/yTlWOOn+WCPE3mF3w0vspFA6cTtC7PpaCDxre37Qvx+
dZVGtQ80dKJY72bMZTbasFah77soHaUr2FUKXGUji1I5do0gHTlXvHPbcQ3f
z4iHli5PR7tS5z+puw77i/S6f3BeEdRLz6izNWeL2eiNpcHk5HQ6WvDH5QG9
FOz70HFoRepNNhoZVE29qERHLzasCeW5Bfbl8M0SDSvH+ad2q8BhgIa0HwnJ
zLnNRqFdvVytQnQUqG6y/UYlG60zq/3uiu9v3yaTa1vNRqoNh5easOlIaGJr
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
5+TqcL6LDJylflSHf68+JPTXnu0V/j2DOt3K3esV6t3t8z2JZeD3beIVJn0k
Yov2VVaPeuivN0Ma5/JB/zY3h//W433hyq32x26vcT6d1OWPnwU+o3Oqdyvs
n0fxqKrtG26C1uJp1ft2EtEU86H68xu83z5SVXuk8RbvQ1s6N62pBh6bv70U
9A7myVDy4sF33MRU2u3zK/9evMeer/PZO/z768WChchdDdxEQXfS6MMiuP+m
NtLfBC583UWo5UE+e2atehvwvnpgUitB7T03UV6lI7Y5CuaRPzTk2vc47+m/
DahT+AD60f/tswTPx7ltycXAZiwVhzTDYb/PqDr2NqK+2qRFnbIacb3ELafj
BJqwfjJylJcfNGG/pQ6fUd7RjPUUul2k1QV4iScilS+SRHizuE01NmN95LHM
ruNvgf2zVp3wzCERW9mD7iW1oD/sl7luyt0Kz69neE0lwzydX7AvdhUf2TZy
ZbIV/e+7SscNjTasf0ZPjxuFwF8YdRNF/UCf2X4Wsh/xvD29G8urPmI8r794
WiTfDn7JK+GwtRTm4y7OA3HAXbYellGpJOJu95P3U+34+zulHUv6HRhPwR/S
Vh87cD+fJU9f1vqE8+ZUSattLXDF+8XsDbB/XzcaeaVObiKgRyhsxb/sJBk3
VQEvvy5cZwr9/sfjynjJLjyPoN5jsSzg9rMbBHf4kwhudRkfSjf2yxecVINh
wP22Wx6Y34P++tFa/W83ft9LX57JugfnifOXG4929eB5zmeVFB3tRf+xJ92W
zu7FfIU+0wun+Yx66HC4FmkA3FG5hdX0Dok4c4ZavwT4rbLs/rwQqMfr4U/3
9WG+5I54KOQA06t3MbJBveVP9N/Z2Q/fXxY7ppUA85CkZuTtfoxHtO6TF3/7
Uf9OirPxlgPYX3ZHCbIODKB+mGWK1E8P4nnS+eet3w/ifc5q4U2M0hDm+/nG
rtclQ+jHWux54VxfYB58Xm6R/QD6I3smxzXgqfqIzbcqYP7wHfz8Djgm4u6A
DPQr808NmoLDuL7ugcWBoGE8n32Ie/D3YdR/kPDtO+e/chOCSqIhAU9JhBFV
Zkb/V8zfOQ4V+XMjmL8AX5+F5hHMV71Wr6vCKDdBzenI3ZMC+e+br8sAPr/h
U0V1IdRjIqs5ZQz9+WDEB7rEMawnVYNf7lu/4f50Up27LgOzX4xQWOm3Rqbe
a2qBZ4ciLx5IJBG1licauL8jXwiQqYz6jnoS/x1XR/MDuT14VufKD8wf88ez
dxt/YLzf+dm8FvmJ8d45ubEo8Ceu3yDhar9uHPNNf9R5xgOYsdklNDabRDQz
JDzrADYq8h40y4X5rCPMnTSB5zkrtknacAKfEz5nHBsmMF/k/AD6S78w3vmO
DiepfnMT9974PRyJhvhGuprY/8Z+da7d36Rl1XPL3I71kpNwXzQLERKohvmv
8HRwyiSe79cX2TebpriJj0aNtKTH0G/CN+3wWsUi8gwj/VN4Pn61O+8PTeM8
Y6NLMk6cxn50MI3f8s80nv8F1dDj0zP4fjvN57BnM9jPv2/feE9iFvP9qaxR
OW8W6zfZWt2HMofPC+yKKG5zeD7d0l0ebXP4foaDyA+JefzeQp1MY/o8+lHt
Vp5ejgVugv9hGKt5JdRLdz5/ELB2jn1g7X0SsaH28YafC+ifC8W2thp/YL7r
2u9qUwf32Sn1+WfAr9IebtiXTiL8TKyXdy9CvoJYvpfHwPs5L9KiF9EfWKWS
W/4sYn0yin9+Z7LETURPOxyWKCERiyHWT16v4nCvQ5dkltEfSm/u3P14Gf3h
zMZkSdJfrKcyN9YsW+C5ibj+lfocljY88hJ4kpaL9fdHuC85bRJkX0P57/tr
6t8seAL/O79belzHV+B//eCmMe8LbSoKMarNyrXSTywe7pOvAE51zvycUk4i
djDIFuxZSyGKGnPyw+OgngTkaCOB/+mPrq6Un5oav7cntWunPfDQu9jogiyo
18Jrc63U+P1+p2ehQjSU//Ipepohywf43/mX+Uwzv61iqq6RaLN1+L5b8UWe
nnW43siIcfleWgrxt1X0fE8BzCPnpDY5AP/L/4yzyPOnwMf2hDd/ewHzg3tl
oQAd5b/8vkkurnsI/K8+zn9zcKLQU/7z06KP2mm36PF7iofCJPqBt5eueaz6
nkQEbow23L+eQujN+Z24XPz/zvXE2E+pVZyXXawcDvxP//LaTXNj63G/RSkH
3h1hwPgwZTfMFgAfLHgm1fMc/OZ5jjDnBsp/+tkvflAoYAO+f3LA9cVf4Be6
ny1Fn5AINX5ZfkdGyn/z4d735zmGgd3PU6JW6n9opKTu8EYK8ZGWPex/5vfH
nBZpwP/+fsAuf/kBDROFEOEuH+yG76e/VFpnAvzPP9acrOqsBP43T47Pnern
ZKb814+3X+D4fg1YZirGZgH0160f5dgE/G8+udWcvUeWhfLfvJO4vOtQJguu
v96T2pm0iUKc3F9m8vM11POHLdyuwFQpVa6VZVAvmoFNrcBD6oz5TPB8hO7X
FdHNlP/qeepX/VIc8K2bt06t5NM9Uer1elbMd/j8XW8X4L2mjo0i9TBPDO6a
6GPF826ulaA9yob6oes1K8liw/oR8M4zWAT+V+9qLusUNLbgc867TsxJwM/m
eB5nwXrTQvnf/m7B80VF7MszZsfvT9ZLhD0HprtFc3mokUQ4dAl83LKV8t/9
7JHvls32wP/8OOLtGramrVgf7ANnLstso/zXHzZVezo/BO48HPjeLI1EHP+p
lsOyHeN3oz5uyAvYSMV8XWgt1FfmV6rJ7bg/ocORD/RJlP/mp44b3IPPgf/1
ByrFKHVOMq7XkPH4wzUy7u9C4subjWR8v1pEy0yAA/VS91uVzw343/3xr4T1
wyZgeuljXe9qwC9vf9kuyIn6NizqaAjkxHq3ujuy7yfwv/7T81xAVnUHhTht
vJZ9Rf914YVZSTtQ/0K7rzXO7MDzdq8vS9fmQr/zLRJWqObC/cr72i6JcVP+
m5fUxSp4EoH/zVP+jofzFoEnu4hjCl0wv+tJCRlSKMQWUUuLF00wr55UiikC
NuM/E8MA+7UPoiul5kG9yAvqsWjzoP5fTKk0ZQAbqNnJG7TC/exhzJMtO/H9
N6kt7p47Md4Jx1RcB3difscNOUQO8WJ8v8lQNifyon4FvDsf/OHF+NBoX+fV
30Uhwk9yMZK7oX8P0mk924Xnj/SOrd3FRyHKwj7K+n2CemcKu3SHD/PBerwo
fwl4kulzucYryN+yRu6J3RRCNeen5BboVzMbRTjSgbf196Wt+F9dmOzvv7vx
vELSqfrn+Cn/zUtPbEZzqvgxX2HG7Jk8Ahg/X+0ABStgndkvzCt+kFy8LrwK
ePqAdcjK/jz5RLewC+J+6rdcFbUXxPoSJFVUvQG+mpQ2uPsDieC4IujEt4dC
5EvSfc56C/586LxeGDD/ibunV/Shs8zNM7cH/efJ+V4uXSEKoZB99pjuL8iP
kSiRL4R+sm3/7VgmYdxf+RJ142Vh1KdPW2LZW+CzG3adfv8TvtfQQyckQiF6
vYLXRI+BH3reZQ8QwXjX9I3ZfAP+d9/XPGaQrSFKIRzPNYTTgj/MbbVISwSe
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
ZCLcj0/p+SU8f/rRA/VsFshOBey0NsCf0ht5W2C9L409x2ssMN60TmEVtJa4
3j2JioPHLLF+tco/kaOAlzVLlX7TkgmVGOqI76ueyyXVcipZoX7I54gjUcCM
lNZbXPB+AfcThx5g/5aSXeabyURuVWw/nzXGN3nU6rqbNb6fNfRKc8ga/T/f
KZ9R/TKFSHd7tn/ledfzmZ+xwAXaAmGBPGSiuvWFV+dlzKeN9rFEkg36sbPI
3mZL4J1NbiFeG8kEjcW+rpc2WG9mgy84OG1R7wbZdn32wFPhPnHH15GJG3rn
ZV7a4vlfKW3xY7eD9QMdrqzkr2Fj3eUzdti/qf729STYoX8/lFq/cQj4tKUT
PRvkL7w66ICcPdzfRFWDV+pF74tTfpQ9zgOFL17Vjtijn31LtRLedQX11/+o
lPv8FXzeYH7DPAt4PDS/4uRuMrGcYM6/1QGfH8wW4b7hgPE/0+1t99kB8x+y
PiSQ15FCiI4te9wgkYkcx4WtVo4Yr0lG7qRKYCV2+tfKW8nEhMvNVM6rGK8X
W1Nj3K5ivLiHemeqr6IfbjPaeu7PVTz/yx/ZwRLX4L5lK7dVk0wm4i7ZbgwE
fnsldOCWIPjPNe8L36+hnxBnizM0nFbqnVQZtYlMjJ9vexEM7Mg/H6C3k0xc
2ZhwqtYJ9ZfuIqC17ITxcuptTdF3xt+PnfqkWOaM9faMlSWe5EIh8tLLDVfy
d9ZtT/QZ4GORU/UnmEDvJvGcccA+M6K3A/hAvxlv6Dtd0G/3qUnFcLni98pK
c/LNXLF+b90gOJ64Yr9JvPB3hs4Nz+czQVNzFjiMcW5Bcw+ZqHzyMqHADf0o
6yhPHKM7hVgq+CldvotMPDqxwe+CO573uSkzT+4qPkNtY/IL+Gmi7BQPN+ir
zlFf/Dru73z0nLDndfSnL+2/eRqvY37YzCbecHmgPwnM2tO6AjOEftQ9yUUm
eptd6jqA/6RqFZdTIP5P5pP2e2K8/nf+kXswQ2oVF3aq5dl7or76zepyMz1x
/ePXLK8Pr+JG5otmh2/A/vzMTpUIkAnVMM+4B8CB5z/s3gjxkfGczV+4gf3A
pMPZUNYL6zX9es89d+CetXPn97OSiTkh8atvgPOUc++oiIL+c17F8N/E33eq
bcr0Bb51f335k+3QjxaaDzXdxP2KOF/btMkb47n588JGbW+spyAxLYVwb+wH
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
fuBdxTeSVta3UatylCqhEPl1lRor8WUai84JLsHzMVG2pDaXoJ4EDbcpbi5F
v1r3V6JDG9jFa/z9M2ky0cF7cFNEKeYrVkVgphnY7tleg5V6svE9N876HJ8n
H7/ncfY5+n/zUuVQ1nM8Lz27ErtUGfZzmoiY985luJ78BCN3aRn2R+6xOfUF
YKpDJkrTh+H+9k57+EA51n/CqJ7F1XLsJ5FOo/x55Zj/1yHe3mOruI1Wx4e/
As9fuzOf2roC65FRh52cW4H7yWu7XDdegfEQ0YrO31tJIQTP3QnROgn6TrBy
v1KJ9SBse+Puk0rcf/27HQ6zlVg/k3RNa+SrKITCV57QJqgPqUuBVt5VqKcf
hY1sb6pQP1G3TOOZqyHfKoWbLZTJxNX4klHdavz9MbkG5Vjgi0tislsUQc9x
1Dt7qzHf7dUW+rtfrDovf9opO+Cq4hcX+Ayh/+eOfXwOLC939+isJujhS00b
dQ2u17ZEG69ag997ybX8JrQGz9vklizVBtyjL5NlcJpMPLLY9nr7S6gfa1er
DHW4X/wg8Z54iedXeP3ezAW4cHxG5bkKmRjl+1uS9BL1w7khrrr1JX6fdae+
8fZaZIJlj4xRLcZX9azi5fha3N/G7O7JrlXPn8rtNCTXrfz9zUJghz6ZuOt/
u+xMHdY/a1fH7/vAeZxflrtg/ZvUmyPHgF145VxpdUCvWWG1Uq+w/vYGbxX1
fYXnuU3VVtr6CvVgqO5qSqrHfEleEnQ2rkf9jXzlmn9Qj+fZLemTPrTq/e6G
TgeB1xRCeLDoQB/s1012gM7mNer/eIWTQfZr9PcDu3nGvwHTnviSyHqKTNyb
2L1uzxv8nrZo3NVLbzAfXeutf6e9wfhvLX2j/hl47ial4gvoRe7n2kymtxSC
tfZYho0G6JHhdog8cDEfQ0u0GuiXipzr9hb9rudUwlANMDE++8vgGJnYVnn4
FeM7/P49VV72k+9Qj+d1TWNj32G81zJX3usFTpYpvbob6m3sqKk9RwPu7wvr
01dngL/nsjLE6kE+W6+wxzbgPNq8KWm4HZhGvLVF8QSZ8Evi5WN/j/Ehjkm1
6bzH83/XaXGJBvZwHPlreZZMyPyyvNkJ7EzOzt17gUwMFj9k4PqA/atX6tuU
4QesT9dMAc044NI6t+2ikI8PJTf7OlaxzVTxNE8j7l8gM8D/ciPq7cWty4xF
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
wLHiToX84I+Nm3bE9wE3PFNh7oL6uvbTOYlvI+j540X5vHtQz7RJhZc3Yn5n
aZ/M3gNOf83w5ZYz+NO78oM1wP/817De78Mo8L/+KsT/YJKLiYcQqN0RxwW/
p7loJGICbLNIRNVA/TdmhlU+AP7XT+fkZFKbgP/5TcAHfaolYO21Nel73ckE
bb3FPQFmHuKOhVDPTvArp28H+s4Bl92xz5+DfiD6IUQ4CXh0epvtir7NKxK6
e4H/9S9j8+mtLCz4/ULpsbpDwGTB7MyVfnn7fdp5R+B//X/pTT1TEfDpNaNW
hekwT/bkBU2zoH9R+vPp9m3i+a+/XFBX93ECLtJuNV3hSzmVJaXA//rV0eiR
nxPA//x2S5PL+q2bef7rRzxn1o7KAf+bT9m+Vytf3Iz1X+l/3j0cWFThkUPt
A9Cv6L41FcD/+rXZkU+uf4FpeNIHtQKg37CZ+51ghffvFwkvgJ+E3JWtTAVW
lMl3b4+FfN+R8GtlxfNEiptr/QUWOavjLhkM+kt/cEGQDfO5Y2bGSx9Y9ATj
92nY7wWl2t2BbJj/3MKp+lLgoNkGqksRMO//sRZcZMP8bA5b9lPYwkPwUDmY
rsxThtebdF2Bj97kvBQaBX61TUEoeQvWg//VpZ91wNXblb5/zSIT5ez+suPA
EgsDCYchv3eZOgXE2XkIE9fgo3nh4CcTJ3yvAqsoReU0gf4dHxr3ZAP/m4dK
L+15+hFYeo1qyfsMMhFT4Lp2zVbM7x4G21tSW9Ef9y6FJtwA7pfc1eeSCv3y
icLxd1sxX7S9rM+ot2G9bOfkGeUHVs0ztDyYDPFOcjLX2Ibn2c+0dt51G+5H
jHzAJBO4lfT4Z0gc3I/ruuu6gO9H9QqJPCQTGs3e7Fu38xCSvaMLvknQnxQT
l04BvxM4S3l8nUz8GNV0vbt9ld4usrF3bsd+drWRvXEHCX8v/dzQ0ICE7wft
dx31AX6v9yB4JX5BlzOr80i4nz/rF226gE/LcPau1G+c6fVTO8g8/91neJU9
K88B/5svIoMrA+OAxxYv1xiHgh89zuOrIaN/3M5OGv5GRv12kzqlyRygj+v6
X1mA7Q0uSxpw4Pdd5fZox3NgvM+Q5PQ/Aotvl3RyDyIT9LF/ROg5ef6bd5yy
9l+V4UT9hjjExZlzon+k3+ngCufEfsu1aJpSDjwU72rUGAb7iSdeL3OiXuXZ
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
G8JHhAQeYdrKSiLmMoX0JYE1HXcVhDCRCCV2+nQTYF3xPZxiEH9m86OTQSHo
Tx35k1RhCPaDh3OvzveGoP4+O9dc3BDKR8yWqPfkcJEI/+XL+XtCUf/3vMK/
mYWiPw1HAgJvh6I/WWxVNkPA28MEmOchXnTJ1R4HwjBeOZ4+QoFheD/nSxXl
POCuIBHmp+CPgZ6L8SdgveK/hTdXtxMf+Wf3UIXzEaJ3dSRGt5AIyaLNdKLh
mI9xZTNNQ+A3HlSqnlQkoirmHCkwHM9LPOKR9zAc/akIUZVrX/P7qo/g+RVg
0xBt73vsJGLLnPQDkVuoXybzTFajW7jfaVW8aQy8hf4w1fpW5AHf2ceV5Abx
GeAM/NoFfLXSm/c56JGOjT+SOgL1/e8mi4c4cOXzEMsJbhJhW/ieZAiczSzX
d58R+kt+7mJgBObztcz0xzxg7QyChpGfRGwrvK7wJQLroZqnqE/2Ns678b8l
+0NvY3xj6vhOtt9G+zylS9uXbmN+pnrH9QQi+Qi3X7trFtlIRJ529QfNSIyv
AreCltcaPjocupoeiXo/3UtWaIxEPZZdvTbyG5jpWv2/AA4SkdR5SZfnDuhx
i2FyrSCJ2KmcLa5+B+OzJdSmyeMO5m8bD5VU6h3U46D70ci6O7jfmA41l87c
QX+SPHyZuKMwn5esf69aAaeG/QoQJcH8e7/fuzwK45nxuiOPORrz12NXVq8I
7LWUPJ61m0QsXLjg4QhcwSrQNAvz5M2b6LEX0dhfEjuFyd+iMb4D7KHXmWMw
fpNR9mPyMRivFYseVhtg7XecsQMQr8mqFtcI4PVsoVp2NCTClzM8+mkM9mtZ
n6XiLzFoT0BW4K/tsVh/3xkPGbjGYj2PFaSovYtFPV31P3lkQxwf0UulGpO3
g0T0XSvzk1rDX+TYdpgD85gxqvNtg/tVZoKC4zBfMm/vlRYBr4YlJa+HevEp
a/3aC1wWMh7lzAf7g2KsM008/n7Ecvy0WDz+LrLYwakXj/HSMWtLDVjz/Kaq
Sb7H8ZifE9UGLl3xmI+o7GxNqgT0/51FsagIMKOs/nLodhLxwZY9zSABn3/1
ItP3IbCZdMybQeif7MszV5bXPJ/zQcBLLhHzT2FKPVKY4v9TuT2HDYDv7w15
dALiOe78zTB3ze8pOT8lVxNR73XaNocU7vIRTWnnJhvBn4XW2zr2dzH/pOfb
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
PxvVWeDdntzu7+C8/wX8SGGF
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.5695968154503963`, 5.873982209573993},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{2.5695968154503963`, 9.723457368541272}, {5.873982209573993, 
   7.650958488832748}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {{{3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {8.517193191416238, 
       FormBox["5000", TraditionalForm], {0.01, 0.}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.302585092994046, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.600902459542082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.006367567650246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.294049640102028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.699514748210191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.85366542803745, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.987196820661973, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.104979856318357, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.903487552536127, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.308952660644293`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.596634733096073`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.819778284410283`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.002099841204238`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.156250521031495`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.289781913656018`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.407564949312402`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.512925464970229`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
      6.214608098422191, 
       FormBox["500", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {7.313220387090301, 
       FormBox["1500", TraditionalForm], {0.01, 0.}}, {7.600902459542082, 
       FormBox["2000", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.003065458786462, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.090076835776092, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.170119543449628, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.24422751560335, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.3777589082278725`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.438383530044307, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.495541943884256, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.549609165154532, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.649692623711514, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.696212639346407, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.7406644019172415`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.783224016336037, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.824046010856292, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.8628777247916594`*^9, 3.885227405802062*^9},
 CellLabel->
  "Out[390]=",ExpressionUUID->"328342f0-52ef-473f-b4be-41806b0be4a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"30", 
     RowBox[{"x", "/", 
      RowBox[{"Log", "[", "x", "]"}]}]}], "-", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8666747353760157`*^9, 3.866674816852035*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"7755af75-c2ee-4489-902a-44d819821759"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"78.54845485377135`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2.718281829046659`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.866674746726074*^9, {3.866674780484961*^9, 3.866674817149435*^9}, 
   3.885227408855878*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"6422a29e-32d8-41b7-bedb-e922d445d061"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", " ", "=", " ", "365"}]], "Input",
 CellChangeTimes->{{3.866675202829217*^9, 3.8666752142311497`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"6f7b164c-2825-4238-bc26-ca3c50d16436"],

Cell[BoxData["365"], "Output",
 CellChangeTimes->{3.866675214970731*^9, 3.885227411335155*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"8aaafd33-dc22-403f-8fa4-fd961e3c8044"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", "15"}]], "Input",
 CellChangeTimes->{{3.866675221836458*^9, 3.866675230230591*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"98e80dbf-1dec-455a-9b70-15dc9b6d29e9"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.866675230620277*^9, 3.885227412616456*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"a22b8c96-7eab-483b-802d-28e9eafe618c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", " ", "=", " ", 
  RowBox[{"Log", "[", 
   RowBox[{"a", " ", "/", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"1", "/", 
       RowBox[{"(", "0.01", ")"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866675231239044*^9, 3.866675246841168*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"f8774b0d-f00e-4e51-8f2a-a9b7b57708a0"],

Cell[BoxData["1.1787122193299104`"], "Output",
 CellChangeTimes->{3.8666752486455393`*^9, 3.885227414312613*^9},
 CellLabel->
  "Out[394]=",ExpressionUUID->"0eb9109d-d6e2-4df3-bdd0-b5ceb03311af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"b", " ", 
    RowBox[{"x", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "+", "k"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.1", ",", "10000"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "10000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"15", ",", "100000"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "->", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "15"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Paschen curve for air\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<pd(Torr cm)\>\"", " ", ",", " ", 
      RowBox[{"Subscript", "[", 
       RowBox[{"V", ",", " ", "\"\<b\>\""}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.862877740934814*^9, 3.862877741978095*^9}, {
  3.862877787547715*^9, 3.862877898717292*^9}, {3.866674669878623*^9, 
  3.866674728834571*^9}, {3.866674832424635*^9, 3.866674946119274*^9}, {
  3.866674994168314*^9, 3.866675095501062*^9}, {3.866675135039487*^9, 
  3.86667516570546*^9}, {3.86667525211488*^9, 3.866675604581909*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"f4afcad7-8682-468b-a92b-071e5e859ccd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
m2sY
       "]]},
     Annotation[#, "Charting`Private`Tag$49678533#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"pd(Torr cm)\"", TraditionalForm], 
    FormBox[
     SubscriptBox["V", "\"b\""], TraditionalForm]},
  AxesOrigin->{-2.3025850929940455`, 2.70805020110221},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"Paschen curve for air\"", TraditionalForm],
  PlotRange->{{-2.3025850929940455`, 9.210340371976184}, {2.70805020110221, 
   11.512925464970229`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], 
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0]}, {{{-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.1\"", ShowStringCharacters -> False], 0.1, AutoDelete -> 
          True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.600902459542082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.006367567650246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.294049640102028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.517193191416238, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.699514748210191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.85366542803745, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.987196820661973, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.104979856318357, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.903487552536127, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.308952660644293`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.596634733096073`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.819778284410283`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.002099841204238`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.156250521031495`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.289781913656018`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.407564949312402`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.512925464970229`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
      4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm], {0.01, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.302585092994046, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.600902459542082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.006367567650246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.294049640102028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.517193191416238, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.699514748210191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.85366542803745, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      8.987196820661973, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.104979856318357, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.903487552536127, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.308952660644293`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.596634733096073`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.819778284410283`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.002099841204238`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.156250521031495`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.289781913656018`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.407564949312402`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.206072645530174`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.611537753638338`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      12.89921982609012, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.122363377404328`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.304684934198283`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.458835614025542`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.592367006650065`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.710150042306449`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      13.815510557964274`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.866674711763356*^9, 3.866674729172196*^9}, {
   3.866674860961174*^9, 3.866674928282445*^9}, {3.866675003537189*^9, 
   3.8666750431783457`*^9}, {3.866675143549254*^9, 3.866675166384802*^9}, {
   3.866675260266059*^9, 3.866675551813237*^9}, {3.866675589178214*^9, 
   3.866675604974807*^9}, 3.8852274159067287`*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"b415b8e4-5081-4a5c-b086-99d2fc39dd22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Fusor data\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"10", 
      RowBox[{"x", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "x", "]"}], "-", "2.9"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "20", ",", "1000"}], "}"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", "\"\<Standard Paschen curve\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Pressure (mTorr)\>\"", ",", "\"\<Voltage (V)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Fusor data with attempted fit\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.862877901113039*^9, 3.862878029175188*^9}, {
  3.862878068422892*^9, 3.862878147321684*^9}, {3.862878212778776*^9, 
  3.86287827075955*^9}, {3.8628783022883167`*^9, 3.862878324691826*^9}, {
  3.863446854320715*^9, 3.8634468692883167`*^9}, {3.863452106113991*^9, 
  3.8634521097312202`*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"a0f83f8a-845d-413a-afa2-fed790f77b3c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[
           NCache[
            Rational[1, 360], 0.002777777777777778]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
3rgeAyoEVZ8NnddL4v5Hkr6GVBzvy2peb3xjRIVT79ISuINMqKRTWfI7qLjf
2FlhEq1iQgVioPhgdB0T7t3IEd6/i4rPs4r7+QfPm1Eh/4NLAn2GCSn2pEEJ
c7Sfdot7C9ItUL9agn+bsfdSYTIpvWtgPTa/cv8eldxHBfN04TBBrB/8x3S2
a1hTcT++cZ98r6ktqudHJwV6qB32vqae3fgUE14bXL55354K9/V1S10bmXBE
ui6z1ZEKo7VJAR6mLPhiZCGx1BntV+dB86sgF9RfSu20o9AhKjS6LSDNz/MB
Oz6/WTcqTPRa63/9wAQp+YML3ntQweTtb1/KKBOMJ8n7W7xQvVaspQ999cHw
N0iMyZFjwRGLXVKCvlQ48W237BSBBZozqrkdRxGe9ygM+Vj6o/3ezKzY0nKM
is+zE7IyJx4GUuGNMERv7mDC9CO7bwXBVHx+f7Gpk3oaSsXnwUXdGce2MCo+
f0WlDt4ViKDCBcbEF+d3TPBJk61dE0mFtb5Cl1pXYX5N+9Hkg1PY+m6vynKG
mTDpUSdPjqLi+hZE5btjFU2F9XMKBvN6GiCSlqATi+qRGLlB3zieCrWS4hnS
mL6ryHmnG51B/Wzf6M1sP0vF58vZ25tcd57H+EIoPb8jnwlT1X8S+xKp+PyH
98Le4skYfkTsOdnvmZAUtzlGKRXxcQ/rsb9ZGhVq+Pnb5/U4TK0oy+YyFfeL
FoRKB+erVNjm1GvzZYgJdwjjDzZfR/rJuHg2NvMG4t+6JxdCiBlU2Ou0Z04Q
82eG7ReJZzLR+i4pMV3XbqF8SiknWA9vo/pvufrAyDYH7Wf7hSM6sblI76I3
KBgV5VHx+RtqY6UZeZcKs18OL/3Ch50Xz2fmXS2gwvkwwxJPTJ9PV3k9vXMf
+x6dpjKvL0O6QtdqH6L6VVX1z356hPp137Wz81cxFfdLm95SX+wvQf3OrJRO
zy6lgtIC/8VsJgsOWMffni6jwmVjweFLgph/2jagSCpH9Z2Tf0fdUUnF/aBc
0GW3Q1WIX7svui0peo76laRYoESopsLZUv/taSswPMnGKTrVUHH/8/zidJt/
Hfp+pow5JaoBfe9jnmKLXRMVn/87U8o2nH+J6du1M+n3/zKhJubgleevqPC1
VPzgPJ6u6p2WXfMG06O/mgtW8rJA71eUgEoLFfqyt2/e/YcJhGBvU8W3iN9b
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
+pUldedyxirA3/e3qby8dRvqpbvSWJNVJVxvf+A51xrM5Plu9yz/kcVV4O+A
Fufya1Ww/5ZtrqMm1RDf7o/Ltd5hflAqXBfjgPtLo8rnCjUiqPnradqLZbj/
UKzlcsBMnvcaLtRSPVoD9cpwycNe6Tsi1POyDYd5qivvQHw6vfsotbkW4vm9
ecXZr7Vg79FG+WkH6kTQEx7eEj8dXL9foxci9aBPzB85HvmYO2S3Dj/UxvNy
ZV4TaoB6vkT2wtijBuhPhuh776jdFaGet425sYVO3AV9TRbh9Jm4C/mhmnyu
bkujCPX82jTMJuNWI/QTHb0pFUvuQTzSKgwV6u7BfLzys/IBm/uQ//41OWOv
78P7D/wa99d5AK8nDIo05zyA+8ct+XRG/CG8f1ZQh9LFh3Dec04r5/CqR+C/
SSmrtpZHoH9JeZP8ux7D/vaaPTWc/gT0ZqvFcGrgE8iHJovVse1PoP5/rc73
XvUU1qOlba6Z8RTq1bqzSz9xNkF9UJn+3cit6Z/+/3Fow9cmqAe+9UuU9j+D
/A6PuXKU0QzXG/TLMY5ohnlls/Gw29tmqK/LzqVlrHr+z3nPq+qYvOcQb2ka
CV/5XkC+RL6Zk+n5AvTdKLJ1ptZLmO+NX/QnT28BvY6/sdjiUgvkj+i0kfj2
FqhPNUeuKwi0QrxujBu5aNwK+eSfFb3kaivMe45m2fZz20DfogY7RH3boP66
lj/60NIG17N32nFN5xX4+3pFu3vZK4injQ9+vjV+DfPQ0erctlevIb7vjz+j
mbeDHg49CJpT1g72iWAOus7vgPUs8hArP98Bn6cf7NPQ6oR+ItyPS/l+J/hv
a4RAgc0bsEe2rl3owBuw33zhuIP+XTB/G31s3NfZBestM3CbtuYt9CfXnEWz
Ct6Cfy6HhGYJvoPz7qLchzV+7yA/cAOb9v4d+K+zNUPY9z3c//CWMRmubtjP
XPM1abHdoCdtUsrdHzHvn7zMN5Ufq1K3bl7fA/a4GTchnt8D+m/4blxgZi+c
v74bHf/h3gvriTV59/NrL5zPHfqccrGiD/YfKz339P4PIqjnvJPe1OfT9PoX
Dn+AfDlU+dOZ3Q/353+du2xDP9Qr12ieu1mYyfeZtFOeVv7o/6ffrvdav2UA
8jPb1xHdGYD6oL7jyDeFj3C/c3tzco5/BHt8boqTlhsEfWB12dQUD4L/x6Q+
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
UvPnzXihREP31hS9/uQIr1/vf/xztYskpbdHtl7cusJdEr256PrxqgUNFVmM
Jq/YAfbyfletj3zg8wKfu0+e8wf7tjhpHB4MkUSCP7ebainS0Mv0Ca2vEdgf
juUXY5fg/RrFWM6NhvW+q/emGcZKoqQSA4MSaxoqdXaLkUyURFeF5qp/xHXt
ckjxg7FkSSr+haX82wOPSaK0yzsVhXRw/NJu83qmS1L64Kp5xX5VpiR67lHT
lbmMhgbPiP6+lYPvv227uuN6nF/bmlOv50miVRZKK8+Z4terrl/IuSiJVi6Y
fVfVgYZo1y+dL70C628V8TPhLpJEqsyUNx824PjKt+g1uylJ5av/eLSRU4Uk
ClCauzDEgIbiglfPoVWDvxpvWct01mL7vn7H2LuChngXZsidvitJ6ddJxx2p
Rg8k0WsBzQEfR2xvXrlSvidg7+PBz20Kn8H++gs/Zzx7CfZ24eVdOPRKEk23
H6pjmOA6slDJKbUT7LdTYpmx5jtJND9LIzLAjobUYhf2tPbA/rjsGhUf90si
3UWJwy3GNLQi/Jf/iyFJFNLDypU3x/H/vGT6k89w/YHUI2sef8X7LVZ81aiN
7fHt+ZPoCbj+LBsxQcffYA/XzpJpQtMZSCXs8fiXTTRkenFTdCEXg/r8l+C3
NZa8DMpeZvdetbXwMRD78G43f9ynDHWzAk3mMNBMkeG3qvo0dGbNKb9qIQYV
Lxp/bKwSxBjotZbghJAU7hdU4wuM6AyI348GhsNMBhrMHUZjW2loeXLwFbt5
DOS8siUtB9FQNL+4U5MMg4rPUhEDsS1yDLTg46yDF2VxX7Z10GqHAoOKj4fB
z4N1lRm4L00dqw2iIT/RwCsC6gzKX1l95bfClzGQNFf4sg53GvoREZjyYTkD
pVgsW83hTUOLZq3k0NcB1p+4+i5jFQM9zA7kXh45VU8+m3cbMJBZIPv85gBc
nycX7HZby0Dn36kH8WA9oh1R2cJlwqDiT6h2HbtoA4Pyp1HyGmWGBdhrRpnN
0q2WDPT7aaXbVPyqnl7JfdyGgda+YWV64T5Nms8xcakdg9KbTXpiCS+3Mig9
G/cLjwx3ZEA+Pno8WujCQNt/VRZKeGI93Dx5pMmDgXju5RdcdqIhh8PXKrq8
wN6ph57kIl8GFd8nHvZFFewBe1ry21xtCsT2iMpOOXKYhjgzlKK+hzDQ6v5T
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
v15QyccwhvVkzk51O7gO4mv0bF+I6Hq4v+kJy/tvTNlo8Z+yzKn4WRDWsv+y
Gax//eLPlzw2gv2/NeWXq28Ce6cWyX/5vZlN5VfoydC6MCuI93PXPTXfW7OR
8r5sh9o6PE9HCBiZbGFT+jTz4s5bI7Zg7z9LcsZy7NnowLKggcrfeD+RPgom
2/D9DnE/T/iB9ar3yp2vDmzUnOt1TLSJhoZOe9/JdmJT9cNg47ZxY2eIt2hN
ie+vXOB+60se2nu6sdFQnmTZKM6/EAnFC53ubKTLb9R4doiGaHy2Da6ebNTn
tCVm6v47MuNV+naw0Yvl363FaXS0/4XdqSQvNtWf5cfaN1l7w36/c2Vpy/iy
Kf3ZaCe5t3E3GykVN9DGPuP86xF4v3EPm9Jry7iu4i5/8J/VwN06k0DYz8HJ
Y7Z3gtiouLLl0p5ZdHQ61shzWQjk48TEhaEToWx0kbXm8VS+ymd1fhsLY6Pu
38cKAj7S0N2LDknrI4CdvQvXMPfh9btUzWJz0ZFTf6rQtCiIB8Vqmd9d0fC6
xJ94Ob0YNnKRPo3eC9PRsB198NQB8I97v4rmeCwbeai/lc4QoKP6szFj5+Jx
fpTHmEmO4fni7dpB64NspD/gKDAyjY7SnhSOvE4Efz47ISbldQji/U3ct/qJ
wzhfOXJEBSTo6ID4wvijR2B9nPliKcpH4f0WVvUz7qey0Z963vpV41P9Vt23
pWk4fn1X6R/mp6NHq7NmHzwO8Wv85VJR5wnQLx9He1XjdNgvF8+0wvpTEC8K
NWP79E+zUZnQtJ6giSl92+D08AwbOW47lKI9g46EEwKKDmb9E7+RH5P0stlo
347p+XM46Yi2zrmkLoeNghkVdm4z6cg9zFvf8Byb6id+8xQuu34e/P9/ywGH
0ySK/2FWwJp+gwtg/yTlWOOn+WCPE3mF3w0vspFA6cTtC7PpaCDxre37Qvx+
dZVGtQ80dKJY72bMZTbasFah77soHaUr2FUKXGUji1I5do0gHTlXvHPbcQ3f
z4iHli5PR7tS5z+puw77i/S6f3BeEdRLz6izNWeL2eiNpcHk5HQ6WvDH5QG9
FOz70HFoRepNNhoZVE29qERHLzasCeW5Bfbl8M0SDSvH+ad2q8BhgIa0HwnJ
zLnNRqFdvVytQnQUqG6y/UYlG60zq/3uiu9v3yaTa1vNRqoNh5easOlIaGJr
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
5+TqcL6LDJylflSHf68+JPTXnu0V/j2DOt3K3esV6t3t8z2JZeD3beIVJn0k
Yov2VVaPeuivN0Ma5/JB/zY3h//W433hyq32x26vcT6d1OWPnwU+o3Oqdyvs
n0fxqKrtG26C1uJp1ft2EtEU86H68xu83z5SVXuk8RbvQ1s6N62pBh6bv70U
9A7myVDy4sF33MRU2u3zK/9evMeer/PZO/z768WChchdDdxEQXfS6MMiuP+m
NtLfBC583UWo5UE+e2atehvwvnpgUitB7T03UV6lI7Y5CuaRPzTk2vc47+m/
DahT+AD60f/tswTPx7ltycXAZiwVhzTDYb/PqDr2NqK+2qRFnbIacb3ELafj
BJqwfjJylJcfNGG/pQ6fUd7RjPUUul2k1QV4iScilS+SRHizuE01NmN95LHM
ruNvgf2zVp3wzCERW9mD7iW1oD/sl7luyt0Kz69neE0lwzydX7AvdhUf2TZy
ZbIV/e+7SscNjTasf0ZPjxuFwF8YdRNF/UCf2X4Wsh/xvD29G8urPmI8r794
WiTfDn7JK+GwtRTm4y7OA3HAXbYellGpJOJu95P3U+34+zulHUv6HRhPwR/S
Vh87cD+fJU9f1vqE8+ZUSattLXDF+8XsDbB/XzcaeaVObiKgRyhsxb/sJBk3
VQEvvy5cZwr9/sfjynjJLjyPoN5jsSzg9rMbBHf4kwhudRkfSjf2yxecVINh
wP22Wx6Y34P++tFa/W83ft9LX57JugfnifOXG4929eB5zmeVFB3tRf+xJ92W
zu7FfIU+0wun+Yx66HC4FmkA3FG5hdX0Dok4c4ZavwT4rbLs/rwQqMfr4U/3
9WG+5I54KOQA06t3MbJBveVP9N/Z2Q/fXxY7ppUA85CkZuTtfoxHtO6TF3/7
Uf9OirPxlgPYX3ZHCbIODKB+mGWK1E8P4nnS+eet3w/ifc5q4U2M0hDm+/nG
rtclQ+jHWux54VxfYB58Xm6R/QD6I3smxzXgqfqIzbcqYP7wHfz8Djgm4u6A
DPQr808NmoLDuL7ugcWBoGE8n32Ie/D3YdR/kPDtO+e/chOCSqIhAU9JhBFV
Zkb/V8zfOQ4V+XMjmL8AX5+F5hHMV71Wr6vCKDdBzenI3ZMC+e+br8sAPr/h
U0V1IdRjIqs5ZQz9+WDEB7rEMawnVYNf7lu/4f50Up27LgOzX4xQWOm3Rqbe
a2qBZ4ciLx5IJBG1licauL8jXwiQqYz6jnoS/x1XR/MDuT14VufKD8wf88ez
dxt/YLzf+dm8FvmJ8d45ubEo8Ceu3yDhar9uHPNNf9R5xgOYsdklNDabRDQz
JDzrADYq8h40y4X5rCPMnTSB5zkrtknacAKfEz5nHBsmMF/k/AD6S78w3vmO
DiepfnMT9974PRyJhvhGuprY/8Z+da7d36Rl1XPL3I71kpNwXzQLERKohvmv
8HRwyiSe79cX2TebpriJj0aNtKTH0G/CN+3wWsUi8gwj/VN4Pn61O+8PTeM8
Y6NLMk6cxn50MI3f8s80nv8F1dDj0zP4fjvN57BnM9jPv2/feE9iFvP9qaxR
OW8W6zfZWt2HMofPC+yKKG5zeD7d0l0ebXP4foaDyA+JefzeQp1MY/o8+lHt
Vp5ejgVugv9hGKt5JdRLdz5/ELB2jn1g7X0SsaH28YafC+ifC8W2thp/YL7r
2u9qUwf32Sn1+WfAr9IebtiXTiL8TKyXdy9CvoJYvpfHwPs5L9KiF9EfWKWS
W/4sYn0yin9+Z7LETURPOxyWKCERiyHWT16v4nCvQ5dkltEfSm/u3P14Gf3h
zMZkSdJfrKcyN9YsW+C5ibj+lfocljY88hJ4kpaL9fdHuC85bRJkX0P57/tr
6t8seAL/O79belzHV+B//eCmMe8LbSoKMarNyrXSTywe7pOvAE51zvycUk4i
djDIFuxZSyGKGnPyw+OgngTkaCOB/+mPrq6Un5oav7cntWunPfDQu9jogiyo
18Jrc63U+P1+p2ehQjSU//Ipepohywf43/mX+Uwzv61iqq6RaLN1+L5b8UWe
nnW43siIcfleWgrxt1X0fE8BzCPnpDY5AP/L/4yzyPOnwMf2hDd/ewHzg3tl
oQAd5b/8vkkurnsI/K8+zn9zcKLQU/7z06KP2mm36PF7iofCJPqBt5eueaz6
nkQEbow23L+eQujN+Z24XPz/zvXE2E+pVZyXXawcDvxP//LaTXNj63G/RSkH
3h1hwPgwZTfMFgAfLHgm1fMc/OZ5jjDnBsp/+tkvflAoYAO+f3LA9cVf4Be6
ny1Fn5AINX5ZfkdGyn/z4d735zmGgd3PU6JW6n9opKTu8EYK8ZGWPex/5vfH
nBZpwP/+fsAuf/kBDROFEOEuH+yG76e/VFpnAvzPP9acrOqsBP43T47Pnern
ZKb814+3X+D4fg1YZirGZgH0160f5dgE/G8+udWcvUeWhfLfvJO4vOtQJguu
v96T2pm0iUKc3F9m8vM11POHLdyuwFQpVa6VZVAvmoFNrcBD6oz5TPB8hO7X
FdHNlP/qeepX/VIc8K2bt06t5NM9Uer1elbMd/j8XW8X4L2mjo0i9TBPDO6a
6GPF826ulaA9yob6oes1K8liw/oR8M4zWAT+V+9qLusUNLbgc867TsxJwM/m
eB5nwXrTQvnf/m7B80VF7MszZsfvT9ZLhD0HprtFc3mokUQ4dAl83LKV8t/9
7JHvls32wP/8OOLtGramrVgf7ANnLstso/zXHzZVezo/BO48HPjeLI1EHP+p
lsOyHeN3oz5uyAvYSMV8XWgt1FfmV6rJ7bg/ocORD/RJlP/mp44b3IPPgf/1
ByrFKHVOMq7XkPH4wzUy7u9C4subjWR8v1pEy0yAA/VS91uVzw343/3xr4T1
wyZgeuljXe9qwC9vf9kuyIn6NizqaAjkxHq3ujuy7yfwv/7T81xAVnUHhTht
vJZ9Rf914YVZSTtQ/0K7rzXO7MDzdq8vS9fmQr/zLRJWqObC/cr72i6JcVP+
m5fUxSp4EoH/zVP+jofzFoEnu4hjCl0wv+tJCRlSKMQWUUuLF00wr55UiikC
NuM/E8MA+7UPoiul5kG9yAvqsWjzoP5fTKk0ZQAbqNnJG7TC/exhzJMtO/H9
N6kt7p47Md4Jx1RcB3difscNOUQO8WJ8v8lQNifyon4FvDsf/OHF+NBoX+fV
30Uhwk9yMZK7oX8P0mk924Xnj/SOrd3FRyHKwj7K+n2CemcKu3SHD/PBerwo
fwl4kulzucYryN+yRu6J3RRCNeen5BboVzMbRTjSgbf196Wt+F9dmOzvv7vx
vELSqfrn+Cn/zUtPbEZzqvgxX2HG7Jk8Ahg/X+0ABStgndkvzCt+kFy8LrwK
ePqAdcjK/jz5RLewC+J+6rdcFbUXxPoSJFVUvQG+mpQ2uPsDieC4IujEt4dC
5EvSfc56C/586LxeGDD/ibunV/Shs8zNM7cH/efJ+V4uXSEKoZB99pjuL8iP
kSiRL4R+sm3/7VgmYdxf+RJ142Vh1KdPW2LZW+CzG3adfv8TvtfQQyckQiF6
vYLXRI+BH3reZQ8QwXjX9I3ZfAP+d9/XPGaQrSFKIRzPNYTTgj/MbbVISwSe
77D7fgb0Uum3X2wSWKOZRUC6DVhZTUpFjEK8iXZTFP8K/rBHszwJOHimvO/h
0Mr/Z9ti8kcM4+N7zvmn3l7kC0/vLD/Zi/GJnFmwYBLH/MYX6XpYAZucLU3y
/AL+ZBZ4qRlY/I7N9aER6IcPXZIk9+H3anISJyL2oT8eaEz1HgV+8eFkblMP
3Kc5fXsOSlD++/vMBXr3iSjgrlvPKg1m4H50JpJhUgL9/svx9vXaktg/Dyn/
ZiyQRP/sP2dZuHs/hfggbHjd5huJWDvccywe+OwHSfHcKdDnIuPVv8AJMUs2
K3qbeBxaoCsF84iLmPDK+88s+wcfA5O7dw1m9ZKIRr5LyqNSWN9yHfqqgtK4
P7M+e21L4H9/35HdVva0WhrjoaS0t5fjAMbvlIuJmxPwVR/WEb/PJKKVpo/S
eQDjwRkUcltBBuYVndfymR0w79Obu6fLYHwSjORfbJTF/XUtF8pdAXar9ftm
2QB+vLZU4w1w7IeWhB0/Vv6/pZfmhoMUQs5h/toG2M/fBBcn9YO4nwZLXSLu
IL4vsDb43F9gP9Ww4zPgDwvxlGJTOWSejGuMFXK4n4vdZlu2yWP9dl99yWG/
ir9tPNLxWh7PV0HnemCnAvonY9PHWDcFjJ+8tszuVgXUV5dRpZAYgfPZupch
X4KAa98mssn1k4jcfT3zfQT+/nXNySbpQ3hesbigL2GHMB8tQYefjwK7sJXf
mYHzLvLvk1RWpBDmng9mOyYhXlPfQpOAZbfMMl6fAH897MxKq0QhdunZKPfM
kQi2awnLDsAnzlpOvh2EetaTeNSnhPqT/umRdlAZ/aCsXDkqBviekaiBaSfM
H8yej34BS9Kdclf5Dvft6zV7jhymEFbqdwz3/Aa9qceuiQfuV3EQ0x+G/kb+
5vPtMOY7P0BmXkSFQvjG2oSs+EOUT1rnFeDaV1zpK/tPlv9TWAOc1bPj18Nx
EiHzUu0+xxH0h/ZPl9ZfBf5g+/Nk+SjMCx7raZqBq284fmxeSyYOd3reFz+K
ehDkXHYPP4rxyMiQPTINrF9VdsuFhkzwKtRv0lNFvzp+fsa8WBX9xyxhXcYG
NQpxg7miXW8NmbgQlPnZUA3r58DZ6EOFaqgHJwm5NXPAR+z6P5+G83cVhggf
OIbxWePEcdADmHY8hVgL5xW7PcfVAuzzl/dF/jyJULCL/MB3HOtdRvbWXbfj
GI+fzApcHccx/htUzTP3qeN6oZImjyLV8Xlxyto708CEb3f/3kXwq68s2/Q0
UJ8/WDOkUzTQ38e1tWsGNXC9jjc6h/k0UY/cX12TA4CvWssF/6UiE6SwXKtF
TYxHm5Awp60Wvi/ywyiqTAv3U6u5XXFJC7/HEL37ipw2ntdg2uRpnDbWd6bL
tPaaExRix40jKSvndw/sqzY/gf78o/xsxsVV7H5UOzEXOLBUrWbvLPjRfX7/
WeB3zy4qpVGTiW8NKlYyOpgPVcMjknd0sJ6oVZOfftXB3xs4nOojdOG+scHY
mHYJ/JnBQjpdF9dz5hd6z3QS64/hooKWzUn8faNG1saXJzF/TVc2eG8/hf6T
EpWtY3YK63OXwafoFOCHc6qjhn+gX8TU//4MzMYlnLPyfeUDdPPiehRiw6Et
Dit6mS9K4YvRw/jfKa50WdJDf351PdZX6TSFkCJrTHfD+pp2Ol+DT2P/Hlvg
pfkInLTe9KXfAok4KnIqbzXbUdHtENPH3we2kt0D9HF/Cmvsrw0C+25qklvR
Q+Pwz8PyZyiE9+Ps595/4X54Kls1BdhCpIOQZSATyRnTz+eBC398fbUH3v/0
bUOIhgHqyShT8cUDA6y/5jL5tVMGGO9A9fefpA0xnseTdi25A5P9Ux1yl+E+
VV6w/40h7s+AtO6igBH6RX7Rq+P+Rrhftc5NZ9uAJ8tYOxk3kInP2zLMSWdB
b6/3xNHBeY1fTV0wPov1wGrTx5FzFve//nu98AZjuM98Tvda0W9I+2vhS8A7
f3JE98J6Rbdf19Ua4/nfVlEFUs5RiEOWj39F05MJYyZ+Ks9zmF++kYnq+nPo
lyz+EypM50HffkWfdjKTiatTN17oAN8TFXj3cAuZGFjaYll0HutbfiJvmmRC
IQ7TpZd9GFz5/8jMyq7At2oP7M5jJBObylMiyk1Qz4lucmZrTTHfJmUHolWB
aQPuMn1kIxOXB+fXp5mivt7abeWgMsN+VCZPNaBrhnrSe9TSk2CG9Z69hWI8
bIbx+KTFc2T/BfTTiwM2isHAQ5/pRWpZyMQbV07mwQvoH79sM0sFzSnE07Lj
TQPbyETXx3VpNsAp+onGV9khfzxPkgqAdaxv/+2E8+hytGluvUgh6rY1Vk5B
vHY3a/++dRHrUcHGp3LiIvaLgb1TJnsvUYhzWkucg7D+0KJmnCPwYXuNgJd0
ZCLcj0/p+SU8f/rRA/VsFshOBey0NsCf0ht5W2C9L409x2ssMN60TmEVtJa4
3j2JioPHLLF+tco/kaOAlzVLlX7TkgmVGOqI76ueyyXVcipZoX7I54gjUcCM
lNZbXPB+AfcThx5g/5aSXeabyURuVWw/nzXGN3nU6rqbNb6fNfRKc8ga/T/f
KZ9R/TKFSHd7tn/ledfzmZ+xwAXaAmGBPGSiuvWFV+dlzKeN9rFEkg36sbPI
3mZL4J1NbiFeG8kEjcW+rpc2WG9mgy84OG1R7wbZdn32wFPhPnHH15GJG3rn
ZV7a4vlfKW3xY7eD9QMdrqzkr2Fj3eUzdti/qf729STYoX8/lFq/cQj4tKUT
PRvkL7w66ICcPdzfRFWDV+pF74tTfpQ9zgOFL17Vjtijn31LtRLedQX11/+o
lPv8FXzeYH7DPAt4PDS/4uRuMrGcYM6/1QGfH8wW4b7hgPE/0+1t99kB8x+y
PiSQ15FCiI4te9wgkYkcx4WtVo4Yr0lG7qRKYCV2+tfKW8nEhMvNVM6rGK8X
W1Nj3K5ivLiHemeqr6IfbjPaeu7PVTz/yx/ZwRLX4L5lK7dVk0wm4i7ZbgwE
fnsldOCWIPjPNe8L36+hnxBnizM0nFbqnVQZtYlMjJ9vexEM7Mg/H6C3k0xc
2ZhwqtYJ9ZfuIqC17ITxcuptTdF3xt+PnfqkWOaM9faMlSWe5EIh8tLLDVfy
d9ZtT/QZ4GORU/UnmEDvJvGcccA+M6K3A/hAvxlv6Dtd0G/3qUnFcLni98pK
c/LNXLF+b90gOJ64Yr9JvPB3hs4Nz+czQVNzFjiMcW5Bcw+ZqHzyMqHADf0o
6yhPHKM7hVgq+CldvotMPDqxwe+CO573uSkzT+4qPkNtY/IL+Gmi7BQPN+ir
zlFf/Dru73z0nLDndfSnL+2/eRqvY37YzCbecHmgPwnM2tO6AjOEftQ9yUUm
eptd6jqA/6RqFZdTIP5P5pP2e2K8/nf+kXswQ2oVF3aq5dl7or76zepyMz1x
/ePXLK8Pr+JG5otmh2/A/vzMTpUIkAnVMM+4B8CB5z/s3gjxkfGczV+4gf3A
pMPZUNYL6zX9es89d+CetXPn97OSiTkh8atvgPOUc++oiIL+c17F8N/E33eq
bcr0Bb51f335k+3QjxaaDzXdxP2KOF/btMkb47n588JGbW+spyAxLYVwb+wH
IpW1n1q9sX6W5NpM2W9h/Szfqwg6dwvnAz81PdGnwCUkc4knwmRC8vbh+Q0+
FIKnQHlKeh/4lz9P4ykf1ONYhZRfog/me8AoIvqLD+7/TZxKu7Av1kvYZjXF
a764v691N36X+mL9VzbQG231w+9XO3156gDsYdUkYrEe1ju2yNPgh+cpHBht
YfGnEPaPy1J+8JMJBsfDrLr+2P/zBM6GxgEzK1t3vJUgE9p9LuGjwIdouYL9
dkB9qzz/IRVAITYHd3etnOdVlQSvF3CYj1wJixiZyNay2FwfgPHOzHw7wxSI
358iHWQ0DcR+cp8h3agM+DDz+M+Ug2SC+V7GA/YgCqF2vIOPdmVeMPW9oBOE
flBc5tUdBPwh5pbqsBCZkN917klNEOqr63pjCDkY4y9QNWnrAqxNK3x3xa8O
cQ0S7cE4r+UzpxlvCoF46Dym+cVLJoJ135ZqheD8Jh1BYrq96nnx9nWdHSGo
d/H1uyQooZhPkn1Ytymw7mFViq04mYjctOVcXij6Zc0B4Y5F4B661wa8sN6i
dvxNjTDk26YCe9LC8P3TGQ+NlsKwfn8+LlDWuI3+Y0zaMBx3G/vrxrKovJHb
+L7RF/V7Yncw3/kHNrpfA84o8X1JAU7NUD5RBnz94IX9ZIjnbyXJbXN3cD3q
0NCH+8NRv0OnWwQdw1GP69M8FfPDMT40QQM+E+GYn9z0V9WiEaifDV4f9EOB
+8wybq34o21X8uaJCOyHLc/iTmhHor6NZOxqoyMxvj5Xu0S6gW9ePj1cwkkm
IgTTb3NFUYjtTZkBfgSZeCeV7msche+nX0roTIrC75skC53uj8J4B1k73NwX
vWpefxWc5BON+eMM+eDfCEzacM3jGwf4r+CdpG13cZ58TnnNeu4u1h/zGSHR
QuBX00dt9srD/MA7wcMag/HzPEhedyUG5/2jHE0OZcD7HLe+sJAjE6yX5SIX
YvD8KW+5s6Vj0Q+V1xbzXYvFet26Rre+MBbrcT46K3EiFvv5ZSfybvE4zM9r
sz2KDnGYP4aTB58WxeH+Wd7TnWCNx36iIpLTegV4RnPYYaUe30k75DQBJ1Z6
8D3cC/en9bU72O/hfut5f/ucuYf6vbKu1TXpHvq15PJX6cF7mJ/dLnp6fAlY
nwffvJKxAKasuygRJQn97ckMVRqwncojlRX/d9VU4BtMwP6X/1TxJW8i1v9n
u/0J1ok4T00U1z8oSEQ9PlP7JDSViH57RZ/x/v4k7K+ebCkyrknoH0db2Gga
kvB8st32b4WTUT/00b+fhQCfDOzT0jgE9VusztuUjP3M86rLGFsK1h+j+GNj
XeCTDWctJ+D8aYHSg4kpuN4b9V8Go8DebL3ynbLgF6MxamL38blPTemQNXBD
7n6aTeC341mabI+B//1/QV/nFs3R++gPB2q/Wgk9QP2xnN3rafsA95fj9pSr
5AHGtzBXo50lFesr8OnFJ5dS0X9jp062ZaRi/kJ2Dit2pGK/EpMxYKZ9uKp+
Ai20jj7E/FtOnApPeoh6tKI6tncGePzJ9lk3ETKx3bbwvHYa9ou+xG1HstMw
fiyh3XfoHqH/mukn3FZ9hL/PYHzX5v8I+0lF6u/2+kdYj92B9hLr09F/Ep43
iR1Nx/y6bo445ZeOftGrrvDu1ar3xX4+9WV4jH5ZrX9dWv0xzhO/bHMe3n6M
ftaa//day6r3s5xcJLZm4DydXl5BMQVusPn0ZsVfUrbcis7NwPPSWm4dnl/1
vohx/0vZTNAD9UcfTnh/v4B8lUcm1tt8ctR4VSbq2ecmYUyVhf1YdYFTXzEL
6133i6P8LeDQoLcsE1Iwb6yX93+dhX6z/Wijw8ZsPP/n7A3TWtkYX1F7P9UI
YFJN+OQcxPfM5B3qtmz8HrNfmTFvDp6/0lR/1CsHz2PQ8T6pNwfrja75w0Oe
XOTdeWllRrk4j9Bds+q8m4v64rsw4PYRmPOpRpuqDPTHkngech7qnY9mjahx
HvY7BjrZzkTgszVVF7wOkAlnupvVfXm4/v3XY2t2PkE9W6o9fWgDfFug6dLZ
/WSi9s3JNc+foN4kRKO/Uefj+bVqxSaV8jEfF6i0vW/l43nDtXZ3vQRuoZy1
ZlQlEx5P1Z6vK6AQCV5qKlpQrxkmvjuPFGA9CzAPPAgowP52nrJ7saEA/fec
q9TzTYXY77Vu6DadLMT523S/zNn4QoxX4MFm7b5V3ESjd3FvEa4/XHxI3Q/Y
48uGe/eVYL4X6H/YBdzcvTDGfRziUdTkxfGUQrSbEKN5oJ/HdoY+Rk9R73+p
aFmSnmI8I/z8TfqAg4vSOTeDn7289zSLUoz6mRobf3IO+KtOk+5aeF9VZHNZ
SjGud8jqd/lAMfarWUPKccoznDf1blo5GK/iXxf+UBKBLdbSnKhSgPtD/gWb
fuBdxTeSVta3UatylCqhEPl1lRor8WUai84JLsHzMVG2pDaXoJ4EDbcpbi5F
v1r3V6JDG9jFa/z9M2ky0cF7cFNEKeYrVkVgphnY7tleg5V6svE9N876HJ8n
H7/ncfY5+n/zUuVQ1nM8Lz27ErtUGfZzmoiY985luJ78BCN3aRn2R+6xOfUF
YKpDJkrTh+H+9k57+EA51n/CqJ7F1XLsJ5FOo/x55Zj/1yHe3mOruI1Wx4e/
As9fuzOf2roC65FRh52cW4H7yWu7XDdegfEQ0YrO31tJIQTP3QnROgn6TrBy
v1KJ9SBse+Puk0rcf/27HQ6zlVg/k3RNa+SrKITCV57QJqgPqUuBVt5VqKcf
hY1sb6pQP1G3TOOZqyHfKoWbLZTJxNX4klHdavz9MbkG5Vjgi0tislsUQc9x
1Dt7qzHf7dUW+rtfrDovf9opO+Cq4hcX+Ayh/+eOfXwOLC939+isJujhS00b
dQ2u17ZEG69ag997ybX8JrQGz9vklizVBtyjL5NlcJpMPLLY9nr7S6gfa1er
DHW4X/wg8Z54iedXeP3ezAW4cHxG5bkKmRjl+1uS9BL1w7khrrr1JX6fdae+
8fZaZIJlj4xRLcZX9azi5fha3N/G7O7JrlXPn8rtNCTXrfz9zUJghz6ZuOt/
u+xMHdY/a1fH7/vAeZxflrtg/ZvUmyPHgF145VxpdUCvWWG1Uq+w/vYGbxX1
fYXnuU3VVtr6CvVgqO5qSqrHfEleEnQ2rkf9jXzlmn9Qj+fZLemTPrTq/e6G
TgeB1xRCeLDoQB/s1012gM7mNer/eIWTQfZr9PcDu3nGvwHTnviSyHqKTNyb
2L1uzxv8nrZo3NVLbzAfXeutf6e9wfhvLX2j/hl47ial4gvoRe7n2kymtxSC
tfZYho0G6JHhdog8cDEfQ0u0GuiXipzr9hb9rudUwlANMDE++8vgGJnYVnn4
FeM7/P49VV72k+9Qj+d1TWNj32G81zJX3usFTpYpvbob6m3sqKk9RwPu7wvr
01dngL/nsjLE6kE+W6+wxzbgPNq8KWm4HZhGvLVF8QSZ8Evi5WN/j/Ehjkm1
6bzH83/XaXGJBvZwHPlreZZMyPyyvNkJ7EzOzt17gUwMFj9k4PqA/atX6tuU
4QesT9dMAc044NI6t+2ikI8PJTf7OlaxzVTxNE8j7l8gM8D/ciPq7cWty4xF
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
wLHiToX84I+Nm3bE9wE3PFNh7oL6uvbTOYlvI+j540X5vHtQz7RJhZc3Yn5n
aZ/M3gNOf83w5ZYz+NO78oM1wP/817De78Mo8L/+KsT/YJKLiYcQqN0RxwW/
p7loJGICbLNIRNVA/TdmhlU+AP7XT+fkZFKbgP/5TcAHfaolYO21Nel73ckE
bb3FPQFmHuKOhVDPTvArp28H+s4Bl92xz5+DfiD6IUQ4CXh0epvtir7NKxK6
e4H/9S9j8+mtLCz4/ULpsbpDwGTB7MyVfnn7fdp5R+B//X/pTT1TEfDpNaNW
hekwT/bkBU2zoH9R+vPp9m3i+a+/XFBX93ECLtJuNV3hSzmVJaXA//rV0eiR
nxPA//x2S5PL+q2bef7rRzxn1o7KAf+bT9m+Vytf3Iz1X+l/3j0cWFThkUPt
A9Cv6L41FcD/+rXZkU+uf4FpeNIHtQKg37CZ+51ghffvFwkvgJ+E3JWtTAVW
lMl3b4+FfN+R8GtlxfNEiptr/QUWOavjLhkM+kt/cEGQDfO5Y2bGSx9Y9ATj
92nY7wWl2t2BbJj/3MKp+lLgoNkGqksRMO//sRZcZMP8bA5b9lPYwkPwUDmY
rsxThtebdF2Bj97kvBQaBX61TUEoeQvWg//VpZ91wNXblb5/zSIT5ez+suPA
EgsDCYchv3eZOgXE2XkIE9fgo3nh4CcTJ3yvAqsoReU0gf4dHxr3ZAP/m4dK
L+15+hFYeo1qyfsMMhFT4Lp2zVbM7x4G21tSW9Ef9y6FJtwA7pfc1eeSCv3y
icLxd1sxX7S9rM+ot2G9bOfkGeUHVs0ztDyYDPFOcjLX2Ibn2c+0dt51G+5H
jHzAJBO4lfT4Z0gc3I/ruuu6gO9H9QqJPCQTGs3e7Fu38xCSvaMLvknQnxQT
l04BvxM4S3l8nUz8GNV0vbt9ld4usrF3bsd+drWRvXEHCX8v/dzQ0ICE7wft
dx31AX6v9yB4JX5BlzOr80i4nz/rF226gE/LcPau1G+c6fVTO8g8/91neJU9
K88B/5svIoMrA+OAxxYv1xiHgh89zuOrIaN/3M5OGv5GRv12kzqlyRygj+v6
X1mA7Q0uSxpw4Pdd5fZox3NgvM+Q5PQ/Aotvl3RyDyIT9LF/ROg5ef6bd5yy
9l+V4UT9hjjExZlzon+k3+ngCufEfsu1aJpSDjwU72rUGAb7iSdeL3OiXuXZ
2QoP7+AhErMpto9S4L7X+ZU3cAfun3bx0p7cHZgvhgGJ1NYdqFfWc4Z713Dh
+XkXzsoqc2H9OaWyd/gD/3Z5kbLyfceQwyMvgT8xxo56ZYI+dkQ6jXNhfNq/
1V3czo3+fnKjU74yN+7v6jurUZtVz+XndNNjuDEe8Rsosi3c2I/XDBrtJ1Fw
fz6jL3efp+C8kkTXSB9Nwd/f/8FSWbXq/eXNHktjFPSX4RnF4Z08uF9bpsYc
Ex70P4vACI/7PFgvy12zFY08GH9N8ZTYBeC6YjFZw/sQL17xCt6dqK+k667b
dXbi89KN5A03gQ+8ss66ng/fYwkoebIT68+qhLFyGpjiLGN+MQ/uA62dJ2V4
0X86WQ4zOfHiedu0rCn3edFftmjplb/jxflqn4CKMtUu9JfqFAVNpV0Yjzzl
wGZfYIPgXv0B0EPHp6zIil14fuWDPJ4ju3DesLQRMN/Mh/7HHV1np8CHem4x
2ZVoy4fx8g2KSk7iw/NkJ1+iaeNDvxJqp2Zj3Y3zwagIiUN7N/p1mEv5R8/d
2G+HtppNZ+xG/TabhQi27Ua/OFfm/JSFH8/vo2m//wQ/5iNhOLEyFPjKn/yK
uGwykeLEqPoM2FrUeDbtKcTHqC+9H3i/V27JL8iHosg65w0CPMRHm4gFCaiP
q7UTcWoCeL71JwRn/YEtGeKIftg/yeWGVY0A5rO846rFdwHMl3VU4eIWQdRD
f0lbhwKw5cLl7vBCMlEg9HOtDTDN4g979Rzw09fp3fHA9knhLNYvYZ7PK+Rp
AuY40Vq+Bvz/XLDKtk17MP8Da7vXaQNHfpu/driBTEQ9Z1wK3YP947iaxHzT
HtxfKHU2L6sQntfomrqishDO+7K1ej1WwDbT4VTOdWRC6rnY1wghjG+v5+yV
CiHUj2a2RcCIEPrNs8thWpuFUT97GTaJaApj/ZkzCXdHAL9kcNFXhnk9yXM4
oR24f2l53Rp4/7NahsRaER7Cz7BUUrQM/CHY+JSQCMaHX6N25ATwpnjnec5S
mD+Eu4y8V72/VBOaXiCC5x305nkwCMy7SH9mJV60qSXzm0RRD1s+9NsTwJWp
T8Y8npOJcfcrUVdEUZ8OrQcNHgEnasZYkCGe3PcFGrtEcf+LMUdkt4thPNVT
2JMNxDD+vgcnKYliWI8P7Tk73ojh/l6ZB/dMAhv6aW47XQzxbHGI5NiL+lLS
mXx2eC/uh7JL38JmL8ar6Pept9GrWGeg9crLvXhf8kka9/29F/0+v1Iin1cc
z/PBsfaahTj6/Uwd671scawvjzWMEz/FMb7UHaFbePehnuUY9UVP78P6vN+z
mTFgFWdMMNYVAo8k0GyNeUcmZLKepvTtw/Xm2emSGCVw/3ZuPT9lJPD7UyEq
PhYSOP98v0tbmAz8sV/V6z3kf2rbdekB4DVUv5YPviUTO627S3gl8Xx7r52N
15LEeu8S6p53lsT+asoezZACTP1Y4lkrxCtmRLDs3SqmsWH/OyeJ913HiPSz
vPuxf+yhobt4eT/miyxd5FME7OluY/IZzhe8g11mbj/Ww3rGbJsdUjCvelu6
a1SBv9eqnDkshc8D5PK6Lq88F5rabPwC5gcZq7J7Uthvv3ucoHkrhfE971uU
OyuF+g0Vd7HgkuYhcq+8bzQD/11kdQw7AnzsxD6dyyUwHweMfHKVxnh4ZjQv
lwAbM7l+ymkmE6cEpsjz0rjez8pfKcIHMN8CO94vnjyA+9/5zeHL9QOoXzub
PwHpB/B7DV/rxNpWvW/oWZhDJYP1E65P91UM+H7mZjGmGjKhpTSxZAI8cyP+
3nbwI2mFoB9RwMIvjJdLnsH6W6p3tMtgvA79Zhggy6J/9T9zET4HHHOlwy6s
nEwwXaiZD5HF+MnXONgVy+L633SUr/bJYr0ouAhp0R/kIX74ppDWw/dG1fxK
RIGr9Xrbc6vJRDTT+BH9g7ifxBfZ4f7A5x6tPa9QQSau9HuGFR9EPd7fcrbv
F3C5m/ycGNynz355MC4lh/pPKIxvvC6Hv98sGtabK4f719vyUf0TsKVuNXQy
0CcDDzW1PNSTJ30rqRb8xJy3S0Qe5wsn40JzA3nMR1RmnpT/KrYaPE5TKI/x
2+wQmP4ZWM0ttuQ39A816uGnGxRw/Sxy6UlFBcxfmijT+HUF1P/ko8zTQ8AG
VreS0hrJxJdrAldZCKznlu/uynIExtt155lRG2LVflRHyMkE6uXTR6fOFmA2
xyz5C5/gfvWmbZbtEPp9hdRh11OHMF4xTdQqYYcwPoz+AvNPD2H/fCVvca4X
2Kx4qaiiG+aZXisXOkXsl7VR/eb7gPNfBZiuBf0//NJMZ6yIekx8wLQlQBH7
NZU5m0W+Iu7n3fD7iG7gxKaOpvkPZEL3R2s8tRL+vvRYX6WwEv49ZeYei8Bp
4L0Z/o4bPpKJw+POMv7AadI/epPekwkW/4y5UmDV6gqVsDcwn3xQt/ihhH70
bVowTkAZ68f7uWWpBTC9x6z4OMSDXFASnK6M9XuO5XLO4/8Ld6fW3W4CTkjJ
jR0DvX691hc9p4z7rzOnDdt5GONLFTHx+tJh1LdwvOefbGBJV9sRk3Yy0SgZ
3zJ6GP9+pvHEV26jCuiFRsuGrhX69zuJH2LAXftVQwqABZnnpvVVUD/KXg2b
/FTw71sKBlfLC1SwPs1Gml07VVA/ppfPXKc6gueJufs7mf8I1muCccL7k0dw
/9VXwt19gVO96b7erCcTJkNDd4qP4H7YmWxOjR7B/WfGaMqTjvIQZylV/KZf
wG9pHxWpAX9tOODE1EEmCt9ydbsdxfjpbNkannUU/VTAgmq25yjqq6q1SpGs
in6gGSDod1oVf19SyvU+AtjnivrY5j4yobIlK75UFdf7kVCx0LeKE0frXOnU
8PyDAidlRNVQ//UUeRM9NdRPt+dB0Zur+L762OscNYx3QoT7ra5Vz4scSQbM
x9Af5kSPZR4/hn8vDBhj9g48hvn9uTF0qvIY6kOvqNP51zFcz7LXaI7nOO4v
/GexsMZx9JsggWcn3I7j3yfPOZndTT+O+b+oeTyl4TjOQ8bzixVTq9YbHJM8
RlbHfHHYLUQdBuYPNhU3aCET6yaIHlt1jD+90k5SvDrW711n/4hXq95v0/f6
Mqm+at4Y++VK1sB4MD0qvK+ogfVSeFa4ylID611JIOZ5vAbW+0LekHWnBn5v
QWeNzHZNfN+ndYuGnibWP/9wY0gEsOBXh9+bO2Ee83SvaNTE/XmW8plRa6Ff
cnWX3xLVQr+LLPJLMQD+IXlso0UXzI/lm919tbAeAktu3yjUwvxptEvIDGhh
f1rjF6zCoI3rOYTz60sCb/vLlKQ8Dvfjh8O0xtp4PgVzh54gYPXr7d9Ze8mE
6tqF7SXaqBcdRl/Vr9p4nvd0ufrbTmB+z/o7bFEDpsvdoKXTBP38qch7J+Cc
6nhjliEyMVbo8yQZeOG72mgJ1F9l1rTZmxPonxt9jo1MAT+aTDa26CETl+wN
4yk64Bfdp8OM28jEy/tq7Ro6WF8GFINuFx3cr9+eWeHUledsyqLlkE+q1BrJ
9zqo5wwZJtP1unjebVGkD8d0MR8cPNdtwoB9Yia9iobJRKpue2Ip8LHv/EwV
cF7SuTKefl3cH/PD93V0J+G+pT40zgrxpRKr3kycxHhLJNQKugBz3BelLYf9
vj+7/kTeSfSrJqrekU8ncb5+5HXqC/Up9CfmfYnpjqfw3wP2aU3XbjiD+W6S
kaVPNcL9/fabjLU/h9/XX1j7IeEcfp97oOD563Po9y7RIuNnTPB7OX4lbXoX
eIgi+twvp0fJxEilZcqpS6vY+Mx8hQUPQWbPuHX2K6yvLzkzYYH1euhr6EUe
Sx7CN1esuQTybTcUu0nbEvOffIP2k6clxj/ESPheDvDZcR5B9R9kooe/7PKM
JeojyDdKQN0K42un6zSVbIXfozG4f/mjFb6/Y8/pozTWPMSTNxlGFaCHqfWT
O8St8d9PJNwVdIysMV5rxoe9/YGnlcdG7v0kE3x07/4WWmP++za0OvUDTxyx
oTz8Dn7+JE2G+TIP4VUlWa77Dep3em6IuIzfY3q7ly7+Ms4n449yimYvY70M
V32OPmqD+t13ffSbI3B5ksf+vBEykV1UFngf+KvGQb7yAThvjueuRhv093Lu
fWVLNnj++7XtGntseYh18jxLi7CfmqNkpVPAiVz+3wrmYX6LbL5x0xbP5xxe
XJoD/LYk6XzWGJl4PPZmonPV842SL23p7ZBZxvLHJO0wf7nD5C0mdvjvVXX9
J8eD7VAf/H/na4vt8LybVPd+GbRD/yq6lXZ8kz3Ga7/eljx5ezzPPicPZmt7
jP+O+AHLWGAZDYG3F+fIhKSL4os6e/T/4WOC30lXwN+Zbpi/Z+EgjN0XPa9e
wfVtjN9SNwKnef2UJ8/+//Pnd8NTf4ClWOYazQeBScF3+RywfrWm7z3xBA7e
8a7/xhSZoP29tjcLeCzyjsr7abh/82dodTlgfVx598eR3hHzkTGieUzCEfVu
uTvviQmwU+6UpvoizBfKbG/CgP9eiReOWYL4/hbkr1j1+5QX32ZorvIQA0LG
xqygn3v7ReiMr2J9nSGHVxRfxfU05Wc6f19d1T/nBBu5ruF+2ewvVx+/hnp4
Zidm7gxcalN14Dv0j+L79RX3r6E/Bfn2sTYA13tXBw/QcRB7eYuy54C/2p1z
lFuG+7zCZNAuJ9SP8h5ih7YTfi/Q8eFBTydcT3icxJwF/Mzjek/1Wg6CRiG1
pwPY/qgS3do/MA+yKqavc8Z6HOWYthEHFrfTY9k3CfdXjotjRsCqhUcbHWfI
BAMrv0kAsO3PPBnDBZgfkqU/Fq56v5w6IaR/1fu+3DmGrC74XEJqZ5+SC9br
GD3XqSDgJma9MWo4z52jW29+dsHzhPqaD0u44n63dpd62AJL6Val7Ibn2z4W
escCNwWJ+zSt4SCcjhz0qXFFvedLcsf9dkX/zij8KMnrhusLl7Yf0nHDfPy/
8jZO8dZbwNGZHkM5NBxEu810WrEb6nc8leFOvxvup70jr4zRHfefdrNgSAr4
MP0NKzqIxxkF1vWmwNkfP4xsBP95ldkoEAoc8n1g419GDiLO7LtKiTue15ar
/ts88Cw5i7YT4vua5cneM9d5iNF09+QB0EvwiUhKyXX0l/JYyrkG4A31QeHV
s8j/zvOP/+lnli9CabsHDzFPqG6dBv2n1ChPXfbAeg72k+us8cD64Anj1/jl
gfu/eHTJldMTv6eXsDZVFfhcKlXJI8gn7/4Dr68CH+PtSReC83wsTRlL8cT6
2pSZUPvOE/NV/srv85wnxovLUK5g5w0877nUhXZ94Lcnf3DI/oL7/0nnr1k3
MP9SAYZ7qLx4CPNdxVNXNnEQEaJ0useAU2Rql4N+wzx9aYO6kxfWW9/J05XJ
XpivlFSz3w1eeJ4Pv8X75r0wPppx7AG8N7HeApKtRTRv4u9N9ymHOQN/+fKQ
1xDyedQhXvjBTdSHU4t5fcNN9Cf+2/6URWCRWfGGKwwcxI5P05IC3jwEjfdd
IV96DiKlUOrVaW+cV0ZTmXT9vXG+GHdz6y72xvVfT59KHvTG/eewXD3HfAu/
t9nYnXx4FZ8hc9HH3cL+EEnKGf55C+O7o3GDgpTPqnr7wPzgvA/Gzz7hDnUw
cCn3JKv8Fg7iZb57UrEP5qvEtX/ufxVq3uFc/+G/zygVMhP6fBJCtkJF0puU
Qkb2iuzIqggRKmUl2ZKRlaJsFVEq2SNFMsvIKiQlhHN/r+t8frfrnOs658/H
9Xm/X697PO/xVl+DsJ88aa/RZLgB3xdSBrQc9CSi2qRmYP8N1OcdSWZn6xuo
z0uz2X8ibmD/SlMJ9S0H/lrqYzsI9rHVlq+M3EB/us0EDjPf5COs7l6i011P
IspNuRTlbmI8f5CyL1nfRHuZCp4+vnUT+1nWltdT74E9LmgUCW8iEVTy9g38
wXxEmNbeB5uh/jlFJDo9gcedu61UhElE8Kvo2CfB2N+mr5v++ByMek9wu0tL
G8JHhAQeYdrKSiLmMoX0JYE1HXcVhDCRCCV2+nQTYF3xPZxiEH9m86OTQSHo
Tx35k1RhCPaDh3OvzveGoP4+O9dc3BDKR8yWqPfkcJEI/+XL+XtCUf/3vMK/
mYWiPw1HAgJvh6I/WWxVNkPA28MEmOchXnTJ1R4HwjBeOZ4+QoFheD/nSxXl
POCuIBHmp+CPgZ6L8SdgveK/hTdXtxMf+Wf3UIXzEaJ3dSRGt5AIyaLNdKLh
mI9xZTNNQ+A3HlSqnlQkoirmHCkwHM9LPOKR9zAc/akIUZVrX/P7qo/g+RVg
0xBt73vsJGLLnPQDkVuoXybzTFajW7jfaVW8aQy8hf4w1fpW5AHf2ceV5Abx
GeAM/NoFfLXSm/c56JGOjT+SOgL1/e8mi4c4cOXzEMsJbhJhW/ieZAiczSzX
d58R+kt+7mJgBObztcz0xzxg7QyChpGfRGwrvK7wJQLroZqnqE/2Ns678b8l
+0NvY3xj6vhOtt9G+zylS9uXbmN+pnrH9QQi+Qi3X7trFtlIRJ529QfNSIyv
AreCltcaPjocupoeiXo/3UtWaIxEPZZdvTbyG5jpWv2/AA4SkdR5SZfnDuhx
i2FyrSCJ2KmcLa5+B+OzJdSmyeMO5m8bD5VU6h3U46D70ci6O7jfmA41l87c
QX+SPHyZuKMwn5esf69aAaeG/QoQJcH8e7/fuzwK45nxuiOPORrz12NXVq8I
7LWUPJ61m0QsXLjg4QhcwSrQNAvz5M2b6LEX0dhfEjuFyd+iMb4D7KHXmWMw
fpNR9mPyMRivFYseVhtg7XecsQMQr8mqFtcI4PVsoVp2NCTClzM8+mkM9mtZ
n6XiLzFoT0BW4K/tsVh/3xkPGbjGYj2PFaSovYtFPV31P3lkQxwf0UulGpO3
g0T0XSvzk1rDX+TYdpgD85gxqvNtg/tVZoKC4zBfMm/vlRYBr4YlJa+HevEp
a/3aC1wWMh7lzAf7g2KsM008/n7Ecvy0WDz+LrLYwakXj/HSMWtLDVjz/Kaq
Sb7H8ZifE9UGLl3xmI+o7GxNqgT0/51FsagIMKOs/nLodhLxwZY9zSABn3/1
ItP3IbCZdMybQeif7MszV5bXPJ/zQcBLLhHzT2FKPVKY4v9TuT2HDYDv7w15
dALiOe78zTB3ze8pOT8lVxNR73XaNocU7vIRTWnnJhvBn4XW2zr2dzH/pOfb
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
PxvVWeDdntzu7+C8/wX8SGGF
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$49680304#1"]& ]}}, {}}}, {
    AxesLabel -> {
       FormBox["\"Pressure (mTorr)\"", TraditionalForm], 
       FormBox["\"Voltage (V)\"", TraditionalForm]}, PlotLabel -> 
     FormBox["\"Fusor data with attempted fit\"", TraditionalForm], 
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {2.5695968154503963`, 5.873982209573993}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2.5695968154503963`, 9.723457368541272}, {
      5.873982209573993, 7.650958488832748}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Fusor data\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Standard Paschen curve\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.862877907772355*^9, 3.8628779363785954`*^9}, {
   3.862877976538424*^9, 3.862877985938792*^9}, {3.86287802038691*^9, 
   3.862878029657864*^9}, {3.862878198926358*^9, 3.8628782410708838`*^9}, {
   3.86287831124024*^9, 3.8628783251331587`*^9}, 3.86344686982603*^9, 
   3.863452113836735*^9, 3.885227419883301*^9},
 CellLabel->
  "Out[396]=",ExpressionUUID->"7e130139-9637-4370-bed3-012d304ab55d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.862173070130412*^9, 
  3.862175659825438*^9},ExpressionUUID->"308cce2d-cdff-436e-be31-\
085466f03d45"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing geometries", "Section",
 CellChangeTimes->{{3.86451883320041*^9, 
  3.864518837827898*^9}},ExpressionUUID->"95ceb9fe-2498-45cb-9f33-\
a3193a1af2d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "5"}], "]"}]}], "}"}],
     "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}],
     "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Dashed", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", 
           RowBox[{"-", "0.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a\>\"", ",", "Larger", ",", "Italic"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0", ",", 
          RowBox[{"-", "0.75"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<b\>\"", ",", "Larger", ",", "Italic"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.25", ",", "0", ",", "1.25"}], "}"}]}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Visualization of Concentric Spheres Setup\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.863964288880018*^9, 3.863964357304*^9}, {
  3.863964412435788*^9, 3.863964579148982*^9}, {3.863964615512789*^9, 
  3.863964737665107*^9}, {3.863964783717811*^9, 3.863964844378474*^9}, {
  3.863964881394784*^9, 3.863964918152647*^9}, {3.8639649789135723`*^9, 
  3.863965159106945*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"5b7fb0e4-7f72-4326-bcb9-aba88d974504"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.5], SphereBox[{0, 0, 0}, 5]}, 
   {Opacity[0.5], SphereBox[{0, 0, 0}, 2]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Dashing[{Small, Small}], 
    Line3DBox[{{0, 0, 0}, {5, 0, 1}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
    Line3DBox[{{0, 0, 0}, {2, 0, -0.5}}]}, {Text3DBox[
     FormBox[
      StyleBox["\<\"a\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontSlant->Italic], StandardForm], {0.75, 0, -0.75}], Text3DBox[
     FormBox[
      StyleBox["\<\"b\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontSlant->Italic], StandardForm], {3.25, 0, 1.25}]}},
  AxesLabel->FormBox["Automatic", TraditionalForm],
  ImageSize->{344.6171123970361, 357.131458655856},
  ImageSizeRaw->Automatic,
  PlotLabel->FormBox[
   "\"Visualization of Concentric Spheres Setup\"", TraditionalForm],
  ViewPoint->{0.13493763004887244`, -3.373592276499327, 0.22509328719639446`},
  
  ViewVertical->{0.013131790852024696`, -0.535993115106492, 
   0.8441202145591927}]], "Output",
 CellChangeTimes->{{3.863965129643342*^9, 3.863965159489272*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"c4a6cc30-2d5e-4eb2-a6a8-dec47aa05359"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
      RowBox[{"Cylinder", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "5"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "5"}], "}"}]}], "}"}], ",", "5"}], 
       "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}],
     "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Dashed", ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Dashed", ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", 
           RowBox[{"-", "0.5"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Dashed", ",", "Purple", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "5"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<a\>\"", ",", "Larger", ",", "Italic"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0", ",", 
          RowBox[{"-", "0.75"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<b\>\"", ",", "Larger", ",", "Italic"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.25", ",", "0", ",", "0.65"}], "}"}]}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<h / 2\>\"", ",", "Larger", ",", "Italic"}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"0.8", ",", "0", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Visualization of Sphere-in-Cylinder Setup\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.863965334070613*^9, 3.863965342798772*^9}, {
  3.863965378151945*^9, 3.863965396994172*^9}, {3.863965437214333*^9, 
  3.863965543424603*^9}, {3.8670954569743767`*^9, 3.867095464782585*^9}, {
  3.869497610971287*^9, 3.8694976114882793`*^9}},
 CellLabel->
  "In[852]:=",ExpressionUUID->"d1492736-4a40-4797-885b-d26a9e76a850"],

Cell[BoxData[
 Graphics3DBox[{
   {Opacity[0.5], CylinderBox[{{0, 0, -5}, {0, 0, 5}}, 5]}, 
   {Opacity[0.5], SphereBox[{0, 0, 0}, 2]}, 
   {RGBColor[1, 0, 0], Thickness[Large], Dashing[{Small, Small}], 
    Line3DBox[{{0, 0, 0}, {5, 0, 0}}]}, 
   {RGBColor[0, 0, 1], Thickness[Large], Dashing[{Small, Small}], 
    Line3DBox[{{0, 0, 0}, {2, 0, -0.5}}]}, 
   {RGBColor[0.5, 0, 0.5], Thickness[Large], Dashing[{Small, Small}], 
    Line3DBox[{{0, 0, 0}, {0, 0, 5}}]}, {Text3DBox[
     FormBox[
      StyleBox["\<\"a\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontSlant->Italic], StandardForm], {0.75, 0, -0.75}], Text3DBox[
     FormBox[
      StyleBox["\<\"b\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontSlant->Italic], StandardForm], {3.25, 0, 0.65}], Text3DBox[
     FormBox[
      StyleBox["\<\"h / 2\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontSlant->Italic], StandardForm], {0.8, 0, 3}]}},
  AxesLabel->FormBox["Automatic", TraditionalForm],
  ImageSize->{369.41295984757545`, 340.8587402331195},
  ImageSizeRaw->Automatic,
  PlotLabel->FormBox[
   "\"Visualization of Sphere-in-Cylinder Setup\"", TraditionalForm],
  ViewPoint->{1.817703510691672, -2.846227415107673, -0.21199869978060104`},
  ViewVertical->{0.332083033163763, -0.5477990595461724, 
   0.7678782777531112}]], "Output",
 CellChangeTimes->{{3.863965340197597*^9, 3.86396534309081*^9}, 
   3.863965397528092*^9, {3.863965438590185*^9, 3.8639654814693213`*^9}, {
   3.8639655155000267`*^9, 3.8639655437192583`*^9}, {3.867095457454123*^9, 
   3.8670954651813707`*^9}, 3.869497611985887*^9},
 CellLabel->
  "Out[852]=",ExpressionUUID->"513f36d1-5237-4cfb-8284-24fd99664681"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1511, 851},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7e89233e-6e9e-4f3d-81eb-ebff8ed95529"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 238, 7, 98, "Title",ExpressionUUID->"f0d418b8-f4b7-426a-8d87-e963adc33014"],
Cell[821, 31, 523, 11, 149, "Subtitle",ExpressionUUID->"af4a758a-0346-4e06-8142-d8d488e2f9b1"],
Cell[CellGroupData[{
Cell[1369, 46, 159, 2, 67, "Section",ExpressionUUID->"8b21c426-23c9-4ece-a05a-a071e2f4e032"],
Cell[1531, 50, 2856, 67, 346, "Input",ExpressionUUID->"17299727-7b39-4546-9304-f273b2c2d46b"],
Cell[4390, 119, 2426, 55, 283, "Input",ExpressionUUID->"4acf2b0f-8738-4c11-ba4f-da8312c40b3b"],
Cell[6819, 176, 3095, 85, 157, "Input",ExpressionUUID->"f323f23d-62fc-4b97-87e7-10fa2ce5c652"],
Cell[9917, 263, 1694, 40, 178, "Input",ExpressionUUID->"b6ba0040-1196-4c88-888f-0e39e97ce564"],
Cell[11614, 305, 2549, 62, 241, "Input",ExpressionUUID->"c41c7158-dab6-46aa-98b7-678378f96829"],
Cell[14166, 369, 4729, 122, 367, "Input",ExpressionUUID->"fe15cc79-bd9c-4ee2-89c8-f0b202b11c97"],
Cell[18898, 493, 14075, 275, 703, "Input",ExpressionUUID->"84834693-e218-4d41-a766-57c8114210f4"],
Cell[32976, 770, 1354, 36, 157, "Input",ExpressionUUID->"da46c2e1-abaa-499e-b582-b3658ee7b198"],
Cell[34333, 808, 5264, 127, 222, "Input",ExpressionUUID->"8db37701-405a-4f26-9e46-a72cf7cb7186"],
Cell[39600, 937, 10664, 280, 703, "Input",ExpressionUUID->"3b3021c1-d690-4116-a86d-ff4fb48ae735"],
Cell[50267, 1219, 7812, 218, 514, "Input",ExpressionUUID->"5a8c35e4-9286-4d84-882b-6613b2cf744c"],
Cell[58082, 1439, 14766, 355, 766, "Input",ExpressionUUID->"f9b165d1-f3d6-48fd-a824-eb63d4cc3d83"],
Cell[72851, 1796, 488, 15, 30, "Input",ExpressionUUID->"93a66f9e-ead1-485a-97f0-3a5b65ef0b67"],
Cell[CellGroupData[{
Cell[73364, 1815, 2176, 55, 52, "Input",ExpressionUUID->"1397c754-ab0b-4ebe-9d2a-7521ecfaeec6"],
Cell[75543, 1872, 372, 9, 28, "Message",ExpressionUUID->"a70e2861-717c-46be-b600-470112e64ea0"],
Cell[75918, 1883, 2203, 60, 37, "Output",ExpressionUUID->"bc13b983-34b4-47d5-b828-869492957863"]
}, Open  ]],
Cell[78136, 1946, 3061, 64, 136, "Input",ExpressionUUID->"156caa35-b172-409e-99b8-32481811a06a"],
Cell[81200, 2012, 638, 16, 52, "Input",ExpressionUUID->"9c173080-23da-4f31-8fb3-a01163bbf798"],
Cell[CellGroupData[{
Cell[81863, 2032, 444, 9, 30, "Input",ExpressionUUID->"cf58c291-0de3-4877-84ff-eaba8ac29e7c"],
Cell[82310, 2043, 368, 6, 34, "Output",ExpressionUUID->"604b846f-5ef1-497b-aa62-e0e53766e4b7"]
}, Open  ]],
Cell[82693, 2052, 10700, 196, 724, "Input",ExpressionUUID->"8d7d0f05-0d68-4a2b-9282-c3f48a7a50f4"],
Cell[93396, 2250, 22331, 410, 1690, "Input",ExpressionUUID->"ba8afca5-841d-49e3-89c8-42f261e3843d"],
Cell[CellGroupData[{
Cell[115752, 2664, 847, 23, 52, "Input",ExpressionUUID->"8db364ef-1f97-4107-b0a3-01c255f81a74"],
Cell[116602, 2689, 1064, 34, 64, "Output",ExpressionUUID->"78e670dc-8201-4c55-b66b-6c78300ebd60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117703, 2728, 832, 21, 30, "Input",ExpressionUUID->"d4847df5-bc08-422f-9a30-847351399552"],
Cell[118538, 2751, 971, 25, 34, "Output",ExpressionUUID->"cde83633-b384-48c6-8b4a-c7ca4b7a8a48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119546, 2781, 217, 4, 30, "Input",ExpressionUUID->"5baf1044-f6ce-4d12-99c7-4dab675710d2"],
Cell[119766, 2787, 7555, 139, 384, "Output",ExpressionUUID->"af109ffa-7180-4170-a280-90aa0bce75f5"]
}, Open  ]],
Cell[127336, 2929, 201, 3, 30, "Input",ExpressionUUID->"de2876e0-1d26-43bf-85db-c029f30bfe99"],
Cell[CellGroupData[{
Cell[127562, 2936, 738, 12, 30, "Input",ExpressionUUID->"563b1d79-e69c-4a53-9534-1d2a57559b5d"],
Cell[128303, 2950, 1218, 28, 34, "Output",ExpressionUUID->"f5460ce6-9ced-4344-a8a2-4391d239df10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129558, 2983, 1706, 46, 136, "Input",ExpressionUUID->"5f515579-82b0-4e65-b16e-d7329769c848"],
Cell[131267, 3031, 11260, 227, 83, "Output",ExpressionUUID->"d58c8391-ab8b-4447-994c-a8227b0fd97d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142564, 3263, 222, 3, 30, "Input",ExpressionUUID->"92d24c32-f490-4c76-914e-7cd33d7c948e"],
Cell[142789, 3268, 781, 22, 34, "Output",ExpressionUUID->"75b9a660-c607-4aca-b096-2b0d8bf42e7b"]
}, Open  ]],
Cell[143585, 3293, 3740, 84, 157, "Input",ExpressionUUID->"27816a9e-1c85-4318-8e1d-a8a70ad4432b"],
Cell[CellGroupData[{
Cell[147350, 3381, 3123, 89, 115, "Input",ExpressionUUID->"143b0e1e-48fb-4712-a5dc-f4f4ae440cbe"],
Cell[150476, 3472, 793, 16, 458, "Output",ExpressionUUID->"275dcbc8-2441-4435-97ad-a6223e7ce646"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151306, 3493, 1212, 31, 52, "Input",ExpressionUUID->"37c2c07e-d347-4659-b121-dfe7287bfc52"],
Cell[152521, 3526, 53767, 898, 382, "Output",ExpressionUUID->"6b7a7988-7750-4d49-811a-29289f2e3436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206325, 4429, 1039, 28, 52, "Input",ExpressionUUID->"fbea887a-defe-4b16-818d-d23527059610"],
Cell[207367, 4459, 62783, 1047, 334, "Output",ExpressionUUID->"67867e86-263c-4426-9ef5-27c283ea0e32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270187, 5511, 1042, 28, 52, "Input",ExpressionUUID->"a3be4fd0-faba-472e-a956-95c63dc33b2a"],
Cell[271232, 5541, 59377, 991, 338, "Output",ExpressionUUID->"6d731579-3342-45d4-b290-e4066b6c3028"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330646, 6537, 1040, 28, 52, "Input",ExpressionUUID->"aa85cbd9-cd1b-45eb-b416-bf95b8e128ef"],
Cell[331689, 6567, 57840, 966, 366, "Output",ExpressionUUID->"2b9bbe2e-039e-4f38-ab10-56bd3f664e3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389566, 7538, 154, 3, 30, "Input",ExpressionUUID->"f095f8a4-cf3a-4138-9bdd-365dfc00330b"],
Cell[389723, 7543, 160, 3, 34, "Output",ExpressionUUID->"de9a1975-ab29-47be-a081-9300ce67ff35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389920, 7551, 1649, 47, 73, "Input",ExpressionUUID->"3c78aac7-b15b-48d5-a337-1cf973b0f65f"],
Cell[391572, 7600, 114352, 1895, 488, "Output",ExpressionUUID->"b0fd76c6-7fbb-4660-89cf-6c60c1544e23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505961, 9500, 1649, 47, 73, "Input",ExpressionUUID->"a41980a2-0d1a-40b3-a32c-7555db80f774"],
Cell[507613, 9549, 90444, 1503, 562, "Output",ExpressionUUID->"9ed1805d-c9c5-404b-afac-acd7b9617b4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598094, 11057, 1628, 44, 73, "Input",ExpressionUUID->"5e1ad2de-fedb-45b5-b677-e98d51ae1f0e"],
Cell[599725, 11103, 12604, 223, 515, "Output",ExpressionUUID->"f457fc33-51f8-4c6a-9750-80394287478b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612366, 11331, 383, 10, 52, "Input",ExpressionUUID->"c55cb4a3-8f4e-4b79-89c3-2d8b0459a074"],
Cell[612752, 11343, 198, 3, 34, "Output",ExpressionUUID->"9a4e33bc-a77c-4764-937d-dd40972a8563"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612987, 11351, 945, 26, 52, "Input",ExpressionUUID->"44b33507-1b5d-478a-86ae-3cd9f337d8fb"],
Cell[613935, 11379, 13507, 238, 502, "Output",ExpressionUUID->"baf26da4-f3c2-48f8-ac40-a04dfffc26a4"]
}, Open  ]],
Cell[627457, 11620, 2266, 57, 136, "Input",ExpressionUUID->"7532491c-3311-4257-9a12-140566265d49"],
Cell[CellGroupData[{
Cell[629748, 11681, 3690, 91, 283, "Input",ExpressionUUID->"23227edb-c727-4743-8f55-83f1a4ec31a1"],
Cell[633441, 11774, 549, 10, 24, "Print",ExpressionUUID->"d4655c51-5c25-467b-9065-1f24a9e74bb0"],
Cell[633993, 11786, 10586, 270, 421, "Output",ExpressionUUID->"6ff286eb-febe-4421-8db7-01a88c1efcee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644616, 12061, 365, 8, 30, "Input",ExpressionUUID->"9f8fb13a-cc03-4e31-853e-48359ec7efac"],
Cell[644984, 12071, 248, 4, 82, "Output",ExpressionUUID->"024a3193-1ac8-482a-b89b-199f84e02251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[645269, 12080, 1491, 41, 94, "Input",ExpressionUUID->"094fadf1-5855-4b9b-801f-571f044c3b6c"],
Cell[646763, 12123, 306, 6, 24, "Print",ExpressionUUID->"83bbe327-8c8e-49f2-b24d-8c4493e90a0f"],
Cell[647072, 12131, 4311, 113, 421, "Output",ExpressionUUID->"b54be413-e828-48b7-8b6e-b3e8e7ff7267"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651420, 12249, 499, 11, 30, "Input",ExpressionUUID->"56f128f3-074f-42ac-be7b-3d4c5f94313c"],
Cell[CellGroupData[{
Cell[651944, 12264, 373, 9, 24, "Print",ExpressionUUID->"a3c09d9a-afe7-490c-900b-8a072363be14"],
Cell[652320, 12275, 298, 8, 24, "Print",ExpressionUUID->"63a51169-146a-4cf5-a033-9c4a344b790b"],
Cell[652621, 12285, 350, 10, 39, "Print",ExpressionUUID->"902df059-4fb8-4ca3-8337-32770ca9b6ea"],
Cell[652974, 12297, 313, 8, 24, "Print",ExpressionUUID->"0e2e70c2-6a26-430c-af76-3bb7045a42c8"],
Cell[653290, 12307, 448, 13, 24, "Print",ExpressionUUID->"c8de5982-7652-4fa5-b728-566e87c17147"],
Cell[653741, 12322, 340, 8, 24, "Print",ExpressionUUID->"a9dedf23-0ee5-437c-8763-f380186b8258"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[654130, 12336, 1150, 33, 30, "Input",ExpressionUUID->"df5f9168-1c1b-4b35-8169-624197580c4a"],
Cell[655283, 12371, 4203, 73, 336, "Output",ExpressionUUID->"958e3030-3a27-49e2-9d37-6da7add850c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659523, 12449, 403, 10, 30, "Input",ExpressionUUID->"eace5ed0-f29b-42e9-913f-b9814f2c5179"],
Cell[CellGroupData[{
Cell[659951, 12463, 374, 9, 24, "Print",ExpressionUUID->"facbcda4-5003-44ec-922c-876b3f35d25a"],
Cell[660328, 12474, 298, 8, 24, "Print",ExpressionUUID->"4fc3b350-25e1-44b4-8d06-f82a9a05b56b"],
Cell[660629, 12484, 351, 10, 39, "Print",ExpressionUUID->"6a710113-64fe-460e-8d4e-32ed305b5a7b"],
Cell[660983, 12496, 316, 8, 24, "Print",ExpressionUUID->"b6ada873-9d9c-42df-9d96-5abe600505b7"],
Cell[661302, 12506, 460, 13, 24, "Print",ExpressionUUID->"b508942d-5498-4630-a1b8-fc5bf3be747d"],
Cell[661765, 12521, 345, 9, 24, "Print",ExpressionUUID->"9a5a73f9-d9d9-4ace-945e-5549ab2e7640"]
}, Open  ]],
Cell[662125, 12533, 263, 7, 34, "Output",ExpressionUUID->"04bc9e6d-2de0-4868-a8bd-0ea85b768130"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662425, 12545, 399, 10, 30, "Input",ExpressionUUID->"09badc24-796e-411c-ba94-c41f41163305"],
Cell[CellGroupData[{
Cell[662849, 12559, 424, 10, 24, "Print",ExpressionUUID->"73fa7b67-69e4-45d7-a63c-ec6f648abb22"],
Cell[663276, 12571, 349, 9, 24, "Print",ExpressionUUID->"16e2a762-6c9c-430f-8005-49a1f45b4aa8"],
Cell[663628, 12582, 401, 11, 39, "Print",ExpressionUUID->"d5e67836-b6a5-44e8-b96e-f9fb5e8479f7"],
Cell[664032, 12595, 366, 9, 24, "Print",ExpressionUUID->"8d0fc20a-71c6-4a93-95ca-b29a90bceba7"],
Cell[664401, 12606, 503, 14, 24, "Print",ExpressionUUID->"de76aa1f-89a8-46a1-85ec-0427ade418ea"],
Cell[664907, 12622, 393, 10, 24, "Print",ExpressionUUID->"5311f750-b568-4dd0-a27f-92757dd73d23"],
Cell[665303, 12634, 284, 6, 24, "Print",ExpressionUUID->"95bb802e-7530-42b0-bfb7-1acf42d103c1"]
}, Open  ]],
Cell[665602, 12643, 299, 8, 34, "Output",ExpressionUUID->"92b7381f-07f8-4dee-b20e-7ab8cd462e48"]
}, Open  ]],
Cell[665916, 12654, 15860, 341, 1690, "Input",ExpressionUUID->"c457e28c-a4dc-4f52-98fc-4f66d915d9f3"],
Cell[CellGroupData[{
Cell[681801, 12999, 541, 12, 30, "Input",ExpressionUUID->"e190e21d-b6ba-417f-b9ab-49cf652e1022"],
Cell[CellGroupData[{
Cell[682367, 13015, 373, 9, 24, "Print",ExpressionUUID->"4f3fe3b6-7ea9-49ae-b71f-443656a4daec"],
Cell[682743, 13026, 332, 8, 24, "Print",ExpressionUUID->"418f875e-d049-45b7-9d01-6755c2db2c55"],
Cell[683078, 13036, 345, 10, 39, "Print",ExpressionUUID->"e797bd0f-c0a0-4f68-ab18-6fd137086927"],
Cell[683426, 13048, 316, 8, 24, "Print",ExpressionUUID->"cc1a1b79-f696-4b6f-a30d-b226322a668f"],
Cell[683745, 13058, 450, 13, 24, "Print",ExpressionUUID->"fa2c6c7a-86da-4bff-b3ae-c0fa9886a416"],
Cell[684198, 13073, 344, 9, 24, "Print",ExpressionUUID->"19de08b4-0960-4947-bf8e-10d2a8455843"],
Cell[684545, 13084, 234, 5, 24, "Print",ExpressionUUID->"91fac98d-b804-4f34-a875-0a7fcbc35d52"]
}, Open  ]],
Cell[684794, 13092, 410, 10, 34, "Output",ExpressionUUID->"2da64c95-2935-4e04-bc99-b329a890bd6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685241, 13107, 467, 11, 30, "Input",ExpressionUUID->"a775e97b-c281-49bc-9375-b2b3c143b011"],
Cell[CellGroupData[{
Cell[685733, 13122, 564, 12, 24, "Print",ExpressionUUID->"ec1df841-d379-4b7b-b2b6-86da0e5ffd10"],
Cell[686300, 13136, 522, 11, 24, "Print",ExpressionUUID->"b3913af0-edb9-4964-ac17-773ca5f03b4e"],
Cell[686825, 13149, 535, 13, 39, "Print",ExpressionUUID->"181a51ee-d4b5-4cf5-9ae8-f8a9e2d7e4d5"],
Cell[687363, 13164, 506, 11, 24, "Print",ExpressionUUID->"e0b451a6-4c7a-4e09-a539-8ef063ab6c5a"],
Cell[687872, 13177, 641, 16, 24, "Print",ExpressionUUID->"810b5ffa-de34-4833-9b38-26f248a956c1"],
Cell[688516, 13195, 496, 11, 24, "Print",ExpressionUUID->"cb8b377c-c4d2-472c-9372-bc70b1464ea7"],
Cell[689015, 13208, 421, 8, 24, "Print",ExpressionUUID->"3ec41294-f686-4416-98c2-17887346be10"]
}, Open  ]],
Cell[689451, 13219, 794, 16, 34, "Output",ExpressionUUID->"f6fcdd7f-72b0-4f05-afc0-73aacc0785eb"]
}, Open  ]],
Cell[690260, 13238, 16430, 362, 1762, "Input",ExpressionUUID->"569d23c0-4dbf-40bb-bf16-5ac6915679cb"],
Cell[CellGroupData[{
Cell[706715, 13604, 727, 17, 30, "Input",ExpressionUUID->"256a0189-bfc5-413e-80f7-14cee58eb656"],
Cell[707445, 13623, 1069, 32, 34, "Output",ExpressionUUID->"11895d7c-ec30-4157-9539-485b589cbf9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[708551, 13660, 216, 4, 30, "Input",ExpressionUUID->"081f2b07-197c-406d-81df-61466bf4b1ee"],
Cell[708770, 13666, 5060, 116, 247, "Output",ExpressionUUID->"9640621e-e645-43ee-bc05-75128409cf74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713867, 13787, 2674, 84, 178, "Input",ExpressionUUID->"0ac46de8-760f-460b-8b04-0b2e0516716d"],
Cell[716544, 13873, 396, 10, 24, "Print",ExpressionUUID->"505ea3bc-582c-4eaa-b7b4-a095510ecfd8"],
Cell[716943, 13885, 263, 7, 34, "Output",ExpressionUUID->"9e198169-95cf-499c-8a5b-79cb586d3c6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[717243, 13897, 2074, 62, 73, "Input",ExpressionUUID->"eb08572b-4b75-4b79-a1ce-66dc039372ca"],
Cell[719320, 13961, 8465, 179, 266, "Output",ExpressionUUID->"db917857-23dd-4313-8bac-7e44dcd1d5f3"]
}, Open  ]],
Cell[727800, 14143, 226, 7, 81, "Text",ExpressionUUID->"c8ec599f-bb62-4995-af02-21c59ebd4013"],
Cell[728029, 14152, 4912, 120, 304, "Input",ExpressionUUID->"4aff16de-225b-4c90-807a-179aaf750b05"],
Cell[732944, 14274, 3121, 73, 199, "Input",ExpressionUUID->"3d31c92f-ec38-4109-a127-6edf6521145e"],
Cell[736068, 14349, 424, 11, 30, "Input",ExpressionUUID->"e448a5cd-f58f-40ec-89e9-ec47f079e563"],
Cell[CellGroupData[{
Cell[736517, 14364, 219, 4, 30, "Input",ExpressionUUID->"8340104f-d28e-4177-990b-f16476f9d6bf"],
Cell[736739, 14370, 96282, 1597, 356, "Output",ExpressionUUID->"5ad538b2-05ad-4724-a0c4-5b33a681b38d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[833058, 15972, 743, 18, 52, "Input",ExpressionUUID->"cea6b598-3692-46bb-b7ad-16e731844039"],
Cell[833804, 15992, 706554, 11620, 51, "Output",ExpressionUUID->"d471c016-532e-461d-acb7-fb5cb1a6509e"],
Cell[1540361, 27614, 4355, 118, 239, "Output",ExpressionUUID->"4f305105-2873-4615-8c3a-880247206811"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1544753, 27737, 480, 13, 30, "Input",ExpressionUUID->"b750d690-b959-46f9-a7f6-9808119b2572"],
Cell[1545236, 27752, 119364, 1978, 536, "Output",ExpressionUUID->"e1aa8617-f7e6-4e81-b743-265fe969b68b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664637, 29735, 1173, 34, 94, "Input",ExpressionUUID->"edaadc93-b8ec-41c2-81d1-4a83c795a3a7"],
Cell[1665813, 29771, 402, 9, 34, "Output",ExpressionUUID->"2ec7f8b7-b33f-4667-acec-3c115a9819c8"],
Cell[1666218, 29782, 359, 8, 34, "Output",ExpressionUUID->"83c63bb9-44b6-4a87-8027-0282b2d25362"]
}, Open  ]],
Cell[1666592, 29793, 1990, 55, 220, "Input",ExpressionUUID->"8ad82ef0-1099-4f57-a1ec-a82d1d548f48"],
Cell[CellGroupData[{
Cell[1668607, 29852, 983, 25, 52, "Input",ExpressionUUID->"ea8957ac-9607-46cb-8108-fa3c0330a04d"],
Cell[1669593, 29879, 25155, 432, 355, "Output",ExpressionUUID->"4b7a8ddd-2bc8-4079-8bd2-361b266e0b27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1694785, 30316, 1150, 31, 73, "Input",ExpressionUUID->"72e1b9ed-63f0-4a90-9475-097186786596"],
Cell[1695938, 30349, 2001, 62, 34, "Output",ExpressionUUID->"09180ee1-ccfd-4d38-8744-54638678506e"],
Cell[1697942, 30413, 1979, 62, 34, "Output",ExpressionUUID->"54bdeccd-578b-4a6b-aa3a-127782ba9c9e"],
Cell[1699924, 30477, 24745, 512, 247, "Output",ExpressionUUID->"e80f0078-036b-4d88-8fdf-c4b7e6945da3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1724706, 30994, 781, 17, 30, "Input",ExpressionUUID->"c3e80c45-8b8f-46d4-a365-022d7039d588"],
Cell[1725490, 31013, 3571, 109, 56, "Output",ExpressionUUID->"ae4fd63c-b47b-4a38-8ec9-5dfbd53e060c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1729098, 31127, 3392, 105, 73, "Input",ExpressionUUID->"3e5c9588-5a26-4eed-ae9c-cc12cf1d2970"],
Cell[1732493, 31234, 3264, 104, 56, "Output",ExpressionUUID->"f87777af-273a-416e-8533-4f3454f29f89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1735794, 31343, 2906, 81, 94, "Input",ExpressionUUID->"2e8cde76-4517-4eef-80e1-1ab64aabde9b"],
Cell[1738703, 31426, 1604, 43, 56, "Output",ExpressionUUID->"ad1b1077-99f1-4765-9fc7-daaa12a49600"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1740344, 31474, 213, 3, 30, "Input",ExpressionUUID->"5fa51c42-7c2f-4854-8256-11f2e627797b"],
Cell[1740560, 31479, 4696, 115, 247, "Output",ExpressionUUID->"9a51722c-66c6-4896-8fe8-d1d9fbf9f0f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1745293, 31599, 1507, 43, 73, "Input",ExpressionUUID->"4e964a82-326b-422e-b1c7-ebea43b34735"],
Cell[1746803, 31644, 33266, 684, 272, "Output",ExpressionUUID->"f94ab5e4-fd66-4dba-97e1-89364a7c2e3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1780106, 32333, 712, 16, 30, "Input",ExpressionUUID->"d2afd923-baf1-48d7-ae97-31d24c6a6be4"],
Cell[1780821, 32351, 3544, 111, 56, "Output",ExpressionUUID->"858e67fc-cf9d-49b7-95d9-4d61c411eb4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1784402, 32467, 3017, 78, 136, "Input",ExpressionUUID->"67252d56-cbff-4142-9cae-fc36f922c649"],
Cell[1787422, 32547, 3301, 104, 56, "Output",ExpressionUUID->"9beccd54-7d0b-429e-b6b8-e743b30d2535"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1790760, 32656, 1467, 41, 73, "Input",ExpressionUUID->"3b7a8690-542b-4276-b18a-a001044e65a9"],
Cell[1792230, 32699, 49824, 1026, 266, "Output",ExpressionUUID->"0ea2bd13-43ba-468b-ab08-71d82e159ca6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1842103, 33731, 163, 3, 67, "Section",ExpressionUUID->"67e0e48a-2fa6-4412-87bd-99093c224345"],
Cell[1842269, 33736, 1538, 43, 94, "Input",ExpressionUUID->"807a16c0-cd09-49c9-b7e3-01de03f0237a"],
Cell[CellGroupData[{
Cell[1843832, 33783, 213, 4, 30, "Input",ExpressionUUID->"e69dc751-b84a-4eab-9bd3-a12aad8a16e2"],
Cell[1844048, 33789, 297, 7, 34, "Output",ExpressionUUID->"c99fa086-27f5-4afc-b8b3-7fe5ff814a4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1844382, 33801, 3185, 91, 157, "Input",ExpressionUUID->"a2f4455b-3a45-46b3-8e43-aa9024d836f4"],
Cell[1847570, 33894, 3577, 108, 77, "Output",ExpressionUUID->"5d54b29a-5861-403c-bcde-baaf67b72ff0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1851184, 34007, 488, 13, 30, "Input",ExpressionUUID->"5c60235f-37a4-454d-8f33-1e46c11871b9"],
Cell[1851675, 34022, 3605, 108, 77, "Output",ExpressionUUID->"a3d1dfba-2f1d-4027-a27a-9c598f2ec1c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1855317, 34135, 434, 10, 30, "Input",ExpressionUUID->"6e513f72-f36d-4285-b5cb-a58f1abd46e8"],
Cell[1855754, 34147, 35491, 772, 246, "Output",ExpressionUUID->"6a7b4db6-0e56-4a9e-9bcf-368688708f15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1891282, 34924, 835, 23, 52, "Input",ExpressionUUID->"2f71b413-1879-4345-b086-59316bdcacd1"],
Cell[1892120, 34949, 1900, 61, 49, "Output",ExpressionUUID->"2dd9c62f-8ceb-4296-93a5-b2d41703d3ba"],
Cell[1894023, 35012, 792, 21, 34, "Output",ExpressionUUID->"e22d2d71-db55-44f4-b319-b54808b31892"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1894852, 35038, 398, 10, 30, "Input",ExpressionUUID->"7a96a1d6-7632-4384-9c14-85b906667118"],
Cell[1895253, 35050, 9697, 216, 246, "Output",ExpressionUUID->"3ac611a6-3e00-46d9-b86d-ffbed09d7b21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1904987, 35271, 1748, 51, 115, "Input",ExpressionUUID->"757744d1-5ba4-49c8-a016-92c3ca385bac"],
Cell[1906738, 35324, 25117, 515, 247, "Output",ExpressionUUID->"ea19b631-0bb7-4805-9e7c-6431739660dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1931892, 35844, 1772, 52, 115, "Input",ExpressionUUID->"7a434b07-d775-4ef4-ac84-f1624a217e34"],
Cell[1933667, 35898, 26064, 537, 244, "Output",ExpressionUUID->"f331895e-c414-4689-9d8a-332338850ae4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1959768, 36440, 1664, 48, 115, "Input",ExpressionUUID->"bf2c63c6-89b8-4a9a-871c-35ede653221e"],
Cell[1961435, 36490, 34760, 713, 242, "Output",ExpressionUUID->"33223494-a15b-4f8a-9032-1e57937a288c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1996244, 37209, 197, 3, 67, "Section",ExpressionUUID->"58e9c9e6-a2c7-4cf0-bb14-795507c33bd8"],
Cell[CellGroupData[{
Cell[1996466, 37216, 453, 10, 30, "Input",ExpressionUUID->"bbcc0f44-bea1-40d2-9470-ebfdc3fcbe96"],
Cell[1996922, 37228, 303, 7, 34, "Output",ExpressionUUID->"83abb0c9-d78f-4225-86fa-d1ce479714c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1997262, 37240, 739, 18, 52, "Input",ExpressionUUID->"f8b8b9f3-38ef-4383-9731-63d76f386663"],
Cell[1998004, 37260, 3523, 65, 236, "Output",ExpressionUUID->"4bbd8528-2ebc-4b66-b798-8798a210b86b"],
Cell[2001530, 37327, 2859, 53, 237, "Output",ExpressionUUID->"d79b2835-a099-487e-8cdc-eeb69aecef93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2004426, 37385, 1019, 30, 73, "Input",ExpressionUUID->"6b7541c5-bfa2-4711-81a0-2c813050f14a"],
Cell[2005448, 37417, 104451, 1716, 307, "Output",ExpressionUUID->"b9d5927a-8468-4b18-b27f-4682a44337c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2109936, 39138, 1068, 33, 73, "Input",ExpressionUUID->"da518c28-e921-42e8-ba1f-afa00c9ad7ee"],
Cell[2111007, 39173, 181, 4, 34, "Output",ExpressionUUID->"4a02f58d-9b9e-47ed-9331-c438cbc1e765"],
Cell[2111191, 39179, 181, 4, 34, "Output",ExpressionUUID->"e821925a-f4da-4fa6-9d77-04662db619b8"],
Cell[2111375, 39185, 181, 4, 34, "Output",ExpressionUUID->"5111d610-396c-4256-a106-a7f38ef81a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2111593, 39194, 815, 25, 94, "Input",ExpressionUUID->"15efff7b-39fd-40ce-bda2-a5801a0b500a"],
Cell[2112411, 39221, 216, 6, 34, "Output",ExpressionUUID->"4942abe3-5e1b-44d9-bfd2-c89bb2abf16c"],
Cell[2112630, 39229, 3641, 67, 232, "Output",ExpressionUUID->"1008e56e-d5f1-49bb-9784-195c8a64104d"],
Cell[2116274, 39298, 16535, 507, 237, "Output",ExpressionUUID->"b26cd292-e455-4199-ad84-4a17359e794b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2132846, 39810, 772, 23, 73, "Input",ExpressionUUID->"b2427dcf-ebd7-4688-ad5d-df6dceb329f3"],
Cell[2133621, 39835, 216, 6, 34, "Output",ExpressionUUID->"3f1cdf5b-82bb-4c91-b145-7511f9ba11bc"],
Cell[2133840, 39843, 3631, 67, 232, "Output",ExpressionUUID->"29ae52d6-abc8-4b64-80dc-e7afaf1e532e"],
Cell[2137474, 39912, 3259, 64, 232, "Output",ExpressionUUID->"2783ea5a-c976-433e-8855-cb1bda6b57b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2140770, 39981, 894, 27, 73, "Input",ExpressionUUID->"3120d510-c8ca-48ac-aefe-4e4c503cf376"],
Cell[2141667, 40010, 249, 6, 34, "Output",ExpressionUUID->"63f01a01-ffc3-4e42-a6e9-cd17ca3611ef"],
Cell[2141919, 40018, 3700, 67, 229, "Output",ExpressionUUID->"bd73a20b-c6cf-4909-b254-55cdc24b67f9"],
Cell[2145622, 40087, 4464, 77, 232, "Output",ExpressionUUID->"b82e4de4-3376-48d3-a4f7-1a11e9c708e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2150123, 40169, 1116, 26, 30, "Input",ExpressionUUID->"7cd4f03e-cf86-4b60-8f88-a40b5ffe0ed0"],
Cell[2151242, 40197, 5216, 91, 234, "Output",ExpressionUUID->"84f3e118-3aff-46af-bdec-6696d3ab3a93"]
}, Open  ]],
Cell[2156473, 40291, 2121, 48, 115, "Input",ExpressionUUID->"19d31ff6-6ae9-4c00-a61f-c59ded903654"],
Cell[CellGroupData[{
Cell[2158619, 40343, 302, 7, 30, "Input",ExpressionUUID->"43dfc1e6-8294-470a-a386-71954727d2c2"],
Cell[2158924, 40352, 2805, 86, 44, "Print",ExpressionUUID->"72377b1c-0c67-4489-8f63-99876a3ed7c6"],
Cell[2161732, 40440, 281, 5, 34, "Output",ExpressionUUID->"d0dffdcd-8fbc-445b-8987-6ba49119ab30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2162050, 40450, 588, 13, 30, "Input",ExpressionUUID->"799fd27b-851f-4692-8c2e-f6563267f3dc"],
Cell[2162641, 40465, 1147, 30, 34, "Output",ExpressionUUID->"2403724f-0b3f-41f2-bd2e-6af81fbd2241"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2163825, 40500, 206, 3, 30, "Input",ExpressionUUID->"c7116ab3-2dd4-49c3-baec-326a0d9b95f7"],
Cell[2164034, 40505, 1449, 39, 251, "Output",ExpressionUUID->"f3b1316b-60a2-4be8-babc-1c134b81dd0d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2165532, 40550, 212, 4, 67, "Section",ExpressionUUID->"da9546da-49a5-471f-a6ef-f8ad6e9f29f9"],
Cell[2165747, 40556, 993, 26, 115, "Input",ExpressionUUID->"86ba88ce-e465-42c4-af44-a7233f2459d9"],
Cell[CellGroupData[{
Cell[2166765, 40586, 235, 4, 30, "Input",ExpressionUUID->"a141d621-aaeb-4fc4-9d92-3b8674770d24"],
Cell[2167003, 40592, 470, 12, 34, "Output",ExpressionUUID->"19a8203a-3e54-4c91-a417-bae50b082622"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2167510, 40609, 256, 5, 30, "Input",ExpressionUUID->"bdaa3c9a-1c01-4879-8d55-2beebbec330e"],
Cell[2167769, 40616, 459, 12, 34, "Output",ExpressionUUID->"94b9301b-b616-4c83-bbb4-adfa124ee4c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2168265, 40633, 386, 10, 30, "Input",ExpressionUUID->"eabf5c7c-d9aa-4eb9-bab9-053c64434c26"],
Cell[2168654, 40645, 6515, 205, 77, "Output",ExpressionUUID->"29601537-efea-401e-8c0f-cff09ce93a9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2175206, 40855, 3502, 91, 94, "Input",ExpressionUUID->"64dbe1a8-313c-405d-bc76-af7d56179dea"],
Cell[2178711, 40948, 3702, 94, 98, "Output",ExpressionUUID->"b1c7e148-2d7b-406d-a40a-760ec18164f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2182450, 41047, 6128, 168, 472, "Input",ExpressionUUID->"befe69ec-c245-4938-92b3-dbc0321c7d8e"],
Cell[2188581, 41217, 7254, 225, 98, "Output",ExpressionUUID->"7f1aed0f-c175-4733-a4cb-7c4611182176"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2195872, 41447, 223, 4, 30, "Input",ExpressionUUID->"ba9df27c-01a2-4310-91fa-6011e4256fea"],
Cell[2196098, 41453, 48929, 933, 247, "Output",ExpressionUUID->"4aeb347d-9654-4314-85ae-d3917a90b20d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2245064, 42391, 1658, 43, 73, "Input",ExpressionUUID->"8ec701a0-4981-423a-8f14-ebd32ba87eb0"],
Cell[2246725, 42436, 107046, 2083, 266, "Output",ExpressionUUID->"f68daeb0-d026-4b13-b23d-2e6f67141f5b"]
}, Open  ]],
Cell[2353786, 44522, 3904, 104, 199, "Input",ExpressionUUID->"5ca12b3f-13be-4786-8f5f-84eef313abab"],
Cell[CellGroupData[{
Cell[2357715, 44630, 534, 10, 30, "Input",ExpressionUUID->"093aa060-f454-42b6-b555-affd5e593462"],
Cell[2358252, 44642, 1516, 50, 24, "Print",ExpressionUUID->"d5a4b526-6a44-44a1-8ba5-0ab44565a424"],
Cell[2359771, 44694, 458, 10, 34, "Output",ExpressionUUID->"bda55259-561a-4fa1-82c6-c4494e980114"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2360266, 44709, 549, 15, 30, "Input",ExpressionUUID->"ffb3a55b-e4f8-4844-8bbe-6b3f33c328fe"],
Cell[2360818, 44726, 775, 24, 34, "Output",ExpressionUUID->"243445ee-9ba2-4a62-9832-0bd9551ce4f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2361630, 44755, 600, 16, 30, "Input",ExpressionUUID->"cd483b33-c9eb-4f2d-91ae-d499f052c3e6"],
Cell[2362233, 44773, 1379, 43, 34, "Output",ExpressionUUID->"c678547a-2fcb-4921-8090-28a1124fc6ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2363649, 44821, 502, 14, 30, "Input",ExpressionUUID->"b5db0b13-d75a-4fe8-873a-6fde09f1813a"],
Cell[2364154, 44837, 2352, 73, 56, "Output",ExpressionUUID->"4da797e1-f20c-4012-bf35-f76e452c9e94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2366543, 44915, 505, 14, 30, "Input",ExpressionUUID->"0a47eb40-6ad1-4f8f-b65f-b1502e624f8f"],
Cell[2367051, 44931, 1319, 42, 34, "Output",ExpressionUUID->"45912aad-dbda-4caa-a5b1-c776e9ccdd4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2368407, 44978, 4558, 135, 73, "Input",ExpressionUUID->"6d2d5923-8480-43ca-8fd3-4cb48df68f33"],
Cell[2372968, 45115, 4423, 135, 77, "Output",ExpressionUUID->"9fefd688-74f4-477b-8d93-31e5a09770d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2377428, 45255, 5619, 169, 73, "Input",ExpressionUUID->"942d333d-2fff-4f0e-8b3b-2501b677477d"],
Cell[2383050, 45426, 5379, 168, 77, "Output",ExpressionUUID->"4ce2b76c-b5d2-4005-8bb9-d852d7b09a7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2388466, 45599, 1819, 51, 73, "Input",ExpressionUUID->"78cc9182-5bec-4042-bb4b-fbfbf7fd8d27"],
Cell[2390288, 45652, 1998, 61, 56, "Output",ExpressionUUID->"e5b80561-dc5e-4ffe-99d6-87ce322e48c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2392323, 45718, 946, 22, 30, "Input",ExpressionUUID->"34359d0d-d43d-41f2-8dd1-9a007a232b72"],
Cell[2393272, 45742, 696, 18, 34, "Output",ExpressionUUID->"89772e5a-13a6-4f43-b0e3-0c6217df4e2f"]
}, Open  ]],
Cell[2393983, 45763, 212, 5, 35, "Text",ExpressionUUID->"544edde2-2d1b-4749-9d42-9376d22b9f22"],
Cell[CellGroupData[{
Cell[2394220, 45772, 1864, 47, 73, "Input",ExpressionUUID->"d04500d5-9a90-4e34-bb0c-8da3ab9f1adb"],
Cell[2396087, 45821, 46435, 933, 266, "Output",ExpressionUUID->"c74f2ac8-7903-4a1c-9182-de72d1b5ee48"]
}, Open  ]],
Cell[2442537, 46757, 152, 3, 30, "Input",ExpressionUUID->"7139d9de-d6dc-4f26-a0c2-1cbf19206b3a"],
Cell[2442692, 46762, 152, 3, 30, "Input",ExpressionUUID->"61d67161-531b-4114-bd02-9fa4353f8d11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2442881, 46770, 275, 4, 67, "Section",ExpressionUUID->"5fbd51c4-c1a1-4b90-bcf3-2b6281f7853a"],
Cell[CellGroupData[{
Cell[2443181, 46778, 653, 14, 30, "Input",ExpressionUUID->"1b5fcf15-f465-459f-a766-41c5027276be"],
Cell[2443837, 46794, 1195, 38, 34, "Output",ExpressionUUID->"3f211ed1-6048-487b-841a-262d445a9815"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2445069, 46837, 429, 12, 30, "Input",ExpressionUUID->"96571f3c-34a2-4c76-8c9f-a5a6e400332b"],
Cell[2445501, 46851, 1686, 55, 34, "Output",ExpressionUUID->"2a045477-8a34-4e10-a24c-ffa61568642d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2447224, 46911, 216, 4, 30, "Input",ExpressionUUID->"888fee82-74ae-4773-bc7c-590e21a5b123"],
Cell[2447443, 46917, 12718, 286, 247, "Output",ExpressionUUID->"0eb433fc-63aa-4414-9abb-fa54956080cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2460198, 47208, 556, 13, 30, "Input",ExpressionUUID->"32e1de01-0f28-4a90-a9b2-9fd216944757"],
Cell[2460757, 47223, 1120, 37, 34, "Output",ExpressionUUID->"516d8bf6-1d94-4637-a2ce-35e697991431"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2461914, 47265, 428, 12, 30, "Input",ExpressionUUID->"17eaedc6-9a7b-460c-a819-26ae224416ff"],
Cell[2462345, 47279, 1660, 55, 34, "Output",ExpressionUUID->"c4eb368e-22ed-4db2-86e1-cc4410c83901"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2464042, 47339, 214, 4, 30, "Input",ExpressionUUID->"c90c15ae-2d2a-4d24-8713-5a96ee7f854a"],
Cell[2464259, 47345, 13376, 302, 244, "Output",ExpressionUUID->"0daa62c4-8645-4abd-8c88-dc7c5f125774"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2477672, 47652, 668, 16, 30, "Input",ExpressionUUID->"14dc4396-905f-416a-a107-04dc7628df70"],
Cell[2478343, 47670, 1595, 51, 34, "Output",ExpressionUUID->"81021766-218d-4e8b-8586-cdbbb16a6c7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2479975, 47726, 216, 4, 30, "Input",ExpressionUUID->"44d54bc6-b91a-4194-8090-bd8ecba5b93c"],
Cell[2480194, 47732, 10863, 246, 251, "Output",ExpressionUUID->"f01d404f-f0d2-4649-a2c6-4e5f3abdea4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2491094, 47983, 320, 6, 30, "Input",ExpressionUUID->"08e66260-6132-4fbb-8870-8b17b07ebc59"],
Cell[2491417, 47991, 252, 6, 34, "Output",ExpressionUUID->"2926801b-b424-4ffb-9d11-c9bd2ae215f9"]
}, Open  ]],
Cell[2491684, 48000, 4372, 109, 220, "Input",ExpressionUUID->"6babf8bd-7a54-4343-ade2-9bac01c07a35"],
Cell[2496059, 48111, 3964, 103, 220, "Input",ExpressionUUID->"329ed929-8429-4708-befd-e14c02aabb03"],
Cell[CellGroupData[{
Cell[2500048, 48218, 384, 7, 30, "Input",ExpressionUUID->"66e4560f-a5b1-4eef-b055-9751da53449c"],
Cell[2500435, 48227, 1203, 40, 39, "Print",ExpressionUUID->"7e4dd980-8947-4227-9fda-15ca588297d0"],
Cell[2501641, 48269, 438, 9, 34, "Output",ExpressionUUID->"5e1e4541-fe86-4909-a64e-6e5f5959bcaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2502116, 48283, 226, 4, 30, "Input",ExpressionUUID->"dc37cacb-9e05-4b2f-8d52-0f57ab50ebcb"],
Cell[2502345, 48289, 1647, 28, 39, "Message",ExpressionUUID->"af3ddb6f-9e11-440b-8a60-0ec70a5d25a2"],
Cell[2503995, 48319, 1287, 39, 49, "Output",ExpressionUUID->"03e18710-f361-4863-8417-d6cae1014035"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2505319, 48363, 231, 6, 30, "Input",ExpressionUUID->"8a888666-55b6-4086-8cd0-eda9f6f5284e"],
Cell[2505553, 48371, 291, 7, 34, "Output",ExpressionUUID->"816171f5-7516-4bad-a4e0-372272e7f4cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2505881, 48383, 2617, 81, 112, "Input",ExpressionUUID->"17483725-a42b-4dea-83c1-b7c8bd2850be"],
Cell[2508501, 48466, 7912, 165, 244, "Output",ExpressionUUID->"cb67529f-04a5-4ca2-b0dd-9d9cec6611ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2516450, 48636, 353, 7, 30, "Input",ExpressionUUID->"7f36a2c9-789c-4327-a103-87bc1677c8b9"],
Cell[2516806, 48645, 1496, 49, 24, "Print",ExpressionUUID->"6dc268f6-d719-4250-8f30-886feaab808f"],
Cell[2518305, 48696, 285, 7, 34, "Output",ExpressionUUID->"c0fe457e-61ce-4266-b87e-d668c2f40934"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2518627, 48708, 543, 10, 30, "Input",ExpressionUUID->"290813c5-bd72-4e5c-b491-4f28b1c377d2"],
Cell[2519173, 48720, 1449, 49, 24, "Print",ExpressionUUID->"acf38d56-5074-465c-993a-bf808a861a2a"],
Cell[2520625, 48771, 365, 8, 34, "Output",ExpressionUUID->"4ac1376a-c5e5-4d11-8d67-bdf645cf625b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2521027, 48784, 299, 6, 30, "Input",ExpressionUUID->"3608b168-bbec-46b0-afb3-2032f418e99c"],
Cell[2521329, 48792, 1247, 42, 24, "Print",ExpressionUUID->"8cdbd134-6d39-4201-9226-0c933ac96da6"],
Cell[2522579, 48836, 292, 7, 34, "Output",ExpressionUUID->"54a2942c-0c19-4b83-ab97-e90d256d3e3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2522908, 48848, 297, 6, 30, "Input",ExpressionUUID->"a34a6f68-be1b-417e-b87b-c24efc6eca25"],
Cell[2523208, 48856, 1311, 43, 24, "Print",ExpressionUUID->"c991e5a9-41f6-49c6-9114-02df909fb7d4"],
Cell[2524522, 48901, 270, 7, 34, "Output",ExpressionUUID->"5ff5a6e9-45b4-4b25-9b94-3969c6b3e093"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2524829, 48913, 400, 8, 30, "Input",ExpressionUUID->"f0720382-fea9-4e28-b31b-6a3779124e67"],
Cell[2525232, 48923, 1294, 43, 24, "Print",ExpressionUUID->"5b1d7877-d073-4374-b02a-eebd31836aa3"],
Cell[2526529, 48968, 316, 8, 34, "Output",ExpressionUUID->"d923d179-2e1d-42a3-9d7c-483aab94454f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2526882, 48981, 443, 8, 30, "Input",ExpressionUUID->"d242564b-9c72-4c4e-b5a9-d782e91f7b7a"],
Cell[2527328, 48991, 1256, 42, 24, "Print",ExpressionUUID->"9f51c00b-4a9d-4132-a977-43dc49aeaf47"],
Cell[2528587, 49035, 341, 8, 34, "Output",ExpressionUUID->"f9b60f00-45fd-4eb6-9cc9-e7aafbe42119"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2528965, 49048, 493, 9, 30, "Input",ExpressionUUID->"d20c8fd9-bc60-4c34-8f97-0b534699d892"],
Cell[2529461, 49059, 1276, 43, 24, "Print",ExpressionUUID->"89fdbf5e-1771-4a29-8379-7f6c88e7569c"],
Cell[2530740, 49104, 341, 8, 34, "Output",ExpressionUUID->"1222fbb9-3a50-4edd-8ded-b3ec16f63b9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2531118, 49117, 1865, 58, 30, "Input",ExpressionUUID->"b3608654-f852-42c0-9b7e-93188f3685b5"],
Cell[2532986, 49177, 1763, 56, 34, "Output",ExpressionUUID->"549e5cd0-a39b-4190-9879-949544d4eff7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2534786, 49238, 1443, 41, 73, "Input",ExpressionUUID->"90ed1835-e4d5-41d0-8121-c71132660d59"],
Cell[2536232, 49281, 1566, 50, 34, "Output",ExpressionUUID->"aacd40a6-dfb5-4c1f-923a-01b3b4efc3c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2537835, 49336, 1428, 36, 73, "Input",ExpressionUUID->"a10669cf-de10-479f-a842-b9753314e15e"],
Cell[2539266, 49374, 44543, 919, 307, "Output",ExpressionUUID->"b895e1f2-3ab8-45c5-b887-b7b2ad046891"]
}, Open  ]],
Cell[2583824, 50296, 3992, 103, 220, "Input",ExpressionUUID->"c4211bed-f905-4563-a93e-01d3892bc8c3"],
Cell[CellGroupData[{
Cell[2587841, 50403, 440, 9, 30, "Input",ExpressionUUID->"d8a2386a-3c4f-4fba-8be2-64b20c9876ee"],
Cell[2588284, 50414, 1137, 37, 24, "Print",ExpressionUUID->"e8b4bc31-eca4-4426-9abc-104ca932df5d"],
Cell[2589424, 50453, 360, 8, 34, "Output",ExpressionUUID->"0a74822e-12a9-4ecd-8909-d47af32c5847"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2589821, 50466, 366, 7, 30, "Input",ExpressionUUID->"c8d78e0c-076c-4f32-b2c9-300bb0ed7c07"],
Cell[2590190, 50475, 1134, 37, 24, "Print",ExpressionUUID->"050c4d42-b227-4aee-b266-0057325ec3b7"],
Cell[2591327, 50514, 266, 7, 34, "Output",ExpressionUUID->"ec7199d3-17a3-4bc3-aca8-d8fbcea17605"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2591630, 50526, 437, 9, 30, "Input",ExpressionUUID->"2de3547f-ee55-4015-aebb-6651625af0af"],
Cell[2592070, 50537, 1137, 37, 24, "Print",ExpressionUUID->"e630a600-15cf-460e-831d-a1b73de77662"],
Cell[2593210, 50576, 269, 7, 34, "Output",ExpressionUUID->"56660b25-d845-4311-97e4-4da6b8920824"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2593516, 50588, 293, 7, 30, "Input",ExpressionUUID->"a72ca4cb-d70d-4a62-8160-5237c7767dce"],
Cell[2593812, 50597, 1127, 37, 24, "Print",ExpressionUUID->"9649e363-2d04-4e5b-9c7f-b030d166e217"],
Cell[2594942, 50636, 269, 7, 34, "Output",ExpressionUUID->"149d19c7-0859-4d82-9f7d-eeaa726e29b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2595248, 50648, 584, 11, 30, "Input",ExpressionUUID->"78d4a2cd-9b34-4c0d-8686-4507aafe0827"],
Cell[2595835, 50661, 1161, 37, 24, "Print",ExpressionUUID->"d905fef7-89f6-4971-a7de-03d64cd53551"],
Cell[2596999, 50700, 291, 7, 34, "Output",ExpressionUUID->"d3133595-65c7-4a0a-9966-171bb4437bac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2597327, 50712, 339, 8, 30, "Input",ExpressionUUID->"0ea52185-acf6-450e-a638-08111e770687"],
Cell[2597669, 50722, 1165, 37, 24, "Print",ExpressionUUID->"4f96848d-e389-4928-8fac-a3e63c1506e1"],
Cell[2598837, 50761, 290, 7, 34, "Output",ExpressionUUID->"111afb89-4668-4fb6-a692-07bd480ed6a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2599164, 50773, 390, 9, 30, "Input",ExpressionUUID->"ea5a6862-1992-44f8-b7bc-0ddc07a8b5ad"],
Cell[2599557, 50784, 1180, 38, 24, "Print",ExpressionUUID->"c601819c-fa47-45e3-ac40-f901ed14ef8c"],
Cell[2600740, 50824, 322, 8, 34, "Output",ExpressionUUID->"5dadac47-049d-4979-83ef-4441fc3e7357"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2601099, 50837, 437, 9, 30, "Input",ExpressionUUID->"3c04772a-729d-4ae2-bd62-c2670f3d9a9a"],
Cell[2601539, 50848, 321, 5, 34, "Output",ExpressionUUID->"b1298b93-c7ea-4442-978e-5a22a2e0fc88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2601897, 50858, 508, 10, 30, "Input",ExpressionUUID->"b4a98f70-b356-4b94-9829-6402c7c026aa"],
Cell[2602408, 50870, 393, 6, 34, "Output",ExpressionUUID->"098af9d0-a5d9-4628-b155-3a3dfee61206"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2602838, 50881, 1892, 57, 30, "Input",ExpressionUUID->"61250728-6d46-4e85-9b71-464c24f74f3b"],
Cell[2604733, 50940, 1775, 55, 34, "Output",ExpressionUUID->"f2579e0f-dec2-408f-aac4-1c21488958c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2606545, 51000, 225, 4, 30, "Input",ExpressionUUID->"f30beb5e-cd6f-4a84-ba0b-9cd4d401d75c"],
Cell[2606773, 51006, 12948, 292, 250, "Output",ExpressionUUID->"5bb58193-5a7c-4f3c-b96f-9763e2fcdfd3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2619770, 51304, 164, 3, 67, "Section",ExpressionUUID->"0ed3f740-3492-4adb-a304-da33ce708d85"],
Cell[CellGroupData[{
Cell[2619959, 51311, 444, 11, 30, "Input",ExpressionUUID->"846a5b25-e94a-4808-a80a-ff6e125b2634"],
Cell[2620406, 51324, 11677, 296, 163, "Output",ExpressionUUID->"118d394d-4332-476d-af09-e07ac3c7fc62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2632120, 51625, 219, 4, 30, "Input",ExpressionUUID->"2613a5fa-ba51-43f3-a614-4ab8ae7601c2"],
Cell[2632342, 51631, 106113, 1820, 245, "Output",ExpressionUUID->"328342f0-52ef-473f-b4be-41806b0be4a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2738492, 53456, 392, 11, 30, "Input",ExpressionUUID->"7755af75-c2ee-4489-902a-44d819821759"],
Cell[2738887, 53469, 364, 10, 34, "Output",ExpressionUUID->"6422a29e-32d8-41b7-bedb-e922d445d061"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2739288, 53484, 212, 4, 30, "Input",ExpressionUUID->"6f7b164c-2825-4238-bc26-ca3c50d16436"],
Cell[2739503, 53490, 177, 3, 34, "Output",ExpressionUUID->"8aaafd33-dc22-403f-8fa4-fd961e3c8044"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2739717, 53498, 209, 4, 30, "Input",ExpressionUUID->"98e80dbf-1dec-455a-9b70-15dc9b6d29e9"],
Cell[2739929, 53504, 176, 3, 34, "Output",ExpressionUUID->"a22b8c96-7eab-483b-802d-28e9eafe618c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2740142, 53512, 388, 10, 30, "Input",ExpressionUUID->"f8774b0d-f00e-4e51-8f2a-a9b7b57708a0"],
Cell[2740533, 53524, 195, 3, 34, "Output",ExpressionUUID->"0eb9109d-d6e2-4df3-bdd0-b5ceb03311af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2740765, 53532, 1319, 33, 52, "Input",ExpressionUUID->"f4afcad7-8682-468b-a92b-071e5e859ccd"],
Cell[2742087, 53567, 21703, 499, 242, "Output",ExpressionUUID->"b415b8e4-5081-4a5c-b086-99d2fc39dd22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2763827, 54071, 1228, 30, 52, "Input",ExpressionUUID->"a0f83f8a-845d-413a-afa2-fed790f77b3c"],
Cell[2765058, 54103, 113906, 1927, 253, "Output",ExpressionUUID->"7e130139-9637-4370-bed3-012d304ab55d"]
}, Open  ]],
Cell[2878979, 56033, 150, 3, 30, "Input",ExpressionUUID->"308cce2d-cdff-436e-be31-085466f03d45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2879166, 56041, 166, 3, 67, "Section",ExpressionUUID->"95ceb9fe-2498-45cb-9f33-a3193a1af2d7"],
Cell[CellGroupData[{
Cell[2879357, 56048, 2513, 69, 94, "Input",ExpressionUUID->"5b7fb0e4-7f72-4326-bcb9-aba88d974504"],
Cell[2881873, 56119, 1221, 28, 374, "Output",ExpressionUUID->"c4a6cc30-2d5e-4eb2-a6a8-dec47aa05359"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2883131, 56152, 3266, 92, 115, "Input",ExpressionUUID->"d1492736-4a40-4797-885b-d26a9e76a850"],
Cell[2886400, 56246, 1715, 38, 358, "Output",ExpressionUUID->"513f36d1-5237-4cfb-8284-24fd99664681"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

